!function (e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : e.videojs = t()
}(this, function () {
    var e = "7.2.4",
        t = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};

    function i(e, t) {
        return e(t = {exports: {}}, t.exports), t.exports
    }

    var n, r = "undefined" != typeof window ? window : void 0 !== t ? t : "undefined" != typeof self ? self : {},
        a = {}, s = Object.freeze({default: a}), o = s && a || s,
        u = void 0 !== t ? t : "undefined" != typeof window ? window : {};
    "undefined" != typeof document ? n = document : (n = u["__GLOBAL_DOCUMENT_CACHE@4"]) || (n = u["__GLOBAL_DOCUMENT_CACHE@4"] = o);
    var l = n, d = void 0, c = "info", h = [], f = function (e, t) {
        var i = d.levels[c], n = new RegExp("^(" + i + ")$");
        if ("log" !== e && t.unshift(e.toUpperCase() + ":"), h && h.push([].concat(t)), t.unshift("VIDEOJS:"), r.console) {
            var a = r.console[e];
            a || "debug" !== e || (a = r.console.info || r.console.log), a && i && n.test(e) && a[Array.isArray(t) ? "apply" : "call"](r.console, t)
        }
    };
    (d = function () {
        for (var e = arguments.length, t = Array(e), i = 0; i < e; i++) t[i] = arguments[i];
        f("log", t)
    }).levels = {
        all: "debug|log|warn|error",
        off: "",
        debug: "debug|log|warn|error",
        info: "log|warn|error",
        warn: "warn|error",
        error: "error",
        DEFAULT: c
    }, d.level = function (e) {
        if ("string" == typeof e) {
            if (!d.levels.hasOwnProperty(e)) throw new Error('"' + e + '" in not a valid log level');
            c = e
        }
        return c
    }, d.history = function () {
        return h ? [].concat(h) : []
    }, d.history.clear = function () {
        h && (h.length = 0)
    }, d.history.disable = function () {
        null !== h && (h.length = 0, h = null)
    }, d.history.enable = function () {
        null === h && (h = [])
    }, d.error = function () {
        for (var e = arguments.length, t = Array(e), i = 0; i < e; i++) t[i] = arguments[i];
        return f("error", t)
    }, d.warn = function () {
        for (var e = arguments.length, t = Array(e), i = 0; i < e; i++) t[i] = arguments[i];
        return f("warn", t)
    }, d.debug = function () {
        for (var e = arguments.length, t = Array(e), i = 0; i < e; i++) t[i] = arguments[i];
        return f("debug", t)
    };
    var p = d;
    var m = function (e) {
        for (var t = "", i = 0; i < arguments.length; i++) t += (n = e[i], n.replace(/\n\r?\s*/g, "") + (arguments[i + 1] || ""));
        var n;
        return t
    }, g = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e
    } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    }, y = function (e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }, _ = function (e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
    }, v = function (e, t) {
        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !t || "object" != typeof t && "function" != typeof t ? e : t
    }, b = function (e, t) {
        return e.raw = t, e
    }, T = Object.prototype.toString, S = function (e) {
        return E(e) ? Object.keys(e) : []
    };

    function k(e, t) {
        S(e).forEach(function (i) {
            return t(e[i], i)
        })
    }

    function w(e) {
        for (var t = arguments.length, i = Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) i[n - 1] = arguments[n];
        return Object.assign ? Object.assign.apply(Object, [e].concat(i)) : (i.forEach(function (t) {
            t && k(t, function (t, i) {
                e[i] = t
            })
        }), e)
    }

    function E(e) {
        return !!e && "object" === (void 0 === e ? "undefined" : g(e))
    }

    function C(e) {
        return E(e) && "[object Object]" === T.call(e) && e.constructor === Object
    }

    function A(e, t) {
        if (!e || !t) return "";
        if ("function" == typeof r.getComputedStyle) {
            var i = r.getComputedStyle(e);
            return i ? i[t] : ""
        }
        return ""
    }

    var L = b(["Setting attributes in the second argument of createEl()\n                has been deprecated. Use the third argument instead.\n                createEl(type, properties, attributes). Attempting to set ", " to ", "."], ["Setting attributes in the second argument of createEl()\n                has been deprecated. Use the third argument instead.\n                createEl(type, properties, attributes). Attempting to set ", " to ", "."]);

    function O(e) {
        return "string" == typeof e && /\S/.test(e)
    }

    function I(e) {
        if (/\s/.test(e)) throw new Error("class has illegal whitespace characters")
    }

    function P() {
        return l === r.document
    }

    function R(e) {
        return E(e) && 1 === e.nodeType
    }

    function x() {
        try {
            return r.parent !== r.self
        } catch (e) {
            return !0
        }
    }

    function D(e) {
        return function (t, i) {
            if (!O(t)) return l[e](null);
            O(i) && (i = l.querySelector(i));
            var n = R(i) ? i : l;
            return n[e] && n[e](t)
        }
    }

    function U() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "div",
            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
            i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, n = arguments[3],
            r = l.createElement(e);
        return Object.getOwnPropertyNames(t).forEach(function (e) {
            var i = t[e];
            -1 !== e.indexOf("aria-") || "role" === e || "type" === e ? (p.warn(m(L, e, i)), r.setAttribute(e, i)) : "textContent" === e ? M(r, i) : r[e] = i
        }), Object.getOwnPropertyNames(i).forEach(function (e) {
            r.setAttribute(e, i[e])
        }), n && te(r, n), r
    }

    function M(e, t) {
        return void 0 === e.textContent ? e.innerText = t : e.textContent = t, e
    }

    function B(e, t) {
        t.firstChild ? t.insertBefore(e, t.firstChild) : t.appendChild(e)
    }

    function j(e, t) {
        return I(t), e.classList ? e.classList.contains(t) : (i = t, new RegExp("(^|\\s)" + i + "($|\\s)")).test(e.className);
        var i
    }

    function N(e, t) {
        return e.classList ? e.classList.add(t) : j(e, t) || (e.className = (e.className + " " + t).trim()), e
    }

    function F(e, t) {
        return e.classList ? e.classList.remove(t) : (I(t), e.className = e.className.split(/\s+/).filter(function (e) {
            return e !== t
        }).join(" ")), e
    }

    function V(e, t, i) {
        var n = j(e, t);
        if ("function" == typeof i && (i = i(e, t)), "boolean" != typeof i && (i = !n), i !== n) return i ? N(e, t) : F(e, t), e
    }

    function G(e, t) {
        Object.getOwnPropertyNames(t).forEach(function (i) {
            var n = t[i];
            null === n || void 0 === n || !1 === n ? e.removeAttribute(i) : e.setAttribute(i, !0 === n ? "" : n)
        })
    }

    function H(e) {
        var t = {}, i = ",autoplay,stretch,fluent,controls,playsinline,loop,muted,default,defaultMuted,";
        if (e && e.attributes && e.attributes.length > 0) for (var n = e.attributes, r = n.length - 1; r >= 0; r--) {
            var a = n[r].name, s = n[r].value;
            "boolean" != typeof e[a] && -1 === i.indexOf("," + a + ",") || (s = null !== s), t[a] = s
        }
        return t
    }

    function q(e, t) {
        return e.getAttribute(t)
    }

    function z(e, t, i) {
        e.setAttribute(t, i)
    }

    function W(e, t) {
        e.removeAttribute(t)
    }

    function X() {
        l.body.focus(), l.onselectstart = function () {
            return !1
        }
    }

    function Y() {
        l.onselectstart = function () {
            return !0
        }
    }

    function K(e) {
        if (e && e.getBoundingClientRect && e.parentNode) {
            var t = e.getBoundingClientRect(), i = {};
            return ["bottom", "height", "left", "right", "top", "width"].forEach(function (e) {
                void 0 !== t[e] && (i[e] = t[e])
            }), i.height || (i.height = parseFloat(A(e, "height"))), i.width || (i.width = parseFloat(A(e, "width"))), i
        }
    }

    function $(e) {
        var t = void 0;
        if (e.getBoundingClientRect && e.parentNode && (t = e.getBoundingClientRect()), !t) return {left: 0, top: 0};
        var i = l.documentElement, n = l.body, a = i.clientLeft || n.clientLeft || 0, s = r.pageXOffset || n.scrollLeft,
            o = t.left + s - a, u = i.clientTop || n.clientTop || 0, d = r.pageYOffset || n.scrollTop,
            c = t.top + d - u;
        return {left: Math.round(o), top: Math.round(c)}
    }

    function Q(e, t) {
        var i = {}, n = $(e), r = e.offsetWidth, a = e.offsetHeight, s = n.top, o = n.left, u = t.pageY, l = t.pageX;
        return t.changedTouches && (l = t.changedTouches[0].pageX, u = t.changedTouches[0].pageY), i.y = Math.max(0, Math.min(1, (s - u + a) / a)), i.x = Math.max(0, Math.min(1, (l - o) / r)), i
    }

    function J(e) {
        return E(e) && 3 === e.nodeType
    }

    function Z(e) {
        for (; e.firstChild;) e.removeChild(e.firstChild);
        return e
    }

    function ee(e) {
        return "function" == typeof e && (e = e()), (Array.isArray(e) ? e : [e]).map(function (e) {
            return "function" == typeof e && (e = e()), R(e) || J(e) ? e : "string" == typeof e && /\S/.test(e) ? l.createTextNode(e) : void 0
        }).filter(function (e) {
            return e
        })
    }

    function te(e, t) {
        return ee(t).forEach(function (t) {
            return e.appendChild(t)
        }), e
    }

    function ie(e, t) {
        return te(Z(e), t)
    }

    function ne(e) {
        return void 0 === e.button && void 0 === e.buttons || (0 === e.button && void 0 === e.buttons || 0 === e.button && 1 === e.buttons)
    }

    var re = D("querySelector"), ae = D("querySelectorAll"), se = Object.freeze({
        isReal: P,
        isEl: R,
        isInFrame: x,
        createEl: U,
        textContent: M,
        prependTo: B,
        hasClass: j,
        addClass: N,
        removeClass: F,
        toggleClass: V,
        setAttributes: G,
        getAttributes: H,
        getAttribute: q,
        setAttribute: z,
        removeAttribute: W,
        blockTextSelection: X,
        unblockTextSelection: Y,
        getBoundingClientRect: K,
        findPosition: $,
        getPointerPosition: Q,
        isTextNode: J,
        emptyEl: Z,
        normalizeContent: ee,
        appendContent: te,
        insertContent: ie,
        isSingleLeftClick: ne,
        $: re,
        $$: ae
    }), oe = 1;

    function ue() {
        return oe++
    }

    var le = {}, de = "vdata" + (new Date).getTime();

    function ce(e) {
        var t = e[de];
        return t || (t = e[de] = ue()), le[t] || (le[t] = {}), le[t]
    }

    function he(e) {
        var t = e[de];
        return !!t && !!Object.getOwnPropertyNames(le[t]).length
    }

    function fe(e) {
        var t = e[de];
        if (t) {
            delete le[t];
            try {
                delete e[de]
            } catch (t) {
                e.removeAttribute ? e.removeAttribute(de) : e[de] = null
            }
        }
    }

    function pe(e, t) {
        var i = ce(e);
        0 === i.handlers[t].length && (delete i.handlers[t], e.removeEventListener ? e.removeEventListener(t, i.dispatcher, !1) : e.detachEvent && e.detachEvent("on" + t, i.dispatcher)), Object.getOwnPropertyNames(i.handlers).length <= 0 && (delete i.handlers, delete i.dispatcher, delete i.disabled), 0 === Object.getOwnPropertyNames(i).length && fe(e)
    }

    function me(e, t, i, n) {
        i.forEach(function (i) {
            e(t, i, n)
        })
    }

    function ge(e) {
        function t() {
            return !0
        }

        function i() {
            return !1
        }

        if (!e || !e.isPropagationStopped) {
            var n = e || r.event;
            e = {};
            for (var a in n) "layerX" !== a && "layerY" !== a && "keyLocation" !== a && "webkitMovementX" !== a && "webkitMovementY" !== a && ("returnValue" === a && n.preventDefault || (e[a] = n[a]));
            if (e.target || (e.target = e.srcElement || l), e.relatedTarget || (e.relatedTarget = e.fromElement === e.target ? e.toElement : e.fromElement), e.preventDefault = function () {
                n.preventDefault && n.preventDefault(), e.returnValue = !1, n.returnValue = !1, e.defaultPrevented = !0
            }, e.defaultPrevented = !1, e.stopPropagation = function () {
                n.stopPropagation && n.stopPropagation(), e.cancelBubble = !0, n.cancelBubble = !0, e.isPropagationStopped = t
            }, e.isPropagationStopped = i, e.stopImmediatePropagation = function () {
                n.stopImmediatePropagation && n.stopImmediatePropagation(), e.isImmediatePropagationStopped = t, e.stopPropagation()
            }, e.isImmediatePropagationStopped = i, null !== e.clientX && void 0 !== e.clientX) {
                var s = l.documentElement, o = l.body;
                e.pageX = e.clientX + (s && s.scrollLeft || o && o.scrollLeft || 0) - (s && s.clientLeft || o && o.clientLeft || 0), e.pageY = e.clientY + (s && s.scrollTop || o && o.scrollTop || 0) - (s && s.clientTop || o && o.clientTop || 0)
            }
            e.which = e.charCode || e.keyCode, null !== e.button && void 0 !== e.button && (e.button = 1 & e.button ? 0 : 4 & e.button ? 1 : 2 & e.button ? 2 : 0)
        }
        return e
    }

    var ye = !1;
    !function () {
        try {
            var e = Object.defineProperty({}, "passive", {
                get: function () {
                    ye = !0
                }
            });
            r.addEventListener("test", null, e), r.removeEventListener("test", null, e)
        } catch (e) {
        }
    }();
    var _e = ["touchstart", "touchmove"];

    function ve(e, t, i) {
        if (Array.isArray(t)) return me(ve, e, t, i);
        var n = ce(e);
        if (n.handlers || (n.handlers = {}), n.handlers[t] || (n.handlers[t] = []), i.guid || (i.guid = ue()), n.handlers[t].push(i), n.dispatcher || (n.disabled = !1, n.dispatcher = function (t, i) {
            if (!n.disabled) {
                t = ge(t);
                var r = n.handlers[t.type];
                if (r) for (var a = r.slice(0), s = 0, o = a.length; s < o && !t.isImmediatePropagationStopped(); s++) try {
                    a[s].call(e, t, i)
                } catch (e) {
                    p.error(e)
                }
            }
        }), 1 === n.handlers[t].length) if (e.addEventListener) {
            var r = !1;
            ye && _e.indexOf(t) > -1 && (r = {passive: !0}), e.addEventListener(t, n.dispatcher, r)
        } else e.attachEvent && e.attachEvent("on" + t, n.dispatcher)
    }

    function be(e, t, i) {
        if (he(e)) {
            var n = ce(e);
            if (n.handlers) {
                if (Array.isArray(t)) return me(be, e, t, i);
                var r = function (e, t) {
                    n.handlers[t] = [], pe(e, t)
                };
                if (void 0 !== t) {
                    var a = n.handlers[t];
                    if (a) if (i) {
                        if (i.guid) for (var s = 0; s < a.length; s++) a[s].guid === i.guid && a.splice(s--, 1);
                        pe(e, t)
                    } else r(e, t)
                } else for (var o in n.handlers) Object.prototype.hasOwnProperty.call(n.handlers || {}, o) && r(e, o)
            }
        }
    }

    function Te(e, t, i) {
        var n = he(e) ? ce(e) : {}, r = e.parentNode || e.ownerDocument;
        if ("string" == typeof t ? t = {
            type: t,
            target: e
        } : t.target || (t.target = e), t = ge(t), n.dispatcher && n.dispatcher.call(e, t, i), r && !t.isPropagationStopped() && !0 === t.bubbles) Te.call(null, r, t, i); else if (!r && !t.defaultPrevented) {
            var a = ce(t.target);
            t.target[t.type] && (a.disabled = !0, "function" == typeof t.target[t.type] && t.target[t.type](), a.disabled = !1)
        }
        return !t.defaultPrevented
    }

    function Se(e, t, i) {
        if (Array.isArray(t)) return me(Se, e, t, i);
        var n = function n() {
            be(e, t, n), i.apply(this, arguments)
        };
        n.guid = i.guid = i.guid || ue(), ve(e, t, n)
    }

    var ke = Object.freeze({fixEvent: ge, on: ve, off: be, trigger: Te, one: Se}), we = !1, Ee = void 0,
        Ce = function () {
            if (P() && !1 !== Ee.options.autoSetup) {
                var e = Array.prototype.slice.call(l.getElementsByTagName("video")),
                    t = Array.prototype.slice.call(l.getElementsByTagName("audio")),
                    i = Array.prototype.slice.call(l.getElementsByTagName("video-js")), n = e.concat(t, i);
                if (n && n.length > 0) for (var r = 0, a = n.length; r < a; r++) {
                    var s = n[r];
                    if (!s || !s.getAttribute) {
                        Ae(1);
                        break
                    }
                    if (void 0 === s.player) {
                        null !== s.getAttribute("data-setup") && Ee(s)
                    }
                } else we || Ae(1)
            }
        };

    function Ae(e, t) {
        t && (Ee = t), r.setTimeout(Ce, e)
    }

    P() && "complete" === l.readyState ? we = !0 : Se(r, "load", function () {
        we = !0
    });
    var Le = function (e) {
        var t = l.createElement("style");
        return t.className = e, t
    }, Oe = function (e, t) {
        e.styleSheet ? e.styleSheet.cssText = t : e.textContent = t
    }, Ie = function (e, t, i) {
        t.guid || (t.guid = ue());
        var n = function () {
            return t.apply(e, arguments)
        };
        return n.guid = i ? i + "_" + t.guid : t.guid, n
    }, Pe = function (e, t) {
        var i = Date.now();
        return function () {
            var n = Date.now();
            n - i >= t && (e.apply(void 0, arguments), i = n)
        }
    }, Re = function (e, t, i) {
        var n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : r, a = void 0, s = function () {
            var r = this, s = arguments, o = function () {
                a = null, o = null, i || e.apply(r, s)
            };
            !a && i && e.apply(r, s), n.clearTimeout(a), a = n.setTimeout(o, t)
        };
        return s.cancel = function () {
            n.clearTimeout(a), a = null
        }, s
    }, xe = function () {
    };
    xe.prototype.allowedEvents_ = {}, xe.prototype.on = function (e, t) {
        var i = this.addEventListener;
        this.addEventListener = function () {
        }, ve(this, e, t), this.addEventListener = i
    }, xe.prototype.addEventListener = xe.prototype.on, xe.prototype.off = function (e, t) {
        be(this, e, t)
    }, xe.prototype.removeEventListener = xe.prototype.off, xe.prototype.one = function (e, t) {
        var i = this.addEventListener;
        this.addEventListener = function () {
        }, Se(this, e, t), this.addEventListener = i
    }, xe.prototype.trigger = function (e) {
        var t = e.type || e;
        "string" == typeof e && (e = {type: t}), e = ge(e), this.allowedEvents_[t] && this["on" + t] && this["on" + t](e), Te(this, e)
    }, xe.prototype.dispatchEvent = xe.prototype.trigger;
    var De = void 0;
    xe.prototype.queueTrigger = function (e) {
        var t = this;
        De || (De = new Map);
        var i = e.type || e, n = De.get(this);
        n || (n = new Map, De.set(this, n));
        var a = n.get(i);
        n.delete(i), r.clearTimeout(a);
        var s = r.setTimeout(function () {
            0 === n.size && (n = null, De.delete(t)), t.trigger(e)
        }, 0);
        n.set(i, s)
    };
    var Ue = function (e) {
        return e instanceof xe || !!e.eventBusEl_ && ["on", "one", "off", "trigger"].every(function (t) {
            return "function" == typeof e[t]
        })
    }, Me = function (e) {
        return "string" == typeof e && /\S/.test(e) || Array.isArray(e) && !!e.length
    }, Be = function (e) {
        if (!e.nodeName && !Ue(e)) throw new Error("Invalid target; must be a DOM node or evented object.")
    }, je = function (e) {
        if (!Me(e)) throw new Error("Invalid event type; must be a non-empty string or array.")
    }, Ne = function (e) {
        if ("function" != typeof e) throw new Error("Invalid listener; must be a function.")
    }, Fe = function (e, t) {
        var i = t.length < 3 || t[0] === e || t[0] === e.eventBusEl_, n = void 0, r = void 0, a = void 0;
        return i ? (n = e.eventBusEl_, t.length >= 3 && t.shift(), r = t[0], a = t[1]) : (n = t[0], r = t[1], a = t[2]), Be(n), je(r), Ne(a), {
            isTargetingSelf: i,
            target: n,
            type: r,
            listener: a = Ie(e, a)
        }
    }, Ve = function (e, t, i, n) {
        Be(e), e.nodeName ? ke[t](e, i, n) : e[t](i, n)
    }, Ge = {
        on: function () {
            for (var e = this, t = arguments.length, i = Array(t), n = 0; n < t; n++) i[n] = arguments[n];
            var r = Fe(this, i), a = r.isTargetingSelf, s = r.target, o = r.type, u = r.listener;
            if (Ve(s, "on", o, u), !a) {
                var l = function () {
                    return e.off(s, o, u)
                };
                l.guid = u.guid;
                var d = function () {
                    return e.off("dispose", l)
                };
                d.guid = u.guid, Ve(this, "on", "dispose", l), Ve(s, "on", "dispose", d)
            }
        }, one: function () {
            for (var e = this, t = arguments.length, i = Array(t), n = 0; n < t; n++) i[n] = arguments[n];
            var r = Fe(this, i), a = r.isTargetingSelf, s = r.target, o = r.type, u = r.listener;
            if (a) Ve(s, "one", o, u); else {
                var l = function t() {
                    for (var i = arguments.length, n = Array(i), r = 0; r < i; r++) n[r] = arguments[r];
                    e.off(s, o, t), u.apply(null, n)
                };
                l.guid = u.guid, Ve(s, "one", o, l)
            }
        }, off: function (e, t, i) {
            if (!e || Me(e)) be(this.eventBusEl_, e, t); else {
                var n = e, r = t;
                Be(n), je(r), Ne(i), i = Ie(this, i), this.off("dispose", i), n.nodeName ? (be(n, r, i), be(n, "dispose", i)) : Ue(n) && (n.off(r, i), n.off("dispose", i))
            }
        }, trigger: function (e, t) {
            return Te(this.eventBusEl_, e, t)
        }
    };

    function He(e) {
        var t = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).eventBusKey;
        if (t) {
            if (!e[t].nodeName) throw new Error('The eventBusKey "' + t + '" does not refer to an element.');
            e.eventBusEl_ = e[t]
        } else e.eventBusEl_ = U("span", {className: "vjs-event-bus"});
        return w(e, Ge), e.on("dispose", function () {
            e.off(), r.setTimeout(function () {
                e.eventBusEl_ = null
            }, 0)
        }), e
    }

    var qe = {
        state: {}, setState: function (e) {
            var t = this;
            "function" == typeof e && (e = e());
            var i = void 0;
            return k(e, function (e, n) {
                t.state[n] !== e && ((i = i || {})[n] = {from: t.state[n], to: e}), t.state[n] = e
            }), i && Ue(this) && this.trigger({changes: i, type: "statechanged"}), i
        }
    };

    function ze(e, t) {
        return w(e, qe), e.state = w({}, e.state, t), "function" == typeof e.handleStateChanged && Ue(e) && e.on("statechanged", e.handleStateChanged), e
    }

    function We(e) {
        return "string" != typeof e ? e : e.charAt(0).toUpperCase() + e.slice(1)
    }

    function Xe() {
        for (var e = {}, t = arguments.length, i = Array(t), n = 0; n < t; n++) i[n] = arguments[n];
        return i.forEach(function (t) {
            t && k(t, function (t, i) {
                C(t) ? (C(e[i]) || (e[i] = {}), e[i] = Xe(e[i], t)) : e[i] = t
            })
        }), e
    }

    var Ye = function () {
        function e(t, i, n) {
            if (y(this, e), !t && this.play ? this.player_ = t = this : this.player_ = t, this.options_ = Xe({}, this.options_), i = this.options_ = Xe(this.options_, i), this.id_ = i.id || i.el && i.el.id, !this.id_) {
                var r = t && t.id && t.id() || "no_player";
                this.id_ = r + "_component_" + ue()
            }
            this.name_ = i.name || null, i.el ? this.el_ = i.el : !1 !== i.createEl && (this.el_ = this.createEl()), !1 !== i.evented && He(this, {eventBusKey: this.el_ ? "el_" : null}), ze(this, this.constructor.defaultState), this.children_ = [], this.childIndex_ = {}, this.childNameIndex_ = {}, !1 !== i.initChildren && this.initChildren(), this.ready(n), !1 !== i.reportTouchActivity && this.enableTouchActivity()
        }

        return e.prototype.dispose = function () {
            if (this.trigger({
                type: "dispose",
                bubbles: !1
            }), this.children_) for (var e = this.children_.length - 1; e >= 0; e--) this.children_[e].dispose && this.children_[e].dispose();
            this.children_ = null, this.childIndex_ = null, this.childNameIndex_ = null, this.el_ && (this.el_.parentNode && this.el_.parentNode.removeChild(this.el_), fe(this.el_), this.el_ = null), this.player_ = null
        }, e.prototype.player = function () {
            return this.player_
        }, e.prototype.options = function (e) {
            return p.warn("this.options() has been deprecated and will be moved to the constructor in 6.0"), e ? (this.options_ = Xe(this.options_, e), this.options_) : this.options_
        }, e.prototype.el = function () {
            return this.el_
        }, e.prototype.createEl = function (e, t, i) {
            return U(e, t, i)
        }, e.prototype.localize = function (e, t) {
            var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : e,
                n = this.player_.language && this.player_.language(),
                r = this.player_.languages && this.player_.languages(), a = r && r[n], s = n && n.split("-")[0],
                o = r && r[s], u = i;
            return a && a[e] ? u = a[e] : o && o[e] && (u = o[e]), t && (u = u.replace(/\{(\d+)\}/g, function (e, i) {
                var n = t[i - 1], r = n;
                return void 0 === n && (r = e), r
            })), u
        }, e.prototype.contentEl = function () {
            return this.contentEl_ || this.el_
        }, e.prototype.id = function () {
            return this.id_
        }, e.prototype.name = function () {
            return this.name_
        }, e.prototype.children = function () {
            return this.children_
        }, e.prototype.getChildById = function (e) {
            return this.childIndex_[e]
        }, e.prototype.getChild = function (e) {
            if (e) return e = We(e), this.childNameIndex_[e]
        }, e.prototype.addChild = function (t) {
            var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.children_.length, r = void 0,
                a = void 0;
            if ("string" == typeof t) {
                a = We(t);
                var s = i.componentClass || a;
                i.name = a;
                var o = e.getComponent(s);
                if (!o) throw new Error("Component " + s + " does not exist");
                if ("function" != typeof o) return null;
                r = new o(this.player_ || this, i)
            } else r = t;
            if (this.children_.splice(n, 0, r), "function" == typeof r.id && (this.childIndex_[r.id()] = r), (a = a || r.name && We(r.name())) && (this.childNameIndex_[a] = r), "function" == typeof r.el && r.el()) {
                var u = this.contentEl().children[n] || null;
                this.contentEl().insertBefore(r.el(), u)
            }
            return r
        }, e.prototype.removeChild = function (e) {
            if ("string" == typeof e && (e = this.getChild(e)), e && this.children_) {
                for (var t = !1, i = this.children_.length - 1; i >= 0; i--) if (this.children_[i] === e) {
                    t = !0, this.children_.splice(i, 1);
                    break
                }
                if (t) {
                    this.childIndex_[e.id()] = null, this.childNameIndex_[e.name()] = null;
                    var n = e.el();
                    n && n.parentNode === this.contentEl() && this.contentEl().removeChild(e.el())
                }
            }
        }, e.prototype.initChildren = function () {
            var t = this, i = this.options_.children;
            if (i) {
                var n = this.options_, r = function (e) {
                    var i = e.name, r = e.opts;
                    if (void 0 !== n[i] && (r = n[i]), !1 !== r) {
                        !0 === r && (r = {}), r.playerOptions = t.options_.playerOptions;
                        var a = t.addChild(i, r);
                        a && (t[i] = a)
                    }
                }, a = void 0, s = e.getComponent("Tech");
                (a = Array.isArray(i) ? i : Object.keys(i)).concat(Object.keys(this.options_).filter(function (e) {
                    return !a.some(function (t) {
                        return "string" == typeof t ? e === t : e === t.name
                    })
                })).map(function (e) {
                    var n = void 0, r = void 0;
                    return "string" == typeof e ? r = i[n = e] || t.options_[n] || {} : (n = e.name, r = e), {
                        name: n,
                        opts: r
                    }
                }).filter(function (t) {
                    var i = e.getComponent(t.opts.componentClass || We(t.name));
                    return i && !s.isTech(i)
                }).forEach(r)
            }
        }, e.prototype.buildCSSClass = function () {
            return ""
        }, e.prototype.ready = function (e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            if (e) return this.isReady_ ? void(t ? e.call(this) : this.setTimeout(e, 1)) : (this.readyQueue_ = this.readyQueue_ || [], void this.readyQueue_.push(e))
        }, e.prototype.triggerReady = function () {
            this.isReady_ = !0, this.setTimeout(function () {
                var e = this.readyQueue_;
                this.readyQueue_ = [], e && e.length > 0 && e.forEach(function (e) {
                    e.call(this)
                }, this), this.trigger("ready")
            }, 1)
        }, e.prototype.$ = function (e, t) {
            return re(e, t || this.contentEl())
        }, e.prototype.$$ = function (e, t) {
            return ae(e, t || this.contentEl())
        }, e.prototype.hasClass = function (e) {
            return j(this.el_, e)
        }, e.prototype.addClass = function (e) {
            N(this.el_, e)
        }, e.prototype.removeClass = function (e) {
            F(this.el_, e)
        }, e.prototype.toggleClass = function (e, t) {
            V(this.el_, e, t)
        }, e.prototype.show = function () {
            this.removeClass("vjs-hidden")
        }, e.prototype.hide = function () {
            this.addClass("vjs-hidden")
        }, e.prototype.lockShowing = function () {
            this.addClass("vjs-lock-showing")
        }, e.prototype.unlockShowing = function () {
            this.removeClass("vjs-lock-showing")
        }, e.prototype.getAttribute = function (e) {
            return q(this.el_, e)
        }, e.prototype.setAttribute = function (e, t) {
            z(this.el_, e, t)
        }, e.prototype.removeAttribute = function (e) {
            W(this.el_, e)
        }, e.prototype.width = function (e, t) {
            return this.dimension("width", e, t)
        }, e.prototype.height = function (e, t) {
            return this.dimension("height", e, t)
        }, e.prototype.dimensions = function (e, t) {
            this.width(e, !0), this.height(t)
        }, e.prototype.dimension = function (e, t, i) {
            if (void 0 !== t) return null !== t && t == t || (t = 0), -1 !== ("" + t).indexOf("%") || -1 !== ("" + t).indexOf("px") ? this.el_.style[e] = t : this.el_.style[e] = "auto" === t ? "" : t + "px", void(i || this.trigger("componentresize"));
            if (!this.el_) return 0;
            var n = this.el_.style[e], r = n.indexOf("px");
            return -1 !== r ? parseInt(n.slice(0, r), 10) : parseInt(this.el_["offset" + We(e)], 10)
        }, e.prototype.currentDimension = function (e) {
            var t = 0;
            if ("width" !== e && "height" !== e) throw new Error("currentDimension only accepts width or height value");
            if ("function" == typeof r.getComputedStyle) {
                var i = r.getComputedStyle(this.el_);
                t = i.getPropertyValue(e) || i[e]
            }
            if (0 === (t = parseFloat(t))) {
                var n = "offset" + We(e);
                t = this.el_[n]
            }
            return t
        }, e.prototype.currentDimensions = function () {
            return {width: this.currentDimension("width"), height: this.currentDimension("height")}
        }, e.prototype.currentWidth = function () {
            return this.currentDimension("width")
        }, e.prototype.currentHeight = function () {
            return this.currentDimension("height")
        }, e.prototype.focus = function () {
            this.el_.focus()
        }, e.prototype.blur = function () {
            this.el_.blur()
        }, e.prototype.emitTapEvents = function () {
            var e = 0, t = null, i = void 0;
            this.on("touchstart", function (n) {
                1 === n.touches.length && (t = {
                    pageX: n.touches[0].pageX,
                    pageY: n.touches[0].pageY
                }, e = (new Date).getTime(), i = !0)
            }), this.on("touchmove", function (e) {
                if (e.touches.length > 1) i = !1; else if (t) {
                    var n = e.touches[0].pageX - t.pageX, r = e.touches[0].pageY - t.pageY;
                    Math.sqrt(n * n + r * r) > 10 && (i = !1)
                }
            });
            var n = function () {
                i = !1
            };
            this.on("touchleave", n), this.on("touchcancel", n), this.on("touchend", function (n) {
                if (t = null, !0 === i) {
                    (new Date).getTime() - e < 200 && (n.preventDefault(), this.trigger("tap"))
                }
            })
        }, e.prototype.enableTouchActivity = function () {
            if (this.player() && this.player().reportUserActivity) {
                var e = Ie(this.player(), this.player().reportUserActivity), t = void 0;
                this.on("touchstart", function () {
                    e(), this.clearInterval(t), t = this.setInterval(e, 250)
                });
                var i = function (i) {
                    e(), this.clearInterval(t)
                };
                this.on("touchmove", e), this.on("touchend", i), this.on("touchcancel", i)
            }
        }, e.prototype.setTimeout = function (e, t) {
            var i, n, a = this;
            return e = Ie(this, e), i = r.setTimeout(function () {
                a.off("dispose", n), e()
            }, t), (n = function () {
                return a.clearTimeout(i)
            }).guid = "vjs-timeout-" + i, this.on("dispose", n), i
        }, e.prototype.clearTimeout = function (e) {
            r.clearTimeout(e);
            var t = function () {
            };
            return t.guid = "vjs-timeout-" + e, this.off("dispose", t), e
        }, e.prototype.setInterval = function (e, t) {
            var i = this;
            e = Ie(this, e);
            var n = r.setInterval(e, t), a = function () {
                return i.clearInterval(n)
            };
            return a.guid = "vjs-interval-" + n, this.on("dispose", a), n
        }, e.prototype.clearInterval = function (e) {
            r.clearInterval(e);
            var t = function () {
            };
            return t.guid = "vjs-interval-" + e, this.off("dispose", t), e
        }, e.prototype.requestAnimationFrame = function (e) {
            var t, i, n = this;
            return this.supportsRaf_ ? (e = Ie(this, e), t = r.requestAnimationFrame(function () {
                n.off("dispose", i), e()
            }), (i = function () {
                return n.cancelAnimationFrame(t)
            }).guid = "vjs-raf-" + t, this.on("dispose", i), t) : this.setTimeout(e, 1e3 / 60)
        }, e.prototype.cancelAnimationFrame = function (e) {
            if (this.supportsRaf_) {
                r.cancelAnimationFrame(e);
                var t = function () {
                };
                return t.guid = "vjs-raf-" + e, this.off("dispose", t), e
            }
            return this.clearTimeout(e)
        }, e.registerComponent = function (t, i) {
            if ("string" != typeof t || !t) throw new Error('Illegal component name, "' + t + '"; must be a non-empty string.');
            var n = e.getComponent("Tech"), r = n && n.isTech(i), a = e === i || e.prototype.isPrototypeOf(i.prototype);
            if (r || !a) {
                var s = void 0;
                throw s = r ? "techs must be registered using Tech.registerTech()" : "must be a Component subclass", new Error('Illegal component, "' + t + '"; ' + s + ".")
            }
            t = We(t), e.components_ || (e.components_ = {});
            var o = e.getComponent("Player");
            if ("Player" === t && o && o.players) {
                var u = o.players, l = Object.keys(u);
                if (u && l.length > 0 && l.map(function (e) {
                    return u[e]
                }).every(Boolean)) throw new Error("Can not register Player component after player has been created.")
            }
            return e.components_[t] = i, i
        }, e.getComponent = function (t) {
            if (t) return t = We(t), e.components_ && e.components_[t] ? e.components_[t] : void 0
        }, e
    }();
    Ye.prototype.supportsRaf_ = "function" == typeof r.requestAnimationFrame && "function" == typeof r.cancelAnimationFrame, Ye.registerComponent("Component", Ye);
    var Ke = r.navigator && r.navigator.userAgent || "", $e = /AppleWebKit\/([\d.]+)/i.exec(Ke),
        Qe = $e ? parseFloat($e.pop()) : null, Je = /iPad/i.test(Ke), Ze = /iPhone/i.test(Ke) && !Je,
        et = /iPod/i.test(Ke), tt = Ze || Je || et, it = function () {
            var e = Ke.match(/OS (\d+)_/i);
            return e && e[1] ? e[1] : null
        }(), nt = /Android/i.test(Ke), rt = function () {
            var e = Ke.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
            if (!e) return null;
            var t = e[1] && parseFloat(e[1]), i = e[2] && parseFloat(e[2]);
            return t && i ? parseFloat(e[1] + "." + e[2]) : t || null
        }(), at = nt && rt < 5 && Qe < 537, st = /Firefox/i.test(Ke), ot = /Edge/i.test(Ke),
        ut = !ot && (/Chrome/i.test(Ke) || /CriOS/i.test(Ke)), lt = function () {
            var e = Ke.match(/(Chrome|CriOS)\/(\d+)/);
            return e && e[2] ? parseFloat(e[2]) : null
        }(), dt = function () {
            var e = /MSIE\s(\d+)\.\d/.exec(Ke), t = e && parseFloat(e[1]);
            return !t && /Trident\/7.0/i.test(Ke) && /rv:11.0/.test(Ke) && (t = 11), t
        }(), ct = /Safari/i.test(Ke) && !ut && !nt && !ot, ht = (ct || tt) && !ut,
        ft = P() && ("ontouchstart" in r || r.navigator.maxTouchPoints || r.DocumentTouch && r.document instanceof r.DocumentTouch),
        pt = Object.freeze({
            IS_IPAD: Je,
            IS_IPHONE: Ze,
            IS_IPOD: et,
            IS_IOS: tt,
            IOS_VERSION: it,
            IS_ANDROID: nt,
            ANDROID_VERSION: rt,
            IS_NATIVE_ANDROID: at,
            IS_FIREFOX: st,
            IS_EDGE: ot,
            IS_CHROME: ut,
            CHROME_VERSION: lt,
            IE_VERSION: dt,
            IS_SAFARI: ct,
            IS_ANY_SAFARI: ht,
            TOUCH_ENABLED: ft
        });

    function mt(e, t, i, n) {
        return function (e, t, i) {
            if ("number" != typeof t || t < 0 || t > i) throw new Error("Failed to execute '" + e + "' on 'TimeRanges': The index provided (" + t + ") is non-numeric or out of bounds (0-" + i + ").")
        }(e, n, i.length - 1), i[n][t]
    }

    function gt(e) {
        return void 0 === e || 0 === e.length ? {
            length: 0, start: function () {
                throw new Error("This TimeRanges object is empty")
            }, end: function () {
                throw new Error("This TimeRanges object is empty")
            }
        } : {length: e.length, start: mt.bind(null, "start", 0, e), end: mt.bind(null, "end", 1, e)}
    }

    function yt(e, t) {
        return Array.isArray(e) ? gt(e) : void 0 === e || void 0 === t ? gt() : gt([[e, t]])
    }

    function _t(e, t) {
        var i = 0, n = void 0, r = void 0;
        if (!t) return 0;
        e && e.length || (e = yt(0, 0));
        for (var a = 0; a < e.length; a++) n = e.start(a), (r = e.end(a)) > t && (r = t), i += r - n;
        return i / t
    }

    for (var vt = {}, bt = [["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror"], ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror"], ["webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror"], ["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror"], ["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError"]], Tt = bt[0], St = void 0, kt = 0; kt < bt.length; kt++) if (bt[kt][1] in l) {
        St = bt[kt];
        break
    }
    if (St) for (var wt = 0; wt < St.length; wt++) vt[Tt[wt]] = St[wt];

    function Et(e) {
        if (e instanceof Et) return e;
        "number" == typeof e ? this.code = e : "string" == typeof e ? this.message = e : E(e) && ("number" == typeof e.code && (this.code = e.code), w(this, e)), this.message || (this.message = Et.defaultMessages[this.code] || "")
    }

    Et.prototype.code = 0, Et.prototype.message = "", Et.prototype.status = null, Et.errorTypes = ["MEDIA_ERR_CUSTOM", "MEDIA_ERR_ABORTED", "MEDIA_ERR_NETWORK", "MEDIA_ERR_DECODE", "MEDIA_ERR_SRC_NOT_SUPPORTED", "MEDIA_ERR_ENCRYPTED"], Et.defaultMessages = {
        1: "You aborted the media playback",
        2: "A network error caused the media download to fail part-way.",
        3: "The media playback was aborted due to a corruption problem or because the media used features your browser did not support.",
        4: "The media could not be loaded, either because the server or network failed or because the format is not supported.",
        5: "The media is encrypted and we do not have the keys to decrypt it."
    };
    for (var Ct = 0; Ct < Et.errorTypes.length; Ct++) Et[Et.errorTypes[Ct]] = Ct, Et.prototype[Et.errorTypes[Ct]] = Ct;
    var At = function (e, t) {
        var i, n = null;
        try {
            i = JSON.parse(e, t)
        } catch (e) {
            n = e
        }
        return [n, i]
    };

    function Lt(e) {
        return void 0 !== e && null !== e && "function" == typeof e.then
    }

    function Ot(e) {
        Lt(e) && e.then(null, function (e) {
        })
    }

    var It = function (e) {
        return ["kind", "label", "language", "id", "inBandMetadataTrackDispatchType", "mode", "src"].reduce(function (t, i, n) {
            return e[i] && (t[i] = e[i]), t
        }, {
            cues: e.cues && Array.prototype.map.call(e.cues, function (e) {
                return {startTime: e.startTime, endTime: e.endTime, text: e.text, id: e.id}
            })
        })
    }, Pt = function (e) {
        var t = e.$$("track"), i = Array.prototype.map.call(t, function (e) {
            return e.track
        });
        return Array.prototype.map.call(t, function (e) {
            var t = It(e.track);
            return e.src && (t.src = e.src), t
        }).concat(Array.prototype.filter.call(e.textTracks(), function (e) {
            return -1 === i.indexOf(e)
        }).map(It))
    }, Rt = function (e, t) {
        return e.forEach(function (e) {
            var i = t.addRemoteTextTrack(e).track;
            !e.src && e.cues && e.cues.forEach(function (e) {
                return i.addCue(e)
            })
        }), t.textTracks()
    }, xt = "vjs-modal-dialog", Dt = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.opened_ = r.hasBeenOpened_ = r.hasBeenFilled_ = !1, r.closeable(!r.options_.uncloseable), r.content(r.options_.content), r.contentEl_ = U("div", {className: xt + "-content"}, {role: "document"}), r.descEl_ = U("p", {
                className: xt + "-description vjs-control-text",
                id: r.el().getAttribute("aria-describedby")
            }), M(r.descEl_, r.description()), r.el_.appendChild(r.descEl_), r.el_.appendChild(r.contentEl_), r
        }

        return t.prototype.createEl = function () {
            return e.prototype.createEl.call(this, "div", {
                className: this.buildCSSClass(),
                tabIndex: -1
            }, {
                "aria-describedby": this.id() + "_description",
                "aria-hidden": "true",
                "aria-label": this.label(),
                role: "dialog"
            })
        }, t.prototype.dispose = function () {
            this.contentEl_ = null, this.descEl_ = null, this.previouslyActiveEl_ = null, e.prototype.dispose.call(this)
        }, t.prototype.buildCSSClass = function () {
            return xt + " vjs-hidden " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.handleKeyPress = function (e) {
            27 === e.which && this.closeable() && this.close()
        }, t.prototype.label = function () {
            return this.localize(this.options_.label || "Modal Window")
        }, t.prototype.description = function () {
            var e = this.options_.description || this.localize("This is a modal window.");
            return this.closeable() && (e += " " + this.localize("This modal can be closed by pressing the Escape key or activating the close button.")), e
        }, t.prototype.open = function () {
            if (!this.opened_) {
                var e = this.player();
                this.trigger("beforemodalopen"), this.opened_ = !0, (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) && this.fill(), this.wasPlaying_ = !e.paused(), this.options_.pauseOnOpen && this.wasPlaying_ && e.pause(), this.closeable() && this.on(this.el_.ownerDocument, "keydown", Ie(this, this.handleKeyPress)), this.hadControls_ = e.controls(), e.controls(!1), this.show(), this.conditionalFocus_(), this.el().setAttribute("aria-hidden", "false"), this.trigger("modalopen"), this.hasBeenOpened_ = !0
            }
        }, t.prototype.opened = function (e) {
            return "boolean" == typeof e && this[e ? "open" : "close"](), this.opened_
        }, t.prototype.close = function () {
            if (this.opened_) {
                var e = this.player();
                this.trigger("beforemodalclose"), this.opened_ = !1, this.wasPlaying_ && this.options_.pauseOnOpen && e.play(), this.closeable() && this.off(this.el_.ownerDocument, "keydown", Ie(this, this.handleKeyPress)), this.hadControls_ && e.controls(!0), this.hide(), this.el().setAttribute("aria-hidden", "true"), this.trigger("modalclose"), this.conditionalBlur_(), this.options_.temporary && this.dispose()
            }
        }, t.prototype.closeable = function (e) {
            if ("boolean" == typeof e) {
                var t = this.closeable_ = !!e, i = this.getChild("closeButton");
                if (t && !i) {
                    var n = this.contentEl_;
                    this.contentEl_ = this.el_, i = this.addChild("closeButton", {controlText: "Close Modal Dialog"}), this.contentEl_ = n, this.on(i, "close", this.close)
                }
                !t && i && (this.off(i, "close", this.close), this.removeChild(i), i.dispose())
            }
            return this.closeable_
        }, t.prototype.fill = function () {
            this.fillWith(this.content())
        }, t.prototype.fillWith = function (e) {
            var t = this.contentEl(), i = t.parentNode, n = t.nextSibling;
            this.trigger("beforemodalfill"), this.hasBeenFilled_ = !0, i.removeChild(t), this.empty(), ie(t, e), this.trigger("modalfill"), n ? i.insertBefore(t, n) : i.appendChild(t);
            var r = this.getChild("closeButton");
            r && i.appendChild(r.el_)
        }, t.prototype.empty = function () {
            this.trigger("beforemodalempty"), Z(this.contentEl()), this.trigger("modalempty")
        }, t.prototype.content = function (e) {
            return void 0 !== e && (this.content_ = e), this.content_
        }, t.prototype.conditionalFocus_ = function () {
            var e = l.activeElement, t = this.player_.el_;
            this.previouslyActiveEl_ = null, (t.contains(e) || t === e) && (this.previouslyActiveEl_ = e, this.focus(), this.on(l, "keydown", this.handleKeyDown))
        }, t.prototype.conditionalBlur_ = function () {
            this.previouslyActiveEl_ && (this.previouslyActiveEl_.focus(), this.previouslyActiveEl_ = null), this.off(l, "keydown", this.handleKeyDown)
        }, t.prototype.handleKeyDown = function (e) {
            if (9 === e.which) {
                for (var t = this.focusableEls_(), i = this.el_.querySelector(":focus"), n = void 0, r = 0; r < t.length; r++) if (i === t[r]) {
                    n = r;
                    break
                }
                l.activeElement === this.el_ && (n = 0), e.shiftKey && 0 === n ? (t[t.length - 1].focus(), e.preventDefault()) : e.shiftKey || n !== t.length - 1 || (t[0].focus(), e.preventDefault())
            }
        }, t.prototype.focusableEls_ = function () {
            var e = this.el_.querySelectorAll("*");
            return Array.prototype.filter.call(e, function (e) {
                return (e instanceof r.HTMLAnchorElement || e instanceof r.HTMLAreaElement) && e.hasAttribute("href") || (e instanceof r.HTMLInputElement || e instanceof r.HTMLSelectElement || e instanceof r.HTMLTextAreaElement || e instanceof r.HTMLButtonElement) && !e.hasAttribute("disabled") || e instanceof r.HTMLIFrameElement || e instanceof r.HTMLObjectElement || e instanceof r.HTMLEmbedElement || e.hasAttribute("tabindex") && -1 !== e.getAttribute("tabindex") || e.hasAttribute("contenteditable")
            })
        }, t
    }(Ye);
    Dt.prototype.options_ = {pauseOnOpen: !0, temporary: !0}, Ye.registerComponent("ModalDialog", Dt);
    var Ut = function (e) {
        _(t, e);

        function t() {
            var i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
            y(this, t);
            var n = v(this, e.call(this));
            n.tracks_ = [], Object.defineProperty(n, "length", {
                get: function () {
                    return this.tracks_.length
                }
            });
            for (var r = 0; r < i.length; r++) n.addTrack(i[r]);
            return n
        }

        return t.prototype.addTrack = function (e) {
            var t = this.tracks_.length;
            "" + t in this || Object.defineProperty(this, t, {
                get: function () {
                    return this.tracks_[t]
                }
            }), -1 === this.tracks_.indexOf(e) && (this.tracks_.push(e), this.trigger({track: e, type: "addtrack"}))
        }, t.prototype.removeTrack = function (e) {
            for (var t = void 0, i = 0, n = this.length; i < n; i++) if (this[i] === e) {
                (t = this[i]).off && t.off(), this.tracks_.splice(i, 1);
                break
            }
            t && this.trigger({track: t, type: "removetrack"})
        }, t.prototype.getTrackById = function (e) {
            for (var t = null, i = 0, n = this.length; i < n; i++) {
                var r = this[i];
                if (r.id === e) {
                    t = r;
                    break
                }
            }
            return t
        }, t
    }(xe);
    Ut.prototype.allowedEvents_ = {change: "change", addtrack: "addtrack", removetrack: "removetrack"};
    for (var Mt in Ut.prototype.allowedEvents_) Ut.prototype["on" + Mt] = null;
    var Bt = function (e, t) {
            for (var i = 0; i < e.length; i++) Object.keys(e[i]).length && t.id !== e[i].id && (e[i].enabled = !1)
        }, jt = function (e) {
            _(t, e);

            function t() {
                var i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                y(this, t);
                for (var n = i.length - 1; n >= 0; n--) if (i[n].enabled) {
                    Bt(i, i[n]);
                    break
                }
                var r = v(this, e.call(this, i));
                return r.changing_ = !1, r
            }

            return t.prototype.addTrack = function (t) {
                var i = this;
                t.enabled && Bt(this, t), e.prototype.addTrack.call(this, t), t.addEventListener && t.addEventListener("enabledchange", function () {
                    i.changing_ || (i.changing_ = !0, Bt(i, t), i.changing_ = !1, i.trigger("change"))
                })
            }, t
        }(Ut), Nt = function (e, t) {
            for (var i = 0; i < e.length; i++) Object.keys(e[i]).length && t.id !== e[i].id && (e[i].selected = !1)
        }, Ft = function (e) {
            _(t, e);

            function t() {
                var i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                y(this, t);
                for (var n = i.length - 1; n >= 0; n--) if (i[n].selected) {
                    Nt(i, i[n]);
                    break
                }
                var r = v(this, e.call(this, i));
                return r.changing_ = !1, Object.defineProperty(r, "selectedIndex", {
                    get: function () {
                        for (var e = 0; e < this.length; e++) if (this[e].selected) return e;
                        return -1
                    }, set: function () {
                    }
                }), r
            }

            return t.prototype.addTrack = function (t) {
                var i = this;
                t.selected && Nt(this, t), e.prototype.addTrack.call(this, t), t.addEventListener && t.addEventListener("selectedchange", function () {
                    i.changing_ || (i.changing_ = !0, Nt(i, t), i.changing_ = !1, i.trigger("change"))
                })
            }, t
        }(Ut), Vt = function (e) {
            _(t, e);

            function t() {
                return y(this, t), v(this, e.apply(this, arguments))
            }

            return t.prototype.addTrack = function (t) {
                e.prototype.addTrack.call(this, t), t.addEventListener("modechange", Ie(this, function () {
                    this.queueTrigger("change")
                }));
                -1 === ["metadata", "chapters"].indexOf(t.kind) && t.addEventListener("modechange", Ie(this, function () {
                    this.trigger("selectedlanguagechange")
                }))
            }, t
        }(Ut), Gt = function () {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                y(this, e), this.trackElements_ = [], Object.defineProperty(this, "length", {
                    get: function () {
                        return this.trackElements_.length
                    }
                });
                for (var i = 0, n = t.length; i < n; i++) this.addTrackElement_(t[i])
            }

            return e.prototype.addTrackElement_ = function (e) {
                var t = this.trackElements_.length;
                "" + t in this || Object.defineProperty(this, t, {
                    get: function () {
                        return this.trackElements_[t]
                    }
                }), -1 === this.trackElements_.indexOf(e) && this.trackElements_.push(e)
            }, e.prototype.getTrackElementByTrack_ = function (e) {
                for (var t = void 0, i = 0, n = this.trackElements_.length; i < n; i++) if (e === this.trackElements_[i].track) {
                    t = this.trackElements_[i];
                    break
                }
                return t
            }, e.prototype.removeTrackElement_ = function (e) {
                for (var t = 0, i = this.trackElements_.length; t < i; t++) if (e === this.trackElements_[t]) {
                    this.trackElements_.splice(t, 1);
                    break
                }
            }, e
        }(), Ht = function () {
            function e(t) {
                y(this, e), e.prototype.setCues_.call(this, t), Object.defineProperty(this, "length", {
                    get: function () {
                        return this.length_
                    }
                })
            }

            return e.prototype.setCues_ = function (e) {
                var t = this.length || 0, i = 0, n = e.length;
                this.cues_ = e, this.length_ = e.length;
                var r = function (e) {
                    "" + e in this || Object.defineProperty(this, "" + e, {
                        get: function () {
                            return this.cues_[e]
                        }
                    })
                };
                if (t < n) for (i = t; i < n; i++) r.call(this, i)
            }, e.prototype.getCueById = function (e) {
                for (var t = null, i = 0, n = this.length; i < n; i++) {
                    var r = this[i];
                    if (r.id === e) {
                        t = r;
                        break
                    }
                }
                return t
            }, e
        }(), qt = {
            alternative: "alternative",
            captions: "captions",
            main: "main",
            sign: "sign",
            subtitles: "subtitles",
            commentary: "commentary"
        }, zt = {
            alternative: "alternative",
            descriptions: "descriptions",
            main: "main",
            "main-desc": "main-desc",
            translation: "translation",
            commentary: "commentary"
        }, Wt = {
            subtitles: "subtitles",
            captions: "captions",
            descriptions: "descriptions",
            chapters: "chapters",
            metadata: "metadata"
        }, Xt = {disabled: "disabled", hidden: "hidden", showing: "showing"}, Yt = function (e) {
            _(t, e);

            function t() {
                var i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                y(this, t);
                var n = v(this, e.call(this)), r = {
                    id: i.id || "vjs_track_" + ue(),
                    kind: i.kind || "",
                    label: i.label || "",
                    language: i.language || ""
                }, a = function (e) {
                    Object.defineProperty(n, e, {
                        get: function () {
                            return r[e]
                        }, set: function () {
                        }
                    })
                };
                for (var s in r) a(s);
                return n
            }

            return t
        }(xe), Kt = function (e) {
            var t = ["protocol", "hostname", "port", "pathname", "search", "hash", "host"], i = l.createElement("a");
            i.href = e;
            var n = "" === i.host && "file:" !== i.protocol, a = void 0;
            n && ((a = l.createElement("div")).innerHTML = '<a href="' + e + '"></a>', i = a.firstChild, a.setAttribute("style", "display:none; position:absolute;"), l.body.appendChild(a));
            for (var s = {}, o = 0; o < t.length; o++) s[t[o]] = i[t[o]];
            return "http:" === s.protocol && (s.host = s.host.replace(/:80$/, "")), "https:" === s.protocol && (s.host = s.host.replace(/:443$/, "")), s.protocol || (s.protocol = r.location.protocol), n && l.body.removeChild(a), s
        }, $t = function (e) {
            if (!e.match(/^https?:\/\//)) {
                var t = l.createElement("div");
                t.innerHTML = '<a href="' + e + '">x</a>', e = t.firstChild.href
            }
            return e
        }, Qt = function (e) {
            if ("string" == typeof e) {
                var t = /^(\/?)([\s\S]*?)((?:\.{1,2}|[^\/]+?)(\.([^\.\/\?]+)))(?:[\/]*|[\?].*)$/i.exec(e);
                if (t) return t.pop().toLowerCase()
            }
            return ""
        }, Jt = function (e) {
            var t = r.location, i = Kt(e);
            return (":" === i.protocol ? t.protocol : i.protocol) + i.host !== t.protocol + t.host
        }, Zt = Object.freeze({parseUrl: Kt, getAbsoluteURL: $t, getFileExtension: Qt, isCrossOrigin: Jt}),
        ei = function (e) {
            var t = ti.call(e);
            return "[object Function]" === t || "function" == typeof e && "[object RegExp]" !== t || "undefined" != typeof window && (e === window.setTimeout || e === window.alert || e === window.confirm || e === window.prompt)
        }, ti = Object.prototype.toString;
    var ii = Object.freeze({default: ei, __moduleExports: ei}), ni = i(function (e, t) {
            (t = e.exports = function (e) {
                return e.replace(/^\s*|\s*$/g, "")
            }).left = function (e) {
                return e.replace(/^\s*/, "")
            }, t.right = function (e) {
                return e.replace(/\s*$/, "")
            }
        }), ri = ni.left, ai = ni.right, si = Object.freeze({default: ni, __moduleExports: ni, left: ri, right: ai}),
        oi = ii && ei || ii, ui = function (e, t, i) {
            if (!oi(t)) throw new TypeError("iterator must be a function");
            arguments.length < 3 && (i = this);
            "[object Array]" === li.call(e) ? function (e, t, i) {
                for (var n = 0, r = e.length; n < r; n++) di.call(e, n) && t.call(i, e[n], n, e)
            }(e, t, i) : "string" == typeof e ? function (e, t, i) {
                for (var n = 0, r = e.length; n < r; n++) t.call(i, e.charAt(n), n, e)
            }(e, t, i) : function (e, t, i) {
                for (var n in e) di.call(e, n) && t.call(i, e[n], n, e)
            }(e, t, i)
        }, li = Object.prototype.toString, di = Object.prototype.hasOwnProperty;
    var ci = Object.freeze({default: ui, __moduleExports: ui}), hi = si && ni || si, fi = ci && ui || ci,
        pi = function (e) {
            if (!e) return {};
            var t = {};
            return fi(hi(e).split("\n"), function (e) {
                var i = e.indexOf(":"), n = hi(e.slice(0, i)).toLowerCase(), r = hi(e.slice(i + 1));
                void 0 === t[n] ? t[n] = r : (a = t[n], "[object Array]" === Object.prototype.toString.call(a) ? t[n].push(r) : t[n] = [t[n], r]);
                var a
            }), t
        }, mi = Object.freeze({default: pi, __moduleExports: pi}), gi = function () {
            for (var e = {}, t = 0; t < arguments.length; t++) {
                var i = arguments[t];
                for (var n in i) yi.call(i, n) && (e[n] = i[n])
            }
            return e
        }, yi = Object.prototype.hasOwnProperty;
    var _i = Object.freeze({default: gi, __moduleExports: gi}), vi = mi && pi || mi, bi = _i && gi || _i, Ti = ki;
    ki.XMLHttpRequest = r.XMLHttpRequest || function () {
    }, ki.XDomainRequest = "withCredentials" in new ki.XMLHttpRequest ? ki.XMLHttpRequest : r.XDomainRequest, function (e, t) {
        for (var i = 0; i < e.length; i++) t(e[i])
    }(["get", "put", "post", "patch", "head", "delete"], function (e) {
        ki["delete" === e ? "del" : e] = function (t, i, n) {
            return (i = Si(t, i, n)).method = e.toUpperCase(), wi(i)
        }
    });

    function Si(e, t, i) {
        var n = e;
        return oi(t) ? (i = t, "string" == typeof e && (n = {uri: e})) : n = bi(t, {uri: e}), n.callback = i, n
    }

    function ki(e, t, i) {
        return wi(t = Si(e, t, i))
    }

    function wi(e) {
        if (void 0 === e.callback) throw new Error("callback argument missing");
        var t = !1, i = function (i, n, r) {
            t || (t = !0, e.callback(i, n, r))
        };

        function n(e) {
            return clearTimeout(u), e instanceof Error || (e = new Error("" + (e || "Unknown XMLHttpRequest Error"))), e.statusCode = 0, i(e, m)
        }

        function r() {
            if (!o) {
                var t;
                clearTimeout(u), t = e.useXDR && void 0 === a.status ? 200 : 1223 === a.status ? 204 : a.status;
                var n = m, r = null;
                return 0 !== t ? (n = {
                    body: function () {
                        var e = void 0;
                        if (e = a.response ? a.response : a.responseText || function (e) {
                            if ("document" === e.responseType) return e.responseXML;
                            var t = e.responseXML && "parsererror" === e.responseXML.documentElement.nodeName;
                            return "" !== e.responseType || t ? null : e.responseXML
                        }(a), p) try {
                            e = JSON.parse(e)
                        } catch (e) {
                        }
                        return e
                    }(), statusCode: t, method: d, headers: {}, url: l, rawRequest: a
                }, a.getAllResponseHeaders && (n.headers = vi(a.getAllResponseHeaders()))) : r = new Error("Internal XMLHttpRequest Error"), i(r, n, n.body)
            }
        }

        var a = e.xhr || null;
        a || (a = e.cors || e.useXDR ? new ki.XDomainRequest : new ki.XMLHttpRequest);
        var s, o, u, l = a.url = e.uri || e.url, d = a.method = e.method || "GET", c = e.body || e.data,
            h = a.headers = e.headers || {}, f = !!e.sync, p = !1,
            m = {body: void 0, headers: {}, statusCode: 0, method: d, url: l, rawRequest: a};
        if ("json" in e && !1 !== e.json && (p = !0, h.accept || h.Accept || (h.Accept = "application/json"), "GET" !== d && "HEAD" !== d && (h["content-type"] || h["Content-Type"] || (h["Content-Type"] = "application/json"), c = JSON.stringify(!0 === e.json ? c : e.json))), a.onreadystatechange = function () {
            4 === a.readyState && setTimeout(r, 0)
        }, a.onload = r, a.onerror = n, a.onprogress = function () {
        }, a.onabort = function () {
            o = !0
        }, a.ontimeout = n, a.open(d, l, !f, e.username, e.password), f || (a.withCredentials = !!e.withCredentials), !f && e.timeout > 0 && (u = setTimeout(function () {
            if (!o) {
                o = !0, a.abort("timeout");
                var e = new Error("XMLHttpRequest timeout");
                e.code = "ETIMEDOUT", n(e)
            }
        }, e.timeout)), a.setRequestHeader) for (s in h) h.hasOwnProperty(s) && a.setRequestHeader(s, h[s]); else if (e.headers && !function (e) {
            for (var t in e) if (e.hasOwnProperty(t)) return !1;
            return !0
        }(e.headers)) throw new Error("Headers cannot be set on an XDomainRequest object");
        return "responseType" in e && (a.responseType = e.responseType), "beforeSend" in e && "function" == typeof e.beforeSend && e.beforeSend(a), a.send(c || null), a
    }

    var Ei = function (e, t) {
        var i = new r.WebVTT.Parser(r, r.vttjs, r.WebVTT.StringDecoder()), n = [];
        i.oncue = function (e) {
            t.addCue(e)
        }, i.onparsingerror = function (e) {
            n.push(e)
        }, i.onflush = function () {
            t.trigger({type: "loadeddata", target: t})
        }, i.parse(e), n.length > 0 && (r.console && r.console.groupCollapsed && r.console.groupCollapsed("Text Track parsing errors for " + t.src), n.forEach(function (e) {
            return p.error(e)
        }), r.console && r.console.groupEnd && r.console.groupEnd()), i.flush()
    }, Ci = function (e, t) {
        var i = {uri: e}, n = Jt(e);
        n && (i.cors = n), Ti(i, Ie(this, function (e, i, n) {
            if (e) return p.error(e, i);
            if (t.loaded_ = !0, "function" != typeof r.WebVTT) {
                if (t.tech_) {
                    var a = function () {
                        return Ei(n, t)
                    };
                    t.tech_.on("vttjsloaded", a), t.tech_.on("vttjserror", function () {
                        p.error("vttjs failed to load, stopping trying to process " + t.src), t.tech_.off("vttjsloaded", a)
                    })
                }
            } else Ei(n, t)
        }))
    }, Ai = function (e) {
        _(t, e);

        function t() {
            var i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            if (y(this, t), !i.tech) throw new Error("A tech was not provided.");
            var n = Xe(i, {kind: Wt[i.kind] || "subtitles", language: i.language || i.srclang || ""}),
                r = Xt[n.mode] || "disabled", a = n.default;
            "metadata" !== n.kind && "chapters" !== n.kind || (r = "hidden");
            var s = v(this, e.call(this, n));
            s.tech_ = n.tech, s.cues_ = [], s.activeCues_ = [];
            var o = new Ht(s.cues_), u = new Ht(s.activeCues_), l = !1, d = Ie(s, function () {
                this.activeCues = this.activeCues, l && (this.trigger("cuechange"), l = !1)
            });
            return "disabled" !== r && s.tech_.ready(function () {
                s.tech_.on("timeupdate", d)
            }, !0), Object.defineProperties(s, {
                default: {
                    get: function () {
                        return a
                    }, set: function () {
                    }
                }, mode: {
                    get: function () {
                        return r
                    }, set: function (e) {
                        var t = this;
                        Xt[e] && ("disabled" !== (r = e) ? this.tech_.ready(function () {
                            t.tech_.on("timeupdate", d)
                        }, !0) : this.tech_.off("timeupdate", d), this.trigger("modechange"))
                    }
                }, cues: {
                    get: function () {
                        return this.loaded_ ? o : null
                    }, set: function () {
                    }
                }, activeCues: {
                    get: function () {
                        if (!this.loaded_) return null;
                        if (0 === this.cues.length) return u;
                        for (var e = this.tech_.currentTime(), t = [], i = 0, n = this.cues.length; i < n; i++) {
                            var r = this.cues[i];
                            r.startTime <= e && r.endTime >= e ? t.push(r) : r.startTime === r.endTime && r.startTime <= e && r.startTime + .5 >= e && t.push(r)
                        }
                        if (l = !1, t.length !== this.activeCues_.length) l = !0; else for (var a = 0; a < t.length; a++) -1 === this.activeCues_.indexOf(t[a]) && (l = !0);
                        return this.activeCues_ = t, u.setCues_(this.activeCues_), u
                    }, set: function () {
                    }
                }
            }), n.src ? (s.src = n.src, Ci(n.src, s)) : s.loaded_ = !0, s
        }

        return t.prototype.addCue = function (e) {
            var t = e;
            if (r.vttjs && !(e instanceof r.vttjs.VTTCue)) {
                t = new r.vttjs.VTTCue(e.startTime, e.endTime, e.text);
                for (var i in e) i in t || (t[i] = e[i]);
                t.id = e.id, t.originalCue_ = e
            }
            for (var n = this.tech_.textTracks(), a = 0; a < n.length; a++) n[a] !== this && n[a].removeCue(t);
            this.cues_.push(t), this.cues.setCues_(this.cues_)
        }, t.prototype.removeCue = function (e) {
            for (var t = this.cues_.length; t--;) {
                var i = this.cues_[t];
                if (i === e || i.originalCue_ && i.originalCue_ === e) {
                    this.cues_.splice(t, 1), this.cues.setCues_(this.cues_);
                    break
                }
            }
        }, t
    }(Yt);
    Ai.prototype.allowedEvents_ = {cuechange: "cuechange"};
    var Li = function (e) {
        _(t, e);

        function t() {
            var i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            y(this, t);
            var n = Xe(i, {kind: zt[i.kind] || ""}), r = v(this, e.call(this, n)), a = !1;
            return Object.defineProperty(r, "enabled", {
                get: function () {
                    return a
                }, set: function (e) {
                    "boolean" == typeof e && e !== a && (a = e, this.trigger("enabledchange"))
                }
            }), n.enabled && (r.enabled = n.enabled), r.loaded_ = !0, r
        }

        return t
    }(Yt), Oi = function (e) {
        _(t, e);

        function t() {
            var i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            y(this, t);
            var n = Xe(i, {kind: qt[i.kind] || ""}), r = v(this, e.call(this, n)), a = !1;
            return Object.defineProperty(r, "selected", {
                get: function () {
                    return a
                }, set: function (e) {
                    "boolean" == typeof e && e !== a && (a = e, this.trigger("selectedchange"))
                }
            }), n.selected && (r.selected = n.selected), r
        }

        return t
    }(Yt), Ii = 0, Pi = 2, Ri = function (e) {
        _(t, e);

        function t() {
            var i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            y(this, t);
            var n = v(this, e.call(this)), r = void 0, a = new Ai(i);
            return n.kind = a.kind, n.src = a.src, n.srclang = a.language, n.label = a.label, n.default = a.default, Object.defineProperties(n, {
                readyState: {
                    get: function () {
                        return r
                    }
                }, track: {
                    get: function () {
                        return a
                    }
                }
            }), r = Ii, a.addEventListener("loadeddata", function () {
                r = Pi, n.trigger({type: "load", target: n})
            }), n
        }

        return t
    }(xe);
    Ri.prototype.allowedEvents_ = {load: "load"}, Ri.NONE = Ii, Ri.LOADING = 1, Ri.LOADED = Pi, Ri.ERROR = 3;
    var xi = {
        audio: {ListClass: jt, TrackClass: Li, capitalName: "Audio"},
        video: {ListClass: Ft, TrackClass: Oi, capitalName: "Video"},
        text: {ListClass: Vt, TrackClass: Ai, capitalName: "Text"}
    };
    Object.keys(xi).forEach(function (e) {
        xi[e].getterName = e + "Tracks", xi[e].privateName = e + "Tracks_"
    });
    var Di = {
        remoteText: {
            ListClass: Vt,
            TrackClass: Ai,
            capitalName: "RemoteText",
            getterName: "remoteTextTracks",
            privateName: "remoteTextTracks_"
        },
        remoteTextEl: {
            ListClass: Gt,
            TrackClass: Ri,
            capitalName: "RemoteTextTrackEls",
            getterName: "remoteTextTrackEls",
            privateName: "remoteTextTrackEls_"
        }
    }, Ui = Xe(xi, Di);
    Di.names = Object.keys(Di), xi.names = Object.keys(xi), Ui.names = [].concat(Di.names).concat(xi.names);
    var Mi = Object.create || function () {
        function e() {
        }

        return function (t) {
            if (1 !== arguments.length) throw new Error("Object.create shim only accepts one parameter.");
            return e.prototype = t, new e
        }
    }();

    function Bi(e, t) {
        this.name = "ParsingError", this.code = e.code, this.message = t || e.message
    }

    Bi.prototype = Mi(Error.prototype), Bi.prototype.constructor = Bi, Bi.Errors = {
        BadSignature: {
            code: 0,
            message: "Malformed WebVTT signature."
        }, BadTimeStamp: {code: 1, message: "Malformed time stamp."}
    };

    function ji(e) {
        function t(e, t, i, n) {
            return 3600 * (0 | e) + 60 * (0 | t) + (0 | i) + (0 | n) / 1e3
        }

        var i = e.match(/^(\d+):(\d{2})(:\d{2})?\.(\d{3})/);
        return i ? i[3] ? t(i[1], i[2], i[3].replace(":", ""), i[4]) : i[1] > 59 ? t(i[1], i[2], 0, i[4]) : t(0, i[1], i[2], i[4]) : null
    }

    function Ni() {
        this.values = Mi(null)
    }

    Ni.prototype = {
        set: function (e, t) {
            this.get(e) || "" === t || (this.values[e] = t)
        }, get: function (e, t, i) {
            return i ? this.has(e) ? this.values[e] : t[i] : this.has(e) ? this.values[e] : t
        }, has: function (e) {
            return e in this.values
        }, alt: function (e, t, i) {
            for (var n = 0; n < i.length; ++n) if (t === i[n]) {
                this.set(e, t);
                break
            }
        }, integer: function (e, t) {
            /^-?\d+$/.test(t) && this.set(e, parseInt(t, 10))
        }, percent: function (e, t) {
            return !!(t.match(/^([\d]{1,3})(\.[\d]*)?%$/) && (t = parseFloat(t)) >= 0 && t <= 100) && (this.set(e, t), !0)
        }
    };

    function Fi(e, t, i, n) {
        var r = n ? e.split(n) : [e];
        for (var a in r) if ("string" == typeof r[a]) {
            var s = r[a].split(i);
            if (2 === s.length) {
                t(s[0], s[1])
            }
        }
    }

    function Vi(e, t, i) {
        var n = e;

        function r() {
            var t = ji(e);
            if (null === t) throw new Bi(Bi.Errors.BadTimeStamp, "Malformed timestamp: " + n);
            return e = e.replace(/^[^\sa-zA-Z-]+/, ""), t
        }

        function a() {
            e = e.replace(/^\s+/, "")
        }

        if (a(), t.startTime = r(), a(), "--\x3e" !== e.substr(0, 3)) throw new Bi(Bi.Errors.BadTimeStamp, "Malformed time stamp (time stamps must be separated by '--\x3e'): " + n);
        e = e.substr(3), a(), t.endTime = r(), a(), function (e, t) {
            var n = new Ni;
            Fi(e, function (e, t) {
                switch (e) {
                    case"region":
                        for (var r = i.length - 1; r >= 0; r--) if (i[r].id === t) {
                            n.set(e, i[r].region);
                            break
                        }
                        break;
                    case"vertical":
                        n.alt(e, t, ["rl", "lr"]);
                        break;
                    case"line":
                        var a = t.split(","), s = a[0];
                        n.integer(e, s), n.percent(e, s) && n.set("snapToLines", !1), n.alt(e, s, ["auto"]), 2 === a.length && n.alt("lineAlign", a[1], ["start", "middle", "end"]);
                        break;
                    case"position":
                        a = t.split(","), n.percent(e, a[0]), 2 === a.length && n.alt("positionAlign", a[1], ["start", "middle", "end"]);
                        break;
                    case"size":
                        n.percent(e, t);
                        break;
                    case"align":
                        n.alt(e, t, ["start", "middle", "end", "left", "right"])
                }
            }, /:/, /\s/), t.region = n.get("region", null), t.vertical = n.get("vertical", ""), t.line = n.get("line", "auto"), t.lineAlign = n.get("lineAlign", "start"), t.snapToLines = n.get("snapToLines", !0), t.size = n.get("size", 100), t.align = n.get("align", "middle"), t.position = n.get("position", {
                start: 0,
                left: 0,
                middle: 50,
                end: 100,
                right: 100
            }, t.align), t.positionAlign = n.get("positionAlign", {
                start: "start",
                left: "start",
                middle: "middle",
                end: "end",
                right: "end"
            }, t.align)
        }(e, t)
    }

    var Gi = {"&amp;": "&", "&lt;": "<", "&gt;": ">", "&lrm;": "‎", "&rlm;": "‏", "&nbsp;": " "},
        Hi = {c: "span", i: "i", b: "b", u: "u", ruby: "ruby", rt: "rt", v: "span", lang: "span"},
        qi = {v: "title", lang: "lang"}, zi = {rt: "ruby"};

    function Wi(e, t) {
        function i() {
            if (!t) return null;
            var e = t.match(/^([^<]*)(<[^>]*>?)?/);
            return i = e[1] ? e[1] : e[2], t = t.substr(i.length), i;
            var i
        }

        function n(e) {
            return Gi[e]
        }

        function r(e) {
            for (; h = e.match(/&(amp|lt|gt|lrm|rlm|nbsp);/);) e = e.replace(h[0], n);
            return e
        }

        function a(t, i) {
            var n = Hi[t];
            if (!n) return null;
            var r = e.document.createElement(n);
            r.localName = n;
            var a = qi[t];
            return a && i && (r[a] = i.trim()), r
        }

        for (var s, o = e.document.createElement("div"), u = o, l = []; null !== (s = i());) if ("<" !== s[0]) u.appendChild(e.document.createTextNode(r(s))); else {
            if ("/" === s[1]) {
                l.length && l[l.length - 1] === s.substr(2).replace(">", "") && (l.pop(), u = u.parentNode);
                continue
            }
            var d, c = ji(s.substr(1, s.length - 2));
            if (c) {
                d = e.document.createProcessingInstruction("timestamp", c), u.appendChild(d);
                continue
            }
            var h = s.match(/^<([^.\s/0-9>]+)(\.[^\s\\>]+)?([^>\\]+)?(\\?)>?$/);
            if (!h) continue;
            if (!(d = a(h[1], h[3]))) continue;
            if (f = u, zi[(p = d).localName] && zi[p.localName] !== f.localName) continue;
            h[2] && (d.className = h[2].substr(1).replace(".", " ")), l.push(h[1]), u.appendChild(d), u = d
        }
        var f, p;
        return o
    }

    var Xi = [[1470, 1470], [1472, 1472], [1475, 1475], [1478, 1478], [1488, 1514], [1520, 1524], [1544, 1544], [1547, 1547], [1549, 1549], [1563, 1563], [1566, 1610], [1645, 1647], [1649, 1749], [1765, 1766], [1774, 1775], [1786, 1805], [1807, 1808], [1810, 1839], [1869, 1957], [1969, 1969], [1984, 2026], [2036, 2037], [2042, 2042], [2048, 2069], [2074, 2074], [2084, 2084], [2088, 2088], [2096, 2110], [2112, 2136], [2142, 2142], [2208, 2208], [2210, 2220], [8207, 8207], [64285, 64285], [64287, 64296], [64298, 64310], [64312, 64316], [64318, 64318], [64320, 64321], [64323, 64324], [64326, 64449], [64467, 64829], [64848, 64911], [64914, 64967], [65008, 65020], [65136, 65140], [65142, 65276], [67584, 67589], [67592, 67592], [67594, 67637], [67639, 67640], [67644, 67644], [67647, 67669], [67671, 67679], [67840, 67867], [67872, 67897], [67903, 67903], [67968, 68023], [68030, 68031], [68096, 68096], [68112, 68115], [68117, 68119], [68121, 68147], [68160, 68167], [68176, 68184], [68192, 68223], [68352, 68405], [68416, 68437], [68440, 68466], [68472, 68479], [68608, 68680], [126464, 126467], [126469, 126495], [126497, 126498], [126500, 126500], [126503, 126503], [126505, 126514], [126516, 126519], [126521, 126521], [126523, 126523], [126530, 126530], [126535, 126535], [126537, 126537], [126539, 126539], [126541, 126543], [126545, 126546], [126548, 126548], [126551, 126551], [126553, 126553], [126555, 126555], [126557, 126557], [126559, 126559], [126561, 126562], [126564, 126564], [126567, 126570], [126572, 126578], [126580, 126583], [126585, 126588], [126590, 126590], [126592, 126601], [126603, 126619], [126625, 126627], [126629, 126633], [126635, 126651], [1114109, 1114109]];

    function Yi(e) {
        for (var t = 0; t < Xi.length; t++) {
            var i = Xi[t];
            if (e >= i[0] && e <= i[1]) return !0
        }
        return !1
    }

    function Ki() {
    }

    Ki.prototype.applyStyles = function (e, t) {
        t = t || this.div;
        for (var i in e) e.hasOwnProperty(i) && (t.style[i] = e[i])
    }, Ki.prototype.formatStyle = function (e, t) {
        return 0 === e ? 0 : e + t
    };

    function $i(e, t, i) {
        Ki.call(this), this.cue = t, this.cueDiv = Wi(e, t.text);
        var n = {
            color: "rgba(255, 255, 255, 1)",
            backgroundColor: "rgba(0, 0, 0, 0.8)",
            position: "relative",
            left: 0,
            right: 0,
            top: 0,
            bottom: 0,
            display: "inline",
            writingMode: "" === t.vertical ? "horizontal-tb" : "lr" === t.vertical ? "vertical-lr" : "vertical-rl",
            unicodeBidi: "plaintext"
        };
        this.applyStyles(n, this.cueDiv), this.div = e.document.createElement("div"), n = {
            direction: function (e) {
                var t = [], i = "";
                if (!e || !e.childNodes) return "ltr";

                function n(e, t) {
                    for (var i = t.childNodes.length - 1; i >= 0; i--) e.push(t.childNodes[i])
                }

                function r(e) {
                    if (!e || !e.length) return null;
                    var t = e.pop(), i = t.textContent || t.innerText;
                    if (i) {
                        var a = i.match(/^.*(\n|\r)/);
                        return a ? (e.length = 0, a[0]) : i
                    }
                    return "ruby" === t.tagName ? r(e) : t.childNodes ? (n(e, t), r(e)) : void 0
                }

                for (n(t, e); i = r(t);) for (var a = 0; a < i.length; a++) if (Yi(i.charCodeAt(a))) return "rtl";
                return "ltr"
            }(this.cueDiv),
            writingMode: "" === t.vertical ? "horizontal-tb" : "lr" === t.vertical ? "vertical-lr" : "vertical-rl",
            unicodeBidi: "plaintext",
            textAlign: "middle" === t.align ? "center" : t.align,
            font: i.font,
            whiteSpace: "pre-line",
            position: "absolute"
        }, this.applyStyles(n), this.div.appendChild(this.cueDiv);
        var r = 0;
        switch (t.positionAlign) {
            case"start":
                r = t.position;
                break;
            case"middle":
                r = t.position - t.size / 2;
                break;
            case"end":
                r = t.position - t.size
        }
        "" === t.vertical ? this.applyStyles({
            left: this.formatStyle(r, "%"),
            width: this.formatStyle(t.size, "%")
        }) : this.applyStyles({
            top: this.formatStyle(r, "%"),
            height: this.formatStyle(t.size, "%")
        }), this.move = function (e) {
            this.applyStyles({
                top: this.formatStyle(e.top, "px"),
                bottom: this.formatStyle(e.bottom, "px"),
                left: this.formatStyle(e.left, "px"),
                right: this.formatStyle(e.right, "px"),
                height: this.formatStyle(e.height, "px"),
                width: this.formatStyle(e.width, "px")
            })
        }
    }

    $i.prototype = Mi(Ki.prototype), $i.prototype.constructor = $i;

    function Qi(e) {
        var t, i, n, r;
        if (e.div) {
            i = e.div.offsetHeight, n = e.div.offsetWidth, r = e.div.offsetTop;
            var a = (a = e.div.childNodes) && (a = a[0]) && a.getClientRects && a.getClientRects();
            e = e.div.getBoundingClientRect(), t = a ? Math.max(a[0] && a[0].height || 0, e.height / a.length) : 0
        }
        this.left = e.left, this.right = e.right, this.top = e.top || r, this.height = e.height || i, this.bottom = e.bottom || r + (e.height || i), this.width = e.width || n, this.lineHeight = void 0 !== t ? t : e.lineHeight
    }

    Qi.prototype.move = function (e, t) {
        switch (t = void 0 !== t ? t : this.lineHeight, e) {
            case"+x":
                this.left += t, this.right += t;
                break;
            case"-x":
                this.left -= t, this.right -= t;
                break;
            case"+y":
                this.top += t, this.bottom += t;
                break;
            case"-y":
                this.top -= t, this.bottom -= t
        }
    }, Qi.prototype.overlaps = function (e) {
        return this.left < e.right && this.right > e.left && this.top < e.bottom && this.bottom > e.top
    }, Qi.prototype.overlapsAny = function (e) {
        for (var t = 0; t < e.length; t++) if (this.overlaps(e[t])) return !0;
        return !1
    }, Qi.prototype.within = function (e) {
        return this.top >= e.top && this.bottom <= e.bottom && this.left >= e.left && this.right <= e.right
    }, Qi.prototype.overlapsOppositeAxis = function (e, t) {
        switch (t) {
            case"+x":
                return this.left < e.left;
            case"-x":
                return this.right > e.right;
            case"+y":
                return this.top < e.top;
            case"-y":
                return this.bottom > e.bottom
        }
    }, Qi.prototype.intersectPercentage = function (e) {
        return Math.max(0, Math.min(this.right, e.right) - Math.max(this.left, e.left)) * Math.max(0, Math.min(this.bottom, e.bottom) - Math.max(this.top, e.top)) / (this.height * this.width)
    }, Qi.prototype.toCSSCompatValues = function (e) {
        return {
            top: this.top - e.top,
            bottom: e.bottom - this.bottom,
            left: this.left - e.left,
            right: e.right - this.right,
            height: this.height,
            width: this.width
        }
    }, Qi.getSimpleBoxPosition = function (e) {
        var t = e.div ? e.div.offsetHeight : e.tagName ? e.offsetHeight : 0,
            i = e.div ? e.div.offsetWidth : e.tagName ? e.offsetWidth : 0,
            n = e.div ? e.div.offsetTop : e.tagName ? e.offsetTop : 0;
        return {
            left: (e = e.div ? e.div.getBoundingClientRect() : e.tagName ? e.getBoundingClientRect() : e).left,
            right: e.right,
            top: e.top || n,
            height: e.height || t,
            bottom: e.bottom || n + (e.height || t),
            width: e.width || i
        }
    };

    function Ji(e, t, i, n) {
        var r = new Qi(t), a = t.cue, s = function (e) {
            if ("number" == typeof e.line && (e.snapToLines || e.line >= 0 && e.line <= 100)) return e.line;
            if (!e.track || !e.track.textTrackList || !e.track.textTrackList.mediaElement) return -1;
            for (var t = e.track, i = t.textTrackList, n = 0, r = 0; r < i.length && i[r] !== t; r++) "showing" === i[r].mode && n++;
            return -1 * ++n
        }(a), o = [];
        if (a.snapToLines) {
            var u;
            switch (a.vertical) {
                case"":
                    o = ["+y", "-y"], u = "height";
                    break;
                case"rl":
                    o = ["+x", "-x"], u = "width";
                    break;
                case"lr":
                    o = ["-x", "+x"], u = "width"
            }
            var l = r.lineHeight, d = l * Math.round(s), c = i[u] + l, h = o[0];
            Math.abs(d) > c && (d = d < 0 ? -1 : 1, d *= Math.ceil(c / l) * l), s < 0 && (d += "" === a.vertical ? i.height : i.width, o = o.reverse()), r.move(h, d)
        } else {
            var f = r.lineHeight / i.height * 100;
            switch (a.lineAlign) {
                case"middle":
                    s -= f / 2;
                    break;
                case"end":
                    s -= f
            }
            switch (a.vertical) {
                case"":
                    t.applyStyles({top: t.formatStyle(s, "%")});
                    break;
                case"rl":
                    t.applyStyles({left: t.formatStyle(s, "%")});
                    break;
                case"lr":
                    t.applyStyles({right: t.formatStyle(s, "%")})
            }
            o = ["+y", "-x", "+x", "-y"], r = new Qi(t)
        }
        var p = function (e, t) {
            for (var r, a = new Qi(e), s = 1, o = 0; o < t.length; o++) {
                for (; e.overlapsOppositeAxis(i, t[o]) || e.within(i) && e.overlapsAny(n);) e.move(t[o]);
                if (e.within(i)) return e;
                var u = e.intersectPercentage(i);
                s > u && (r = new Qi(e), s = u), e = new Qi(a)
            }
            return r || a
        }(r, o);
        t.move(p.toCSSCompatValues(i))
    }

    function Zi() {
    }

    Zi.StringDecoder = function () {
        return {
            decode: function (e) {
                if (!e) return "";
                if ("string" != typeof e) throw new Error("Error - expected string data.");
                return decodeURIComponent(encodeURIComponent(e))
            }
        }
    }, Zi.convertCueToDOMTree = function (e, t) {
        return e && t ? Wi(e, t) : null
    };
    Zi.processCues = function (e, t, i) {
        if (!e || !t || !i) return null;
        for (; i.firstChild;) i.removeChild(i.firstChild);
        var n = e.document.createElement("div");
        n.style.position = "absolute", n.style.left = "0", n.style.right = "0", n.style.top = "0", n.style.bottom = "0", n.style.margin = "1.5%", i.appendChild(n);
        if (function (e) {
            for (var t = 0; t < e.length; t++) if (e[t].hasBeenReset || !e[t].displayState) return !0;
            return !1
        }(t)) {
            var r = [], a = Qi.getSimpleBoxPosition(n),
                s = {font: Math.round(.05 * a.height * 100) / 100 + "px sans-serif"};
            !function () {
                for (var i, o, u = 0; u < t.length; u++) o = t[u], i = new $i(e, o, s), n.appendChild(i.div), Ji(0, i, a, r), o.displayState = i.div, r.push(Qi.getSimpleBoxPosition(i))
            }()
        } else for (var o = 0; o < t.length; o++) n.appendChild(t[o].displayState)
    }, Zi.Parser = function (e, t, i) {
        i || (i = t, t = {}), t || (t = {}), this.window = e, this.vttjs = t, this.state = "INITIAL", this.buffer = "", this.decoder = i || new TextDecoder("utf8"), this.regionList = []
    }, Zi.Parser.prototype = {
        reportOrThrowError: function (e) {
            if (!(e instanceof Bi)) throw e;
            this.onparsingerror && this.onparsingerror(e)
        }, parse: function (e) {
            var t = this;
            e && (t.buffer += t.decoder.decode(e, {stream: !0}));

            function i() {
                for (var e = t.buffer, i = 0; i < e.length && "\r" !== e[i] && "\n" !== e[i];) ++i;
                var n = e.substr(0, i);
                return "\r" === e[i] && ++i, "\n" === e[i] && ++i, t.buffer = e.substr(i), n
            }

            function n(e) {
                e.match(/X-TIMESTAMP-MAP/) ? Fi(e, function (e, i) {
                    switch (e) {
                        case"X-TIMESTAMP-MAP":
                            !function (e) {
                                var i = new Ni;
                                Fi(e, function (e, t) {
                                    switch (e) {
                                        case"MPEGT":
                                            i.integer(e + "S", t);
                                            break;
                                        case"LOCA":
                                            i.set(e + "L", ji(t))
                                    }
                                }, /[^\d]:/, /,/), t.ontimestampmap && t.ontimestampmap({
                                    MPEGTS: i.get("MPEGTS"),
                                    LOCAL: i.get("LOCAL")
                                })
                            }(i)
                    }
                }, /=/) : Fi(e, function (e, i) {
                    switch (e) {
                        case"Region":
                            !function (e) {
                                var i = new Ni;
                                if (Fi(e, function (e, t) {
                                    switch (e) {
                                        case"id":
                                            i.set(e, t);
                                            break;
                                        case"width":
                                            i.percent(e, t);
                                            break;
                                        case"lines":
                                            i.integer(e, t);
                                            break;
                                        case"regionanchor":
                                        case"viewportanchor":
                                            var n = t.split(",");
                                            if (2 !== n.length) break;
                                            var r = new Ni;
                                            if (r.percent("x", n[0]), r.percent("y", n[1]), !r.has("x") || !r.has("y")) break;
                                            i.set(e + "X", r.get("x")), i.set(e + "Y", r.get("y"));
                                            break;
                                        case"scroll":
                                            i.alt(e, t, ["up"])
                                    }
                                }, /=/, /\s/), i.has("id")) {
                                    var n = new (t.vttjs.VTTRegion || t.window.VTTRegion);
                                    n.width = i.get("width", 100), n.lines = i.get("lines", 3), n.regionAnchorX = i.get("regionanchorX", 0), n.regionAnchorY = i.get("regionanchorY", 100), n.viewportAnchorX = i.get("viewportanchorX", 0), n.viewportAnchorY = i.get("viewportanchorY", 100), n.scroll = i.get("scroll", ""), t.onregion && t.onregion(n), t.regionList.push({
                                        id: i.get("id"),
                                        region: n
                                    })
                                }
                            }(i)
                    }
                }, /:/)
            }

            try {
                var r;
                if ("INITIAL" === t.state) {
                    if (!/\r\n|\n/.test(t.buffer)) return this;
                    var a = (r = i()).match(/^WEBVTT([ \t].*)?$/);
                    if (!a || !a[0]) throw new Bi(Bi.Errors.BadSignature);
                    t.state = "HEADER"
                }
                for (var s = !1; t.buffer;) {
                    if (!/\r\n|\n/.test(t.buffer)) return this;
                    switch (s ? s = !1 : r = i(), t.state) {
                        case"HEADER":
                            /:/.test(r) ? n(r) : r || (t.state = "ID");
                            continue;
                        case"NOTE":
                            r || (t.state = "ID");
                            continue;
                        case"ID":
                            if (/^NOTE($|[ \t])/.test(r)) {
                                t.state = "NOTE";
                                break
                            }
                            if (!r) continue;
                            if (t.cue = new (t.vttjs.VTTCue || t.window.VTTCue)(0, 0, ""), t.state = "CUE", -1 === r.indexOf("--\x3e")) {
                                t.cue.id = r;
                                continue
                            }
                        case"CUE":
                            try {
                                Vi(r, t.cue, t.regionList)
                            } catch (e) {
                                t.reportOrThrowError(e), t.cue = null, t.state = "BADCUE";
                                continue
                            }
                            t.state = "CUETEXT";
                            continue;
                        case"CUETEXT":
                            var o = -1 !== r.indexOf("--\x3e");
                            if (!r || o && (s = !0)) {
                                t.oncue && t.oncue(t.cue), t.cue = null, t.state = "ID";
                                continue
                            }
                            t.cue.text && (t.cue.text += "\n"), t.cue.text += r;
                            continue;
                        case"BADCUE":
                            r || (t.state = "ID");
                            continue
                    }
                }
            } catch (e) {
                t.reportOrThrowError(e), "CUETEXT" === t.state && t.cue && t.oncue && t.oncue(t.cue), t.cue = null, t.state = "INITIAL" === t.state ? "BADWEBVTT" : "BADCUE"
            }
            return this
        }, flush: function () {
            try {
                if (this.buffer += this.decoder.decode(), (this.cue || "HEADER" === this.state) && (this.buffer += "\n\n", this.parse()), "INITIAL" === this.state) throw new Bi(Bi.Errors.BadSignature)
            } catch (e) {
                this.reportOrThrowError(e)
            }
            return this.onflush && this.onflush(), this
        }
    };
    var en = Zi, tn = Object.freeze({default: en, __moduleExports: en}), nn = "auto", rn = {"": 1, lr: 1, rl: 1},
        an = {start: 1, middle: 1, end: 1, left: 1, right: 1};

    function sn(e) {
        if ("string" != typeof e) return !1;
        return !!an[e.toLowerCase()] && e.toLowerCase()
    }

    function on(e, t, i) {
        this.hasBeenReset = !1;
        var n = "", r = !1, a = e, s = t, o = i, u = null, l = "", d = !0, c = "auto", h = "start", f = 50,
            p = "middle", m = 50, g = "middle";
        Object.defineProperties(this, {
            id: {
                enumerable: !0, get: function () {
                    return n
                }, set: function (e) {
                    n = "" + e
                }
            }, pauseOnExit: {
                enumerable: !0, get: function () {
                    return r
                }, set: function (e) {
                    r = !!e
                }
            }, startTime: {
                enumerable: !0, get: function () {
                    return a
                }, set: function (e) {
                    if ("number" != typeof e) throw new TypeError("Start time must be set to a number.");
                    a = e, this.hasBeenReset = !0
                }
            }, endTime: {
                enumerable: !0, get: function () {
                    return s
                }, set: function (e) {
                    if ("number" != typeof e) throw new TypeError("End time must be set to a number.");
                    s = e, this.hasBeenReset = !0
                }
            }, text: {
                enumerable: !0, get: function () {
                    return o
                }, set: function (e) {
                    o = "" + e, this.hasBeenReset = !0
                }
            }, region: {
                enumerable: !0, get: function () {
                    return u
                }, set: function (e) {
                    u = e, this.hasBeenReset = !0
                }
            }, vertical: {
                enumerable: !0, get: function () {
                    return l
                }, set: function (e) {
                    var t, i = (t = e, "string" == typeof t && !!rn[t.toLowerCase()] && t.toLowerCase());
                    if (!1 === i) throw new SyntaxError("An invalid or illegal string was specified.");
                    l = i, this.hasBeenReset = !0
                }
            }, snapToLines: {
                enumerable: !0, get: function () {
                    return d
                }, set: function (e) {
                    d = !!e, this.hasBeenReset = !0
                }
            }, line: {
                enumerable: !0, get: function () {
                    return c
                }, set: function (e) {
                    if ("number" != typeof e && e !== nn) throw new SyntaxError("An invalid number or illegal string was specified.");
                    c = e, this.hasBeenReset = !0
                }
            }, lineAlign: {
                enumerable: !0, get: function () {
                    return h
                }, set: function (e) {
                    var t = sn(e);
                    if (!t) throw new SyntaxError("An invalid or illegal string was specified.");
                    h = t, this.hasBeenReset = !0
                }
            }, position: {
                enumerable: !0, get: function () {
                    return f
                }, set: function (e) {
                    if (e < 0 || e > 100) throw new Error("Position must be between 0 and 100.");
                    f = e, this.hasBeenReset = !0
                }
            }, positionAlign: {
                enumerable: !0, get: function () {
                    return p
                }, set: function (e) {
                    var t = sn(e);
                    if (!t) throw new SyntaxError("An invalid or illegal string was specified.");
                    p = t, this.hasBeenReset = !0
                }
            }, size: {
                enumerable: !0, get: function () {
                    return m
                }, set: function (e) {
                    if (e < 0 || e > 100) throw new Error("Size must be between 0 and 100.");
                    m = e, this.hasBeenReset = !0
                }
            }, align: {
                enumerable: !0, get: function () {
                    return g
                }, set: function (e) {
                    var t = sn(e);
                    if (!t) throw new SyntaxError("An invalid or illegal string was specified.");
                    g = t, this.hasBeenReset = !0
                }
            }
        }), this.displayState = void 0
    }

    on.prototype.getCueAsHTML = function () {
        return WebVTT.convertCueToDOMTree(window, this.text)
    };
    var un = on, ln = Object.freeze({default: un, __moduleExports: un}), dn = {"": !0, up: !0};

    function cn(e) {
        return "number" == typeof e && e >= 0 && e <= 100
    }

    var hn = function () {
            var e = 100, t = 3, i = 0, n = 100, r = 0, a = 100, s = "";
            Object.defineProperties(this, {
                width: {
                    enumerable: !0, get: function () {
                        return e
                    }, set: function (t) {
                        if (!cn(t)) throw new Error("Width must be between 0 and 100.");
                        e = t
                    }
                }, lines: {
                    enumerable: !0, get: function () {
                        return t
                    }, set: function (e) {
                        if ("number" != typeof e) throw new TypeError("Lines must be set to a number.");
                        t = e
                    }
                }, regionAnchorY: {
                    enumerable: !0, get: function () {
                        return n
                    }, set: function (e) {
                        if (!cn(e)) throw new Error("RegionAnchorX must be between 0 and 100.");
                        n = e
                    }
                }, regionAnchorX: {
                    enumerable: !0, get: function () {
                        return i
                    }, set: function (e) {
                        if (!cn(e)) throw new Error("RegionAnchorY must be between 0 and 100.");
                        i = e
                    }
                }, viewportAnchorY: {
                    enumerable: !0, get: function () {
                        return a
                    }, set: function (e) {
                        if (!cn(e)) throw new Error("ViewportAnchorY must be between 0 and 100.");
                        a = e
                    }
                }, viewportAnchorX: {
                    enumerable: !0, get: function () {
                        return r
                    }, set: function (e) {
                        if (!cn(e)) throw new Error("ViewportAnchorX must be between 0 and 100.");
                        r = e
                    }
                }, scroll: {
                    enumerable: !0, get: function () {
                        return s
                    }, set: function (e) {
                        var t, i = (t = e, "string" == typeof t && !!dn[t.toLowerCase()] && t.toLowerCase());
                        if (!1 === i) throw new SyntaxError("An invalid or illegal string was specified.");
                        s = i
                    }
                }
            })
        }, fn = Object.freeze({default: hn, __moduleExports: hn}), pn = tn && en || tn, mn = ln && un || ln,
        gn = fn && hn || fn, yn = i(function (e) {
            var t = e.exports = {WebVTT: pn, VTTCue: mn, VTTRegion: gn};
            r.vttjs = t, r.WebVTT = t.WebVTT;
            var i = t.VTTCue, n = t.VTTRegion, a = r.VTTCue, s = r.VTTRegion;
            t.shim = function () {
                r.VTTCue = i, r.VTTRegion = n
            }, t.restore = function () {
                r.VTTCue = a, r.VTTRegion = s
            }, r.VTTCue || t.shim()
        });
    yn.WebVTT, yn.VTTCue, yn.VTTRegion;
    var _n = function (e) {
        _(t, e);

        function t() {
            var i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : function () {
                };
            y(this, t), i.reportTouchActivity = !1;
            var r = v(this, e.call(this, null, i, n));
            return r.hasStarted_ = !1, r.on("playing", function () {
                this.hasStarted_ = !0
            }), r.on("loadstart", function () {
                this.hasStarted_ = !1
            }), Ui.names.forEach(function (e) {
                var t = Ui[e];
                i && i[t.getterName] && (r[t.privateName] = i[t.getterName])
            }), r.featuresProgressEvents || r.manualProgressOn(), r.featuresTimeupdateEvents || r.manualTimeUpdatesOn(), ["Text", "Audio", "Video"].forEach(function (e) {
                !1 === i["native" + e + "Tracks"] && (r["featuresNative" + e + "Tracks"] = !1)
            }), !1 === i.nativeCaptions || !1 === i.nativeTextTracks ? r.featuresNativeTextTracks = !1 : !0 !== i.nativeCaptions && !0 !== i.nativeTextTracks || (r.featuresNativeTextTracks = !0), r.featuresNativeTextTracks || r.emulateTextTracks(), r.autoRemoteTextTracks_ = new Ui.text.ListClass, r.initTrackListeners(), i.nativeControlsForTouch || r.emitTapEvents(), r.constructor && (r.name_ = r.constructor.name || "Unknown Tech"), r
        }

        return t.prototype.triggerSourceset = function (e) {
            var t = this;
            this.isReady_ || this.one("ready", function () {
                return t.setTimeout(function () {
                    return t.triggerSourceset(e)
                }, 1)
            }), this.trigger({src: e, type: "sourceset"})
        }, t.prototype.manualProgressOn = function () {
            this.on("durationchange", this.onDurationChange), this.manualProgress = !0, this.one("ready", this.trackProgress)
        }, t.prototype.manualProgressOff = function () {
            this.manualProgress = !1, this.stopTrackingProgress(), this.off("durationchange", this.onDurationChange)
        }, t.prototype.trackProgress = function (e) {
            this.stopTrackingProgress(), this.progressInterval = this.setInterval(Ie(this, function () {
                var e = this.bufferedPercent();
                this.bufferedPercent_ !== e && this.trigger("progress"), this.bufferedPercent_ = e, 1 === e && this.stopTrackingProgress()
            }), 500)
        }, t.prototype.onDurationChange = function (e) {
            this.duration_ = this.duration()
        }, t.prototype.buffered = function () {
            return yt(0, 0)
        }, t.prototype.bufferedPercent = function () {
            return _t(this.buffered(), this.duration_)
        }, t.prototype.stopTrackingProgress = function () {
            this.clearInterval(this.progressInterval)
        }, t.prototype.manualTimeUpdatesOn = function () {
            this.manualTimeUpdates = !0, this.on("play", this.trackCurrentTime), this.on("pause", this.stopTrackingCurrentTime)
        }, t.prototype.manualTimeUpdatesOff = function () {
            this.manualTimeUpdates = !1, this.stopTrackingCurrentTime(), this.off("play", this.trackCurrentTime), this.off("pause", this.stopTrackingCurrentTime)
        }, t.prototype.trackCurrentTime = function () {
            this.currentTimeInterval && this.stopTrackingCurrentTime(), this.currentTimeInterval = this.setInterval(function () {
                this.trigger({type: "timeupdate", target: this, manuallyTriggered: !0})
            }, 250)
        }, t.prototype.stopTrackingCurrentTime = function () {
            this.clearInterval(this.currentTimeInterval), this.trigger({
                type: "timeupdate",
                target: this,
                manuallyTriggered: !0
            })
        }, t.prototype.dispose = function () {
            this.clearTracks(xi.names), this.manualProgress && this.manualProgressOff(), this.manualTimeUpdates && this.manualTimeUpdatesOff(), e.prototype.dispose.call(this)
        }, t.prototype.clearTracks = function (e) {
            var t = this;
            (e = [].concat(e)).forEach(function (e) {
                for (var i = t[e + "Tracks"]() || [], n = i.length; n--;) {
                    var r = i[n];
                    "text" === e && t.removeRemoteTextTrack(r), i.removeTrack(r)
                }
            })
        }, t.prototype.cleanupAutoTextTracks = function () {
            for (var e = this.autoRemoteTextTracks_ || [], t = e.length; t--;) {
                var i = e[t];
                this.removeRemoteTextTrack(i)
            }
        }, t.prototype.reset = function () {
        }, t.prototype.error = function (e) {
            return void 0 !== e && (this.error_ = new Et(e), this.trigger("error")), this.error_
        }, t.prototype.played = function () {
            return this.hasStarted_ ? yt(0, 0) : yt()
        }, t.prototype.setCurrentTime = function () {
            this.manualTimeUpdates && this.trigger({type: "timeupdate", target: this, manuallyTriggered: !0})
        }, t.prototype.initTrackListeners = function () {
            var e = this;
            xi.names.forEach(function (t) {
                var i = xi[t], n = function () {
                    e.trigger(t + "trackchange")
                }, r = e[i.getterName]();
                r.addEventListener("removetrack", n), r.addEventListener("addtrack", n), e.on("dispose", function () {
                    r.removeEventListener("removetrack", n), r.removeEventListener("addtrack", n)
                })
            })
        }, t.prototype.addWebVttScript_ = function () {
            var e = this;
            if (!r.WebVTT) if (l.body.contains(this.el())) {
                if (!this.options_["vtt.js"] && C(yn) && Object.keys(yn).length > 0) return void this.trigger("vttjsloaded");
                var t = l.createElement("script");
                t.src = this.options_["vtt.js"] || "https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js", t.onload = function () {
                    e.trigger("vttjsloaded")
                }, t.onerror = function () {
                    e.trigger("vttjserror")
                }, this.on("dispose", function () {
                    t.onload = null, t.onerror = null
                }), r.WebVTT = !0, this.el().parentNode.appendChild(t)
            } else this.ready(this.addWebVttScript_)
        }, t.prototype.emulateTextTracks = function () {
            var e = this, t = this.textTracks(), i = this.remoteTextTracks(), n = function (e) {
                return t.addTrack(e.track)
            }, r = function (e) {
                return t.removeTrack(e.track)
            };
            i.on("addtrack", n), i.on("removetrack", r), this.addWebVttScript_();
            var a = function () {
                return e.trigger("texttrackchange")
            }, s = function () {
                a();
                for (var e = 0; e < t.length; e++) {
                    var i = t[e];
                    i.removeEventListener("cuechange", a), "showing" === i.mode && i.addEventListener("cuechange", a)
                }
            };
            s(), t.addEventListener("change", s), t.addEventListener("addtrack", s), t.addEventListener("removetrack", s), this.on("dispose", function () {
                i.off("addtrack", n), i.off("removetrack", r), t.removeEventListener("change", s), t.removeEventListener("addtrack", s), t.removeEventListener("removetrack", s);
                for (var e = 0; e < t.length; e++) {
                    t[e].removeEventListener("cuechange", a)
                }
            })
        }, t.prototype.addTextTrack = function (e, t, i) {
            if (!e) throw new Error("TextTrack kind is required but was not provided");
            return function (e, t, i, n) {
                var r = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {}, a = e.textTracks();
                r.kind = t, i && (r.label = i), n && (r.language = n), r.tech = e;
                var s = new Ui.text.TrackClass(r);
                return a.addTrack(s), s
            }(this, e, t, i)
        }, t.prototype.createRemoteTextTrack = function (e) {
            var t = Xe(e, {tech: this});
            return new Di.remoteTextEl.TrackClass(t)
        }, t.prototype.addRemoteTextTrack = function () {
            var e = this, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, i = arguments[1],
                n = this.createRemoteTextTrack(t);
            return !0 !== i && !1 !== i && (p.warn('Calling addRemoteTextTrack without explicitly setting the "manualCleanup" parameter to `true` is deprecated and default to `false` in future version of video.js'), i = !0), this.remoteTextTrackEls().addTrackElement_(n), this.remoteTextTracks().addTrack(n.track), !0 !== i && this.ready(function () {
                return e.autoRemoteTextTracks_.addTrack(n.track)
            }), n
        }, t.prototype.removeRemoteTextTrack = function (e) {
            var t = this.remoteTextTrackEls().getTrackElementByTrack_(e);
            this.remoteTextTrackEls().removeTrackElement_(t), this.remoteTextTracks().removeTrack(e), this.autoRemoteTextTracks_.removeTrack(e)
        }, t.prototype.getVideoPlaybackQuality = function () {
            return {}
        }, t.prototype.setPoster = function () {
        }, t.prototype.playsinline = function () {
        }, t.prototype.setPlaysinline = function () {
        }, t.prototype.overrideNativeAudioTracks = function () {
        }, t.prototype.overrideNativeVideoTracks = function () {
        }, t.prototype.canPlayType = function () {
            return ""
        }, t.canPlayType = function () {
            return ""
        }, t.canPlaySource = function (e, i) {
            return t.canPlayType(e.type)
        }, t.isTech = function (e) {
            return e.prototype instanceof t || e instanceof t || e === t
        }, t.registerTech = function (e, i) {
            if (t.techs_ || (t.techs_ = {}), !t.isTech(i)) throw new Error("Tech " + e + " must be a Tech");
            if (!t.canPlayType) throw new Error("Techs must have a static canPlayType method on them");
            if (!t.canPlaySource) throw new Error("Techs must have a static canPlaySource method on them");
            return e = We(e), t.techs_[e] = i, "Tech" !== e && t.defaultTechOrder_.push(e), i
        }, t.getTech = function (e) {
            if (e) return e = We(e), t.techs_ && t.techs_[e] ? t.techs_[e] : r && r.videojs && r.videojs[e] ? (p.warn("The " + e + " tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)"), r.videojs[e]) : void 0
        }, t
    }(Ye);
    Ui.names.forEach(function (e) {
        var t = Ui[e];
        _n.prototype[t.getterName] = function () {
            return this[t.privateName] = this[t.privateName] || new t.ListClass, this[t.privateName]
        }
    }), _n.prototype.featuresVolumeControl = !0, _n.prototype.featuresMuteControl = !0, _n.prototype.featuresFullscreenResize = !1, _n.prototype.featuresPlaybackRate = !1, _n.prototype.featuresProgressEvents = !1, _n.prototype.featuresSourceset = !1, _n.prototype.featuresTimeupdateEvents = !1, _n.prototype.featuresNativeTextTracks = !1, _n.withSourceHandlers = function (e) {
        e.registerSourceHandler = function (t, i) {
            var n = e.sourceHandlers;
            n || (n = e.sourceHandlers = []), void 0 === i && (i = n.length), n.splice(i, 0, t)
        }, e.canPlayType = function (t) {
            for (var i = e.sourceHandlers || [], n = void 0, r = 0; r < i.length; r++) if (n = i[r].canPlayType(t)) return n;
            return ""
        }, e.selectSourceHandler = function (t, i) {
            for (var n = e.sourceHandlers || [], r = 0; r < n.length; r++) if (n[r].canHandleSource(t, i)) return n[r];
            return null
        }, e.canPlaySource = function (t, i) {
            var n = e.selectSourceHandler(t, i);
            return n ? n.canHandleSource(t, i) : ""
        };
        ["seekable", "seeking", "duration"].forEach(function (e) {
            var t = this[e];
            "function" == typeof t && (this[e] = function () {
                return this.sourceHandler_ && this.sourceHandler_[e] ? this.sourceHandler_[e].apply(this.sourceHandler_, arguments) : t.apply(this, arguments)
            })
        }, e.prototype), e.prototype.setSource = function (t) {
            var i = e.selectSourceHandler(t, this.options_);
            i || (e.nativeSourceHandler ? i = e.nativeSourceHandler : p.error("No source handler found for the current source.")), this.disposeSourceHandler(), this.off("dispose", this.disposeSourceHandler), i !== e.nativeSourceHandler && (this.currentSource_ = t), this.sourceHandler_ = i.handleSource(t, this, this.options_), this.on("dispose", this.disposeSourceHandler)
        }, e.prototype.disposeSourceHandler = function () {
            this.currentSource_ && (this.clearTracks(["audio", "video"]), this.currentSource_ = null), this.cleanupAutoTextTracks(), this.sourceHandler_ && (this.sourceHandler_.dispose && this.sourceHandler_.dispose(), this.sourceHandler_ = null)
        }
    }, Ye.registerComponent("Tech", _n), _n.registerTech("Tech", _n), _n.defaultTechOrder_ = [];
    var vn = {}, bn = {}, Tn = {};

    function Sn(e, t, i) {
        e.setTimeout(function () {
            return function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                var n = arguments[2];
                var r = arguments[3];
                var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [];
                var s = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];
                var o = i[0], u = i.slice(1);
                if ("string" == typeof o) e(t, vn[o], n, r, a, s); else if (o) {
                    var l = function (e, t) {
                        var i = bn[e.id()], n = null;
                        if (void 0 === i || null === i) return n = t(e), bn[e.id()] = [[t, n]], n;
                        for (var r = 0; r < i.length; r++) {
                            var a = i[r], s = a[0], o = a[1];
                            s === t && (n = o)
                        }
                        null === n && (n = t(e), i.push([t, n]));
                        return n
                    }(r, o);
                    if (!l.setSource) return a.push(l), e(t, u, n, r, a, s);
                    l.setSource(w({}, t), function (i, o) {
                        if (i) return e(t, u, n, r, a, s);
                        a.push(l), e(o, t.type === o.type ? u : vn[o.type], n, r, a, s)
                    })
                } else u.length ? e(t, u, n, r, a, s) : s ? n(t, a) : e(t, vn["*"], n, r, a, !0)
            }(t, vn[t.type], i, e)
        }, 1)
    }

    function kn(e, t, i) {
        var n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null, r = "call" + We(i),
            a = e.reduce(An(r), n), s = a === Tn, o = s ? null : t[i](a);
        return function (e, t, i, n) {
            for (var r = e.length - 1; r >= 0; r--) {
                var a = e[r];
                a[t] && a[t](n, i)
            }
        }(e, i, o, s), o
    }

    var wn = {buffered: 1, currentTime: 1, duration: 1, seekable: 1, played: 1, paused: 1}, En = {setCurrentTime: 1},
        Cn = {play: 1, pause: 1};

    function An(e) {
        return function (t, i) {
            return t === Tn ? Tn : i[e] ? i[e](t) : t
        }
    }

    var Ln = {
        opus: "video/ogg",
        ogv: "video/ogg",
        mp4: "video/mp4",
        mov: "video/mp4",
        m4v: "video/mp4",
        mkv: "video/x-matroska",
        mp3: "audio/mpeg",
        aac: "audio/aac",
        oga: "audio/ogg",
        m3u8: "application/x-mpegURL"
    }, On = function () {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", t = Qt(e);
        return Ln[t.toLowerCase()] || ""
    };

    function In(e) {
        var t = On(e.src);
        return !e.type && t && (e.type = t), e
    }

    var Pn = function (e) {
        _(t, e);

        function t(i, n, r) {
            y(this, t);
            var a = Xe({createEl: !1}, n), s = v(this, e.call(this, i, a, r));
            if (n.playerOptions.sources && 0 !== n.playerOptions.sources.length) i.src(n.playerOptions.sources); else for (var o = 0, u = n.playerOptions.techOrder; o < u.length; o++) {
                var l = We(u[o]), d = _n.getTech(l);
                if (l || (d = Ye.getComponent(l)), d && d.isSupported()) {
                    i.loadTech_(l);
                    break
                }
            }
            return s
        }

        return t
    }(Ye);
    Ye.registerComponent("MediaLoader", Pn);
    var Rn = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.emitTapEvents(), r.enable(), r
        }

        return t.prototype.createEl = function () {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "div",
                i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            i = w({
                innerHTML: '<span aria-hidden="true" class="vjs-icon-placeholder"></span>',
                className: this.buildCSSClass(),
                tabIndex: 0
            }, i), "button" === t && p.error("Creating a ClickableComponent with an HTML element of " + t + " is not supported; use a Button instead."), n = w({role: "button"}, n), this.tabIndex_ = i.tabIndex;
            var r = e.prototype.createEl.call(this, t, i, n);
            return this.createControlTextEl(r), r
        }, t.prototype.dispose = function () {
            this.controlTextEl_ = null, e.prototype.dispose.call(this)
        }, t.prototype.createControlTextEl = function (e) {
            return this.controlTextEl_ = U("span", {className: "vjs-control-text"}, {"aria-live": "polite"}), e && e.appendChild(this.controlTextEl_), this.controlText(this.controlText_, e), this.controlTextEl_
        }, t.prototype.controlText = function (e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.el();
            if (void 0 === e) return this.controlText_ || "Need Text";
            var i = this.localize(e);
            this.controlText_ = e, M(this.controlTextEl_, i), this.nonIconControl || t.setAttribute("title", i)
        }, t.prototype.buildCSSClass = function () {
            return "vjs-control vjs-button " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.enable = function () {
            this.enabled_ || (this.enabled_ = !0, this.removeClass("vjs-disabled"), this.el_.setAttribute("aria-disabled", "false"), void 0 !== this.tabIndex_ && this.el_.setAttribute("tabIndex", this.tabIndex_), this.on(["tap", "click"], this.handleClick), this.on("focus", this.handleFocus), this.on("blur", this.handleBlur))
        }, t.prototype.disable = function () {
            this.enabled_ = !1, this.addClass("vjs-disabled"), this.el_.setAttribute("aria-disabled", "true"), void 0 !== this.tabIndex_ && this.el_.removeAttribute("tabIndex"), this.off(["tap", "click"], this.handleClick), this.off("focus", this.handleFocus), this.off("blur", this.handleBlur)
        }, t.prototype.handleClick = function (e) {
        }, t.prototype.handleFocus = function (e) {
            ve(l, "keydown", Ie(this, this.handleKeyPress))
        }, t.prototype.handleKeyPress = function (t) {
            32 === t.which || 13 === t.which ? (t.preventDefault(), this.trigger("click")) : e.prototype.handleKeyPress && e.prototype.handleKeyPress.call(this, t)
        }, t.prototype.handleBlur = function (e) {
            be(l, "keydown", Ie(this, this.handleKeyPress))
        }, t
    }(Ye);
    Ye.registerComponent("ClickableComponent", Rn);
    var xn = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.update(), i.on("posterchange", Ie(r, r.update)), r
        }

        return t.prototype.dispose = function () {
            this.player().off("posterchange", this.update), e.prototype.dispose.call(this)
        }, t.prototype.createEl = function () {
            return U("div", {className: "vjs-poster", tabIndex: -1})
        }, t.prototype.update = function (e) {
            var t = this.player().poster();
            this.setSrc(t), t ? this.show() : this.hide()
        }, t.prototype.setSrc = function (e) {
            var t = "";
            e && (t = 'url("' + e + '")'), this.el_.style.backgroundImage = t
        }, t.prototype.handleClick = function (e) {
            this.player_.controls() && (this.player_.paused() ? Ot(this.player_.play()) : this.player_.pause())
        }, t
    }(Rn);
    Ye.registerComponent("PosterImage", xn);
    var Dn = {
        monospace: "monospace",
        sansSerif: "sans-serif",
        serif: "serif",
        monospaceSansSerif: '"Andale Mono", "Lucida Console", monospace',
        monospaceSerif: '"Courier New", monospace',
        proportionalSansSerif: "sans-serif",
        proportionalSerif: "serif",
        casual: '"Comic Sans MS", Impact, fantasy',
        script: '"Monotype Corsiva", cursive',
        smallcaps: '"Andale Mono", "Lucida Console", monospace, sans-serif'
    };

    function Un(e, t) {
        var i = void 0;
        if (4 === e.length) i = e[1] + e[1] + e[2] + e[2] + e[3] + e[3]; else {
            if (7 !== e.length) throw new Error("Invalid color code provided, " + e + "; must be formatted as e.g. #f0e or #f604e2.");
            i = e.slice(1)
        }
        return "rgba(" + parseInt(i.slice(0, 2), 16) + "," + parseInt(i.slice(2, 4), 16) + "," + parseInt(i.slice(4, 6), 16) + "," + t + ")"
    }

    function Mn(e, t, i) {
        try {
            e.style[t] = i
        } catch (e) {
            return
        }
    }

    var Bn = function (e) {
        _(t, e);

        function t(i, n, a) {
            y(this, t);
            var s = v(this, e.call(this, i, n, a)), o = Ie(s, s.updateDisplay);
            return i.on("loadstart", Ie(s, s.toggleDisplay)), i.on("texttrackchange", o), i.on("loadstart", Ie(s, s.preselectTrack)), i.ready(Ie(s, function () {
                if (i.tech_ && i.tech_.featuresNativeTextTracks) this.hide(); else {
                    i.on("fullscreenchange", o), i.on("playerresize", o), r.addEventListener("orientationchange", o), i.on("dispose", function () {
                        return r.removeEventListener("orientationchange", o)
                    });
                    for (var e = this.options_.playerOptions.tracks || [], t = 0; t < e.length; t++) this.player_.addRemoteTextTrack(e[t], !0);
                    this.preselectTrack()
                }
            })), s
        }

        return t.prototype.preselectTrack = function () {
            for (var e = {
                captions: 1,
                subtitles: 1
            }, t = this.player_.textTracks(), i = this.player_.cache_.selectedLanguage, n = void 0, r = void 0, a = void 0, s = 0; s < t.length; s++) {
                var o = t[s];
                i && i.enabled && i.language === o.language ? o.kind === i.kind ? a = o : a || (a = o) : i && !i.enabled ? (a = null, n = null, r = null) : o.default && ("descriptions" !== o.kind || n ? o.kind in e && !r && (r = o) : n = o)
            }
            a ? a.mode = "showing" : r ? r.mode = "showing" : n && (n.mode = "showing")
        }, t.prototype.toggleDisplay = function () {
            this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks ? this.hide() : this.show()
        }, t.prototype.createEl = function () {
            return e.prototype.createEl.call(this, "div", {className: "vjs-text-track-display"}, {
                "aria-live": "off",
                "aria-atomic": "true"
            })
        }, t.prototype.clearDisplay = function () {
            "function" == typeof r.WebVTT && r.WebVTT.processCues(r, [], this.el_)
        }, t.prototype.updateDisplay = function () {
            var e = this.player_.textTracks();
            this.clearDisplay();
            for (var t = null, i = null, n = e.length; n--;) {
                var r = e[n];
                "showing" === r.mode && ("descriptions" === r.kind ? t = r : i = r)
            }
            i ? ("off" !== this.getAttribute("aria-live") && this.setAttribute("aria-live", "off"), this.updateForTrack(i)) : t && ("assertive" !== this.getAttribute("aria-live") && this.setAttribute("aria-live", "assertive"), this.updateForTrack(t))
        }, t.prototype.updateForTrack = function (e) {
            if ("function" == typeof r.WebVTT && e.activeCues) {
                for (var t = [], i = 0; i < e.activeCues.length; i++) t.push(e.activeCues[i]);
                if (r.WebVTT.processCues(r, t, this.el_), this.player_.textTrackSettings) for (var n = this.player_.textTrackSettings.getValues(), a = t.length; a--;) {
                    var s = t[a];
                    if (s) {
                        var o = s.displayState;
                        if (n.color && (o.firstChild.style.color = n.color), n.textOpacity && Mn(o.firstChild, "color", Un(n.color || "#fff", n.textOpacity)), n.backgroundColor && (o.firstChild.style.backgroundColor = n.backgroundColor), n.backgroundOpacity && Mn(o.firstChild, "backgroundColor", Un(n.backgroundColor || "#000", n.backgroundOpacity)), n.windowColor && (n.windowOpacity ? Mn(o, "backgroundColor", Un(n.windowColor, n.windowOpacity)) : o.style.backgroundColor = n.windowColor), n.edgeStyle && ("dropshadow" === n.edgeStyle ? o.firstChild.style.textShadow = "2px 2px 3px #222, 2px 2px 4px #222, 2px 2px 5px #222" : "raised" === n.edgeStyle ? o.firstChild.style.textShadow = "1px 1px #222, 2px 2px #222, 3px 3px #222" : "depressed" === n.edgeStyle ? o.firstChild.style.textShadow = "1px 1px #ccc, 0 1px #ccc, -1px -1px #222, 0 -1px #222" : "uniform" === n.edgeStyle && (o.firstChild.style.textShadow = "0 0 4px #222, 0 0 4px #222, 0 0 4px #222, 0 0 4px #222")), n.fontPercent && 1 !== n.fontPercent) {
                            var u = r.parseFloat(o.style.fontSize);
                            o.style.fontSize = u * n.fontPercent + "px", o.style.height = "auto", o.style.top = "auto", o.style.bottom = "2px"
                        }
                        n.fontFamily && "default" !== n.fontFamily && ("small-caps" === n.fontFamily ? o.firstChild.style.fontVariant = "small-caps" : o.firstChild.style.fontFamily = Dn[n.fontFamily])
                    }
                }
            }
        }, t
    }(Ye);
    Ye.registerComponent("TextTrackDisplay", Bn);
    var jn = function (e) {
        _(t, e);

        function t() {
            return y(this, t), v(this, e.apply(this, arguments))
        }

        return t.prototype.createEl = function () {
            var t = this.player_.isAudio(), i = this.localize(t ? "Audio Player" : "Video Player"),
                n = U("span", {className: "vjs-control-text", innerHTML: this.localize("{1} is loading.", [i])}),
                r = e.prototype.createEl.call(this, "div", {className: "vjs-loading-spinner", dir: "ltr"});
            return r.appendChild(n), r
        }, t
    }(Ye);
    Ye.registerComponent("LoadingSpinner", jn);
    var Nn = function (e) {
        _(t, e);

        function t() {
            return y(this, t), v(this, e.apply(this, arguments))
        }

        return t.prototype.createEl = function (e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            t = w({
                innerHTML: '<span aria-hidden="true" class="vjs-icon-placeholder"></span>',
                className: this.buildCSSClass()
            }, t), i = w({type: "button"}, i);
            var n = Ye.prototype.createEl.call(this, "button", t, i);
            return this.createControlTextEl(n), n
        }, t.prototype.addChild = function (e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, i = this.constructor.name;
            return p.warn("Adding an actionable (user controllable) child to a Button (" + i + ") is not supported; use a ClickableComponent instead."), Ye.prototype.addChild.call(this, e, t)
        }, t.prototype.enable = function () {
            e.prototype.enable.call(this), this.el_.removeAttribute("disabled")
        }, t.prototype.disable = function () {
            e.prototype.disable.call(this), this.el_.setAttribute("disabled", "disabled")
        }, t.prototype.handleKeyPress = function (t) {
            32 !== t.which && 13 !== t.which && e.prototype.handleKeyPress.call(this, t)
        }, t
    }(Rn);
    Ye.registerComponent("Button", Nn);
    var Fn = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.mouseused_ = !1, r.on("mousedown", r.handleMouseDown), r
        }

        return t.prototype.buildCSSClass = function () {
            return "vjs-big-play-button"
        }, t.prototype.handleClick = function (e) {
            var t = this.player_.play();
            if (this.mouseused_ && e.clientX && e.clientY) Ot(t); else {
                var i = this.player_.getChild("controlBar"), n = i && i.getChild("playToggle");
                if (n) {
                    var r = function () {
                        return n.focus()
                    };
                    Lt(t) ? t.then(r, function () {
                    }) : this.setTimeout(r, 1)
                } else this.player_.focus()
            }
        }, t.prototype.handleKeyPress = function (t) {
            this.mouseused_ = !1, e.prototype.handleKeyPress.call(this, t)
        }, t.prototype.handleMouseDown = function (e) {
            this.mouseused_ = !0
        }, t
    }(Nn);
    Fn.prototype.controlText_ = "Play Video", Ye.registerComponent("BigPlayButton", Fn);
    var Vn = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.controlText(n && n.controlText || r.localize("Close")), r
        }

        return t.prototype.buildCSSClass = function () {
            return "vjs-close-button " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.handleClick = function (e) {
            this.trigger({type: "close", bubbles: !1})
        }, t
    }(Nn);
    Ye.registerComponent("CloseButton", Vn);
    var Gn = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.on(i, "play", r.handlePlay), r.on(i, "pause", r.handlePause), r.on(i, "ended", r.handleEnded), r
        }

        return t.prototype.buildCSSClass = function () {
            return "vjs-play-control " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.handleClick = function (e) {
            this.player_.paused() ? this.player_.play() : this.player_.pause()
        }, t.prototype.handleSeeked = function (e) {
            this.removeClass("vjs-ended"), this.player_.paused() ? this.handlePause(e) : this.handlePlay(e)
        }, t.prototype.handlePlay = function (e) {
            this.removeClass("vjs-ended"), this.removeClass("vjs-paused"), this.addClass("vjs-playing"), this.controlText("Pause")
        }, t.prototype.handlePause = function (e) {
            this.removeClass("vjs-playing"), this.addClass("vjs-paused"), this.controlText("Play")
        }, t.prototype.handleEnded = function (e) {
            this.removeClass("vjs-playing"), this.addClass("vjs-ended"), this.controlText("Replay"), this.one(this.player_, "seeked", this.handleSeeked)
        }, t
    }(Nn);
    Gn.prototype.controlText_ = "Play", Ye.registerComponent("PlayToggle", Gn);
    var Hn = function (e, t) {
        e = e < 0 ? 0 : e;
        var i = Math.floor(e % 60), n = Math.floor(e / 60 % 60), r = Math.floor(e / 3600), a = Math.floor(t / 60 % 60),
            s = Math.floor(t / 3600);
        return (isNaN(e) || e === 1 / 0) && (r = n = i = "-"), (r = r > 0 || s > 0 ? r + ":" : "") + (n = ((r || a >= 10) && n < 10 ? "0" + n : n) + ":") + (i = i < 10 ? "0" + i : i)
    }, qn = Hn;

    function zn(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : e;
        return qn(e, t)
    }

    var Wn = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.throttledUpdateContent = Pe(Ie(r, r.updateContent), 25), r.on(i, "timeupdate", r.throttledUpdateContent), r
        }

        return t.prototype.createEl = function (t) {
            var i = this.buildCSSClass(), n = e.prototype.createEl.call(this, "div", {
                className: i + " vjs-time-control vjs-control",
                innerHTML: '<span class="vjs-control-text">' + this.localize(this.labelText_) + " </span>"
            });
            return this.contentEl_ = U("span", {className: i + "-display"}, {"aria-live": "off"}), this.updateTextNode_(), n.appendChild(this.contentEl_), n
        }, t.prototype.dispose = function () {
            this.contentEl_ = null, this.textNode_ = null, e.prototype.dispose.call(this)
        }, t.prototype.updateTextNode_ = function () {
            if (this.contentEl_) {
                for (; this.contentEl_.firstChild;) this.contentEl_.removeChild(this.contentEl_.firstChild);
                this.textNode_ = l.createTextNode(this.formattedTime_ || this.formatTime_(0)), this.contentEl_.appendChild(this.textNode_)
            }
        }, t.prototype.formatTime_ = function (e) {
            return zn(e)
        }, t.prototype.updateFormattedTime_ = function (e) {
            var t = this.formatTime_(e);
            t !== this.formattedTime_ && (this.formattedTime_ = t, this.requestAnimationFrame(this.updateTextNode_))
        }, t.prototype.updateContent = function (e) {
        }, t
    }(Ye);
    Wn.prototype.labelText_ = "Time", Wn.prototype.controlText_ = "Time", Ye.registerComponent("TimeDisplay", Wn);
    var Xn = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.on(i, "ended", r.handleEnded), r
        }

        return t.prototype.buildCSSClass = function () {
            return "vjs-current-time"
        }, t.prototype.updateContent = function (e) {
            var t = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
            this.updateFormattedTime_(t)
        }, t.prototype.handleEnded = function (e) {
            this.player_.duration() && this.updateFormattedTime_(this.player_.duration())
        }, t
    }(Wn);
    Xn.prototype.labelText_ = "Current Time", Xn.prototype.controlText_ = "Current Time", Ye.registerComponent("CurrentTimeDisplay", Xn);
    var Yn = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.on(i, "durationchange", r.updateContent), r.on(i, "loadedmetadata", r.throttledUpdateContent), r
        }

        return t.prototype.buildCSSClass = function () {
            return "vjs-duration"
        }, t.prototype.updateContent = function (e) {
            var t = this.player_.duration();
            t && this.duration_ !== t && (this.duration_ = t, this.updateFormattedTime_(t))
        }, t
    }(Wn);
    Yn.prototype.labelText_ = "Duration", Yn.prototype.controlText_ = "Duration", Ye.registerComponent("DurationDisplay", Yn);
    var Kn = function (e) {
        _(t, e);

        function t() {
            return y(this, t), v(this, e.apply(this, arguments))
        }

        return t.prototype.createEl = function () {
            return e.prototype.createEl.call(this, "div", {
                className: "vjs-time-control vjs-time-divider",
                innerHTML: "<div><span>/</span></div>"
            })
        }, t
    }(Ye);
    Ye.registerComponent("TimeDivider", Kn);
    var $n = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.on(i, "durationchange", r.throttledUpdateContent), r.on(i, "ended", r.handleEnded), r
        }

        return t.prototype.buildCSSClass = function () {
            return "vjs-remaining-time"
        }, t.prototype.formatTime_ = function (t) {
            return "-" + e.prototype.formatTime_.call(this, t)
        }, t.prototype.updateContent = function (e) {
            this.player_.duration() && (this.player_.remainingTimeDisplay ? this.updateFormattedTime_(this.player_.remainingTimeDisplay()) : this.updateFormattedTime_(this.player_.remainingTime()))
        }, t.prototype.handleEnded = function (e) {
            this.player_.duration() && this.updateFormattedTime_(0)
        }, t
    }(Wn);
    $n.prototype.labelText_ = "Remaining Time", $n.prototype.controlText_ = "Remaining Time", Ye.registerComponent("RemainingTimeDisplay", $n);
    var Qn = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.updateShowing(), r.on(r.player(), "durationchange", r.updateShowing), r
        }

        return t.prototype.createEl = function () {
            var t = e.prototype.createEl.call(this, "div", {className: "vjs-live-control vjs-control"});
            return this.contentEl_ = U("div", {
                className: "vjs-live-display",
                innerHTML: '<span class="vjs-control-text">' + this.localize("Stream Type") + " </span>" + this.localize("LIVE")
            }, {"aria-live": "off"}), t.appendChild(this.contentEl_), t
        }, t.prototype.dispose = function () {
            this.contentEl_ = null, e.prototype.dispose.call(this)
        }, t.prototype.updateShowing = function (e) {
            this.player().duration() === 1 / 0 ? this.show() : this.hide()
        }, t
    }(Ye);
    Ye.registerComponent("LiveDisplay", Qn);
    var Jn = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.bar = r.getChild(r.options_.barName), r.vertical(!!r.options_.vertical), r.enable(), r
        }

        return t.prototype.enabled = function () {
            return this.enabled_
        }, t.prototype.enable = function () {
            this.enabled() || (this.on("mousedown", this.handleMouseDown), this.on("touchstart", this.handleMouseDown), this.on("focus", this.handleFocus), this.on("blur", this.handleBlur), this.on("click", this.handleClick), this.on(this.player_, "controlsvisible", this.update), this.playerEvent && this.on(this.player_, this.playerEvent, this.update), this.removeClass("disabled"), this.setAttribute("tabindex", 0), this.enabled_ = !0)
        }, t.prototype.disable = function () {
            if (this.enabled()) {
                var e = this.bar.el_.ownerDocument;
                this.off("mousedown", this.handleMouseDown), this.off("touchstart", this.handleMouseDown), this.off("focus", this.handleFocus), this.off("blur", this.handleBlur), this.off("click", this.handleClick), this.off(this.player_, "controlsvisible", this.update), this.off(e, "mousemove", this.handleMouseMove), this.off(e, "mouseup", this.handleMouseUp), this.off(e, "touchmove", this.handleMouseMove), this.off(e, "touchend", this.handleMouseUp), this.removeAttribute("tabindex"), this.addClass("disabled"), this.playerEvent && this.off(this.player_, this.playerEvent, this.update), this.enabled_ = !1
            }
        }, t.prototype.createEl = function (t) {
            var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            return i.className = i.className + " vjs-slider", i = w({tabIndex: 0}, i), n = w({
                role: "slider",
                "aria-valuenow": 0,
                "aria-valuemin": 0,
                "aria-valuemax": 100,
                tabIndex: 0
            }, n), e.prototype.createEl.call(this, t, i, n)
        }, t.prototype.handleMouseDown = function (e) {
            var t = this.bar.el_.ownerDocument;
            "mousedown" === e.type && e.preventDefault(), "touchstart" !== e.type || ut || e.preventDefault(), X(), this.addClass("vjs-sliding"), this.trigger("slideractive"), this.on(t, "mousemove", this.handleMouseMove), this.on(t, "mouseup", this.handleMouseUp), this.on(t, "touchmove", this.handleMouseMove), this.on(t, "touchend", this.handleMouseUp), this.handleMouseMove(e)
        }, t.prototype.handleMouseMove = function (e) {
        }, t.prototype.handleMouseUp = function () {
            var e = this.bar.el_.ownerDocument;
            Y(), this.removeClass("vjs-sliding"), this.trigger("sliderinactive"), this.off(e, "mousemove", this.handleMouseMove), this.off(e, "mouseup", this.handleMouseUp), this.off(e, "touchmove", this.handleMouseMove), this.off(e, "touchend", this.handleMouseUp), this.update()
        }, t.prototype.update = function () {
            if (this.el_) {
                var e = this.getPercent(), t = this.bar;
                if (t) {
                    ("number" != typeof e || e != e || e < 0 || e === 1 / 0) && (e = 0);
                    var i = (100 * e).toFixed(2) + "%", n = t.el().style;
                    return this.vertical() ? n.height = i : n.width = i, e
                }
            }
        }, t.prototype.calculateDistance = function (e) {
            var t = Q(this.el_, e);
            return this.vertical() ? t.y : t.x
        }, t.prototype.handleFocus = function () {
            this.on(this.bar.el_.ownerDocument, "keydown", this.handleKeyPress)
        }, t.prototype.handleKeyPress = function (e) {
            37 === e.which || 40 === e.which ? (e.preventDefault(), this.stepBack()) : 38 !== e.which && 39 !== e.which || (e.preventDefault(), this.stepForward())
        }, t.prototype.handleBlur = function () {
            this.off(this.bar.el_.ownerDocument, "keydown", this.handleKeyPress)
        }, t.prototype.handleClick = function (e) {
            e.stopImmediatePropagation(), e.preventDefault()
        }, t.prototype.vertical = function (e) {
            if (void 0 === e) return this.vertical_ || !1;
            this.vertical_ = !!e, this.vertical_ ? this.addClass("vjs-slider-vertical") : this.addClass("vjs-slider-horizontal")
        }, t
    }(Ye);
    Ye.registerComponent("Slider", Jn);
    var Zn = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.partEls_ = [], r.on(i, "progress", r.update), r
        }

        return t.prototype.createEl = function () {
            return e.prototype.createEl.call(this, "div", {
                className: "vjs-load-progress",
                innerHTML: '<span class="vjs-control-text"><span>' + this.localize("Loaded") + "</span>: 0%</span>"
            })
        }, t.prototype.dispose = function () {
            this.partEls_ = null, e.prototype.dispose.call(this)
        }, t.prototype.update = function (e) {
            var t = this.player_.buffered(), i = this.player_.duration(), n = this.player_.bufferedEnd(),
                r = this.partEls_, a = function (e, t) {
                    var i = e / t || 0;
                    return 100 * (i >= 1 ? 1 : i) + "%"
                };
            this.el_.style.width = a(n, i);
            for (var s = 0; s < t.length; s++) {
                var o = t.start(s), u = t.end(s), l = r[s];
                l || (l = this.el_.appendChild(U()), r[s] = l), l.style.left = a(o, n), l.style.width = a(u - o, n)
            }
            for (var d = r.length; d > t.length; d--) this.el_.removeChild(r[d - 1]);
            r.length = t.length
        }, t
    }(Ye);
    Ye.registerComponent("LoadProgressBar", Zn);
    var er = function (e) {
        _(t, e);

        function t() {
            return y(this, t), v(this, e.apply(this, arguments))
        }

        return t.prototype.createEl = function () {
            return e.prototype.createEl.call(this, "div", {className: "vjs-time-tooltip"})
        }, t.prototype.update = function (e, t, i) {
            var n = K(this.el_), r = K(this.player_.el()), a = e.width * t;
            if (r && n) {
                var s = e.left - r.left + a, o = e.width - a + (r.right - e.right), u = n.width / 2;
                s < u ? u += u - s : o < u && (u = o), u < 0 ? u = 0 : u > n.width && (u = n.width), this.el_.style.right = "-" + u + "px", M(this.el_, i)
            }
        }, t
    }(Ye);
    Ye.registerComponent("TimeTooltip", er);
    var tr = function (e) {
        _(t, e);

        function t() {
            return y(this, t), v(this, e.apply(this, arguments))
        }

        return t.prototype.createEl = function () {
            return e.prototype.createEl.call(this, "div", {
                className: "vjs-play-progress vjs-slider-bar",
                innerHTML: '<span class="vjs-control-text"><span>' + this.localize("Progress") + "</span>: 0%</span>"
            })
        }, t.prototype.update = function (e, t) {
            var i = this;
            this.rafId_ && this.cancelAnimationFrame(this.rafId_), this.rafId_ = this.requestAnimationFrame(function () {
                var n = zn(i.player_.scrubbing() ? i.player_.getCache().currentTime : i.player_.currentTime(), i.player_.duration()),
                    r = i.getChild("timeTooltip");
                r && r.update(e, t, n)
            })
        }, t
    }(Ye);
    tr.prototype.options_ = {children: []}, tt || nt || tr.prototype.options_.children.push("timeTooltip"), Ye.registerComponent("PlayProgressBar", tr);
    var ir = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.update = Pe(Ie(r, r.update), 25), r
        }

        return t.prototype.createEl = function () {
            return e.prototype.createEl.call(this, "div", {className: "vjs-mouse-display"})
        }, t.prototype.update = function (e, t) {
            var i = this;
            this.rafId_ && this.cancelAnimationFrame(this.rafId_), this.rafId_ = this.requestAnimationFrame(function () {
                var n = i.player_.duration(), r = zn(t * n, n);
                i.el_.style.left = e.width * t + "px", i.getChild("timeTooltip").update(e, t, r)
            })
        }, t
    }(Ye);
    ir.prototype.options_ = {children: ["timeTooltip"]}, Ye.registerComponent("MouseTimeDisplay", ir);
    var nr = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.setEventHandlers_(), r
        }

        return t.prototype.setEventHandlers_ = function () {
            var e = this;
            this.update = Pe(Ie(this, this.update), 30), this.on(this.player_, "timeupdate", this.update), this.on(this.player_, "ended", this.handleEnded), this.updateInterval = null, this.on(this.player_, ["playing"], function () {
                e.clearInterval(e.updateInterval), e.updateInterval = e.setInterval(function () {
                    e.requestAnimationFrame(function () {
                        e.update()
                    })
                }, 30)
            }), this.on(this.player_, ["ended", "pause", "waiting"], function () {
                e.clearInterval(e.updateInterval)
            }), this.on(this.player_, ["timeupdate", "ended"], this.update)
        }, t.prototype.createEl = function () {
            return e.prototype.createEl.call(this, "div", {className: "vjs-progress-holder"}, {"aria-label": this.localize("Progress Bar")})
        }, t.prototype.update_ = function (e, t) {
            var i = this.player_.duration();
            this.el_.setAttribute("aria-valuenow", (100 * t).toFixed(2)), this.el_.setAttribute("aria-valuetext", this.localize("progress bar timing: currentTime={1} duration={2}", [zn(e, i), zn(i, i)], "{1} of {2}")), this.bar.update(K(this.el_), t)
        }, t.prototype.update = function (t) {
            var i = e.prototype.update.call(this);
            return this.update_(this.getCurrentTime_(), i), i
        }, t.prototype.getCurrentTime_ = function () {
            return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime()
        }, t.prototype.handleEnded = function (e) {
            this.update_(this.player_.duration(), 1)
        }, t.prototype.getPercent = function () {
            var e = this.getCurrentTime_() / this.player_.duration();
            return e >= 1 ? 1 : e || 0
        }, t.prototype.handleMouseDown = function (t) {
            ne(t) && (t.stopPropagation(), this.player_.scrubbing(!0), this.videoWasPlaying = !this.player_.paused(), this.player_.pause(), e.prototype.handleMouseDown.call(this, t))
        }, t.prototype.handleMouseMove = function (e) {
            if (ne(e)) {
                var t = this.calculateDistance(e) * this.player_.duration();
                t === this.player_.duration() && (t -= .1), this.player_.currentTime(t)
            }
        }, t.prototype.enable = function () {
            e.prototype.enable.call(this);
            var t = this.getChild("mouseTimeDisplay");
            t && t.show()
        }, t.prototype.disable = function () {
            e.prototype.disable.call(this);
            var t = this.getChild("mouseTimeDisplay");
            t && t.hide()
        }, t.prototype.handleMouseUp = function (t) {
            e.prototype.handleMouseUp.call(this, t), t && t.stopPropagation(), this.player_.scrubbing(!1), this.player_.trigger({
                type: "timeupdate",
                target: this,
                manuallyTriggered: !0
            }), this.videoWasPlaying && Ot(this.player_.play())
        }, t.prototype.stepForward = function () {
            this.player_.currentTime(this.player_.currentTime() + 5)
        }, t.prototype.stepBack = function () {
            this.player_.currentTime(this.player_.currentTime() - 5)
        }, t.prototype.handleAction = function (e) {
            this.player_.paused() ? this.player_.play() : this.player_.pause()
        }, t.prototype.handleKeyPress = function (t) {
            32 === t.which || 13 === t.which ? (t.preventDefault(), this.handleAction(t)) : e.prototype.handleKeyPress && e.prototype.handleKeyPress.call(this, t)
        }, t
    }(Jn);
    nr.prototype.options_ = {
        children: ["loadProgressBar", "playProgressBar"],
        barName: "playProgressBar"
    }, tt || nt || nr.prototype.options_.children.splice(1, 0, "mouseTimeDisplay"), nr.prototype.playerEvent = "timeupdate", Ye.registerComponent("SeekBar", nr);
    var rr = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.handleMouseMove = Pe(Ie(r, r.handleMouseMove), 25), r.throttledHandleMouseSeek = Pe(Ie(r, r.handleMouseSeek), 25), r.enable(), r
        }

        return t.prototype.createEl = function () {
            return e.prototype.createEl.call(this, "div", {className: "vjs-progress-control vjs-control"})
        }, t.prototype.handleMouseMove = function (e) {
            var t = this.getChild("seekBar");
            if (t) {
                var i = t.getChild("mouseTimeDisplay"), n = t.el(), r = K(n), a = Q(n, e).x;
                a > 1 ? a = 1 : a < 0 && (a = 0), i && i.update(r, a)
            }
        }, t.prototype.handleMouseSeek = function (e) {
            var t = this.getChild("seekBar");
            t && t.handleMouseMove(e)
        }, t.prototype.enabled = function () {
            return this.enabled_
        }, t.prototype.disable = function () {
            this.children().forEach(function (e) {
                return e.disable && e.disable()
            }), this.enabled() && (this.off(["mousedown", "touchstart"], this.handleMouseDown), this.off(this.el_, "mousemove", this.handleMouseMove), this.handleMouseUp(), this.addClass("disabled"), this.enabled_ = !1)
        }, t.prototype.enable = function () {
            this.children().forEach(function (e) {
                return e.enable && e.enable()
            }), this.enabled() || (this.on(["mousedown", "touchstart"], this.handleMouseDown), this.on(this.el_, "mousemove", this.handleMouseMove), this.removeClass("disabled"), this.enabled_ = !0)
        }, t.prototype.handleMouseDown = function (e) {
            var t = this.el_.ownerDocument, i = this.getChild("seekBar");
            i && i.handleMouseDown(e), this.on(t, "mousemove", this.throttledHandleMouseSeek), this.on(t, "touchmove", this.throttledHandleMouseSeek), this.on(t, "mouseup", this.handleMouseUp), this.on(t, "touchend", this.handleMouseUp)
        }, t.prototype.handleMouseUp = function (e) {
            var t = this.el_.ownerDocument, i = this.getChild("seekBar");
            i && i.handleMouseUp(e), this.off(t, "mousemove", this.throttledHandleMouseSeek), this.off(t, "touchmove", this.throttledHandleMouseSeek), this.off(t, "mouseup", this.handleMouseUp), this.off(t, "touchend", this.handleMouseUp)
        }, t
    }(Ye);
    rr.prototype.options_ = {children: ["seekBar"]}, Ye.registerComponent("ProgressControl", rr);
    var ar = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.on(i, "fullscreenchange", r.handleFullscreenChange), !1 === l[vt.fullscreenEnabled] && r.disable(), r
        }

        return t.prototype.buildCSSClass = function () {
            return "vjs-fullscreen-control " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.handleFullscreenChange = function (e) {
            this.player_.isFullscreen() ? this.controlText("Non-Fullscreen") : this.controlText("Fullscreen")
        }, t.prototype.handleClick = function (e) {
            this.player_.isFullscreen() ? this.player_.exitFullscreen() : this.player_.requestFullscreen()
        }, t
    }(Nn);
    ar.prototype.controlText_ = "Fullscreen", Ye.registerComponent("FullscreenToggle", ar);
    var sr = function (e, t) {
        t.tech_ && !t.tech_.featuresVolumeControl && e.addClass("vjs-hidden"), e.on(t, "loadstart", function () {
            t.tech_.featuresVolumeControl ? e.removeClass("vjs-hidden") : e.addClass("vjs-hidden")
        })
    }, or = function (e) {
        _(t, e);

        function t() {
            return y(this, t), v(this, e.apply(this, arguments))
        }

        return t.prototype.createEl = function () {
            return e.prototype.createEl.call(this, "div", {
                className: "vjs-volume-level",
                innerHTML: '<span class="vjs-control-text"></span>'
            })
        }, t
    }(Ye);
    Ye.registerComponent("VolumeLevel", or);
    var ur = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.on("slideractive", r.updateLastVolume_), r.on(i, "volumechange", r.updateARIAAttributes), i.ready(function () {
                return r.updateARIAAttributes()
            }), r
        }

        return t.prototype.createEl = function () {
            return e.prototype.createEl.call(this, "div", {className: "vjs-volume-bar vjs-slider-bar"}, {
                "aria-label": this.localize("Volume Level"),
                "aria-live": "polite"
            })
        }, t.prototype.handleMouseDown = function (t) {
            ne(t) && e.prototype.handleMouseDown.call(this, t)
        }, t.prototype.handleMouseMove = function (e) {
            ne(e) && (this.checkMuted(), this.player_.volume(this.calculateDistance(e)))
        }, t.prototype.checkMuted = function () {
            this.player_.muted() && this.player_.muted(!1)
        }, t.prototype.getPercent = function () {
            return this.player_.muted() ? 0 : this.player_.volume()
        }, t.prototype.stepForward = function () {
            this.checkMuted(), this.player_.volume(this.player_.volume() + .1)
        }, t.prototype.stepBack = function () {
            this.checkMuted(), this.player_.volume(this.player_.volume() - .1)
        }, t.prototype.updateARIAAttributes = function (e) {
            var t = this.player_.muted() ? 0 : this.volumeAsPercentage_();
            this.el_.setAttribute("aria-valuenow", t), this.el_.setAttribute("aria-valuetext", t + "%")
        }, t.prototype.volumeAsPercentage_ = function () {
            return Math.round(100 * this.player_.volume())
        }, t.prototype.updateLastVolume_ = function () {
            var e = this, t = this.player_.volume();
            this.one("sliderinactive", function () {
                0 === e.player_.volume() && e.player_.lastVolume_(t)
            })
        }, t
    }(Jn);
    ur.prototype.options_ = {
        children: ["volumeLevel"],
        barName: "volumeLevel"
    }, ur.prototype.playerEvent = "volumechange", Ye.registerComponent("VolumeBar", ur);
    var lr = function (e) {
        _(t, e);

        function t(i) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            y(this, t), n.vertical = n.vertical || !1, (void 0 === n.volumeBar || C(n.volumeBar)) && (n.volumeBar = n.volumeBar || {}, n.volumeBar.vertical = n.vertical);
            var r = v(this, e.call(this, i, n));
            return sr(r, i), r.throttledHandleMouseMove = Pe(Ie(r, r.handleMouseMove), 25), r.on("mousedown", r.handleMouseDown), r.on("touchstart", r.handleMouseDown), r.on(r.volumeBar, ["focus", "slideractive"], function () {
                r.volumeBar.addClass("vjs-slider-active"), r.addClass("vjs-slider-active"), r.trigger("slideractive")
            }), r.on(r.volumeBar, ["blur", "sliderinactive"], function () {
                r.volumeBar.removeClass("vjs-slider-active"), r.removeClass("vjs-slider-active"), r.trigger("sliderinactive")
            }), r
        }

        return t.prototype.createEl = function () {
            var t = "vjs-volume-horizontal";
            return this.options_.vertical && (t = "vjs-volume-vertical"), e.prototype.createEl.call(this, "div", {className: "vjs-volume-control vjs-control " + t})
        }, t.prototype.handleMouseDown = function (e) {
            var t = this.el_.ownerDocument;
            this.on(t, "mousemove", this.throttledHandleMouseMove), this.on(t, "touchmove", this.throttledHandleMouseMove), this.on(t, "mouseup", this.handleMouseUp), this.on(t, "touchend", this.handleMouseUp)
        }, t.prototype.handleMouseUp = function (e) {
            var t = this.el_.ownerDocument;
            this.off(t, "mousemove", this.throttledHandleMouseMove), this.off(t, "touchmove", this.throttledHandleMouseMove), this.off(t, "mouseup", this.handleMouseUp), this.off(t, "touchend", this.handleMouseUp)
        }, t.prototype.handleMouseMove = function (e) {
            this.volumeBar.handleMouseMove(e)
        }, t
    }(Ye);
    lr.prototype.options_ = {children: ["volumeBar"]}, Ye.registerComponent("VolumeControl", lr);
    var dr = function (e, t) {
        t.tech_ && !t.tech_.featuresMuteControl && e.addClass("vjs-hidden"), e.on(t, "loadstart", function () {
            t.tech_.featuresMuteControl ? e.removeClass("vjs-hidden") : e.addClass("vjs-hidden")
        })
    }, cr = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return dr(r, i), r.on(i, ["loadstart", "volumechange"], r.update), r
        }

        return t.prototype.buildCSSClass = function () {
            return "vjs-mute-control " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.handleClick = function (e) {
            var t = this.player_.volume(), i = this.player_.lastVolume_();
            if (0 === t) {
                var n = i < .1 ? .1 : i;
                this.player_.volume(n), this.player_.muted(!1)
            } else this.player_.muted(!this.player_.muted())
        }, t.prototype.update = function (e) {
            this.updateIcon_(), this.updateControlText_()
        }, t.prototype.updateIcon_ = function () {
            var e = this.player_.volume(), t = 3;
            tt && this.player_.muted(this.player_.tech_.el_.muted), 0 === e || this.player_.muted() ? t = 0 : e < .33 ? t = 1 : e < .67 && (t = 2);
            for (var i = 0; i < 4; i++) F(this.el_, "vjs-vol-" + i);
            N(this.el_, "vjs-vol-" + t)
        }, t.prototype.updateControlText_ = function () {
            var e = this.player_.muted() || 0 === this.player_.volume() ? "Unmute" : "Mute";
            this.controlText() !== e && this.controlText(e)
        }, t
    }(Nn);
    cr.prototype.controlText_ = "Mute", Ye.registerComponent("MuteToggle", cr);
    var hr = function (e) {
        _(t, e);

        function t(i) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            y(this, t), void 0 !== n.inline ? n.inline = n.inline : n.inline = !0, (void 0 === n.volumeControl || C(n.volumeControl)) && (n.volumeControl = n.volumeControl || {}, n.volumeControl.vertical = !n.inline);
            var r = v(this, e.call(this, i, n));
            return r.on(i, ["loadstart"], r.volumePanelState_), r.on(r.volumeControl, ["slideractive"], r.sliderActive_), r.on(r.volumeControl, ["sliderinactive"], r.sliderInactive_), r
        }

        return t.prototype.sliderActive_ = function () {
            this.addClass("vjs-slider-active")
        }, t.prototype.sliderInactive_ = function () {
            this.removeClass("vjs-slider-active")
        }, t.prototype.volumePanelState_ = function () {
            this.volumeControl.hasClass("vjs-hidden") && this.muteToggle.hasClass("vjs-hidden") && this.addClass("vjs-hidden"), this.volumeControl.hasClass("vjs-hidden") && !this.muteToggle.hasClass("vjs-hidden") && this.addClass("vjs-mute-toggle-only")
        }, t.prototype.createEl = function () {
            var t = "vjs-volume-panel-horizontal";
            return this.options_.inline || (t = "vjs-volume-panel-vertical"), e.prototype.createEl.call(this, "div", {className: "vjs-volume-panel vjs-control " + t})
        }, t
    }(Ye);
    hr.prototype.options_ = {children: ["muteToggle", "volumeControl"]}, Ye.registerComponent("VolumePanel", hr);
    var fr = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return n && (r.menuButton_ = n.menuButton), r.focusedChild_ = -1, r.on("keydown", r.handleKeyPress), r
        }

        return t.prototype.addItem = function (e) {
            this.addChild(e), e.on("click", Ie(this, function (t) {
                this.menuButton_ && (this.menuButton_.unpressButton(), "CaptionSettingsMenuItem" !== e.name() && this.menuButton_.focus())
            }))
        }, t.prototype.createEl = function () {
            var t = this.options_.contentElType || "ul";
            this.contentEl_ = U(t, {className: "vjs-menu-content"}), this.contentEl_.setAttribute("role", "menu");
            var i = e.prototype.createEl.call(this, "div", {append: this.contentEl_, className: "vjs-menu"});
            return i.appendChild(this.contentEl_), ve(i, "click", function (e) {
                e.preventDefault(), e.stopImmediatePropagation()
            }), i
        }, t.prototype.dispose = function () {
            this.contentEl_ = null, e.prototype.dispose.call(this)
        }, t.prototype.handleKeyPress = function (e) {
            37 === e.which || 40 === e.which ? (e.preventDefault(), this.stepForward()) : 38 !== e.which && 39 !== e.which || (e.preventDefault(), this.stepBack())
        }, t.prototype.stepForward = function () {
            var e = 0;
            void 0 !== this.focusedChild_ && (e = this.focusedChild_ + 1), this.focus(e)
        }, t.prototype.stepBack = function () {
            var e = 0;
            void 0 !== this.focusedChild_ && (e = this.focusedChild_ - 1), this.focus(e)
        }, t.prototype.focus = function () {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, t = this.children().slice();
            t.length && t[0].className && /vjs-menu-title/.test(t[0].className) && t.shift(), t.length > 0 && (e < 0 ? e = 0 : e >= t.length && (e = t.length - 1), this.focusedChild_ = e, t[e].el_.focus())
        }, t
    }(Ye);
    Ye.registerComponent("Menu", fr);
    var pr = function (e) {
        _(t, e);

        function t(i) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            y(this, t);
            var r = v(this, e.call(this, i, n));
            r.menuButton_ = new Nn(i, n), r.menuButton_.controlText(r.controlText_), r.menuButton_.el_.setAttribute("aria-haspopup", "true");
            var a = Nn.prototype.buildCSSClass();
            return r.menuButton_.el_.className = r.buildCSSClass() + " " + a, r.menuButton_.removeClass("vjs-control"), r.addChild(r.menuButton_), r.update(), r.enabled_ = !0, r.on(r.menuButton_, "tap", r.handleClick), r.on(r.menuButton_, "click", r.handleClick), r.on(r.menuButton_, "focus", r.handleFocus), r.on(r.menuButton_, "blur", r.handleBlur), r.on("keydown", r.handleSubmenuKeyPress), r
        }

        return t.prototype.update = function () {
            var e = this.createMenu();
            this.menu && (this.menu.dispose(), this.removeChild(this.menu)), this.menu = e, this.addChild(e), this.buttonPressed_ = !1, this.menuButton_.el_.setAttribute("aria-expanded", "false"), this.items && this.items.length <= this.hideThreshold_ ? this.hide() : this.show()
        }, t.prototype.createMenu = function () {
            var e = new fr(this.player_, {menuButton: this});
            if (this.hideThreshold_ = 0, this.options_.title) {
                var t = U("li", {className: "vjs-menu-title", innerHTML: We(this.options_.title), tabIndex: -1});
                this.hideThreshold_ += 1, e.children_.unshift(t), B(t, e.contentEl())
            }
            if (this.items = this.createItems(), this.items) for (var i = 0; i < this.items.length; i++) e.addItem(this.items[i]);
            return e
        }, t.prototype.createItems = function () {
        }, t.prototype.createEl = function () {
            return e.prototype.createEl.call(this, "div", {className: this.buildWrapperCSSClass()}, {})
        }, t.prototype.buildWrapperCSSClass = function () {
            var t = "vjs-menu-button";
            !0 === this.options_.inline ? t += "-inline" : t += "-popup";
            return "vjs-menu-button " + t + " " + Nn.prototype.buildCSSClass() + " " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.buildCSSClass = function () {
            var t = "vjs-menu-button";
            return !0 === this.options_.inline ? t += "-inline" : t += "-popup", "vjs-menu-button " + t + " " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.controlText = function (e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.menuButton_.el();
            return this.menuButton_.controlText(e, t)
        }, t.prototype.handleClick = function (e) {
            this.one(this.menu.contentEl(), "mouseleave", Ie(this, function (e) {
                this.unpressButton(), this.el_.blur()
            })), this.buttonPressed_ ? this.unpressButton() : this.pressButton()
        }, t.prototype.focus = function () {
            this.menuButton_.focus()
        }, t.prototype.blur = function () {
            this.menuButton_.blur()
        }, t.prototype.handleFocus = function () {
            ve(l, "keydown", Ie(this, this.handleKeyPress))
        }, t.prototype.handleBlur = function () {
            be(l, "keydown", Ie(this, this.handleKeyPress))
        }, t.prototype.handleKeyPress = function (e) {
            27 === e.which || 9 === e.which ? (this.buttonPressed_ && this.unpressButton(), 9 !== e.which && (e.preventDefault(), this.menuButton_.el_.focus())) : 38 !== e.which && 40 !== e.which || this.buttonPressed_ || (this.pressButton(), e.preventDefault())
        }, t.prototype.handleSubmenuKeyPress = function (e) {
            27 !== e.which && 9 !== e.which || (this.buttonPressed_ && this.unpressButton(), 9 !== e.which && (e.preventDefault(), this.menuButton_.el_.focus()))
        }, t.prototype.pressButton = function () {
            if (this.enabled_) {
                if (this.buttonPressed_ = !0, this.menu.lockShowing(), this.menuButton_.el_.setAttribute("aria-expanded", "true"), tt && x()) return;
                this.menu.focus()
            }
        }, t.prototype.unpressButton = function () {
            this.enabled_ && (this.buttonPressed_ = !1, this.menu.unlockShowing(), this.menuButton_.el_.setAttribute("aria-expanded", "false"))
        }, t.prototype.disable = function () {
            this.unpressButton(), this.enabled_ = !1, this.addClass("vjs-disabled"), this.menuButton_.disable()
        }, t.prototype.enable = function () {
            this.enabled_ = !0, this.removeClass("vjs-disabled"), this.menuButton_.enable()
        }, t
    }(Ye);
    Ye.registerComponent("MenuButton", pr);
    var mr = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = n.tracks, a = v(this, e.call(this, i, n));
            if (a.items.length <= 1 && a.hide(), !r) return v(a);
            var s = Ie(a, a.update);
            return r.addEventListener("removetrack", s), r.addEventListener("addtrack", s), a.player_.on("ready", s), a.player_.on("dispose", function () {
                r.removeEventListener("removetrack", s), r.removeEventListener("addtrack", s)
            }), a
        }

        return t
    }(pr);
    Ye.registerComponent("TrackButton", mr);
    var gr = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.selectable = n.selectable, r.isSelected_ = n.selected || !1, r.multiSelectable = n.multiSelectable, r.selected(r.isSelected_), r.selectable ? r.multiSelectable ? r.el_.setAttribute("role", "menuitemcheckbox") : r.el_.setAttribute("role", "menuitemradio") : r.el_.setAttribute("role", "menuitem"), r
        }

        return t.prototype.createEl = function (t, i, n) {
            return this.nonIconControl = !0, e.prototype.createEl.call(this, "li", w({
                className: "vjs-menu-item",
                innerHTML: '<span class="vjs-menu-item-text">' + this.localize(this.options_.label) + "</span>",
                tabIndex: -1
            }, i), n)
        }, t.prototype.handleClick = function (e) {
            this.selected(!0)
        }, t.prototype.selected = function (e) {
            this.selectable && (e ? (this.addClass("vjs-selected"), this.el_.setAttribute("aria-checked", "true"), this.controlText(", selected"), this.isSelected_ = !0) : (this.removeClass("vjs-selected"), this.el_.setAttribute("aria-checked", "false"), this.controlText(""), this.isSelected_ = !1))
        }, t
    }(Rn);
    Ye.registerComponent("MenuItem", gr);
    var yr = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var a = n.track, s = i.textTracks();
            n.label = a.label || a.language || "Unknown", n.selected = "showing" === a.mode;
            var o = v(this, e.call(this, i, n));
            o.track = a;
            var u = function () {
                for (var e = arguments.length, t = Array(e), i = 0; i < e; i++) t[i] = arguments[i];
                o.handleTracksChange.apply(o, t)
            }, d = function () {
                for (var e = arguments.length, t = Array(e), i = 0; i < e; i++) t[i] = arguments[i];
                o.handleSelectedLanguageChange.apply(o, t)
            };
            if (i.on(["loadstart", "texttrackchange"], u), s.addEventListener("change", u), s.addEventListener("selectedlanguagechange", d), o.on("dispose", function () {
                i.off(["loadstart", "texttrackchange"], u), s.removeEventListener("change", u), s.removeEventListener("selectedlanguagechange", d)
            }), void 0 === s.onchange) {
                var c = void 0;
                o.on(["tap", "click"], function () {
                    if ("object" !== g(r.Event)) try {
                        c = new r.Event("change")
                    } catch (e) {
                    }
                    c || (c = l.createEvent("Event")).initEvent("change", !0, !0), s.dispatchEvent(c)
                })
            }
            return o.handleTracksChange(), o
        }

        return t.prototype.handleClick = function (t) {
            var i = this.track.kind, n = this.track.kinds, r = this.player_.textTracks();
            if (n || (n = [i]), e.prototype.handleClick.call(this, t), r) for (var a = 0; a < r.length; a++) {
                var s = r[a];
                s === this.track && n.indexOf(s.kind) > -1 ? "showing" !== s.mode && (s.mode = "showing") : "disabled" !== s.mode && (s.mode = "disabled")
            }
        }, t.prototype.handleTracksChange = function (e) {
            var t = "showing" === this.track.mode;
            t !== this.isSelected_ && this.selected(t)
        }, t.prototype.handleSelectedLanguageChange = function (e) {
            if ("showing" === this.track.mode) {
                var t = this.player_.cache_.selectedLanguage;
                if (t && t.enabled && t.language === this.track.language && t.kind !== this.track.kind) return;
                this.player_.cache_.selectedLanguage = {
                    enabled: !0,
                    language: this.track.language,
                    kind: this.track.kind
                }
            }
        }, t.prototype.dispose = function () {
            this.track = null, e.prototype.dispose.call(this)
        }, t
    }(gr);
    Ye.registerComponent("TextTrackMenuItem", yr);
    var _r = function (e) {
        _(t, e);

        function t(i, n) {
            return y(this, t), n.track = {
                player: i,
                kind: n.kind,
                kinds: n.kinds,
                default: !1,
                mode: "disabled"
            }, n.kinds || (n.kinds = [n.kind]), n.label ? n.track.label = n.label : n.track.label = n.kinds.join(" and ") + " off", n.selectable = !0, n.multiSelectable = !1, v(this, e.call(this, i, n))
        }

        return t.prototype.handleTracksChange = function (e) {
            for (var t = this.player().textTracks(), i = !0, n = 0, r = t.length; n < r; n++) {
                var a = t[n];
                if (this.options_.kinds.indexOf(a.kind) > -1 && "showing" === a.mode) {
                    i = !1;
                    break
                }
            }
            i !== this.isSelected_ && this.selected(i)
        }, t.prototype.handleSelectedLanguageChange = function (e) {
            for (var t = this.player().textTracks(), i = !0, n = 0, r = t.length; n < r; n++) {
                var a = t[n];
                if (["captions", "descriptions", "subtitles"].indexOf(a.kind) > -1 && "showing" === a.mode) {
                    i = !1;
                    break
                }
            }
            i && (this.player_.cache_.selectedLanguage = {enabled: !1})
        }, t
    }(yr);
    Ye.registerComponent("OffTextTrackMenuItem", _r);
    var vr = function (e) {
        _(t, e);

        function t(i) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            return y(this, t), n.tracks = i.textTracks(), v(this, e.call(this, i, n))
        }

        return t.prototype.createItems = function () {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : yr, i = void 0;
            this.label_ && (i = this.label_ + " off"), e.push(new _r(this.player_, {
                kinds: this.kinds_,
                kind: this.kind_,
                label: i
            })), this.hideThreshold_ += 1;
            var n = this.player_.textTracks();
            Array.isArray(this.kinds_) || (this.kinds_ = [this.kind_]);
            for (var r = 0; r < n.length; r++) {
                var a = n[r];
                if (this.kinds_.indexOf(a.kind) > -1) {
                    var s = new t(this.player_, {track: a, selectable: !0, multiSelectable: !1});
                    s.addClass("vjs-" + a.kind + "-menu-item"), e.push(s)
                }
            }
            return e
        }, t
    }(mr);
    Ye.registerComponent("TextTrackButton", vr);
    var br = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = n.track, a = n.cue, s = i.currentTime();
            n.selectable = !0, n.multiSelectable = !1, n.label = a.text, n.selected = a.startTime <= s && s < a.endTime;
            var o = v(this, e.call(this, i, n));
            return o.track = r, o.cue = a, r.addEventListener("cuechange", Ie(o, o.update)), o
        }

        return t.prototype.handleClick = function (t) {
            e.prototype.handleClick.call(this), this.player_.currentTime(this.cue.startTime), this.update(this.cue.startTime)
        }, t.prototype.update = function (e) {
            var t = this.cue, i = this.player_.currentTime();
            this.selected(t.startTime <= i && i < t.endTime)
        }, t
    }(gr);
    Ye.registerComponent("ChaptersTrackMenuItem", br);
    var Tr = function (e) {
        _(t, e);

        function t(i, n, r) {
            return y(this, t), v(this, e.call(this, i, n, r))
        }

        return t.prototype.buildCSSClass = function () {
            return "vjs-chapters-button " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.buildWrapperCSSClass = function () {
            return "vjs-chapters-button " + e.prototype.buildWrapperCSSClass.call(this)
        }, t.prototype.update = function (t) {
            this.track_ && (!t || "addtrack" !== t.type && "removetrack" !== t.type) || this.setTrack(this.findChaptersTrack()), e.prototype.update.call(this)
        }, t.prototype.setTrack = function (e) {
            if (this.track_ !== e) {
                if (this.updateHandler_ || (this.updateHandler_ = this.update.bind(this)), this.track_) {
                    var t = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
                    t && t.removeEventListener("load", this.updateHandler_), this.track_ = null
                }
                if (this.track_ = e, this.track_) {
                    this.track_.mode = "hidden";
                    var i = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
                    i && i.addEventListener("load", this.updateHandler_)
                }
            }
        }, t.prototype.findChaptersTrack = function () {
            for (var e = this.player_.textTracks() || [], t = e.length - 1; t >= 0; t--) {
                var i = e[t];
                if (i.kind === this.kind_) return i
            }
        }, t.prototype.getMenuCaption = function () {
            return this.track_ && this.track_.label ? this.track_.label : this.localize(We(this.kind_))
        }, t.prototype.createMenu = function () {
            return this.options_.title = this.getMenuCaption(), e.prototype.createMenu.call(this)
        }, t.prototype.createItems = function () {
            var e = [];
            if (!this.track_) return e;
            var t = this.track_.cues;
            if (!t) return e;
            for (var i = 0, n = t.length; i < n; i++) {
                var r = t[i], a = new br(this.player_, {track: this.track_, cue: r});
                e.push(a)
            }
            return e
        }, t
    }(vr);
    Tr.prototype.kind_ = "chapters", Tr.prototype.controlText_ = "Chapters", Ye.registerComponent("ChaptersButton", Tr);
    var Sr = function (e) {
        _(t, e);

        function t(i, n, r) {
            y(this, t);
            var a = v(this, e.call(this, i, n, r)), s = i.textTracks(), o = Ie(a, a.handleTracksChange);
            return s.addEventListener("change", o), a.on("dispose", function () {
                s.removeEventListener("change", o)
            }), a
        }

        return t.prototype.handleTracksChange = function (e) {
            for (var t = this.player().textTracks(), i = !1, n = 0, r = t.length; n < r; n++) {
                var a = t[n];
                if (a.kind !== this.kind_ && "showing" === a.mode) {
                    i = !0;
                    break
                }
            }
            i ? this.disable() : this.enable()
        }, t.prototype.buildCSSClass = function () {
            return "vjs-descriptions-button " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.buildWrapperCSSClass = function () {
            return "vjs-descriptions-button " + e.prototype.buildWrapperCSSClass.call(this)
        }, t
    }(vr);
    Sr.prototype.kind_ = "descriptions", Sr.prototype.controlText_ = "Descriptions", Ye.registerComponent("DescriptionsButton", Sr);
    var kr = function (e) {
        _(t, e);

        function t(i, n, r) {
            return y(this, t), v(this, e.call(this, i, n, r))
        }

        return t.prototype.buildCSSClass = function () {
            return "vjs-subtitles-button " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.buildWrapperCSSClass = function () {
            return "vjs-subtitles-button " + e.prototype.buildWrapperCSSClass.call(this)
        }, t
    }(vr);
    kr.prototype.kind_ = "subtitles", kr.prototype.controlText_ = "Subtitles", Ye.registerComponent("SubtitlesButton", kr);
    var wr = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t), n.track = {
                player: i,
                kind: n.kind,
                label: n.kind + " settings",
                selectable: !1,
                default: !1,
                mode: "disabled"
            }, n.selectable = !1, n.name = "CaptionSettingsMenuItem";
            var r = v(this, e.call(this, i, n));
            return r.addClass("vjs-texttrack-settings"), r.controlText(", opens " + n.kind + " settings dialog"), r
        }

        return t.prototype.handleClick = function (e) {
            this.player().getChild("textTrackSettings").open()
        }, t
    }(yr);
    Ye.registerComponent("CaptionSettingsMenuItem", wr);
    var Er = function (e) {
        _(t, e);

        function t(i, n, r) {
            return y(this, t), v(this, e.call(this, i, n, r))
        }

        return t.prototype.buildCSSClass = function () {
            return "vjs-captions-button " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.buildWrapperCSSClass = function () {
            return "vjs-captions-button " + e.prototype.buildWrapperCSSClass.call(this)
        }, t.prototype.createItems = function () {
            var t = [];
            return this.player().tech_ && this.player().tech_.featuresNativeTextTracks || !this.player().getChild("textTrackSettings") || (t.push(new wr(this.player_, {kind: this.kind_})), this.hideThreshold_ += 1), e.prototype.createItems.call(this, t)
        }, t
    }(vr);
    Er.prototype.kind_ = "captions", Er.prototype.controlText_ = "Captions", Ye.registerComponent("CaptionsButton", Er);
    var Cr = function (e) {
        _(t, e);

        function t() {
            return y(this, t), v(this, e.apply(this, arguments))
        }

        return t.prototype.createEl = function (t, i, n) {
            var r = '<span class="vjs-menu-item-text">' + this.localize(this.options_.label);
            "captions" === this.options_.track.kind && (r += '\n        <span aria-hidden="true" class="vjs-icon-placeholder"></span>\n        <span class="vjs-control-text"> ' + this.localize("Captions") + "</span>\n      "), r += "</span>";
            return e.prototype.createEl.call(this, t, w({innerHTML: r}, i), n)
        }, t
    }(yr);
    Ye.registerComponent("SubsCapsMenuItem", Cr);
    var Ar = function (e) {
        _(t, e);

        function t(i) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.label_ = "subtitles", ["en", "en-us", "en-ca", "fr-ca"].indexOf(r.player_.language_) > -1 && (r.label_ = "captions"), r.menuButton_.controlText(We(r.label_)), r
        }

        return t.prototype.buildCSSClass = function () {
            return "vjs-subs-caps-button " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.buildWrapperCSSClass = function () {
            return "vjs-subs-caps-button " + e.prototype.buildWrapperCSSClass.call(this)
        }, t.prototype.createItems = function () {
            var t = [];
            return this.player().tech_ && this.player().tech_.featuresNativeTextTracks || !this.player().getChild("textTrackSettings") || (t.push(new wr(this.player_, {kind: this.label_})), this.hideThreshold_ += 1), t = e.prototype.createItems.call(this, t, Cr)
        }, t
    }(vr);
    Ar.prototype.kinds_ = ["captions", "subtitles"], Ar.prototype.controlText_ = "Subtitles", Ye.registerComponent("SubsCapsButton", Ar);
    var Lr = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = n.track, a = i.audioTracks();
            n.label = r.label || r.language || "Unknown", n.selected = r.enabled;
            var s = v(this, e.call(this, i, n));
            s.track = r, s.addClass("vjs-" + r.kind + "-menu-item");
            var o = function () {
                for (var e = arguments.length, t = Array(e), i = 0; i < e; i++) t[i] = arguments[i];
                s.handleTracksChange.apply(s, t)
            };
            return a.addEventListener("change", o), s.on("dispose", function () {
                a.removeEventListener("change", o)
            }), s
        }

        return t.prototype.createEl = function (t, i, n) {
            var r = '<span class="vjs-menu-item-text">' + this.localize(this.options_.label);
            "main-desc" === this.options_.track.kind && (r += '\n        <span aria-hidden="true" class="vjs-icon-placeholder"></span>\n        <span class="vjs-control-text"> ' + this.localize("Descriptions") + "</span>\n      "), r += "</span>";
            return e.prototype.createEl.call(this, t, w({innerHTML: r}, i), n)
        }, t.prototype.handleClick = function (t) {
            var i = this.player_.audioTracks();
            e.prototype.handleClick.call(this, t);
            for (var n = 0; n < i.length; n++) {
                var r = i[n];
                r.enabled = r === this.track
            }
        }, t.prototype.handleTracksChange = function (e) {
            this.selected(this.track.enabled)
        }, t
    }(gr);
    Ye.registerComponent("AudioTrackMenuItem", Lr);
    var Or = function (e) {
        _(t, e);

        function t(i) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            return y(this, t), n.tracks = i.audioTracks(), v(this, e.call(this, i, n))
        }

        return t.prototype.buildCSSClass = function () {
            return "vjs-audio-button " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.buildWrapperCSSClass = function () {
            return "vjs-audio-button " + e.prototype.buildWrapperCSSClass.call(this)
        }, t.prototype.createItems = function () {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
            this.hideThreshold_ = 1;
            for (var t = this.player_.audioTracks(), i = 0; i < t.length; i++) {
                var n = t[i];
                e.push(new Lr(this.player_, {track: n, selectable: !0, multiSelectable: !1}))
            }
            return e
        }, t
    }(mr);
    Or.prototype.controlText_ = "Audio Track", Ye.registerComponent("AudioTrackButton", Or);
    var Ir = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = n.rate, a = parseFloat(r, 10);
            n.label = r, n.selected = 1 === a, n.selectable = !0, n.multiSelectable = !1;
            var s = v(this, e.call(this, i, n));
            return s.label = r, s.rate = a, s.on(i, "ratechange", s.update), s
        }

        return t.prototype.handleClick = function (t) {
            e.prototype.handleClick.call(this), this.player().playbackRate(this.rate)
        }, t.prototype.update = function (e) {
            this.selected(this.player().playbackRate() === this.rate)
        }, t
    }(gr);
    Ir.prototype.contentElType = "button", Ye.registerComponent("PlaybackRateMenuItem", Ir);
    var Pr = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.updateVisibility(), r.updateLabel(), r.on(i, "loadstart", r.updateVisibility), r.on(i, "ratechange", r.updateLabel), r
        }

        return t.prototype.createEl = function () {
            var t = e.prototype.createEl.call(this);
            return this.labelEl_ = U("div", {
                className: "vjs-playback-rate-value",
                innerHTML: "1x"
            }), t.appendChild(this.labelEl_), t
        }, t.prototype.dispose = function () {
            this.labelEl_ = null, e.prototype.dispose.call(this)
        }, t.prototype.buildCSSClass = function () {
            return "vjs-playback-rate " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.buildWrapperCSSClass = function () {
            return "vjs-playback-rate " + e.prototype.buildWrapperCSSClass.call(this)
        }, t.prototype.createMenu = function () {
            var e = new fr(this.player()), t = this.playbackRates();
            if (t) for (var i = t.length - 1; i >= 0; i--) e.addChild(new Ir(this.player(), {rate: t[i] + "x"}));
            return e
        }, t.prototype.updateARIAAttributes = function () {
            this.el().setAttribute("aria-valuenow", this.player().playbackRate())
        }, t.prototype.handleClick = function (e) {
            for (var t = this.player().playbackRate(), i = this.playbackRates(), n = i[0], r = 0; r < i.length; r++) if (i[r] > t) {
                n = i[r];
                break
            }
            this.player().playbackRate(n)
        }, t.prototype.playbackRates = function () {
            return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates
        }, t.prototype.playbackRateSupported = function () {
            return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0
        }, t.prototype.updateVisibility = function (e) {
            this.playbackRateSupported() ? this.removeClass("vjs-hidden") : this.addClass("vjs-hidden")
        }, t.prototype.updateLabel = function (e) {
            this.playbackRateSupported() && (this.labelEl_.innerHTML = this.player().playbackRate() + "x")
        }, t
    }(pr);
    Pr.prototype.controlText_ = "Playback Rate", Ye.registerComponent("PlaybackRateMenuButton", Pr);
    var Rr = function (e) {
        _(t, e);

        function t() {
            return y(this, t), v(this, e.apply(this, arguments))
        }

        return t.prototype.buildCSSClass = function () {
            return "vjs-spacer " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.createEl = function () {
            return e.prototype.createEl.call(this, "div", {className: this.buildCSSClass()})
        }, t
    }(Ye);
    Ye.registerComponent("Spacer", Rr);
    var xr = function (e) {
        _(t, e);

        function t() {
            return y(this, t), v(this, e.apply(this, arguments))
        }

        return t.prototype.buildCSSClass = function () {
            return "vjs-custom-control-spacer " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.createEl = function () {
            var t = e.prototype.createEl.call(this, {className: this.buildCSSClass()});
            return t.innerHTML = " ", t
        }, t
    }(Rr);
    Ye.registerComponent("CustomControlSpacer", xr);
    var Dr = function (e) {
        _(t, e);

        function t() {
            return y(this, t), v(this, e.apply(this, arguments))
        }

        return t.prototype.createEl = function () {
            return e.prototype.createEl.call(this, "div", {className: "vjs-control-bar", dir: "ltr"})
        }, t
    }(Ye);
    Dr.prototype.options_ = {children: ["playToggle", "volumePanel", "currentTimeDisplay", "timeDivider", "durationDisplay", "progressControl", "liveDisplay", "remainingTimeDisplay", "customControlSpacer", "playbackRateMenuButton", "chaptersButton", "descriptionsButton", "subsCapsButton", "audioTrackButton", "fullscreenToggle"]}, Ye.registerComponent("ControlBar", Dr);
    var Ur = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var r = v(this, e.call(this, i, n));
            return r.on(i, "error", r.open), r
        }

        return t.prototype.buildCSSClass = function () {
            return "vjs-error-display " + e.prototype.buildCSSClass.call(this)
        }, t.prototype.content = function () {
            var e = this.player().error();
            return e ? this.localize(e.message) : ""
        }, t
    }(Dt);
    Ur.prototype.options_ = Xe(Dt.prototype.options_, {
        pauseOnOpen: !1,
        fillAlways: !0,
        temporary: !1,
        uncloseable: !0
    }), Ye.registerComponent("ErrorDisplay", Ur);
    var Mr = "vjs-text-track-settings", Br = ["#000", "Black"], jr = ["#00F", "Blue"], Nr = ["#0FF", "Cyan"],
        Fr = ["#0F0", "Green"], Vr = ["#F0F", "Magenta"], Gr = ["#F00", "Red"], Hr = ["#FFF", "White"],
        qr = ["#FF0", "Yellow"], zr = ["1", "Opaque"], Wr = ["0.5", "Semi-Transparent"], Xr = ["0", "Transparent"],
        Yr = {
            backgroundColor: {
                selector: ".vjs-bg-color > select",
                id: "captions-background-color-%s",
                label: "Color",
                options: [Br, Hr, Gr, Fr, jr, qr, Vr, Nr]
            },
            backgroundOpacity: {
                selector: ".vjs-bg-opacity > select",
                id: "captions-background-opacity-%s",
                label: "Transparency",
                options: [zr, Wr, Xr]
            },
            color: {
                selector: ".vjs-fg-color > select",
                id: "captions-foreground-color-%s",
                label: "Color",
                options: [Hr, Br, Gr, Fr, jr, qr, Vr, Nr]
            },
            edgeStyle: {
                selector: ".vjs-edge-style > select",
                id: "%s",
                label: "Text Edge Style",
                options: [["none", "None"], ["raised", "Raised"], ["depressed", "Depressed"], ["uniform", "Uniform"], ["dropshadow", "Dropshadow"]]
            },
            fontFamily: {
                selector: ".vjs-font-family > select",
                id: "captions-font-family-%s",
                label: "Font Family",
                options: [["proportionalSansSerif", "Proportional Sans-Serif"], ["monospaceSansSerif", "Monospace Sans-Serif"], ["proportionalSerif", "Proportional Serif"], ["monospaceSerif", "Monospace Serif"], ["casual", "Casual"], ["script", "Script"], ["small-caps", "Small Caps"]]
            },
            fontPercent: {
                selector: ".vjs-font-percent > select",
                id: "captions-font-size-%s",
                label: "Font Size",
                options: [["0.50", "50%"], ["0.75", "75%"], ["1.00", "100%"], ["1.25", "125%"], ["1.50", "150%"], ["1.75", "175%"], ["2.00", "200%"], ["3.00", "300%"], ["4.00", "400%"]],
                default: 2,
                parser: function (e) {
                    return "1.00" === e ? null : Number(e)
                }
            },
            textOpacity: {
                selector: ".vjs-text-opacity > select",
                id: "captions-foreground-opacity-%s",
                label: "Transparency",
                options: [zr, Wr]
            },
            windowColor: {selector: ".vjs-window-color > select", id: "captions-window-color-%s", label: "Color"},
            windowOpacity: {
                selector: ".vjs-window-opacity > select",
                id: "captions-window-opacity-%s",
                label: "Transparency",
                options: [Xr, Wr, zr]
            }
        };
    Yr.windowColor.options = Yr.backgroundColor.options;

    function Kr(e, t) {
        if (t && (e = t(e)), e && "none" !== e) return e
    }

    var $r = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t), n.temporary = !1;
            var r = v(this, e.call(this, i, n));
            return r.updateDisplay = Ie(r, r.updateDisplay), r.fill(), r.hasBeenOpened_ = r.hasBeenFilled_ = !0, r.endDialog = U("p", {
                className: "vjs-control-text",
                textContent: r.localize("End of dialog window.")
            }), r.el().appendChild(r.endDialog), r.setDefaults(), void 0 === n.persistTextTrackSettings && (r.options_.persistTextTrackSettings = r.options_.playerOptions.persistTextTrackSettings), r.on(r.$(".vjs-done-button"), "click", function () {
                r.saveSettings(), r.close()
            }), r.on(r.$(".vjs-default-button"), "click", function () {
                r.setDefaults(), r.updateDisplay()
            }), k(Yr, function (e) {
                r.on(r.$(e.selector), "change", r.updateDisplay)
            }), r.options_.persistTextTrackSettings && r.restoreSettings(), r
        }

        return t.prototype.dispose = function () {
            this.endDialog = null, e.prototype.dispose.call(this)
        }, t.prototype.createElSelect_ = function (e) {
            var t = this, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "",
                n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "label", r = Yr[e],
                a = r.id.replace("%s", this.id_), s = [i, a].join(" ").trim();
            return ["<" + n + ' id="' + a + '" class="' + ("label" === n ? "vjs-label" : "") + '">', this.localize(r.label), "</" + n + ">", '<select aria-labelledby="' + s + '">'].concat(r.options.map(function (e) {
                var i = a + "-" + e[1].replace(/\W+/g, "");
                return ['<option id="' + i + '" value="' + e[0] + '" ', 'aria-labelledby="' + s + " " + i + '">', t.localize(e[1]), "</option>"].join("")
            })).concat("</select>").join("")
        }, t.prototype.createElFgColor_ = function () {
            var e = "captions-text-legend-" + this.id_;
            return ['<fieldset class="vjs-fg-color vjs-track-setting">', '<legend id="' + e + '">', this.localize("Text"), "</legend>", this.createElSelect_("color", e), '<span class="vjs-text-opacity vjs-opacity">', this.createElSelect_("textOpacity", e), "</span>", "</fieldset>"].join("")
        }, t.prototype.createElBgColor_ = function () {
            var e = "captions-background-" + this.id_;
            return ['<fieldset class="vjs-bg-color vjs-track-setting">', '<legend id="' + e + '">', this.localize("Background"), "</legend>", this.createElSelect_("backgroundColor", e), '<span class="vjs-bg-opacity vjs-opacity">', this.createElSelect_("backgroundOpacity", e), "</span>", "</fieldset>"].join("")
        }, t.prototype.createElWinColor_ = function () {
            var e = "captions-window-" + this.id_;
            return ['<fieldset class="vjs-window-color vjs-track-setting">', '<legend id="' + e + '">', this.localize("Window"), "</legend>", this.createElSelect_("windowColor", e), '<span class="vjs-window-opacity vjs-opacity">', this.createElSelect_("windowOpacity", e), "</span>", "</fieldset>"].join("")
        }, t.prototype.createElColors_ = function () {
            return U("div", {
                className: "vjs-track-settings-colors",
                innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join("")
            })
        }, t.prototype.createElFont_ = function () {
            return U("div", {
                className: "vjs-track-settings-font",
                innerHTML: ['<fieldset class="vjs-font-percent vjs-track-setting">', this.createElSelect_("fontPercent", "", "legend"), "</fieldset>", '<fieldset class="vjs-edge-style vjs-track-setting">', this.createElSelect_("edgeStyle", "", "legend"), "</fieldset>", '<fieldset class="vjs-font-family vjs-track-setting">', this.createElSelect_("fontFamily", "", "legend"), "</fieldset>"].join("")
            })
        }, t.prototype.createElControls_ = function () {
            var e = this.localize("restore all settings to the default values");
            return U("div", {
                className: "vjs-track-settings-controls",
                innerHTML: ['<button class="vjs-default-button" title="' + e + '">', this.localize("Reset"), '<span class="vjs-control-text"> ' + e + "</span>", "</button>", '<button class="vjs-done-button">' + this.localize("Done") + "</button>"].join("")
            })
        }, t.prototype.content = function () {
            return [this.createElColors_(), this.createElFont_(), this.createElControls_()]
        }, t.prototype.label = function () {
            return this.localize("Caption Settings Dialog")
        }, t.prototype.description = function () {
            return this.localize("Beginning of dialog window. Escape will cancel and close the window.")
        }, t.prototype.buildCSSClass = function () {
            return e.prototype.buildCSSClass.call(this) + " vjs-text-track-settings"
        }, t.prototype.getValues = function () {
            var e = this;
            return function (e, t) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                return S(e).reduce(function (i, n) {
                    return t(i, e[n], n)
                }, i)
            }(Yr, function (t, i, n) {
                var r, a, s = (r = e.$(i.selector), a = i.parser, Kr(r.options[r.options.selectedIndex].value, a));
                return void 0 !== s && (t[n] = s), t
            }, {})
        }, t.prototype.setValues = function (e) {
            var t = this;
            k(Yr, function (i, n) {
                !function (e, t, i) {
                    if (t) for (var n = 0; n < e.options.length; n++) if (Kr(e.options[n].value, i) === t) {
                        e.selectedIndex = n;
                        break
                    }
                }(t.$(i.selector), e[n], i.parser)
            })
        }, t.prototype.setDefaults = function () {
            var e = this;
            k(Yr, function (t) {
                var i = t.hasOwnProperty("default") ? t.default : 0;
                e.$(t.selector).selectedIndex = i
            })
        }, t.prototype.restoreSettings = function () {
            var e = void 0;
            try {
                e = JSON.parse(r.localStorage.getItem(Mr))
            } catch (e) {
                p.warn(e)
            }
            e && this.setValues(e)
        }, t.prototype.saveSettings = function () {
            if (this.options_.persistTextTrackSettings) {
                var e = this.getValues();
                try {
                    Object.keys(e).length ? r.localStorage.setItem(Mr, JSON.stringify(e)) : r.localStorage.removeItem(Mr)
                } catch (e) {
                    p.warn(e)
                }
            }
        }, t.prototype.updateDisplay = function () {
            var e = this.player_.getChild("textTrackDisplay");
            e && e.updateDisplay()
        }, t.prototype.conditionalBlur_ = function () {
            this.previouslyActiveEl_ = null, this.off(l, "keydown", this.handleKeyDown);
            var e = this.player_.controlBar, t = e && e.subsCapsButton, i = e && e.captionsButton;
            t ? t.focus() : i && i.focus()
        }, t
    }(Dt);
    Ye.registerComponent("TextTrackSettings", $r);
    var Qr = function (e) {
        _(t, e);

        function t(i, n) {
            y(this, t);
            var a = n.ResizeObserver || r.ResizeObserver;
            null === n.ResizeObserver && (a = !1);
            var s = Xe({createEl: !a, reportTouchActivity: !1}, n), o = v(this, e.call(this, i, s));
            return o.ResizeObserver = n.ResizeObserver || r.ResizeObserver, o.loadListener_ = null, o.resizeObserver_ = null, o.debouncedHandler_ = Re(function () {
                o.resizeHandler()
            }, 100, !1, o), a ? (o.resizeObserver_ = new o.ResizeObserver(o.debouncedHandler_), o.resizeObserver_.observe(i.el())) : (o.loadListener_ = function () {
                o.el_ && o.el_.contentWindow && ve(o.el_.contentWindow, "resize", o.debouncedHandler_)
            }, o.one("load", o.loadListener_)), o
        }

        return t.prototype.createEl = function () {
            return e.prototype.createEl.call(this, "iframe", {className: "vjs-resize-manager"})
        }, t.prototype.resizeHandler = function () {
            this.player_ && this.player_.trigger && this.player_.trigger("playerresize")
        }, t.prototype.dispose = function () {
            this.debouncedHandler_ && this.debouncedHandler_.cancel(), this.resizeObserver_ && (this.player_.el() && this.resizeObserver_.unobserve(this.player_.el()), this.resizeObserver_.disconnect()), this.el_ && this.el_.contentWindow && be(this.el_.contentWindow, "resize", this.debouncedHandler_), this.loadListener_ && this.off("load", this.loadListener_), this.ResizeObserver = null, this.resizeObserver = null, this.debouncedHandler_ = null, this.loadListener_ = null
        }, t
    }(Ye);
    Ye.registerComponent("ResizeManager", Qr);
    var Jr = function (e) {
            var t = e.el();
            if (t.hasAttribute("src")) return e.triggerSourceset(t.src), !0;
            var i = e.$$("source"), n = [], r = "";
            if (!i.length) return !1;
            for (var a = 0; a < i.length; a++) {
                var s = i[a].src;
                s && -1 === n.indexOf(s) && n.push(s)
            }
            return !!n.length && (1 === n.length && (r = n[0]), e.triggerSourceset(r), !0)
        }, Zr = Object.defineProperty({}, "innerHTML", {
            get: function () {
                return this.cloneNode(!0).innerHTML
            }, set: function (e) {
                var t = l.createElement(this.nodeName.toLowerCase());
                t.innerHTML = e;
                for (var i = l.createDocumentFragment(); t.childNodes.length;) i.appendChild(t.childNodes[0]);
                return this.innerText = "", r.Element.prototype.appendChild.call(this, i), this.innerHTML
            }
        }), ea = function (e, t) {
            for (var i = {}, n = 0; n < e.length && !((i = Object.getOwnPropertyDescriptor(e[n], t)) && i.set && i.get); n++) ;
            return i.enumerable = !0, i.configurable = !0, i
        }, ta = function (e) {
            var t = e.el();
            if (!t.resetSourceWatch_) {
                var i, n = {},
                    a = (i = e, ea([i.el(), r.HTMLMediaElement.prototype, r.Element.prototype, Zr], "innerHTML")),
                    s = function (i) {
                        return function () {
                            for (var n = arguments.length, r = Array(n), a = 0; a < n; a++) r[a] = arguments[a];
                            var s = i.apply(t, r);
                            return Jr(e), s
                        }
                    };
                ["append", "appendChild", "insertAdjacentHTML"].forEach(function (e) {
                    t[e] && (n[e] = t[e], t[e] = s(n[e]))
                }), Object.defineProperty(t, "innerHTML", Xe(a, {set: s(a.set)})), t.resetSourceWatch_ = function () {
                    t.resetSourceWatch_ = null, Object.keys(n).forEach(function (e) {
                        t[e] = n[e]
                    }), Object.defineProperty(t, "innerHTML", a)
                }, e.one("sourceset", t.resetSourceWatch_)
            }
        }, ia = Object.defineProperty({}, "src", {
            get: function () {
                return this.hasAttribute("src") ? $t(r.Element.prototype.getAttribute.call(this, "src")) : ""
            }, set: function (e) {
                return r.Element.prototype.setAttribute.call(this, "src", e), e
            }
        }), na = function (e) {
            if (e.featuresSourceset) {
                var t = e.el();
                if (!t.resetSourceset_) {
                    var i, n = (i = e, ea([i.el(), r.HTMLMediaElement.prototype, ia], "src")), a = t.setAttribute,
                        s = t.load;
                    Object.defineProperty(t, "src", Xe(n, {
                        set: function (i) {
                            var r = n.set.call(t, i);
                            return e.triggerSourceset(t.src), r
                        }
                    })), t.setAttribute = function (i, n) {
                        var r = a.call(t, i, n);
                        return /src/i.test(i) && e.triggerSourceset(t.src), r
                    }, t.load = function () {
                        var i = s.call(t);
                        return Jr(e) || (e.triggerSourceset(""), ta(e)), i
                    }, t.currentSrc ? e.triggerSourceset(t.currentSrc) : Jr(e) || ta(e), t.resetSourceset_ = function () {
                        t.resetSourceset_ = null, t.load = s, t.setAttribute = a, Object.defineProperty(t, "src", n), t.resetSourceWatch_ && t.resetSourceWatch_()
                    }
                }
            }
        },
        ra = b(["Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\n            This may prevent text tracks from loading."], ["Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\n            This may prevent text tracks from loading."]),
        aa = function (e) {
            _(t, e);

            function t(i, n) {
                y(this, t);
                var r = v(this, e.call(this, i, n)), a = i.source, s = !1;
                if (a && (r.el_.currentSrc !== a.src || i.tag && 3 === i.tag.initNetworkState_) ? r.setSource(a) : r.handleLateInit_(r.el_), i.enableSourceset && r.setupSourcesetHandling_(), r.el_.hasChildNodes()) {
                    for (var o = r.el_.childNodes, u = o.length, l = []; u--;) {
                        var d = o[u];
                        "track" === d.nodeName.toLowerCase() && (r.featuresNativeTextTracks ? (r.remoteTextTrackEls().addTrackElement_(d), r.remoteTextTracks().addTrack(d.track), r.textTracks().addTrack(d.track), s || r.el_.hasAttribute("crossorigin") || !Jt(d.src) || (s = !0)) : l.push(d))
                    }
                    for (var c = 0; c < l.length; c++) r.el_.removeChild(l[c])
                }
                return r.proxyNativeTracks_(), r.featuresNativeTextTracks && s && p.warn(m(ra)), r.restoreMetadataTracksInIOSNativePlayer_(), (ft || Ze || at) && !0 === i.nativeControlsForTouch && r.setControls(!0), r.proxyWebkitFullscreen_(), r.triggerReady(), r
            }

            return t.prototype.dispose = function () {
                this.el_ && this.el_.resetSourceset_ && this.el_.resetSourceset_(), t.disposeMediaElement(this.el_), this.options_ = null, e.prototype.dispose.call(this)
            }, t.prototype.setupSourcesetHandling_ = function () {
                na(this)
            }, t.prototype.restoreMetadataTracksInIOSNativePlayer_ = function () {
                var e = this.textTracks(), t = void 0, i = function () {
                    t = [];
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        "metadata" === n.kind && t.push({track: n, storedMode: n.mode})
                    }
                };
                i(), e.addEventListener("change", i), this.on("dispose", function () {
                    return e.removeEventListener("change", i)
                });
                var n = function i() {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        "disabled" === r.track.mode && r.track.mode !== r.storedMode && (r.track.mode = r.storedMode)
                    }
                    e.removeEventListener("change", i)
                };
                this.on("webkitbeginfullscreen", function () {
                    e.removeEventListener("change", i), e.removeEventListener("change", n), e.addEventListener("change", n)
                }), this.on("webkitendfullscreen", function () {
                    e.removeEventListener("change", i), e.addEventListener("change", i), e.removeEventListener("change", n)
                })
            }, t.prototype.overrideNative_ = function (e, t) {
                var i = this;
                if (t === this["featuresNative" + e + "Tracks"]) {
                    var n = e.toLowerCase();
                    this[n + "TracksListeners_"] && Object.keys(this[n + "TracksListeners_"]).forEach(function (e) {
                        i.el()[n + "Tracks"].removeEventListener(e, i[n + "TracksListeners_"][e])
                    }), this["featuresNative" + e + "Tracks"] = !t, this[n + "TracksListeners_"] = null, this.proxyNativeTracksForType_(n)
                }
            }, t.prototype.overrideNativeAudioTracks = function (e) {
                this.overrideNative_("Audio", e)
            }, t.prototype.overrideNativeVideoTracks = function (e) {
                this.overrideNative_("Video", e)
            }, t.prototype.proxyNativeTracksForType_ = function (e) {
                var t = this, i = xi[e], n = this.el()[i.getterName], r = this[i.getterName]();
                if (this["featuresNative" + i.capitalName + "Tracks"] && n && n.addEventListener) {
                    var a = {
                        change: function (e) {
                            r.trigger({type: "change", target: r, currentTarget: r, srcElement: r})
                        }, addtrack: function (e) {
                            r.addTrack(e.track)
                        }, removetrack: function (e) {
                            r.removeTrack(e.track)
                        }
                    }, s = function () {
                        for (var e = [], t = 0; t < r.length; t++) {
                            for (var i = !1, a = 0; a < n.length; a++) if (n[a] === r[t]) {
                                i = !0;
                                break
                            }
                            i || e.push(r[t])
                        }
                        for (; e.length;) r.removeTrack(e.shift())
                    };
                    this[i.getterName + "Listeners_"] = a, Object.keys(a).forEach(function (e) {
                        var i = a[e];
                        n.addEventListener(e, i), t.on("dispose", function (t) {
                            return n.removeEventListener(e, i)
                        })
                    }), this.on("loadstart", s), this.on("dispose", function (e) {
                        return t.off("loadstart", s)
                    })
                }
            }, t.prototype.proxyNativeTracks_ = function () {
                var e = this;
                xi.names.forEach(function (t) {
                    e.proxyNativeTracksForType_(t)
                })
            }, t.prototype.createEl = function () {
                var e = this.options_.tag;
                if (!e || !this.options_.playerElIngest && !this.movingMediaElementInDOM) {
                    if (e) {
                        var i = e.cloneNode(!0);
                        e.parentNode && e.parentNode.insertBefore(i, e), t.disposeMediaElement(e), e = i
                    } else {
                        e = l.createElement("video");
                        var n = Xe({}, this.options_.tag && H(this.options_.tag));
                        ft && !0 === this.options_.nativeControlsForTouch || delete n.controls, G(e, w(n, {
                            id: this.options_.techId,
                            class: "vjs-tech"
                        }))
                    }
                    e.playerId = this.options_.playerId
                }
                void 0 !== this.options_.preload && z(e, "preload", this.options_.preload);
                for (var r = ["loop", "muted", "playsinline", "autoplay", "stretch", "fluent"], a = 0; a < r.length; a++) {
                    var s = r[a], o = this.options_[s];
                    void 0 !== o && (o ? z(e, s, s) : W(e, s), e[s] = o)
                }
                return e
            }, t.prototype.handleLateInit_ = function (e) {
                if (0 !== e.networkState && 3 !== e.networkState) {
                    if (0 === e.readyState) {
                        var t = !1, i = function () {
                            t = !0
                        };
                        this.on("loadstart", i);
                        var n = function () {
                            t || this.trigger("loadstart")
                        };
                        return this.on("loadedmetadata", n), void this.ready(function () {
                            this.off("loadstart", i), this.off("loadedmetadata", n), t || this.trigger("loadstart")
                        })
                    }
                    var r = ["loadstart"];
                    r.push("loadedmetadata"), e.readyState >= 2 && r.push("loadeddata"), e.readyState >= 3 && r.push("canplay"), e.readyState >= 4 && r.push("canplaythrough"), this.ready(function () {
                        r.forEach(function (e) {
                            this.trigger(e)
                        }, this)
                    })
                }
            }, t.prototype.setCurrentTime = function (e) {
                try {
                    this.el_.currentTime = e
                } catch (e) {
                    p(e, "Video is not ready. (Video.js)")
                }
            }, t.prototype.duration = function () {
                var e = this;
                if (this.el_.duration === 1 / 0 && nt && ut && 0 === this.el_.currentTime) {
                    var t = function t() {
                        e.el_.currentTime > 0 && (e.el_.duration === 1 / 0 && e.trigger("durationchange"), e.off("timeupdate", t))
                    };
                    return this.on("timeupdate", t), NaN
                }
                return this.el_.duration || NaN
            }, t.prototype.width = function () {
                return this.el_.offsetWidth
            }, t.prototype.height = function () {
                return this.el_.offsetHeight
            }, t.prototype.proxyWebkitFullscreen_ = function () {
                var e = this;
                if ("webkitDisplayingFullscreen" in this.el_) {
                    var t = function () {
                        this.trigger("fullscreenchange", {isFullscreen: !1})
                    }, i = function () {
                        "webkitPresentationMode" in this.el_ && "picture-in-picture" !== this.el_.webkitPresentationMode && (this.one("webkitendfullscreen", t), this.trigger("fullscreenchange", {isFullscreen: !0}))
                    };
                    this.on("webkitbeginfullscreen", i), this.on("dispose", function () {
                        e.off("webkitbeginfullscreen", i), e.off("webkitendfullscreen", t)
                    })
                }
            }, t.prototype.supportsFullScreen = function () {
                if ("function" == typeof this.el_.webkitEnterFullScreen) {
                    var e = r.navigator && r.navigator.userAgent || "";
                    if (/Android/.test(e) || !/Chrome|Mac OS X 10.5/.test(e)) return !0
                }
                return !1
            }, t.prototype.enterFullScreen = function () {
                var e = this.el_;
                e.paused && e.networkState <= e.HAVE_METADATA ? (this.el_.play(), this.setTimeout(function () {
                    e.pause(), e.webkitEnterFullScreen()
                }, 0)) : e.webkitEnterFullScreen()
            }, t.prototype.exitFullScreen = function () {
                this.el_.webkitExitFullScreen()
            }, t.prototype.src = function (e) {
                if (void 0 === e) return this.el_.src;
                this.setSrc(e)
            }, t.prototype.reset = function () {
                t.resetMediaElement(this.el_)
            }, t.prototype.currentSrc = function () {
                return this.currentSource_ ? this.currentSource_.src : this.el_.currentSrc
            }, t.prototype.setControls = function (e) {
                this.el_.controls = !!e
            }, t.prototype.addTextTrack = function (t, i, n) {
                return this.featuresNativeTextTracks ? this.el_.addTextTrack(t, i, n) : e.prototype.addTextTrack.call(this, t, i, n)
            }, t.prototype.createRemoteTextTrack = function (t) {
                if (!this.featuresNativeTextTracks) return e.prototype.createRemoteTextTrack.call(this, t);
                var i = l.createElement("track");
                return t.kind && (i.kind = t.kind), t.label && (i.label = t.label), (t.language || t.srclang) && (i.srclang = t.language || t.srclang), t.default && (i.default = t.default), t.id && (i.id = t.id), t.src && (i.src = t.src), i
            }, t.prototype.addRemoteTextTrack = function (t, i) {
                var n = e.prototype.addRemoteTextTrack.call(this, t, i);
                return this.featuresNativeTextTracks && this.el().appendChild(n), n
            }, t.prototype.removeRemoteTextTrack = function (t) {
                if (e.prototype.removeRemoteTextTrack.call(this, t), this.featuresNativeTextTracks) for (var i = this.$$("track"), n = i.length; n--;) t !== i[n] && t !== i[n].track || this.el().removeChild(i[n])
            }, t.prototype.getVideoPlaybackQuality = function () {
                if ("function" == typeof this.el().getVideoPlaybackQuality) return this.el().getVideoPlaybackQuality();
                var e = {};
                return void 0 !== this.el().webkitDroppedFrameCount && void 0 !== this.el().webkitDecodedFrameCount && (e.droppedVideoFrames = this.el().webkitDroppedFrameCount, e.totalVideoFrames = this.el().webkitDecodedFrameCount), r.performance && "function" == typeof r.performance.now ? e.creationTime = r.performance.now() : r.performance && r.performance.timing && "number" == typeof r.performance.timing.navigationStart && (e.creationTime = r.Date.now() - r.performance.timing.navigationStart), e
            }, t
        }(_n);
    if (P()) {
        aa.TEST_VID = l.createElement("video");
        var sa = l.createElement("track");
        sa.kind = "captions", sa.srclang = "en", sa.label = "English", aa.TEST_VID.appendChild(sa)
    }
    aa.isSupported = function () {
        try {
            aa.TEST_VID.volume = .5
        } catch (e) {
            return !1
        }
        return !(!aa.TEST_VID || !aa.TEST_VID.canPlayType)
    }, aa.canPlayType = function (e) {
        return aa.TEST_VID.canPlayType(e)
    }, aa.canPlaySource = function (e, t) {
        return aa.canPlayType(e.type)
    }, aa.canControlVolume = function () {
        try {
            var e = aa.TEST_VID.volume;
            return aa.TEST_VID.volume = e / 2 + .1, e !== aa.TEST_VID.volume
        } catch (e) {
            return !1
        }
    }, aa.canMuteVolume = function () {
        try {
            var e = aa.TEST_VID.muted;
            return aa.TEST_VID.muted = !e, aa.TEST_VID.muted ? z(aa.TEST_VID, "muted", "muted") : W(aa.TEST_VID, "muted"), e !== aa.TEST_VID.muted
        } catch (e) {
            return !1
        }
    }, aa.canControlPlaybackRate = function () {
        if (nt && ut && lt < 58) return !1;
        try {
            var e = aa.TEST_VID.playbackRate;
            return aa.TEST_VID.playbackRate = e / 2 + .1, e !== aa.TEST_VID.playbackRate
        } catch (e) {
            return !1
        }
    }, aa.canOverrideAttributes = function () {
        try {
            var e = function () {
            };
            Object.defineProperty(l.createElement("video"), "src", {
                get: e,
                set: e
            }), Object.defineProperty(l.createElement("audio"), "src", {
                get: e,
                set: e
            }), Object.defineProperty(l.createElement("video"), "innerHTML", {
                get: e,
                set: e
            }), Object.defineProperty(l.createElement("audio"), "innerHTML", {get: e, set: e})
        } catch (e) {
            return !1
        }
        return !0
    }, aa.supportsNativeTextTracks = function () {
        return ht || tt && ut
    }, aa.supportsNativeVideoTracks = function () {
        return !(!aa.TEST_VID || !aa.TEST_VID.videoTracks)
    }, aa.supportsNativeAudioTracks = function () {
        return !(!aa.TEST_VID || !aa.TEST_VID.audioTracks)
    }, aa.Events = ["loadstart", "suspend", "abort", "error", "emptied", "stalled", "loadedmetadata", "loadeddata", "canplay", "canplaythrough", "playing", "waiting", "seeking", "seeked", "ended", "durationchange", "timeupdate", "progress", "play", "pause", "ratechange", "resize", "volumechange"], aa.prototype.featuresVolumeControl = aa.canControlVolume(), aa.prototype.featuresMuteControl = aa.canMuteVolume(), aa.prototype.featuresPlaybackRate = aa.canControlPlaybackRate(), aa.prototype.featuresSourceset = aa.canOverrideAttributes(), aa.prototype.movingMediaElementInDOM = !tt, aa.prototype.featuresFullscreenResize = !0, aa.prototype.featuresProgressEvents = !0, aa.prototype.featuresTimeupdateEvents = !0, aa.prototype.featuresNativeTextTracks = aa.supportsNativeTextTracks(), aa.prototype.featuresNativeVideoTracks = aa.supportsNativeVideoTracks(), aa.prototype.featuresNativeAudioTracks = aa.supportsNativeAudioTracks();
    var oa = aa.TEST_VID && aa.TEST_VID.constructor.prototype.canPlayType,
        ua = /^application\/(?:x-|vnd\.apple\.)mpegurl/i;
    aa.patchCanPlayType = function () {
        rt >= 4 && !st && !ut && (aa.TEST_VID.constructor.prototype.canPlayType = function (e) {
            return e && ua.test(e) ? "maybe" : oa.call(this, e)
        })
    }, aa.unpatchCanPlayType = function () {
        var e = aa.TEST_VID.constructor.prototype.canPlayType;
        return aa.TEST_VID.constructor.prototype.canPlayType = oa, e
    }, aa.patchCanPlayType(), aa.disposeMediaElement = function (e) {
        if (e) {
            for (e.parentNode && e.parentNode.removeChild(e); e.hasChildNodes();) e.removeChild(e.firstChild);
            e.removeAttribute("src"), "function" == typeof e.load && function () {
                try {
                    e.load()
                } catch (e) {
                }
            }()
        }
    }, aa.resetMediaElement = function (e) {
        if (e) {
            for (var t = e.querySelectorAll("source"), i = t.length; i--;) e.removeChild(t[i]);
            e.removeAttribute("src"), "function" == typeof e.load && function () {
                try {
                    e.load()
                } catch (e) {
                }
            }()
        }
    }, ["muted", "defaultMuted", "autoplay", "stretch", "fluent", "controls", "loop", "playsinline"].forEach(function (e) {
        aa.prototype[e] = function () {
            return this.el_[e] || this.el_.hasAttribute(e)
        }
    }), ["muted", "defaultMuted", "autoplay", "loop", "playsinline"].forEach(function (e) {
        aa.prototype["set" + We(e)] = function (t) {
            this.el_[e] = t, t ? this.el_.setAttribute(e, e) : this.el_.removeAttribute(e)
        }
    }), ["paused", "currentTime", "buffered", "volume", "poster", "preload", "error", "seeking", "seekable", "ended", "playbackRate", "defaultPlaybackRate", "played", "networkState", "readyState", "videoWidth", "videoHeight"].forEach(function (e) {
        aa.prototype[e] = function () {
            return this.el_[e]
        }
    }), ["volume", "src", "poster", "preload", "playbackRate", "defaultPlaybackRate"].forEach(function (e) {
        aa.prototype["set" + We(e)] = function (t) {
            this.el_[e] = t
        }
    }), ["pause", "load", "play"].forEach(function (e) {
        aa.prototype[e] = function () {
            return this.el_[e]()
        }
    }), _n.withSourceHandlers(aa), aa.nativeSourceHandler = {}, aa.nativeSourceHandler.canPlayType = function (e) {
        try {
            return aa.TEST_VID.canPlayType(e)
        } catch (e) {
            return ""
        }
    }, aa.nativeSourceHandler.canHandleSource = function (e, t) {
        if (e.type) return aa.nativeSourceHandler.canPlayType(e.type);
        if (e.src) {
            var i = Qt(e.src);
            return aa.nativeSourceHandler.canPlayType("video/" + i)
        }
        return ""
    }, aa.nativeSourceHandler.handleSource = function (e, t, i) {
        t.setSrc(e.src)
    }, aa.nativeSourceHandler.dispose = function () {
    }, aa.registerSourceHandler(aa.nativeSourceHandler), _n.registerTech("Html5", aa);
    var la = b(["\n        Using the tech directly can be dangerous. I hope you know what you're doing.\n        See https://github.com/videojs/video.js/issues/2617 for more info.\n      "], ["\n        Using the tech directly can be dangerous. I hope you know what you're doing.\n        See https://github.com/videojs/video.js/issues/2617 for more info.\n      "]),
        da = ["progress", "abort", "suspend", "emptied", "stalled", "loadedmetadata", "loadeddata", "timeupdate", "resize", "volumechange", "texttrackchange"],
        ca = {canplay: "CanPlay", canplaythrough: "CanPlayThrough", playing: "Playing", seeked: "Seeked"},
        ha = function (t) {
            _(i, t);

            function i(n, r, a) {
                if (y(this, i), n.id = n.id || r.id || "vjs_video_" + ue(), (r = w(i.getTagSettings(n), r)).initChildren = !1, r.createEl = !1, r.evented = !1, r.reportTouchActivity = !1, !r.language) if ("function" == typeof n.closest) {
                    var s = n.closest("[lang]");
                    s && s.getAttribute && (r.language = s.getAttribute("lang"))
                } else for (var o = n; o && 1 === o.nodeType;) {
                    if (H(o).hasOwnProperty("lang")) {
                        r.language = o.getAttribute("lang");
                        break
                    }
                    o = o.parentNode
                }
                var u = v(this, t.call(this, null, r, a));
                if (u.isPosterFromTech_ = !1, u.queuedCallbacks_ = [], u.isReady_ = !1, u.hasStarted_ = !1, u.userActive_ = !1, !u.options_ || !u.options_.techOrder || !u.options_.techOrder.length) throw new Error("No techOrder specified. Did you overwrite videojs.options instead of just changing the properties you want to override?");
                if (u.tag = n, u.tagAttributes = n && H(n), u.language(u.options_.language), r.languages) {
                    var l = {};
                    Object.getOwnPropertyNames(r.languages).forEach(function (e) {
                        l[e.toLowerCase()] = r.languages[e]
                    }), u.languages_ = l
                } else u.languages_ = i.prototype.options_.languages;
                u.cache_ = {}, u.poster_ = r.poster || "", u.controls_ = !!r.controls, u.cache_.lastVolume = 1, n.controls = !1, n.removeAttribute("controls"), n.hasAttribute("autoplay") ? u.options_.autoplay = !0 : u.autoplay(u.options_.autoplay), u.scrubbing_ = !1, u.el_ = u.createEl(), u.cache_.lastPlaybackRate = u.defaultPlaybackRate(), He(u, {eventBusKey: "el_"});
                var d = Xe(u.options_);
                if (r.plugins) {
                    var c = r.plugins;
                    Object.keys(c).forEach(function (e) {
                        if ("function" != typeof this[e]) throw new Error('plugin "' + e + '" does not exist');
                        this[e](c[e])
                    }, u)
                }
                u.options_.playerOptions = d, u.middleware_ = [], u.initChildren(), u.isAudio("audio" === n.nodeName.toLowerCase()), u.controls() ? u.addClass("vjs-controls-enabled") : u.addClass("vjs-controls-disabled"), u.el_.setAttribute("role", "region"), u.isAudio() ? u.el_.setAttribute("aria-label", u.localize("Audio Player")) : u.el_.setAttribute("aria-label", u.localize("Video Player")), u.isAudio() && u.addClass("vjs-audio"), u.flexNotSupported_() && u.addClass("vjs-no-flex"), tt || u.addClass("vjs-workinghover"), i.players[u.id_] = u;
                var h = e.split(".")[0];
                return u.addClass("vjs-v" + h), u.userActive(!0), u.reportUserActivity(), u.one("play", u.listenForUserActivity_), u.on("fullscreenchange", u.handleFullscreenChange_), u.on("stageclick", u.handleStageClick_), u.changingSrc_ = !1, u.playWaitingForReady_ = !1, u.playOnLoadstart_ = null, u
            }

            return i.prototype.dispose = function () {
                this.trigger("dispose"), this.off("dispose"), this.styleEl_ && this.styleEl_.parentNode && (this.styleEl_.parentNode.removeChild(this.styleEl_), this.styleEl_ = null), i.players[this.id_] = null, this.tag && this.tag.player && (this.tag.player = null), this.el_ && this.el_.player && (this.el_.player = null), this.tech_ && (this.tech_.dispose(), this.isPosterFromTech_ = !1, this.poster_ = ""), this.playerElIngest_ && (this.playerElIngest_ = null), this.tag && (this.tag = null), bn[this.id()] = null;
                t.prototype.dispose.call(this)
            }, i.prototype.createEl = function () {
                var e = this.tag, i = void 0,
                    n = this.playerElIngest_ = e.parentNode && e.parentNode.hasAttribute && e.parentNode.hasAttribute("data-vjs-player"),
                    a = "video-js" === this.tag.tagName.toLowerCase();
                n ? i = this.el_ = e.parentNode : a || (i = this.el_ = t.prototype.createEl.call(this, "div"));
                var s = H(e);
                if (a) {
                    for (i = this.el_ = e, e = this.tag = l.createElement("video"); i.children.length;) e.appendChild(i.firstChild);
                    j(i, "video-js") || N(i, "video-js"), i.appendChild(e), n = this.playerElIngest_ = i, Object.keys(i).forEach(function (t) {
                        e[t] = i[t]
                    })
                }
                if (e.setAttribute("tabindex", "-1"), s.tabindex = "-1", dt && (e.setAttribute("role", "application"), s.role = "application"), e.removeAttribute("width"), e.removeAttribute("height"), "width" in s && delete s.width, "height" in s && delete s.height, Object.getOwnPropertyNames(s).forEach(function (t) {
                    a && "class" === t || i.setAttribute(t, s[t]), a && e.setAttribute(t, s[t])
                }), e.playerId = e.id, e.id += "_html5_api", e.className = "vjs-tech", e.player = i.player = this, this.addClass("vjs-paused"), !0 !== r.VIDEOJS_NO_DYNAMIC_STYLE) {
                    this.styleEl_ = Le("vjs-styles-dimensions");
                    var o = re(".vjs-styles-defaults"), u = re("head");
                    u.insertBefore(this.styleEl_, o ? o.nextSibling : u.firstChild)
                }
                this.width(this.options_.width), this.height(this.options_.height), this.fluid(this.options_.fluid), this.aspectRatio(this.options_.aspectRatio);
                for (var d = e.getElementsByTagName("a"), c = 0; c < d.length; c++) {
                    var h = d.item(c);
                    N(h, "vjs-hidden"), h.setAttribute("hidden", "hidden")
                }
                return e.initNetworkState_ = e.networkState, e.parentNode && !n && e.parentNode.insertBefore(i, e), B(e, i), this.children_.unshift(e), this.el_.setAttribute("lang", this.language_), this.el_ = i, i
            }, i.prototype.width = function (e) {
                return this.dimension("width", e)
            }, i.prototype.height = function (e) {
                return this.dimension("height", e)
            }, i.prototype.dimension = function (e, t) {
                var i = e + "_";
                if (void 0 === t) return this[i] || 0;
                if ("" === t) return this[i] = void 0, void this.updateStyleEl_();
                var n = parseFloat(t);
                isNaN(n) ? p.error('Improper value "' + t + '" supplied for for ' + e) : (this[i] = n, this.updateStyleEl_())
            }, i.prototype.fluid = function (e) {
                if (void 0 === e) return !!this.fluid_;
                this.fluid_ = !!e, e ? this.addClass("vjs-fluid") : this.removeClass("vjs-fluid"), this.updateStyleEl_()
            }, i.prototype.aspectRatio = function (e) {
                if (void 0 === e) return this.aspectRatio_;
                if (!/^\d+\:\d+$/.test(e)) throw new Error("Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.");
                this.aspectRatio_ = e, this.fluid(!0), this.updateStyleEl_()
            }, i.prototype.updateStyleEl_ = function () {
                if (!0 !== r.VIDEOJS_NO_DYNAMIC_STYLE) {
                    var e = void 0, t = void 0, i = void 0,
                        n = (void 0 !== this.aspectRatio_ && "auto" !== this.aspectRatio_ ? this.aspectRatio_ : this.videoWidth() > 0 ? this.videoWidth() + ":" + this.videoHeight() : "16:9").split(":"),
                        a = n[1] / n[0];
                    e = void 0 !== this.width_ ? this.width_ : void 0 !== this.height_ ? this.height_ / a : this.videoWidth() || 300, t = void 0 !== this.height_ ? this.height_ : e * a, i = /^[^a-zA-Z]/.test(this.id()) ? "dimensions-" + this.id() : this.id() + "-dimensions", this.addClass(i), Oe(this.styleEl_, "\n      ." + i + " {\n        width: " + e + "px;\n        height: " + t + "px;\n      }\n\n      ." + i + ".vjs-fluid {\n        padding-top: " + 100 * a + "%;\n      }\n    ")
                } else {
                    var s = "number" == typeof this.width_ ? this.width_ : this.options_.width,
                        o = "number" == typeof this.height_ ? this.height_ : this.options_.height,
                        u = this.tech_ && this.tech_.el();
                    u && (s >= 0 && (u.width = s), o >= 0 && (u.height = o))
                }
            }, i.prototype.loadTech_ = function (e, t) {
                var i = this;
                this.tech_ && this.unloadTech_();
                var n = We(e), r = e.charAt(0).toLowerCase() + e.slice(1);
                "Html5" !== n && this.tag && (_n.getTech("Html5").disposeMediaElement(this.tag), this.tag.player = null, this.tag = null), this.techName_ = n, this.isReady_ = !1;
                var a = {
                    source: t,
                    autoplay: "string" != typeof this.autoplay() && this.autoplay(),
                    nativeControlsForTouch: this.options_.nativeControlsForTouch,
                    playerId: this.id(),
                    techId: this.id() + "_" + r + "_api",
                    playsinline: this.options_.playsinline,
                    stretch: this.options_.stretch,
                    fluent: this.options_.fluent,
                    preload: this.options_.preload,
                    loop: this.options_.loop,
                    muted: this.options_.muted,
                    poster: this.poster(),
                    language: this.language(),
                    playerElIngest: this.playerElIngest_ || !1,
                    "vtt.js": this.options_["vtt.js"],
                    canOverridePoster: !!this.options_.techCanOverridePoster,
                    enableSourceset: this.options_.enableSourceset
                };
                Ui.names.forEach(function (e) {
                    var t = Ui[e];
                    a[t.getterName] = i[t.privateName]
                }), w(a, this.options_[n]), w(a, this.options_[r]), w(a, this.options_[e.toLowerCase()]), this.tag && (a.tag = this.tag), t && t.src === this.cache_.src && this.cache_.currentTime > 0 && (a.startTime = this.cache_.currentTime);
                var s = _n.getTech(e);
                if (!s) throw new Error("No Tech named '" + n + "' exists! '" + n + "' should be registered using videojs.registerTech()'");
                this.tech_ = new s(a), this.tech_.ready(Ie(this, this.handleTechReady_), !0), Rt(this.textTracksJson_ || [], this.tech_), da.forEach(function (e) {
                    i.on(i.tech_, e, i["handleTech" + We(e) + "_"])
                }), Object.keys(ca).forEach(function (e) {
                    i.on(i.tech_, e, function (t) {
                        0 === i.tech_.playbackRate() && i.tech_.seeking() ? i.queuedCallbacks_.push({
                            callback: i["handleTech" + ca[e] + "_"].bind(i),
                            event: t
                        }) : i["handleTech" + ca[e] + "_"](t)
                    })
                }), this.on(this.tech_, "loadstart", this.handleTechLoadStart_), this.on(this.tech_, "sourceset", this.handleTechSourceset_), this.on(this.tech_, "waiting", this.handleTechWaiting_), this.on(this.tech_, "ended", this.handleTechEnded_), this.on(this.tech_, "seeking", this.handleTechSeeking_), this.on(this.tech_, "play", this.handleTechPlay_), this.on(this.tech_, "firstplay", this.handleTechFirstPlay_), this.on(this.tech_, "pause", this.handleTechPause_), this.on(this.tech_, "durationchange", this.handleTechDurationChange_), this.on(this.tech_, "fullscreenchange", this.handleTechFullscreenChange_), this.on(this.tech_, "fullscreentoggle", this.handleTechFullscreenToggle_), this.on(this.tech_, "error", this.handleTechError_), this.on(this.tech_, "loadedmetadata", this.updateStyleEl_), this.on(this.tech_, "posterchange", this.handleTechPosterChange_), this.on(this.tech_, "textdata", this.handleTechTextData_), this.on(this.tech_, "ratechange", this.handleTechRateChange_), this.usingNativeControls(this.techGet_("controls")), this.controls() && !this.usingNativeControls() && this.addTechControlsListeners_(), this.tech_.el().parentNode === this.el() || "Html5" === n && this.tag || B(this.tech_.el(), this.el()), this.tag && (this.tag.player = null, this.tag = null)
            }, i.prototype.unloadTech_ = function () {
                var e = this;
                Ui.names.forEach(function (t) {
                    var i = Ui[t];
                    e[i.privateName] = e[i.getterName]()
                }), this.textTracksJson_ = Pt(this.tech_), this.isReady_ = !1, this.tech_.dispose(), this.tech_ = !1, this.isPosterFromTech_ && (this.poster_ = "", this.trigger("posterchange")), this.isPosterFromTech_ = !1
            }, i.prototype.tech = function (e) {
                return void 0 === e && p.warn(m(la)), this.tech_
            }, i.prototype.addTechControlsListeners_ = function () {
                this.removeTechControlsListeners_(), this.on(this.tech_, "mousedown", this.handleTechClick_), this.on(this.tech_, "dblclick", this.handleTechDoubleClick_), this.on(this.tech_, "touchstart", this.handleTechTouchStart_), this.on(this.tech_, "touchmove", this.handleTechTouchMove_), this.on(this.tech_, "touchend", this.handleTechTouchEnd_), this.on(this.tech_, "tap", this.handleTechTap_)
            }, i.prototype.removeTechControlsListeners_ = function () {
                this.off(this.tech_, "tap", this.handleTechTap_), this.off(this.tech_, "touchstart", this.handleTechTouchStart_), this.off(this.tech_, "touchmove", this.handleTechTouchMove_), this.off(this.tech_, "touchend", this.handleTechTouchEnd_), this.off(this.tech_, "mousedown", this.handleTechClick_), this.off(this.tech_, "dblclick", this.handleTechDoubleClick_)
            }, i.prototype.handleTechReady_ = function () {
                this.triggerReady(), this.cache_.volume && this.techCall_("setVolume", this.cache_.volume), this.handleTechPosterChange_(), this.handleTechDurationChange_()
            }, i.prototype.handleTechLoadStart_ = function () {
                this.removeClass("vjs-ended"), this.removeClass("vjs-seeking"), this.error(null), this.paused() ? (this.hasStarted(!1), this.trigger("loadstart")) : (this.trigger("loadstart"), this.trigger("firstplay")), this.manualAutoplay_(this.autoplay())
            }, i.prototype.manualAutoplay_ = function (e) {
                var t = this;
                if (this.tech_ && "string" == typeof e) {
                    var i = function () {
                        var e = t.muted();
                        t.muted(!0);
                        var i = t.play();
                        if (i && i.then && i.catch) return i.catch(function (i) {
                            t.muted(e)
                        })
                    }, n = void 0;
                    if ("any" === e ? (n = this.play()) && n.then && n.catch && n.catch(function () {
                        return i()
                    }) : n = "muted" === e ? i() : this.play(), n && n.then && n.catch) return n.then(function () {
                        t.trigger({type: "autoplay-success", autoplay: e})
                    }).catch(function (i) {
                        t.trigger({type: "autoplay-failure", autoplay: e})
                    })
                }
            }, i.prototype.updateSourceCaches_ = function () {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", t = e, i = "";
                if ("string" != typeof t && (t = e.src, i = e.type), !/^blob:/.test(t)) {
                    this.cache_.source = this.cache_.source || {}, this.cache_.sources = this.cache_.sources || [], t && !i && (i = function (e, t) {
                        if (!t) return "";
                        if (e.cache_.source.src === t && e.cache_.source.type) return e.cache_.source.type;
                        var i = e.cache_.sources.filter(function (e) {
                            return e.src === t
                        });
                        if (i.length) return i[0].type;
                        for (var n = e.$$("source"), r = 0; r < n.length; r++) {
                            var a = n[r];
                            if (a.type && a.src && a.src === t) return a.type
                        }
                        return On(t)
                    }(this, t)), this.cache_.source = Xe({}, e, {src: t, type: i});
                    for (var n = this.cache_.sources.filter(function (e) {
                        return e.src && e.src === t
                    }), r = [], a = this.$$("source"), s = [], o = 0; o < a.length; o++) {
                        var u = H(a[o]);
                        r.push(u), u.src && u.src === t && s.push(u.src)
                    }
                    s.length && !n.length ? this.cache_.sources = r : n.length || (this.cache_.sources = [this.cache_.source]), this.cache_.src = t
                }
            }, i.prototype.handleTechSourceset_ = function (e) {
                var t = this;
                if (!this.changingSrc_ && (this.updateSourceCaches_(e.src), !e.src)) {
                    var i = function e(i) {
                        "sourceset" !== i.type && t.updateSourceCaches_(t.techGet_("currentSrc")), t.tech_.off(["sourceset", "loadstart"], e)
                    };
                    this.tech_.one(["sourceset", "loadstart"], i)
                }
                this.trigger({src: e.src, type: "sourceset"})
            }, i.prototype.hasStarted = function (e) {
                if (void 0 === e) return this.hasStarted_;
                e !== this.hasStarted_ && (this.hasStarted_ = e, this.hasStarted_ ? (this.addClass("vjs-has-started"), this.trigger("firstplay")) : this.removeClass("vjs-has-started"))
            }, i.prototype.handleTechPlay_ = function () {
                this.removeClass("vjs-ended"), this.removeClass("vjs-paused"), this.addClass("vjs-playing"), this.hasStarted(!0), this.trigger("play")
            }, i.prototype.handleTechRateChange_ = function () {
                this.tech_.playbackRate() > 0 && 0 === this.cache_.lastPlaybackRate && (this.queuedCallbacks_.forEach(function (e) {
                    return e.callback(e.event)
                }), this.queuedCallbacks_ = []), this.cache_.lastPlaybackRate = this.tech_.playbackRate(), this.trigger("ratechange")
            }, i.prototype.handleTechWaiting_ = function () {
                var e = this;
                this.addClass("vjs-waiting"), this.trigger("waiting"), this.one("timeupdate", function () {
                    return e.removeClass("vjs-waiting")
                })
            }, i.prototype.handleTechCanPlay_ = function () {
                this.removeClass("vjs-waiting"), this.trigger("canplay")
            }, i.prototype.handleTechCanPlayThrough_ = function () {
                this.removeClass("vjs-waiting"), this.trigger("canplaythrough")
            }, i.prototype.handleTechPlaying_ = function () {
                this.removeClass("vjs-waiting"), this.trigger("playing")
            }, i.prototype.handleTechSeeking_ = function () {
                this.addClass("vjs-seeking"), this.trigger("seeking")
            }, i.prototype.handleTechSeeked_ = function () {
                this.removeClass("vjs-seeking"), this.trigger("seeked")
            }, i.prototype.handleTechFirstPlay_ = function () {
                this.options_.starttime && (p.warn("Passing the `starttime` option to the player will be deprecated in 6.0"), this.currentTime(this.options_.starttime)), this.addClass("vjs-has-started"), this.trigger("firstplay")
            }, i.prototype.handleTechPause_ = function () {
                this.removeClass("vjs-playing"), this.addClass("vjs-paused"), this.trigger("pause")
            }, i.prototype.handleTechEnded_ = function () {
                this.addClass("vjs-ended"), this.options_.loop ? (this.currentTime(0), this.play()) : this.paused() || this.pause(), this.trigger("ended")
            }, i.prototype.handleTechDurationChange_ = function () {
                this.duration(this.techGet_("duration"))
            }, i.prototype.handleTechClick_ = function (e) {
                ne(e) && this.controls_ && this.paused()
            }, i.prototype.handleTechDoubleClick_ = function (e) {
                if (this.controls_) {
                    Array.prototype.some.call(this.$$(".vjs-control-bar, .vjs-modal-dialog"), function (t) {
                        return t.contains(e.target)
                    }) || (this.isFullscreen() ? this.exitFullscreen() : this.requestFullscreen())
                }
            }, i.prototype.handleTechTap_ = function () {
                this.userActive(!this.userActive())
            }, i.prototype.handleTechTouchStart_ = function () {
                this.userWasActive = this.userActive()
            }, i.prototype.handleTechTouchMove_ = function () {
                this.userWasActive && this.reportUserActivity()
            }, i.prototype.handleTechTouchEnd_ = function (e) {
                e.preventDefault()
            }, i.prototype.handleFullscreenChange_ = function () {
                this.isFullscreen() ? this.addClass("vjs-fullscreen") : this.removeClass("vjs-fullscreen")
            }, i.prototype.handleStageClick_ = function () {
                this.reportUserActivity()
            }, i.prototype.handleTechFullscreenChange_ = function (e, t) {
                t && this.isFullscreen(t.isFullscreen), this.trigger("fullscreenchange")
            }, i.prototype.handleTechFullscreenToggle_ = function (e, t) {
                this.isFullscreen() ? this.exitFullscreen() : this.requestFullscreen()
            }, i.prototype.handleTechError_ = function () {
                var e = this.tech_.error();
                this.error(e)
            }, i.prototype.handleTechTextData_ = function () {
                var e = null;
                arguments.length > 1 && (e = arguments[1]), this.trigger("textdata", e)
            }, i.prototype.getCache = function () {
                return this.cache_
            }, i.prototype.techCall_ = function (e, t) {
                this.ready(function () {
                    if (e in En) return i = this.middleware_, n = this.tech_, a = t, n[r = e](i.reduce(An(r), a));
                    if (e in Cn) return kn(this.middleware_, this.tech_, e, t);
                    var i, n, r, a;
                    try {
                        this.tech_ && this.tech_[e](t)
                    } catch (e) {
                        throw p(e), e
                    }
                }, !0)
            }, i.prototype.techGet_ = function (e) {
                if (this.tech_ && this.tech_.isReady_) {
                    if (e in wn) return t = this.middleware_, i = this.tech_, n = e, t.reduceRight(An(n), i[n]());
                    if (e in Cn) return kn(this.middleware_, this.tech_, e);
                    var t, i, n;
                    try {
                        return this.tech_[e]()
                    } catch (t) {
                        if (void 0 === this.tech_[e]) throw p("Video.js: " + e + " method not defined for " + this.techName_ + " playback technology.", t), t;
                        if ("TypeError" === t.name) throw p("Video.js: " + e + " unavailable on " + this.techName_ + " playback technology element.", t), this.tech_.isReady_ = !1, t;
                        throw p(t), t
                    }
                }
            }, i.prototype.play = function () {
                var e = this, t = this.options_.Promise || r.Promise;
                return t ? new t(function (t) {
                    e.play_(t)
                }) : this.play_()
            }, i.prototype.play_ = function () {
                var e = this, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Ot;
                if (this.playOnLoadstart_ && this.off("loadstart", this.playOnLoadstart_), this.isReady_) {
                    if (!this.changingSrc_ && (this.src() || this.currentSrc())) return void t(this.techGet_("play"));
                    this.playOnLoadstart_ = function () {
                        e.playOnLoadstart_ = null, t(e.play())
                    }, this.one("loadstart", this.playOnLoadstart_)
                } else {
                    if (this.playWaitingForReady_) return;
                    this.playWaitingForReady_ = !0, this.ready(function () {
                        e.playWaitingForReady_ = !1, t(e.play())
                    })
                }
            }, i.prototype.pause = function () {
                this.techCall_("pause")
            }, i.prototype.paused = function () {
                return !1 !== this.techGet_("paused")
            }, i.prototype.played = function () {
                return this.techGet_("played") || yt(0, 0)
            }, i.prototype.scrubbing = function (e) {
                if (void 0 === e) return this.scrubbing_;
                this.scrubbing_ = !!e, e ? this.addClass("vjs-scrubbing") : this.removeClass("vjs-scrubbing")
            }, i.prototype.currentTime = function (e) {
                return void 0 !== e ? (e < 0 && (e = 0), void this.techCall_("setCurrentTime", e)) : (this.cache_.currentTime = this.techGet_("currentTime") || 0, this.cache_.currentTime)
            }, i.prototype.duration = function (e) {
                if (void 0 === e) return void 0 !== this.cache_.duration ? this.cache_.duration : NaN;
                (e = parseFloat(e)) < 0 && (e = 1 / 0), e !== this.cache_.duration && (this.cache_.duration = e, e === 1 / 0 ? this.addClass("vjs-live") : this.removeClass("vjs-live"), this.trigger("durationchange"))
            }, i.prototype.remainingTime = function () {
                return this.duration() - this.currentTime()
            }, i.prototype.remainingTimeDisplay = function () {
                return Math.floor(this.duration()) - Math.floor(this.currentTime())
            }, i.prototype.buffered = function () {
                var e = this.techGet_("buffered");
                return e && e.length || (e = yt(0, 0)), e
            }, i.prototype.bufferedPercent = function () {
                return _t(this.buffered(), this.duration())
            }, i.prototype.bufferedEnd = function () {
                var e = this.buffered(), t = this.duration(), i = e.end(e.length - 1);
                return i > t && (i = t), i
            }, i.prototype.volume = function (e) {
                var t = void 0;
                return void 0 !== e ? (t = Math.max(0, Math.min(1, parseFloat(e))), this.cache_.volume = t, this.techCall_("setVolume", t), void(t > 0 && this.lastVolume_(t))) : (t = parseFloat(this.techGet_("volume")), isNaN(t) ? 1 : t)
            }, i.prototype.muted = function (e) {
                if (void 0 === e) return this.techGet_("muted") || !1;
                this.techCall_("setMuted", e)
            }, i.prototype.defaultMuted = function (e) {
                return void 0 !== e ? this.techCall_("setDefaultMuted", e) : this.techGet_("defaultMuted") || !1
            }, i.prototype.lastVolume_ = function (e) {
                if (void 0 === e || 0 === e) return this.cache_.lastVolume;
                this.cache_.lastVolume = e
            }, i.prototype.supportsFullScreen = function () {
                return this.techGet_("supportsFullScreen") || !1
            }, i.prototype.isFullscreen = function (e) {
                if (void 0 === e) return !!this.isFullscreen_;
                this.isFullscreen_ = !!e
            }, i.prototype.requestFullscreen = function () {
                var e = vt;
                this.isFullscreen(!0), e.requestFullscreen ? (ve(l, e.fullscreenchange, Ie(this, function t(i) {
                    this.isFullscreen(l[e.fullscreenElement]), !1 === this.isFullscreen() && be(l, e.fullscreenchange, t), this.trigger("fullscreenchange")
                })), this.el_[e.requestFullscreen]()) : this.tech_.supportsFullScreen() ? this.techCall_("enterFullScreen") : (this.enterFullWindow(), this.trigger("fullscreenchange"))
            }, i.prototype.exitFullscreen = function () {
                var e = vt;
                this.isFullscreen(!1), e.requestFullscreen ? l[e.exitFullscreen]() : this.tech_.supportsFullScreen() ? this.techCall_("exitFullScreen") : (this.exitFullWindow(), this.trigger("fullscreenchange"))
            }, i.prototype.enterFullWindow = function () {
                this.isFullWindow = !0, this.docOrigOverflow = l.documentElement.style.overflow, ve(l, "keydown", Ie(this, this.fullWindowOnEscKey)), l.documentElement.style.overflow = "hidden", N(l.body, "vjs-full-window"), this.trigger("enterFullWindow")
            }, i.prototype.fullWindowOnEscKey = function (e) {
                27 === e.keyCode && (!0 === this.isFullscreen() ? this.exitFullscreen() : this.exitFullWindow())
            }, i.prototype.exitFullWindow = function () {
                this.isFullWindow = !1, be(l, "keydown", this.fullWindowOnEscKey), l.documentElement.style.overflow = this.docOrigOverflow, F(l.body, "vjs-full-window"), this.trigger("exitFullWindow")
            }, i.prototype.canPlayType = function (e) {
                for (var t = void 0, i = 0, n = this.options_.techOrder; i < n.length; i++) {
                    var r = n[i], a = _n.getTech(r);
                    if (a || (a = Ye.getComponent(r)), a) {
                        if (a.isSupported() && (t = a.canPlayType(e))) return t
                    } else p.error('The "' + r + '" tech is undefined. Skipped browser support check for that tech.')
                }
                return ""
            }, i.prototype.selectSource = function (e) {
                var t, i = this, n = this.options_.techOrder.map(function (e) {
                    return [e, _n.getTech(e)]
                }).filter(function (e) {
                    var t = e[0], i = e[1];
                    return i ? i.isSupported() : (p.error('The "' + t + '" tech is undefined. Skipped browser support check for that tech.'), !1)
                }), r = function (e, t, i) {
                    var n = void 0;
                    return e.some(function (e) {
                        return t.some(function (t) {
                            if (n = i(e, t)) return !0
                        })
                    }), n
                }, a = function (e, t) {
                    var n = e[0];
                    if (e[1].canPlaySource(t, i.options_[n.toLowerCase()])) return {source: t, tech: n}
                };
                return (this.options_.sourceOrder ? r(e, n, (t = a, function (e, i) {
                    return t(i, e)
                })) : r(n, e, a)) || !1
            }, i.prototype.src = function (e) {
                var t = this;
                if (void 0 === e) return this.cache_.src || "";
                var i = function e(t) {
                    if (Array.isArray(t)) {
                        var i = [];
                        t.forEach(function (t) {
                            t = e(t), Array.isArray(t) ? i = i.concat(t) : E(t) && i.push(t)
                        }), t = i
                    } else t = "string" == typeof t && t.trim() ? [In({src: t})] : E(t) && "string" == typeof t.src && t.src && t.src.trim() ? [In(t)] : [];
                    return t
                }(e);
                i.length ? (this.changingSrc_ = !0, this.cache_.sources = i, this.updateSourceCaches_(i[0]), Sn(this, i[0], function (e, n) {
                    t.middleware_ = n, t.cache_.sources = i, t.updateSourceCaches_(e);
                    if (t.src_(e)) return i.length > 1 ? t.src(i.slice(1)) : (t.changingSrc_ = !1, t.setTimeout(function () {
                        this.error({code: 4, message: this.localize(this.options_.notSupportedMessage)})
                    }, 0), void t.triggerReady());
                    r = n, a = t.tech_, r.forEach(function (e) {
                        return e.setTech && e.setTech(a)
                    });
                    var r, a
                })) : this.setTimeout(function () {
                    this.error({code: 4, message: this.localize(this.options_.notSupportedMessage)})
                }, 0)
            }, i.prototype.src_ = function (e) {
                var t = this, i = this.selectSource([e]);
                if (!i) return !0;
                if (n = i.tech, r = this.techName_, We(n) !== We(r)) return this.changingSrc_ = !0, this.loadTech_(i.tech, i.source), this.tech_.ready(function () {
                    t.changingSrc_ = !1
                }), !1;
                var n, r;
                return this.ready(function () {
                    this.tech_.constructor.prototype.hasOwnProperty("setSource") ? this.techCall_("setSource", e) : this.techCall_("src", e.src), this.changingSrc_ = !1
                }, !0), !1
            }, i.prototype.load = function () {
                this.techCall_("load")
            }, i.prototype.reset = function () {
                this.tech_ && this.tech_.clearTracks("text"), this.loadTech_(this.options_.techOrder[0], null), this.techCall_("reset")
            }, i.prototype.currentSources = function () {
                var e = this.currentSource(), t = [];
                return 0 !== Object.keys(e).length && t.push(e), this.cache_.sources || t
            }, i.prototype.currentSource = function () {
                return this.cache_.source || {}
            }, i.prototype.currentSrc = function () {
                return this.currentSource() && this.currentSource().src || ""
            }, i.prototype.currentType = function () {
                return this.currentSource() && this.currentSource().type || ""
            }, i.prototype.preload = function (e) {
                return void 0 !== e ? (this.techCall_("setPreload", e), void(this.options_.preload = e)) : this.techGet_("preload")
            }, i.prototype.autoplay = function (e) {
                if (void 0 === e) return this.options_.autoplay || !1;
                var t = void 0;
                "string" == typeof e && /(any|play|muted)/.test(e) ? (this.options_.autoplay = e, this.manualAutoplay_(e), t = !1) : this.options_.autoplay = !!e, t = t || this.options_.autoplay, this.tech_ && this.techCall_("setAutoplay", t)
            }, i.prototype.playsinline = function (e) {
                return void 0 !== e ? (this.techCall_("setPlaysinline", e), this.options_.playsinline = e, this) : this.techGet_("playsinline")
            }, i.prototype.loop = function (e) {
                return void 0 !== e ? (this.techCall_("setLoop", e), void(this.options_.loop = e)) : this.techGet_("loop")
            }, i.prototype.stretch = function (e) {
                return void 0 !== e ? (this.techCall_("setStretch", e), this.options_.stretch = e, this) : this.techGet_("stretch", e)
            }, i.prototype.fluent = function (e) {
                return void 0 != e ? (this.techCall_("setFluent", e), this.options_.fluent = e, this) : this.techGet_("fluent", e)
            }, i.prototype.poster = function (e) {
                if (void 0 === e) return this.poster_;
                e || (e = ""), e !== this.poster_ && (this.poster_ = e, this.techCall_("setPoster", e), this.isPosterFromTech_ = !1, this.trigger("posterchange"))
            }, i.prototype.handleTechPosterChange_ = function () {
                if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {
                    var e = this.tech_.poster() || "";
                    e !== this.poster_ && (this.poster_ = e, this.isPosterFromTech_ = !0, this.trigger("posterchange"))
                }
            }, i.prototype.controls = function (e) {
                if (void 0 === e) return !!this.controls_;
                e = !!e, this.controls_ !== e && (this.controls_ = e, this.usingNativeControls() && this.techCall_("setControls", e), this.controls_ ? (this.removeClass("vjs-controls-disabled"), this.addClass("vjs-controls-enabled"), this.trigger("controlsenabled"), this.usingNativeControls() || this.addTechControlsListeners_()) : (this.removeClass("vjs-controls-enabled"), this.addClass("vjs-controls-disabled"), this.trigger("controlsdisabled"), this.usingNativeControls() || this.removeTechControlsListeners_()))
            }, i.prototype.usingNativeControls = function (e) {
                if (void 0 === e) return !!this.usingNativeControls_;
                e = !!e, this.usingNativeControls_ !== e && (this.usingNativeControls_ = e, this.usingNativeControls_ ? (this.addClass("vjs-using-native-controls"), this.trigger("usingnativecontrols")) : (this.removeClass("vjs-using-native-controls"), this.trigger("usingcustomcontrols")))
            }, i.prototype.error = function (e) {
                return void 0 === e ? this.error_ || null : null === e ? (this.error_ = e, this.removeClass("vjs-error"), void(this.errorDisplay && this.errorDisplay.close())) : (this.error_ = new Et(e), this.addClass("vjs-error"), p.error("(CODE:" + this.error_.code + " " + Et.errorTypes[this.error_.code] + ")", this.error_.message, this.error_), void this.trigger("error"))
            }, i.prototype.reportUserActivity = function (e) {
                this.userActivity_ = !0
            }, i.prototype.userActive = function (e) {
                if (void 0 === e) return this.userActive_;
                if ((e = !!e) !== this.userActive_) {
                    if (this.userActive_ = e, this.userActive_) return this.userActivity_ = !0, this.removeClass("vjs-user-inactive"), this.addClass("vjs-user-active"), void this.trigger("useractive");
                    this.tech_ && this.tech_.one("mousemove", function (e) {
                        e.stopPropagation(), e.preventDefault()
                    }), this.userActivity_ = !1, this.removeClass("vjs-user-active"), this.addClass("vjs-user-inactive"), this.trigger("userinactive")
                }
            }, i.prototype.listenForUserActivity_ = function () {
                var e = void 0, t = void 0, i = void 0, n = Ie(this, this.reportUserActivity);
                this.on("mousedown", function () {
                    n(), this.clearInterval(e), e = this.setInterval(n, 250)
                }), this.on("mousemove", function (e) {
                    e.screenX === t && e.screenY === i || (t = e.screenX, i = e.screenY, n())
                }), this.on("mouseup", function (t) {
                    n(), this.clearInterval(e)
                }), this.on("keydown", n), this.on("keyup", n);
                var r = void 0;
                this.setInterval(function () {
                    if (this.userActivity_) {
                        this.userActivity_ = !1, this.userActive(!0), this.clearTimeout(r);
                        var e = this.options_.inactivityTimeout;
                        e <= 0 || (r = this.setTimeout(function () {
                            this.userActivity_ || this.userActive(!1)
                        }, e))
                    }
                }, 250)
            }, i.prototype.playbackRate = function (e) {
                if (void 0 === e) return this.tech_ && this.tech_.featuresPlaybackRate ? this.cache_.lastPlaybackRate || this.techGet_("playbackRate") : 1;
                this.techCall_("setPlaybackRate", e)
            }, i.prototype.defaultPlaybackRate = function (e) {
                return void 0 !== e ? this.techCall_("setDefaultPlaybackRate", e) : this.tech_ && this.tech_.featuresPlaybackRate ? this.techGet_("defaultPlaybackRate") : 1
            }, i.prototype.isAudio = function (e) {
                if (void 0 === e) return !!this.isAudio_;
                this.isAudio_ = !!e
            }, i.prototype.addTextTrack = function (e, t, i) {
                if (this.tech_) return this.tech_.addTextTrack(e, t, i)
            }, i.prototype.addRemoteTextTrack = function (e, t) {
                if (this.tech_) return this.tech_.addRemoteTextTrack(e, t)
            }, i.prototype.removeRemoteTextTrack = function () {
                var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).track,
                    t = void 0 === e ? arguments[0] : e;
                if (this.tech_) return this.tech_.removeRemoteTextTrack(t)
            }, i.prototype.getVideoPlaybackQuality = function () {
                return this.techGet_("getVideoPlaybackQuality")
            },i.prototype.videoWidth = function () {
                return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0
            },i.prototype.videoHeight = function () {
                return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0
            },i.prototype.language = function (e) {
                if (void 0 === e) return this.language_;
                this.language_ = String(e).toLowerCase()
            },i.prototype.languages = function () {
                return Xe(i.prototype.options_.languages, this.languages_)
            },i.prototype.toJSON = function () {
                var e = Xe(this.options_), t = e.tracks;
                e.tracks = [];
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    (n = Xe(n)).player = void 0, e.tracks[i] = n
                }
                return e
            },i.prototype.createModal = function (e, t) {
                var i = this;
                (t = t || {}).content = e || "";
                var n = new Dt(this, t);
                return this.addChild(n), n.on("dispose", function () {
                    i.removeChild(n)
                }), n.open(), n
            },i.getTagSettings = function (e) {
                var t = {sources: [], tracks: []}, i = H(e), n = i["data-setup"];
                if (j(e, "vjs-fluid") && (i.fluid = !0), null !== n) {
                    var r = At(n || "{}"), a = r[0], s = r[1];
                    a && p.error(a), w(i, s)
                }
                if (w(t, i), e.hasChildNodes()) for (var o = e.childNodes, u = 0, l = o.length; u < l; u++) {
                    var d = o[u], c = d.nodeName.toLowerCase();
                    "source" === c ? t.sources.push(H(d)) : "track" === c && t.tracks.push(H(d))
                }
                return t
            },i.prototype.flexNotSupported_ = function () {
                var e = l.createElement("i");
                return !("flexBasis" in e.style || "webkitFlexBasis" in e.style || "mozFlexBasis" in e.style || "msFlexBasis" in e.style || "msFlexOrder" in e.style)
            },i
        }(Ye);
    Ui.names.forEach(function (e) {
        var t = Ui[e];
        ha.prototype[t.getterName] = function () {
            return this.tech_ ? this.tech_[t.getterName]() : (this[t.privateName] = this[t.privateName] || new t.ListClass, this[t.privateName])
        }
    }), ha.players = {};
    var fa = r.navigator;
    ha.prototype.options_ = {
        techOrder: _n.defaultTechOrder_,
        html5: {},
        flash: {},
        inactivityTimeout: 2e3,
        playbackRates: [],
        children: ["mediaLoader", "posterImage", "textTrackDisplay", "loadingSpinner", "bigPlayButton", "controlBar", "errorDisplay", "textTrackSettings", "resizeManager"],
        language: fa && (fa.languages && fa.languages[0] || fa.userLanguage || fa.language) || "en",
        languages: {},
        notSupportedMessage: "No compatible source was found for this media."
    }, ["ended", "seeking", "seekable", "networkState", "readyState"].forEach(function (e) {
        ha.prototype[e] = function () {
            return this.techGet_(e)
        }
    }), da.forEach(function (e) {
        ha.prototype["handleTech" + We(e) + "_"] = function () {
            return this.trigger(e)
        }
    }), Ye.registerComponent("Player", ha);
    var pa = "activePlugins_", ma = {}, ga = function (e) {
        return ma.hasOwnProperty(e)
    }, ya = function (e) {
        return ga(e) ? ma[e] : void 0
    }, _a = function (e, t) {
        e[pa] = e[pa] || {}, e[pa][t] = !0
    }, va = function (e, t, i) {
        var n = (i ? "before" : "") + "pluginsetup";
        e.trigger(n, t), e.trigger(n + ":" + t.name, t)
    }, ba = function (e, t) {
        return t.prototype.name = e, function () {
            va(this, {name: e, plugin: t, instance: null}, !0);
            for (var i = arguments.length, n = Array(i), r = 0; r < i; r++) n[r] = arguments[r];
            var a = new (Function.prototype.bind.apply(t, [null].concat([this].concat(n))));
            return this[e] = function () {
                return a
            }, va(this, a.getEventHash()), a
        }
    }, Ta = function () {
        function e(t) {
            if (y(this, e), this.constructor === e) throw new Error("Plugin must be sub-classed; not directly instantiated.");
            this.player = t, He(this), delete this.trigger, ze(this, this.constructor.defaultState), _a(t, this.name), this.dispose = Ie(this, this.dispose), t.on("dispose", this.dispose)
        }

        return e.prototype.version = function () {
            return this.constructor.VERSION
        }, e.prototype.getEventHash = function () {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            return e.name = this.name, e.plugin = this.constructor, e.instance = this, e
        }, e.prototype.trigger = function (e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            return Te(this.eventBusEl_, e, this.getEventHash(t))
        }, e.prototype.handleStateChanged = function (e) {
        }, e.prototype.dispose = function () {
            var e = this.name, t = this.player;
            this.trigger("dispose"), this.off(), t.off("dispose", this.dispose), t[pa][e] = !1, this.player = this.state = null, t[e] = ba(e, ma[e])
        }, e.isBasic = function (t) {
            var i = "string" == typeof t ? ya(t) : t;
            return "function" == typeof i && !e.prototype.isPrototypeOf(i.prototype)
        }, e.registerPlugin = function (t, i) {
            if ("string" != typeof t) throw new Error('Illegal plugin name, "' + t + '", must be a string, was ' + (void 0 === t ? "undefined" : g(t)) + ".");
            if (ga(t)) p.warn('A plugin named "' + t + '" already exists. You may want to avoid re-registering plugins!'); else if (ha.prototype.hasOwnProperty(t)) throw new Error('Illegal plugin name, "' + t + '", cannot share a name with an existing player method!');
            if ("function" != typeof i) throw new Error('Illegal plugin for "' + t + '", must be a function, was ' + (void 0 === i ? "undefined" : g(i)) + ".");
            return ma[t] = i, "plugin" !== t && (e.isBasic(i) ? ha.prototype[t] = function (e, t) {
                var i = function () {
                    va(this, {name: e, plugin: t, instance: null}, !0);
                    var i = t.apply(this, arguments);
                    return _a(this, e), va(this, {name: e, plugin: t, instance: i}), i
                };
                return Object.keys(t).forEach(function (e) {
                    i[e] = t[e]
                }), i
            }(t, i) : ha.prototype[t] = ba(t, i)), i
        }, e.deregisterPlugin = function (e) {
            if ("plugin" === e) throw new Error("Cannot de-register base plugin.");
            ga(e) && (delete ma[e], delete ha.prototype[e])
        }, e.getPlugins = function () {
            var e = void 0;
            return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Object.keys(ma)).forEach(function (t) {
                var i = ya(t);
                i && ((e = e || {})[t] = i)
            }), e
        }, e.getPluginVersion = function (e) {
            var t = ya(e);
            return t && t.VERSION || ""
        }, e
    }();
    Ta.getPlugin = ya, Ta.BASE_PLUGIN_NAME = "plugin", Ta.registerPlugin("plugin", Ta), ha.prototype.usingPlugin = function (e) {
        return !!this[pa] && !0 === this[pa][e]
    }, ha.prototype.hasPlugin = function (e) {
        return !!ga(e)
    };
    var Sa = function (e) {
        return 0 === e.indexOf("#") ? e.slice(1) : e
    };

    function ka(e, t, i) {
        var n = ka.getPlayer(e);
        if (n) return t && p.warn('Player "' + e + '" is already initialised. Options will not be applied.'), i && n.ready(i), n;
        var r = "string" == typeof e ? re("#" + Sa(e)) : e;
        if (!R(r)) throw new TypeError("The element or ID supplied is not valid. (videojs)");
        l.body.contains(r) || p.warn("The element supplied is not included in the DOM"), t = t || {}, ka.hooks("beforesetup").forEach(function (e) {
            var i = e(r, Xe(t));
            E(i) && !Array.isArray(i) ? t = Xe(t, i) : p.error("please return an object in beforesetup hooks")
        });
        var a = Ye.getComponent("Player");
        return n = new a(r, t, i), ka.hooks("setup").forEach(function (e) {
            return e(n)
        }), n
    }

    if (ka.hooks_ = {}, ka.hooks = function (e, t) {
        return ka.hooks_[e] = ka.hooks_[e] || [], t && (ka.hooks_[e] = ka.hooks_[e].concat(t)), ka.hooks_[e]
    }, ka.hook = function (e, t) {
        ka.hooks(e, t)
    }, ka.hookOnce = function (e, t) {
        ka.hooks(e, [].concat(t).map(function (t) {
            return function i() {
                return ka.removeHook(e, i), t.apply(void 0, arguments)
            }
        }))
    }, ka.removeHook = function (e, t) {
        var i = ka.hooks(e).indexOf(t);
        return !(i <= -1) && (ka.hooks_[e] = ka.hooks_[e].slice(), ka.hooks_[e].splice(i, 1), !0)
    }, !0 !== r.VIDEOJS_NO_DYNAMIC_STYLE && P()) {
        var wa = re(".vjs-styles-defaults");
        if (!wa) {
            wa = Le("vjs-styles-defaults");
            var Ea = re("head");
            Ea && Ea.insertBefore(wa, Ea.firstChild), Oe(wa, "\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid {\n        padding-top: 56.25%\n      }\n    ")
        }
    }
    Ae(1, ka), ka.VERSION = e, ka.options = ha.prototype.options_, ka.getPlayers = function () {
        return ha.players
    }, ka.getPlayer = function (e) {
        var t = ha.players, i = void 0;
        if ("string" == typeof e) {
            var n = Sa(e), r = t[n];
            if (r) return r;
            i = re("#" + n)
        } else i = e;
        if (R(i)) {
            var a = i, s = a.player, o = a.playerId;
            if (s || t[o]) return s || t[o]
        }
    }, ka.getAllPlayers = function () {
        return Object.keys(ha.players).map(function (e) {
            return ha.players[e]
        }).filter(Boolean)
    }, ka.players = ha.players, ka.getComponent = Ye.getComponent, ka.registerComponent = function (e, t) {
        _n.isTech(t) && p.warn("The " + e + " tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)"), Ye.registerComponent.call(Ye, e, t)
    }, ka.getTech = _n.getTech, ka.registerTech = _n.registerTech, ka.use = function (e, t) {
        vn[e] = vn[e] || [], vn[e].push(t)
    }, Object.defineProperty(ka, "middleware", {
        value: {},
        writeable: !1,
        enumerable: !0
    }), Object.defineProperty(ka.middleware, "TERMINATOR", {
        value: Tn,
        writeable: !1,
        enumerable: !0
    }), ka.browser = pt, ka.TOUCH_ENABLED = ft, ka.extend = function (e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, i = function () {
            e.apply(this, arguments)
        }, n = {};
        "object" === (void 0 === t ? "undefined" : g(t)) ? (t.constructor !== Object.prototype.constructor && (i = t.constructor), n = t) : "function" == typeof t && (i = t), function (e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + (void 0 === t ? "undefined" : g(t)));
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (e.super_ = t)
        }(i, e);
        for (var r in n) n.hasOwnProperty(r) && (i.prototype[r] = n[r]);
        return i
    }, ka.mergeOptions = Xe, ka.bind = Ie, ka.registerPlugin = Ta.registerPlugin, ka.deregisterPlugin = Ta.deregisterPlugin, ka.plugin = function (e, t) {
        return p.warn("videojs.plugin() is deprecated; use videojs.registerPlugin() instead"), Ta.registerPlugin(e, t)
    }, ka.getPlugins = Ta.getPlugins, ka.getPlugin = Ta.getPlugin, ka.getPluginVersion = Ta.getPluginVersion, ka.addLanguage = function (e, t) {
        var i;
        return e = ("" + e).toLowerCase(), ka.options.languages = Xe(ka.options.languages, (i = {}, i[e] = t, i)), ka.options.languages[e]
    }, ka.log = p, ka.createTimeRange = ka.createTimeRanges = yt, ka.formatTime = zn, ka.setFormatTime = function (e) {
        qn = e
    }, ka.resetFormatTime = function () {
        qn = Hn
    }, ka.parseUrl = Kt, ka.isCrossOrigin = Jt, ka.EventTarget = xe, ka.on = ve, ka.one = Se, ka.off = be, ka.trigger = Te, ka.xhr = Ti, ka.TextTrack = Ai, ka.AudioTrack = Li, ka.VideoTrack = Oi, ["isEl", "isTextNode", "createEl", "hasClass", "addClass", "removeClass", "toggleClass", "setAttributes", "getAttributes", "emptyEl", "appendContent", "insertContent"].forEach(function (e) {
        ka[e] = function () {
            return p.warn("videojs." + e + "() is deprecated; use videojs.dom." + e + "() instead"), se[e].apply(null, arguments)
        }
    }), ka.computedStyle = A, ka.dom = se, ka.url = Zt;
    var Ca = i(function (e, t) {
            !function (t) {
                var i = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/?#]*)?((?:[^\/\?#]*\/)*.*?)??(;.*?)?(\?.*?)?(#.*?)?$/,
                    n = /^([^\/?#]*)(.*)$/, r = /(?:\/|^)\.(?=\/)/g, a = /(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g, s = {
                        buildAbsoluteURL: function (e, t, i) {
                            if (i = i || {}, e = e.trim(), !(t = t.trim())) {
                                if (!i.alwaysNormalize) return e;
                                var r = s.parseURL(e);
                                if (!r) throw new Error("Error trying to parse base URL.");
                                return r.path = s.normalizePath(r.path), s.buildURLFromParts(r)
                            }
                            var a = s.parseURL(t);
                            if (!a) throw new Error("Error trying to parse relative URL.");
                            if (a.scheme) return i.alwaysNormalize ? (a.path = s.normalizePath(a.path), s.buildURLFromParts(a)) : t;
                            var o = s.parseURL(e);
                            if (!o) throw new Error("Error trying to parse base URL.");
                            if (!o.netLoc && o.path && "/" !== o.path[0]) {
                                var u = n.exec(o.path);
                                o.netLoc = u[1], o.path = u[2]
                            }
                            o.netLoc && !o.path && (o.path = "/");
                            var l = {
                                scheme: o.scheme,
                                netLoc: a.netLoc,
                                path: null,
                                params: a.params,
                                query: a.query,
                                fragment: a.fragment
                            };
                            if (!a.netLoc && (l.netLoc = o.netLoc, "/" !== a.path[0])) if (a.path) {
                                var d = o.path, c = d.substring(0, d.lastIndexOf("/") + 1) + a.path;
                                l.path = s.normalizePath(c)
                            } else l.path = o.path, a.params || (l.params = o.params, a.query || (l.query = o.query));
                            return null === l.path && (l.path = i.alwaysNormalize ? s.normalizePath(a.path) : a.path), s.buildURLFromParts(l)
                        }, parseURL: function (e) {
                            var t = i.exec(e);
                            return t ? {
                                scheme: t[1] || "",
                                netLoc: t[2] || "",
                                path: t[3] || "",
                                params: t[4] || "",
                                query: t[5] || "",
                                fragment: t[6] || ""
                            } : null
                        }, normalizePath: function (e) {
                            for (e = e.split("").reverse().join("").replace(r, ""); e.length !== (e = e.replace(a, "")).length;) ;
                            return e.split("").reverse().join("")
                        }, buildURLFromParts: function (e) {
                            return e.scheme + e.netLoc + e.path + e.params + e.query + e.fragment
                        }
                    };
                e.exports = s
            }()
        }), Aa = function (e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }, La = Object.assign || function (e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = arguments[t];
                for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n])
            }
            return e
        }, Oa = function (e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + (void 0 === t ? "undefined" : g(t)));
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }, Ia = function (e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" !== (void 0 === t ? "undefined" : g(t)) && "function" != typeof t ? e : t
        }, Pa = function () {
            function e() {
                Aa(this, e), this.listeners = {}
            }

            return e.prototype.on = function (e, t) {
                this.listeners[e] || (this.listeners[e] = []), this.listeners[e].push(t)
            }, e.prototype.off = function (e, t) {
                if (!this.listeners[e]) return !1;
                var i = this.listeners[e].indexOf(t);
                return this.listeners[e].splice(i, 1), i > -1
            }, e.prototype.trigger = function (e) {
                var t = this.listeners[e], i = void 0, n = void 0, r = void 0;
                if (t) if (2 === arguments.length) for (n = t.length, i = 0; i < n; ++i) t[i].call(this, arguments[1]); else for (r = Array.prototype.slice.call(arguments, 1), n = t.length, i = 0; i < n; ++i) t[i].apply(this, r)
            }, e.prototype.dispose = function () {
                this.listeners = {}
            }, e.prototype.pipe = function (e) {
                this.on("data", function (t) {
                    e.push(t)
                })
            }, e
        }(), Ra = function (e) {
            Oa(t, e);

            function t() {
                Aa(this, t);
                var i = Ia(this, e.call(this));
                return i.buffer = "", i
            }

            return t.prototype.push = function (e) {
                var t = void 0;
                for (this.buffer += e, t = this.buffer.indexOf("\n"); t > -1; t = this.buffer.indexOf("\n")) this.trigger("data", this.buffer.substring(0, t)), this.buffer = this.buffer.substring(t + 1)
            }, t
        }(Pa), xa = function (e) {
            for (var t = e.split(new RegExp('(?:^|,)((?:[^=]*)=(?:"[^"]*"|[^,]*))')), i = {}, n = t.length, r = void 0; n--;) "" !== t[n] && ((r = /([^=]*)=(.*)/.exec(t[n]).slice(1))[0] = r[0].replace(/^\s+|\s+$/g, ""), r[1] = r[1].replace(/^\s+|\s+$/g, ""), r[1] = r[1].replace(/^['"](.*)['"]$/g, "$1"), i[r[0]] = r[1]);
            return i
        }, Da = function (e) {
            Oa(t, e);

            function t() {
                Aa(this, t);
                var i = Ia(this, e.call(this));
                return i.customParsers = [], i
            }

            return t.prototype.push = function (e) {
                var t = void 0, i = void 0;
                if (0 !== (e = e.replace(/^[\u0000\s]+|[\u0000\s]+$/g, "")).length) if ("#" === e[0]) {
                    for (var n = 0; n < this.customParsers.length; n++) if (this.customParsers[n].call(this, e)) return;
                    if (0 === e.indexOf("#EXT")) if (e = e.replace("\r", ""), t = /^#EXTM3U/.exec(e)) this.trigger("data", {
                        type: "tag",
                        tagType: "m3u"
                    }); else {
                        if (t = /^#EXTINF:?([0-9\.]*)?,?(.*)?$/.exec(e)) return i = {
                            type: "tag",
                            tagType: "inf"
                        }, t[1] && (i.duration = parseFloat(t[1])), t[2] && (i.title = t[2]), void this.trigger("data", i);
                        if (t = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(e)) return i = {
                            type: "tag",
                            tagType: "targetduration"
                        }, t[1] && (i.duration = parseInt(t[1], 10)), void this.trigger("data", i);
                        if (t = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(e)) return i = {
                            type: "tag",
                            tagType: "totalduration"
                        }, t[1] && (i.duration = parseInt(t[1], 10)), void this.trigger("data", i);
                        if (t = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(e)) return i = {
                            type: "tag",
                            tagType: "version"
                        }, t[1] && (i.version = parseInt(t[1], 10)), void this.trigger("data", i);
                        if (t = /^#EXT-X-MEDIA-SEQUENCE:?(\-?[0-9.]*)?/.exec(e)) return i = {
                            type: "tag",
                            tagType: "media-sequence"
                        }, t[1] && (i.number = parseInt(t[1], 10)), void this.trigger("data", i);
                        if (t = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\-?[0-9.]*)?/.exec(e)) return i = {
                            type: "tag",
                            tagType: "discontinuity-sequence"
                        }, t[1] && (i.number = parseInt(t[1], 10)), void this.trigger("data", i);
                        if (t = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(e)) return i = {
                            type: "tag",
                            tagType: "playlist-type"
                        }, t[1] && (i.playlistType = t[1]), void this.trigger("data", i);
                        if (t = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(e)) return i = {
                            type: "tag",
                            tagType: "byterange"
                        }, t[1] && (i.length = parseInt(t[1], 10)), t[2] && (i.offset = parseInt(t[2], 10)), void this.trigger("data", i);
                        if (t = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(e)) return i = {
                            type: "tag",
                            tagType: "allow-cache"
                        }, t[1] && (i.allowed = !/NO/.test(t[1])), void this.trigger("data", i);
                        if (t = /^#EXT-X-MAP:?(.*)$/.exec(e)) {
                            if (i = {type: "tag", tagType: "map"}, t[1]) {
                                var r = xa(t[1]);
                                if (r.URI && (i.uri = r.URI), r.BYTERANGE) {
                                    var a = r.BYTERANGE.split("@"), s = a[0], o = a[1];
                                    i.byterange = {}, s && (i.byterange.length = parseInt(s, 10)), o && (i.byterange.offset = parseInt(o, 10))
                                }
                            }
                            this.trigger("data", i)
                        } else if (t = /^#EXT-X-STREAM-INF:?(.*)$/.exec(e)) {
                            if (i = {type: "tag", tagType: "stream-inf"}, t[1]) {
                                if (i.attributes = xa(t[1]), i.attributes.RESOLUTION) {
                                    var u = i.attributes.RESOLUTION.split("x"), l = {};
                                    u[0] && (l.width = parseInt(u[0], 10)), u[1] && (l.height = parseInt(u[1], 10)), i.attributes.RESOLUTION = l
                                }
                                i.attributes.BANDWIDTH && (i.attributes.BANDWIDTH = parseInt(i.attributes.BANDWIDTH, 10)), i.attributes["PROGRAM-ID"] && (i.attributes["PROGRAM-ID"] = parseInt(i.attributes["PROGRAM-ID"], 10))
                            }
                            this.trigger("data", i)
                        } else {
                            if (t = /^#EXT-X-MEDIA:?(.*)$/.exec(e)) return i = {
                                type: "tag",
                                tagType: "media"
                            }, t[1] && (i.attributes = xa(t[1])), void this.trigger("data", i);
                            if (t = /^#EXT-X-ENDLIST/.exec(e)) this.trigger("data", {
                                type: "tag",
                                tagType: "endlist"
                            }); else if (t = /^#EXT-X-DISCONTINUITY/.exec(e)) this.trigger("data", {
                                type: "tag",
                                tagType: "discontinuity"
                            }); else {
                                if (t = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(e)) return i = {
                                    type: "tag",
                                    tagType: "program-date-time"
                                }, t[1] && (i.dateTimeString = t[1], i.dateTimeObject = new Date(t[1])), void this.trigger("data", i);
                                if (t = /^#EXT-X-KEY:?(.*)$/.exec(e)) return i = {
                                    type: "tag",
                                    tagType: "key"
                                }, t[1] && (i.attributes = xa(t[1]), i.attributes.IV && ("0x" === i.attributes.IV.substring(0, 2).toLowerCase() && (i.attributes.IV = i.attributes.IV.substring(2)), i.attributes.IV = i.attributes.IV.match(/.{8}/g), i.attributes.IV[0] = parseInt(i.attributes.IV[0], 16), i.attributes.IV[1] = parseInt(i.attributes.IV[1], 16), i.attributes.IV[2] = parseInt(i.attributes.IV[2], 16), i.attributes.IV[3] = parseInt(i.attributes.IV[3], 16), i.attributes.IV = new Uint32Array(i.attributes.IV))), void this.trigger("data", i);
                                if (t = /^#EXT-X-START:?(.*)$/.exec(e)) return i = {
                                    type: "tag",
                                    tagType: "start"
                                }, t[1] && (i.attributes = xa(t[1]), i.attributes["TIME-OFFSET"] = parseFloat(i.attributes["TIME-OFFSET"]), i.attributes.PRECISE = /YES/.test(i.attributes.PRECISE)), void this.trigger("data", i);
                                if (t = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(e)) return i = {
                                    type: "tag",
                                    tagType: "cue-out-cont"
                                }, t[1] ? i.data = t[1] : i.data = "", void this.trigger("data", i);
                                if (t = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(e)) return i = {
                                    type: "tag",
                                    tagType: "cue-out"
                                }, t[1] ? i.data = t[1] : i.data = "", void this.trigger("data", i);
                                if (t = /^#EXT-X-CUE-IN:?(.*)?$/.exec(e)) return i = {
                                    type: "tag",
                                    tagType: "cue-in"
                                }, t[1] ? i.data = t[1] : i.data = "", void this.trigger("data", i);
                                this.trigger("data", {type: "tag", data: e.slice(4)})
                            }
                        }
                    } else this.trigger("data", {type: "comment", text: e.slice(1)})
                } else this.trigger("data", {type: "uri", uri: e})
            }, t.prototype.addParser = function (e) {
                var t = this, i = e.expression, n = e.customType, r = e.dataParser, a = e.segment;
                "function" != typeof r && (r = function (e) {
                    return e
                }), this.customParsers.push(function (e) {
                    if (i.exec(e)) return t.trigger("data", {type: "custom", data: r(e), customType: n, segment: a}), !0
                })
            }, t
        }(Pa), Ua = function (e) {
            Oa(t, e);

            function t() {
                Aa(this, t);
                var i = Ia(this, e.call(this));
                i.lineStream = new Ra, i.parseStream = new Da, i.lineStream.pipe(i.parseStream);
                var n = i, r = [], a = {}, s = void 0, o = void 0,
                    u = {AUDIO: {}, VIDEO: {}, "CLOSED-CAPTIONS": {}, SUBTITLES: {}}, l = 0;
                return i.manifest = {
                    allowCache: !0,
                    discontinuityStarts: [],
                    segments: []
                }, i.parseStream.on("data", function (e) {
                    var t = void 0, i = void 0;
                    ({
                        tag: function () {
                            (({
                                "allow-cache": function () {
                                    this.manifest.allowCache = e.allowed, "allowed" in e || (this.trigger("info", {message: "defaulting allowCache to YES"}), this.manifest.allowCache = !0)
                                }, byterange: function () {
                                    var t = {};
                                    "length" in e && (a.byterange = t, t.length = e.length, "offset" in e || (this.trigger("info", {message: "defaulting offset to zero"}), e.offset = 0)), "offset" in e && (a.byterange = t, t.offset = e.offset)
                                }, endlist: function () {
                                    this.manifest.endList = !0
                                }, inf: function () {
                                    "mediaSequence" in this.manifest || (this.manifest.mediaSequence = 0, this.trigger("info", {message: "defaulting media sequence to zero"})), "discontinuitySequence" in this.manifest || (this.manifest.discontinuitySequence = 0, this.trigger("info", {message: "defaulting discontinuity sequence to zero"})), e.duration > 0 && (a.duration = e.duration), 0 === e.duration && (a.duration = .01, this.trigger("info", {message: "updating zero segment duration to a small value"})), this.manifest.segments = r
                                }, key: function () {
                                    e.attributes ? "NONE" !== e.attributes.METHOD ? e.attributes.URI ? (e.attributes.METHOD || this.trigger("warn", {message: "defaulting key method to AES-128"}), o = {
                                        method: e.attributes.METHOD || "AES-128",
                                        uri: e.attributes.URI
                                    }, void 0 !== e.attributes.IV && (o.iv = e.attributes.IV)) : this.trigger("warn", {message: "ignoring key declaration without URI"}) : o = null : this.trigger("warn", {message: "ignoring key declaration without attribute list"})
                                }, "media-sequence": function () {
                                    isFinite(e.number) ? this.manifest.mediaSequence = e.number : this.trigger("warn", {message: "ignoring invalid media sequence: " + e.number})
                                }, "discontinuity-sequence": function () {
                                    isFinite(e.number) ? (this.manifest.discontinuitySequence = e.number, l = e.number) : this.trigger("warn", {message: "ignoring invalid discontinuity sequence: " + e.number})
                                }, "playlist-type": function () {
                                    /VOD|EVENT/.test(e.playlistType) ? this.manifest.playlistType = e.playlistType : this.trigger("warn", {message: "ignoring unknown playlist type: " + e.playlist})
                                }, map: function () {
                                    s = {}, e.uri && (s.uri = e.uri), e.byterange && (s.byterange = e.byterange)
                                }, "stream-inf": function () {
                                    this.manifest.playlists = r, this.manifest.mediaGroups = this.manifest.mediaGroups || u, e.attributes ? (a.attributes || (a.attributes = {}), La(a.attributes, e.attributes)) : this.trigger("warn", {message: "ignoring empty stream-inf attributes"})
                                }, media: function () {
                                    if (this.manifest.mediaGroups = this.manifest.mediaGroups || u, e.attributes && e.attributes.TYPE && e.attributes["GROUP-ID"] && e.attributes.NAME) {
                                        var n = this.manifest.mediaGroups[e.attributes.TYPE];
                                        n[e.attributes["GROUP-ID"]] = n[e.attributes["GROUP-ID"]] || {}, t = n[e.attributes["GROUP-ID"]], (i = {default: /yes/i.test(e.attributes.DEFAULT)}).default ? i.autoselect = !0 : i.autoselect = /yes/i.test(e.attributes.AUTOSELECT), e.attributes.LANGUAGE && (i.language = e.attributes.LANGUAGE), e.attributes.URI && (i.uri = e.attributes.URI), e.attributes["INSTREAM-ID"] && (i.instreamId = e.attributes["INSTREAM-ID"]), e.attributes.CHARACTERISTICS && (i.characteristics = e.attributes.CHARACTERISTICS), e.attributes.FORCED && (i.forced = /yes/i.test(e.attributes.FORCED)), t[e.attributes.NAME] = i
                                    } else this.trigger("warn", {message: "ignoring incomplete or missing media group"})
                                }, discontinuity: function () {
                                    l += 1, a.discontinuity = !0, this.manifest.discontinuityStarts.push(r.length)
                                }, "program-date-time": function () {
                                    void 0 === this.manifest.dateTimeString && (this.manifest.dateTimeString = e.dateTimeString, this.manifest.dateTimeObject = e.dateTimeObject), a.dateTimeString = e.dateTimeString, a.dateTimeObject = e.dateTimeObject
                                }, targetduration: function () {
                                    !isFinite(e.duration) || e.duration < 0 ? this.trigger("warn", {message: "ignoring invalid target duration: " + e.duration}) : this.manifest.targetDuration = e.duration
                                }, totalduration: function () {
                                    !isFinite(e.duration) || e.duration < 0 ? this.trigger("warn", {message: "ignoring invalid total duration: " + e.duration}) : this.manifest.totalDuration = e.duration
                                }, start: function () {
                                    e.attributes && !isNaN(e.attributes["TIME-OFFSET"]) ? this.manifest.start = {
                                        timeOffset: e.attributes["TIME-OFFSET"],
                                        precise: e.attributes.PRECISE
                                    } : this.trigger("warn", {message: "ignoring start declaration without appropriate attribute list"})
                                }, "cue-out": function () {
                                    a.cueOut = e.data
                                }, "cue-out-cont": function () {
                                    a.cueOutCont = e.data
                                }, "cue-in": function () {
                                    a.cueIn = e.data
                                }
                            })[e.tagType] || function () {
                            }).call(n)
                        }, uri: function () {
                            a.uri = e.uri, r.push(a), !this.manifest.targetDuration || "duration" in a || (this.trigger("warn", {message: "defaulting segment duration to the target duration"}), a.duration = this.manifest.targetDuration), o && (a.key = o), a.timeline = l, s && (a.map = s), a = {}
                        }, comment: function () {
                        }, custom: function () {
                            e.segment ? (a.custom = a.custom || {}, a.custom[e.customType] = e.data) : (this.manifest.custom = this.manifest.custom || {}, this.manifest.custom[e.customType] = e.data)
                        }
                    })[e.type].call(n)
                }), i
            }

            return t.prototype.push = function (e) {
                this.lineStream.push(e)
            }, t.prototype.end = function () {
                this.lineStream.push("\n")
            }, t.prototype.addParser = function (e) {
                this.parseStream.addParser(e)
            }, t
        }(Pa), Ma = function (e) {
            var t, i = e.attributes, n = e.segments, r = {
                attributes: (t = {
                    NAME: i.id,
                    AUDIO: "audio",
                    SUBTITLES: "subs",
                    RESOLUTION: {width: i.width, height: i.height},
                    CODECS: i.codecs,
                    BANDWIDTH: i.bandwidth
                }, t["PROGRAM-ID"] = 1, t),
                uri: "",
                endList: "static" === (i.type || "static"),
                timeline: i.periodIndex,
                resolvedUri: "",
                targetDuration: i.duration,
                segments: n,
                mediaSequence: n.length ? n[0].number : 1
            };
            return i.contentProtection && (r.contentProtection = i.contentProtection), r
        }, Ba = "function" == typeof Symbol && "symbol" === g(Symbol.iterator) ? function (e) {
            return void 0 === e ? "undefined" : g(e)
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : void 0 === e ? "undefined" : g(e)
        }, ja = function (e) {
            return !!e && "object" === (void 0 === e ? "undefined" : Ba(e))
        }, Na = function e() {
            for (var t = arguments.length, i = Array(t), n = 0; n < t; n++) i[n] = arguments[n];
            return i.reduce(function (t, i) {
                return Object.keys(i).forEach(function (n) {
                    Array.isArray(t[n]) && Array.isArray(i[n]) ? t[n] = t[n].concat(i[n]) : ja(t[n]) && ja(i[n]) ? t[n] = e(t[n], i[n]) : t[n] = i[n]
                }), t
            }, {})
        }, Fa = function (e, t) {
            return /^[a-z]+:/i.test(t) ? t : (/\/\//i.test(e) || (e = Ca.buildAbsoluteURL(r.location.href, e)), Ca.buildAbsoluteURL(e, t))
        }, Va = function (e) {
            var t = e.baseUrl, i = void 0 === t ? "" : t, n = e.source, r = void 0 === n ? "" : n, a = e.range,
                s = void 0 === a ? "" : a, o = {uri: r, resolvedUri: Fa(i || "", r)};
            if (s) {
                var u = s.split("-"), l = parseInt(u[0], 10), d = parseInt(u[1], 10);
                o.byterange = {length: d - l, offset: l}
            }
            return o
        }, Ga = function (e, t, i) {
            var n = e.NOW, r = e.clientOffset, a = e.availabilityStartTime, s = e.timescale, o = void 0 === s ? 1 : s,
                u = e.start, l = void 0 === u ? 0 : u, d = e.minimumUpdatePeriod,
                c = (n + r) / 1e3 + (void 0 === d ? 0 : d) - (a + l);
            return Math.ceil((c * o - t) / i)
        }, Ha = function (e, t) {
            for (var i = e.type, n = void 0 === i ? "static" : i, r = e.minimumUpdatePeriod, a = void 0 === r ? 0 : r, s = e.media, o = void 0 === s ? "" : s, u = e.sourceDuration, l = e.timescale, d = void 0 === l ? 1 : l, c = e.startNumber, h = void 0 === c ? 1 : c, f = e.periodIndex, p = [], m = -1, g = 0; g < t.length; g++) {
                var y = t[g], _ = y.d, v = y.r || 0, b = y.t || 0;
                m < 0 && (m = b), b && b > m && (m = b);
                var T = void 0;
                if (v < 0) {
                    var S = g + 1;
                    T = S === t.length ? "dynamic" === n && a > 0 && o.indexOf("$Number$") > 0 ? Ga(e, m, _) : (u * d - m) / _ : (t[S].t - m) / _
                } else T = v + 1;
                for (var k = h + p.length + T, w = h + p.length; w < k;) p.push({
                    number: w,
                    duration: _ / d,
                    time: m,
                    timeline: f
                }), m += _, w++
            }
            return p
        }, qa = function (e) {
            return e.reduce(function (e, t) {
                return e.concat(t)
            }, [])
        }, za = function (e) {
            if (!e.length) return [];
            for (var t = [], i = 0; i < e.length; i++) t.push(e[i]);
            return t
        }, Wa = {
            static: function (e) {
                var t = e.duration, i = e.timescale, n = void 0 === i ? 1 : i, r = e.sourceDuration;
                return {start: 0, end: Math.ceil(r / (t / n))}
            }, dynamic: function (e) {
                var t = e.NOW, i = e.clientOffset, n = e.availabilityStartTime, r = e.timescale, a = void 0 === r ? 1 : r,
                    s = e.duration, o = e.start, u = void 0 === o ? 0 : o, l = e.minimumUpdatePeriod,
                    d = void 0 === l ? 0 : l, c = e.timeShiftBufferDepth, h = void 0 === c ? 1 / 0 : c, f = (t + i) / 1e3,
                    p = n + u, m = f + d - p, g = Math.ceil(m * a / s), y = Math.floor((f - p - h) * a / s),
                    _ = Math.floor((f - p) * a / s);
                return {start: Math.max(0, y), end: Math.min(g, _)}
            }
        }, Xa = function (e) {
            var t, i = e.type, n = void 0 === i ? "static" : i, r = e.duration, a = e.timescale, s = void 0 === a ? 1 : a,
                o = e.sourceDuration, u = Wa[n](e), l = function (e, t) {
                    for (var i = [], n = e; n < t; n++) i.push(n);
                    return i
                }(u.start, u.end).map((t = e, function (e, i) {
                    var n = t.duration, r = t.timescale, a = void 0 === r ? 1 : r, s = t.periodIndex, o = t.startNumber;
                    return {number: (void 0 === o ? 1 : o) + e, duration: n / a, timeline: s, time: i * n}
                }));
            if ("static" === n) {
                var d = l.length - 1;
                l[d].duration = o - r / s * d
            }
            return l
        }, Ya = /\$([A-z]*)(?:(%0)([0-9]+)d)?\$/g, Ka = function (e, t) {
            return e.replace(Ya, (i = t, function (e, t, n, r) {
                if ("$$" === e) return "$";
                if (void 0 === i[t]) return e;
                var a = "" + i[t];
                return "RepresentationID" === t ? a : (r = n ? parseInt(r, 10) : 1, a.length >= r ? a : "" + new Array(r - a.length + 1).join("0") + a)
            }));
            var i
        }, $a = function (e, t) {
            var i, n, r = {RepresentationID: e.id, Bandwidth: e.bandwidth || 0}, a = e.initialization,
                s = void 0 === a ? {sourceURL: "", range: ""} : a,
                o = Va({baseUrl: e.baseUrl, source: Ka(s.sourceURL, r), range: s.range});
            return (i = e, n = t, i.duration || n ? i.duration ? Xa(i) : Ha(i, n) : [{
                number: i.startNumber || 1,
                duration: i.sourceDuration,
                time: 0,
                timeline: i.periodIndex
            }]).map(function (t) {
                r.Number = t.number, r.Time = t.time;
                var i = Ka(e.media || "", r);
                return {
                    uri: i,
                    timeline: t.timeline,
                    duration: t.duration,
                    resolvedUri: Fa(e.baseUrl || "", i),
                    map: o,
                    number: t.number
                }
            })
        }, Qa = "INVALID_NUMBER_OF_PERIOD", Ja = "DASH_EMPTY_MANIFEST", Za = "DASH_INVALID_XML", es = "NO_BASE_URL",
        ts = "SEGMENT_TIME_UNSPECIFIED", is = "UNSUPPORTED_UTC_TIMING_SCHEME", ns = function (e, t) {
            var i = e.duration, n = e.segmentUrls, r = void 0 === n ? [] : n;
            if (!i && !t || i && t) throw new Error(ts);
            var a = r.map(function (t) {
                return function (e, t) {
                    var i = e.baseUrl, n = e.initialization, r = void 0 === n ? {} : n,
                        a = Va({baseUrl: i, source: r.sourceURL, range: r.range}),
                        s = Va({baseUrl: i, source: t.media, range: t.mediaRange});
                    return s.map = a, s
                }(e, t)
            }), s = void 0;
            i && (s = Xa(e)), t && (s = Ha(e, t));
            return s.map(function (e, t) {
                if (a[t]) {
                    var i = a[t];
                    return i.timeline = e.timeline, i.duration = e.duration, i.number = e.number, i
                }
            }).filter(function (e) {
                return e
            })
        }, rs = function (e) {
            var t = e.baseUrl, i = e.initialization, n = void 0 === i ? {} : i, r = e.sourceDuration, a = e.timescale,
                s = void 0 === a ? 1 : a, o = e.indexRange, u = void 0 === o ? "" : o, l = e.duration;
            if (!t) throw new Error(es);
            var d = Va({baseUrl: t, source: n.sourceURL, range: n.range}), c = Va({baseUrl: t, source: t, range: u});
            if (c.map = d, l) {
                var h = Xa(e);
                h.length && (c.duration = h[0].duration, c.timeline = h[0].timeline)
            } else r && (c.duration = r / s, c.timeline = 0);
            return c.number = 0, [c]
        }, as = function (e) {
            var t = e.attributes, i = e.segmentInfo, n = void 0, r = void 0;
            if (i.template ? (r = $a, n = Na(t, i.template)) : i.base ? (r = rs, n = Na(t, i.base)) : i.list && (r = ns, n = Na(t, i.list)), !r) return {attributes: t};
            var a = r(n, i.timeline);
            if (n.duration) {
                var s = n, o = s.duration, u = s.timescale, l = void 0 === u ? 1 : u;
                n.duration = o / l
            } else a.length ? n.duration = a.reduce(function (e, t) {
                return Math.max(e, Math.ceil(t.duration))
            }, 0) : n.duration = 0;
            return {attributes: n, segments: a}
        }, ss = function (e, t) {
            return za(e.childNodes).filter(function (e) {
                return e.tagName === t
            })
        }, os = function (e) {
            return e.textContent.trim()
        }, us = function (e) {
            var t = /P(?:(\d*)Y)?(?:(\d*)M)?(?:(\d*)D)?(?:T(?:(\d*)H)?(?:(\d*)M)?(?:([\d.]*)S)?)?/.exec(e);
            if (!t) return 0;
            var i = t.slice(1), n = i[0], r = i[1], a = i[2], s = i[3], o = i[4], u = i[5];
            return 31536e3 * parseFloat(n || 0) + 2592e3 * parseFloat(r || 0) + 86400 * parseFloat(a || 0) + 3600 * parseFloat(s || 0) + 60 * parseFloat(o || 0) + parseFloat(u || 0)
        }, ls = {
            mediaPresentationDuration: function (e) {
                return us(e)
            }, availabilityStartTime: function (e) {
                return /^\d+-\d+-\d+T\d+:\d+:\d+(\.\d+)?$/.test(t = e) && (t += "Z"), Date.parse(t) / 1e3;
                var t
            }, minimumUpdatePeriod: function (e) {
                return us(e)
            }, timeShiftBufferDepth: function (e) {
                return us(e)
            }, start: function (e) {
                return us(e)
            }, width: function (e) {
                return parseInt(e, 10)
            }, height: function (e) {
                return parseInt(e, 10)
            }, bandwidth: function (e) {
                return parseInt(e, 10)
            }, startNumber: function (e) {
                return parseInt(e, 10)
            }, timescale: function (e) {
                return parseInt(e, 10)
            }, duration: function (e) {
                var t = parseInt(e, 10);
                return isNaN(t) ? us(e) : t
            }, d: function (e) {
                return parseInt(e, 10)
            }, t: function (e) {
                return parseInt(e, 10)
            }, r: function (e) {
                return parseInt(e, 10)
            }, DEFAULT: function (e) {
                return e
            }
        }, ds = function (e) {
            return e && e.attributes ? za(e.attributes).reduce(function (e, t) {
                var i = ls[t.name] || ls.DEFAULT;
                return e[t.name] = i(t.value), e
            }, {}) : {}
        };
    var cs, hs, fs, ps, ms, gs, ys, _s, vs, bs, Ts, Ss, ks, ws, Es, Cs, As, Ls, Os, Is, Ps, Rs, xs, Ds, Us, Ms, Bs, js,
        Ns, Fs, Vs, Gs, Hs, qs, zs, Ws, Xs, Ys, Ks = {
            "urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b": "org.w3.clearkey",
            "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed": "com.widevine.alpha",
            "urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95": "com.microsoft.playready",
            "urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb": "com.adobe.primetime"
        }, $s = function (e, t) {
            return t.length ? qa(e.map(function (e) {
                return t.map(function (t) {
                    return Fa(e, os(t))
                })
            })) : e
        }, Qs = function (e) {
            var t = ss(e, "SegmentTemplate")[0], i = ss(e, "SegmentList")[0],
                n = i && ss(i, "SegmentURL").map(function (e) {
                    return Na({tag: "SegmentURL"}, ds(e))
                }), r = ss(e, "SegmentBase")[0], a = i || t, s = a && ss(a, "SegmentTimeline")[0], o = i || r || t,
                u = o && ss(o, "Initialization")[0], l = t && ds(t);
            l && u ? l.initialization = u && ds(u) : l && l.initialization && (l.initialization = {sourceURL: l.initialization});
            var d = {
                template: l,
                timeline: s && ss(s, "S").map(function (e) {
                    return ds(e)
                }),
                list: i && Na(ds(i), {segmentUrls: n, initialization: ds(u)}),
                base: r && Na(ds(r), {initialization: ds(u)})
            };
            return Object.keys(d).forEach(function (e) {
                d[e] || delete d[e]
            }), d
        }, Js = function (e) {
            return e.reduce(function (e, t) {
                var i = ds(t), n = Ks[i.schemeIdUri];
                if (n) {
                    e[n] = {attributes: i};
                    var a = ss(t, "cenc:pssh")[0];
                    if (a) {
                        var s = os(a), o = s && function (e) {
                            for (var t = r.atob(e), i = new Uint8Array(t.length), n = 0; n < t.length; n++) i[n] = t.charCodeAt(n);
                            return i
                        }(s);
                        e[n].pssh = o
                    }
                }
                return e
            }, {})
        }, Zs = function (e, t, i) {
            return function (n) {
                var r = ds(n), a = $s(t, ss(n, "BaseURL")), s = ss(n, "Role")[0], o = {role: ds(s)}, u = Na(e, r, o),
                    l = Js(ss(n, "ContentProtection"));
                Object.keys(l).length && (u = Na(u, {contentProtection: l}));
                var d = Qs(n), c = ss(n, "Representation"), h = Na(i, d);
                return qa(c.map((f = u, p = a, m = h, function (e) {
                    var t = ss(e, "BaseURL"), i = $s(p, t), n = Na(f, ds(e)), r = Qs(e);
                    return i.map(function (e) {
                        return {segmentInfo: Na(m, r), attributes: Na(n, {baseUrl: e})}
                    })
                })));
                var f, p, m
            }
        }, eo = function (e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, i = t.manifestUri,
                n = void 0 === i ? "" : i, r = t.NOW, a = void 0 === r ? Date.now() : r, s = t.clientOffset,
                o = void 0 === s ? 0 : s, u = ss(e, "Period");
            if (1 !== u.length) throw new Error(Qa);
            var l = ds(e), d = $s([n], ss(e, "BaseURL"));
            return l.sourceDuration = l.mediaPresentationDuration || 0, l.NOW = a, l.clientOffset = o, qa(u.map((c = l, h = d, function (e, t) {
                var i = $s(h, ss(e, "BaseURL")), n = ds(e), r = Na(c, n, {periodIndex: t}), a = ss(e, "AdaptationSet"),
                    s = Qs(e);
                return qa(a.map(Zs(r, i, s)))
            })));
            var c, h
        }, to = function (e) {
            if ("" === e) throw new Error(Ja);
            var t = (new r.DOMParser).parseFromString(e, "application/xml"),
                i = t && "MPD" === t.documentElement.tagName ? t.documentElement : null;
            if (!i || i && i.getElementsByTagName("parsererror").length > 0) throw new Error(Za);
            return i
        }, io = function (e, t) {
            return function (e) {
                var t;
                if (!e.length) return {};
                var i = e[0].attributes, n = i.sourceDuration, r = i.minimumUpdatePeriod, a = void 0 === r ? 0 : r,
                    s = e.filter(function (e) {
                        var t = e.attributes;
                        return "video/mp4" === t.mimeType || "video" === t.contentType
                    }).map(Ma), o = e.filter(function (e) {
                        var t = e.attributes;
                        return "audio/mp4" === t.mimeType || "audio" === t.contentType
                    }), u = e.filter(function (e) {
                        var t = e.attributes;
                        return "text/vtt" === t.mimeType || "text" === t.contentType
                    }), l = {
                        allowCache: !0,
                        discontinuityStarts: [],
                        segments: [],
                        endList: !0,
                        mediaGroups: (t = {AUDIO: {}, VIDEO: {}}, t["CLOSED-CAPTIONS"] = {}, t.SUBTITLES = {}, t),
                        uri: "",
                        duration: n,
                        playlists: s,
                        minimumUpdatePeriod: 1e3 * a
                    };
                o.length && (l.mediaGroups.AUDIO.audio = (d = o, d.reduce(function (e, t) {
                    var i = t.attributes.role && t.attributes.role.value || "main", n = t.attributes.lang || "", r = "main";
                    return n && (r = t.attributes.lang + " (" + i + ")"), e[r] && e[r].playlists[0].attributes.BANDWIDTH > t.attributes.bandwidth ? e : (e[r] = {
                        language: n,
                        autoselect: !0,
                        default: "main" === i,
                        playlists: [function (e) {
                            var t, i = e.attributes, n = e.segments, r = {
                                attributes: (t = {
                                    NAME: i.id,
                                    BANDWIDTH: i.bandwidth,
                                    CODECS: i.codecs
                                }, t["PROGRAM-ID"] = 1, t),
                                uri: "",
                                endList: "static" === (i.type || "static"),
                                timeline: i.periodIndex,
                                resolvedUri: "",
                                targetDuration: i.duration,
                                segments: n,
                                mediaSequence: n.length ? n[0].number : 1
                            };
                            return i.contentProtection && (r.contentProtection = i.contentProtection), r
                        }(t)],
                        uri: ""
                    }, e)
                }, {})));
                var d;
                u.length && (l.mediaGroups.SUBTITLES.subs = (c = u, c.reduce(function (e, t) {
                    var i = t.attributes.lang || "text";
                    return e[i] ? e : (e[i] = {
                        language: i, default: !1, autoselect: !1, playlists: [function (e) {
                            var t, i = e.attributes, n = e.segments;
                            return void 0 === n && (n = [{
                                uri: i.baseUrl,
                                timeline: i.periodIndex,
                                resolvedUri: i.baseUrl || "",
                                duration: i.sourceDuration,
                                number: 0
                            }], i.duration = i.sourceDuration), {
                                attributes: (t = {
                                    NAME: i.id,
                                    BANDWIDTH: i.bandwidth
                                }, t["PROGRAM-ID"] = 1, t),
                                uri: "",
                                endList: "static" === (i.type || "static"),
                                timeline: i.periodIndex,
                                resolvedUri: i.baseUrl || "",
                                targetDuration: i.duration,
                                segments: n,
                                mediaSequence: n.length ? n[0].number : 1
                            }
                        }(t)], uri: ""
                    }, e)
                }, {})));
                var c;
                return l
            }(eo(to(e), t).map(as))
        }, no = function (e) {
            return function (e) {
                var t = ss(e, "UTCTiming")[0];
                if (!t) return null;
                var i = ds(t);
                switch (i.schemeIdUri) {
                    case"urn:mpeg:dash:utc:http-head:2014":
                    case"urn:mpeg:dash:utc:http-head:2012":
                        i.method = "HEAD";
                        break;
                    case"urn:mpeg:dash:utc:http-xsdate:2014":
                    case"urn:mpeg:dash:utc:http-iso:2014":
                    case"urn:mpeg:dash:utc:http-xsdate:2012":
                    case"urn:mpeg:dash:utc:http-iso:2012":
                        i.method = "GET";
                        break;
                    case"urn:mpeg:dash:utc:direct:2014":
                    case"urn:mpeg:dash:utc:direct:2012":
                        i.method = "DIRECT", i.value = Date.parse(i.value);
                        break;
                    case"urn:mpeg:dash:utc:http-ntp:2014":
                    case"urn:mpeg:dash:utc:ntp:2014":
                    case"urn:mpeg:dash:utc:sntp:2014":
                    default:
                        throw new Error(is)
                }
                return i
            }(to(e))
        }, ro = {
            toUnsigned: function (e) {
                return e >>> 0
            }
        }, ao = ro.toUnsigned, so = Object.freeze({default: ro, __moduleExports: ro, toUnsigned: ao}),
        oo = (so && ro || so).toUnsigned, uo = {
            findBox: cs = function (e, t) {
                var i, n, r, a, s, o = [];
                if (!t.length) return null;
                for (i = 0; i < e.byteLength;) n = oo(e[i] << 24 | e[i + 1] << 16 | e[i + 2] << 8 | e[i + 3]), r = hs(e.subarray(i + 4, i + 8)), a = n > 1 ? i + n : e.byteLength, r === t[0] && (1 === t.length ? o.push(e.subarray(i + 8, a)) : (s = cs(e.subarray(i + 8, a), t.slice(1))).length && (o = o.concat(s))), i = a;
                return o
            }, parseType: hs = function (e) {
                var t = "";
                return t += String.fromCharCode(e[0]), t += String.fromCharCode(e[1]), t += String.fromCharCode(e[2]), t += String.fromCharCode(e[3])
            }, timescale: function (e) {
                return cs(e, ["moov", "trak"]).reduce(function (e, t) {
                    var i, n, r, a, s;
                    return (i = cs(t, ["tkhd"])[0]) ? (n = i[0], a = oo(i[r = 0 === n ? 12 : 20] << 24 | i[r + 1] << 16 | i[r + 2] << 8 | i[r + 3]), (s = cs(t, ["mdia", "mdhd"])[0]) ? (r = 0 === (n = s[0]) ? 12 : 20, e[a] = oo(s[r] << 24 | s[r + 1] << 16 | s[r + 2] << 8 | s[r + 3]), e) : null) : null
                }, {})
            }, startTime: function (e, t) {
                var i, n, r;
                return i = cs(t, ["moof", "traf"]), n = [].concat.apply([], i.map(function (t) {
                    return cs(t, ["tfhd"]).map(function (i) {
                        var n, r;
                        return n = oo(i[4] << 24 | i[5] << 16 | i[6] << 8 | i[7]), r = e[n] || 9e4, (cs(t, ["tfdt"]).map(function (e) {
                            var t, i;
                            return t = e[0], i = oo(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7]), 1 === t && (i *= Math.pow(2, 32), i += oo(e[8] << 24 | e[9] << 16 | e[10] << 8 | e[11])), i
                        })[0] || 1 / 0) / r
                    })
                })), r = Math.min.apply(null, n), isFinite(r) ? r : 0
            }, videoTrackIds: function (e) {
                var t = [];
                return cs(e, ["moov", "trak"]).forEach(function (e) {
                    var i = cs(e, ["mdia", "hdlr"]), n = cs(e, ["tkhd"]);
                    i.forEach(function (e, i) {
                        var r, a, s = hs(e.subarray(8, 12)), o = n[i];
                        "vide" === s && (a = 0 === (r = new DataView(o.buffer, o.byteOffset, o.byteLength)).getUint8(0) ? r.getUint32(12) : r.getUint32(20), t.push(a))
                    })
                }), t
            }
        }, lo = Math.pow(2, 32) - 1;
    !function () {
        var e;
        if (Us = {
            avc1: [],
            avcC: [],
            btrt: [],
            dinf: [],
            dref: [],
            esds: [],
            ftyp: [],
            hdlr: [],
            mdat: [],
            mdhd: [],
            mdia: [],
            mfhd: [],
            minf: [],
            moof: [],
            moov: [],
            mp4a: [],
            mvex: [],
            mvhd: [],
            sdtp: [],
            smhd: [],
            stbl: [],
            stco: [],
            stsc: [],
            stsd: [],
            stsz: [],
            stts: [],
            styp: [],
            tfdt: [],
            tfhd: [],
            traf: [],
            trak: [],
            trun: [],
            trex: [],
            tkhd: [],
            vmhd: []
        }, "undefined" != typeof Uint8Array) {
            for (e in Us) Us.hasOwnProperty(e) && (Us[e] = [e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)]);
            Ms = new Uint8Array(["i".charCodeAt(0), "s".charCodeAt(0), "o".charCodeAt(0), "m".charCodeAt(0)]), js = new Uint8Array(["a".charCodeAt(0), "v".charCodeAt(0), "c".charCodeAt(0), "1".charCodeAt(0)]), Bs = new Uint8Array([0, 0, 0, 1]), Ns = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]), Fs = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]), Vs = {
                video: Ns,
                audio: Fs
            }, qs = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]), Hs = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), zs = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), Ws = zs, Xs = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Ys = zs, Gs = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])
        }
    }(), fs = function (e) {
        var t, i, n = [], r = 0;
        for (t = 1; t < arguments.length; t++) n.push(arguments[t]);
        for (t = n.length; t--;) r += n[t].byteLength;
        for (i = new Uint8Array(r + 8), new DataView(i.buffer, i.byteOffset, i.byteLength).setUint32(0, i.byteLength), i.set(e, 4), t = 0, r = 8; t < n.length; t++) i.set(n[t], r), r += n[t].byteLength;
        return i
    }, ps = function () {
        return fs(Us.dinf, fs(Us.dref, qs))
    }, ms = function (e) {
        return fs(Us.esds, new Uint8Array([0, 0, 0, 0, 3, 25, 0, 0, 0, 4, 17, 64, 21, 0, 6, 0, 0, 0, 218, 192, 0, 0, 218, 192, 5, 2, e.audioobjecttype << 3 | e.samplingfrequencyindex >>> 1, e.samplingfrequencyindex << 7 | e.channelcount << 3, 6, 1, 2]))
    }, gs = function () {
        return fs(Us.ftyp, Ms, Bs, Ms, js)
    }, Ls = function (e) {
        return fs(Us.hdlr, Vs[e])
    }, ys = function (e) {
        return fs(Us.mdat, e)
    }, As = function (e) {
        var t = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 1, 95, 144, e.duration >>> 24 & 255, e.duration >>> 16 & 255, e.duration >>> 8 & 255, 255 & e.duration, 85, 196, 0, 0]);
        return e.samplerate && (t[12] = e.samplerate >>> 24 & 255, t[13] = e.samplerate >>> 16 & 255, t[14] = e.samplerate >>> 8 & 255, t[15] = 255 & e.samplerate), fs(Us.mdhd, t)
    }, Cs = function (e) {
        return fs(Us.mdia, As(e), Ls(e.type), vs(e))
    }, _s = function (e) {
        return fs(Us.mfhd, new Uint8Array([0, 0, 0, 0, (4278190080 & e) >> 24, (16711680 & e) >> 16, (65280 & e) >> 8, 255 & e]))
    }, vs = function (e) {
        return fs(Us.minf, "video" === e.type ? fs(Us.vmhd, Gs) : fs(Us.smhd, Hs), ps(), Is(e))
    }, bs = function (e, t) {
        for (var i = [], n = t.length; n--;) i[n] = Rs(t[n]);
        return fs.apply(null, [Us.moof, _s(e)].concat(i))
    }, Ts = function (e) {
        for (var t = e.length, i = []; t--;) i[t] = ws(e[t]);
        return fs.apply(null, [Us.moov, ks(4294967295)].concat(i).concat(Ss(e)))
    }, Ss = function (e) {
        for (var t = e.length, i = []; t--;) i[t] = xs(e[t]);
        return fs.apply(null, [Us.mvex].concat(i))
    }, ks = function (e) {
        var t = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 95, 144, (4278190080 & e) >> 24, (16711680 & e) >> 16, (65280 & e) >> 8, 255 & e, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
        return fs(Us.mvhd, t)
    }, Os = function (e) {
        var t, i, n = e.samples || [], r = new Uint8Array(4 + n.length);
        for (i = 0; i < n.length; i++) t = n[i].flags, r[i + 4] = t.dependsOn << 4 | t.isDependedOn << 2 | t.hasRedundancy;
        return fs(Us.sdtp, r)
    }, Is = function (e) {
        return fs(Us.stbl, Ps(e), fs(Us.stts, Ys), fs(Us.stsc, Ws), fs(Us.stsz, Xs), fs(Us.stco, zs))
    }, function () {
        var e, t;
        Ps = function (i) {
            return fs(Us.stsd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]), "video" === i.type ? e(i) : t(i))
        }, e = function (e) {
            var t, i = e.sps || [], n = e.pps || [], r = [], a = [];
            for (t = 0; t < i.length; t++) r.push((65280 & i[t].byteLength) >>> 8), r.push(255 & i[t].byteLength), r = r.concat(Array.prototype.slice.call(i[t]));
            for (t = 0; t < n.length; t++) a.push((65280 & n[t].byteLength) >>> 8), a.push(255 & n[t].byteLength), a = a.concat(Array.prototype.slice.call(n[t]));
            return fs(Us.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (65280 & e.width) >> 8, 255 & e.width, (65280 & e.height) >> 8, 255 & e.height, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 19, 118, 105, 100, 101, 111, 106, 115, 45, 99, 111, 110, 116, 114, 105, 98, 45, 104, 108, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), fs(Us.avcC, new Uint8Array([1, e.profileIdc, e.profileCompatibility, e.levelIdc, 255].concat([i.length]).concat(r).concat([n.length]).concat(a))), fs(Us.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])))
        }, t = function (e) {
            return fs(Us.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, (65280 & e.channelcount) >> 8, 255 & e.channelcount, (65280 & e.samplesize) >> 8, 255 & e.samplesize, 0, 0, 0, 0, (65280 & e.samplerate) >> 8, 255 & e.samplerate, 0, 0]), ms(e))
        }
    }(), Es = function (e) {
        var t = new Uint8Array([0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, (4278190080 & e.id) >> 24, (16711680 & e.id) >> 16, (65280 & e.id) >> 8, 255 & e.id, 0, 0, 0, 0, (4278190080 & e.duration) >> 24, (16711680 & e.duration) >> 16, (65280 & e.duration) >> 8, 255 & e.duration, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, (65280 & e.width) >> 8, 255 & e.width, 0, 0, (65280 & e.height) >> 8, 255 & e.height, 0, 0]);
        return fs(Us.tkhd, t)
    }, Rs = function (e) {
        var t, i, n, r, a, s;
        return t = fs(Us.tfhd, new Uint8Array([0, 0, 0, 58, (4278190080 & e.id) >> 24, (16711680 & e.id) >> 16, (65280 & e.id) >> 8, 255 & e.id, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])), a = Math.floor(e.baseMediaDecodeTime / (lo + 1)), s = Math.floor(e.baseMediaDecodeTime % (lo + 1)), i = fs(Us.tfdt, new Uint8Array([1, 0, 0, 0, a >>> 24 & 255, a >>> 16 & 255, a >>> 8 & 255, 255 & a, s >>> 24 & 255, s >>> 16 & 255, s >>> 8 & 255, 255 & s])), 92, "audio" === e.type ? (n = Ds(e, 92), fs(Us.traf, t, i, n)) : (r = Os(e), n = Ds(e, r.length + 92), fs(Us.traf, t, i, n, r))
    }, ws = function (e) {
        return e.duration = e.duration || 4294967295, fs(Us.trak, Es(e), Cs(e))
    }, xs = function (e) {
        var t = new Uint8Array([0, 0, 0, 0, (4278190080 & e.id) >> 24, (16711680 & e.id) >> 16, (65280 & e.id) >> 8, 255 & e.id, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]);
        return "video" !== e.type && (t[t.length - 1] = 0), fs(Us.trex, t)
    }, function () {
        var e, t, i;
        i = function (e, t) {
            var i = 0, n = 0, r = 0, a = 0;
            return e.length && (void 0 !== e[0].duration && (i = 1), void 0 !== e[0].size && (n = 2), void 0 !== e[0].flags && (r = 4), void 0 !== e[0].compositionTimeOffset && (a = 8)), [0, 0, i | n | r | a, 1, (4278190080 & e.length) >>> 24, (16711680 & e.length) >>> 16, (65280 & e.length) >>> 8, 255 & e.length, (4278190080 & t) >>> 24, (16711680 & t) >>> 16, (65280 & t) >>> 8, 255 & t]
        }, t = function (e, t) {
            var n, r, a, s;
            for (t += 20 + 16 * (r = e.samples || []).length, n = i(r, t), s = 0; s < r.length; s++) a = r[s], n = n.concat([(4278190080 & a.duration) >>> 24, (16711680 & a.duration) >>> 16, (65280 & a.duration) >>> 8, 255 & a.duration, (4278190080 & a.size) >>> 24, (16711680 & a.size) >>> 16, (65280 & a.size) >>> 8, 255 & a.size, a.flags.isLeading << 2 | a.flags.dependsOn, a.flags.isDependedOn << 6 | a.flags.hasRedundancy << 4 | a.flags.paddingValue << 1 | a.flags.isNonSyncSample, 61440 & a.flags.degradationPriority, 15 & a.flags.degradationPriority, (4278190080 & a.compositionTimeOffset) >>> 24, (16711680 & a.compositionTimeOffset) >>> 16, (65280 & a.compositionTimeOffset) >>> 8, 255 & a.compositionTimeOffset]);
            return fs(Us.trun, new Uint8Array(n))
        }, e = function (e, t) {
            var n, r, a, s;
            for (t += 20 + 8 * (r = e.samples || []).length, n = i(r, t), s = 0; s < r.length; s++) a = r[s], n = n.concat([(4278190080 & a.duration) >>> 24, (16711680 & a.duration) >>> 16, (65280 & a.duration) >>> 8, 255 & a.duration, (4278190080 & a.size) >>> 24, (16711680 & a.size) >>> 16, (65280 & a.size) >>> 8, 255 & a.size]);
            return fs(Us.trun, new Uint8Array(n))
        }, Ds = function (i, n) {
            return "audio" === i.type ? e(i, n) : t(i, n)
        }
    }();
    var co = {
            ftyp: gs, mdat: ys, moof: bs, moov: Ts, initSegment: function (e) {
                var t, i = gs(), n = Ts(e);
                return (t = new Uint8Array(i.byteLength + n.byteLength)).set(i), t.set(n, i.byteLength), t
            }
        }, ho = co.ftyp, fo = co.mdat, po = co.moof, mo = co.moov, go = co.initSegment,
        yo = Object.freeze({default: co, __moduleExports: co, ftyp: ho, mdat: fo, moof: po, moov: mo, initSegment: go}),
        _o = function () {
            this.init = function () {
                var e = {};
                this.on = function (t, i) {
                    e[t] || (e[t] = []), e[t] = e[t].concat(i)
                }, this.off = function (t, i) {
                    var n;
                    return !!e[t] && (n = e[t].indexOf(i), e[t] = e[t].slice(), e[t].splice(n, 1), n > -1)
                }, this.trigger = function (t) {
                    var i, n, r, a;
                    if (i = e[t]) if (2 === arguments.length) for (r = i.length, n = 0; n < r; ++n) i[n].call(this, arguments[1]); else {
                        for (a = [], n = arguments.length, n = 1; n < arguments.length; ++n) a.push(arguments[n]);
                        for (r = i.length, n = 0; n < r; ++n) i[n].apply(this, a)
                    }
                }, this.dispose = function () {
                    e = {}
                }
            }
        };
    _o.prototype.pipe = function (e) {
        return this.on("data", function (t) {
            e.push(t)
        }), this.on("done", function (t) {
            e.flush(t)
        }), e
    }, _o.prototype.push = function (e) {
        this.trigger("data", e)
    }, _o.prototype.flush = function (e) {
        this.trigger("done", e)
    };
    var vo = _o, bo = Object.freeze({default: vo, __moduleExports: vo}), To = function (e, t) {
            var i = {
                size: 0,
                flags: {
                    isLeading: 0,
                    dependsOn: 1,
                    isDependedOn: 0,
                    hasRedundancy: 0,
                    degradationPriority: 0,
                    isNonSyncSample: 1
                }
            };
            return i.dataOffset = t, i.compositionTimeOffset = e.pts - e.dts, i.duration = e.duration, i.size = 4 * e.length, i.size += e.byteLength, e.keyFrame && (i.flags.dependsOn = 2, i.flags.isNonSyncSample = 0), i
        }, So = {
            groupNalsIntoFrames: function (e) {
                var t, i, n = [], r = [];
                for (n.byteLength = 0, t = 0; t < e.length; t++) "access_unit_delimiter_rbsp" === (i = e[t]).nalUnitType ? (n.length && (n.duration = i.dts - n.dts, r.push(n)), (n = [i]).byteLength = i.data.byteLength, n.pts = i.pts, n.dts = i.dts) : ("slice_layer_without_partitioning_rbsp_idr" === i.nalUnitType && (n.keyFrame = !0), n.duration = i.dts - n.dts, n.byteLength += i.data.byteLength, n.push(i));
                return r.length && (!n.duration || n.duration <= 0) && (n.duration = r[r.length - 1].duration), r.push(n), r
            }, groupFramesIntoGops: function (e) {
                var t, i, n = [], r = [];
                for (n.byteLength = 0, n.nalCount = 0, n.duration = 0, n.pts = e[0].pts, n.dts = e[0].dts, r.byteLength = 0, r.nalCount = 0, r.duration = 0, r.pts = e[0].pts, r.dts = e[0].dts, t = 0; t < e.length; t++) (i = e[t]).keyFrame ? (n.length && (r.push(n), r.byteLength += n.byteLength, r.nalCount += n.nalCount, r.duration += n.duration), (n = [i]).nalCount = i.length, n.byteLength = i.byteLength, n.pts = i.pts, n.dts = i.dts, n.duration = i.duration) : (n.duration += i.duration, n.nalCount += i.length, n.byteLength += i.byteLength, n.push(i));
                return r.length && n.duration <= 0 && (n.duration = r[r.length - 1].duration), r.byteLength += n.byteLength, r.nalCount += n.nalCount, r.duration += n.duration, r.push(n), r
            }, extendFirstKeyFrame: function (e) {
                var t;
                return !e[0][0].keyFrame && e.length > 1 && (t = e.shift(), e.byteLength -= t.byteLength, e.nalCount -= t.nalCount, e[0][0].dts = t.dts, e[0][0].pts = t.pts, e[0][0].duration += t.duration), e
            }, generateSampleTable: function (e, t) {
                var i, n, r, a, s, o = t || 0, u = [];
                for (i = 0; i < e.length; i++) for (a = e[i], n = 0; n < a.length; n++) s = a[n], o += (r = To(s, o)).size, u.push(r);
                return u
            }, concatenateNalData: function (e) {
                var t, i, n, r, a, s, o = 0, u = e.byteLength, l = e.nalCount, d = new Uint8Array(u + 4 * l),
                    c = new DataView(d.buffer);
                for (t = 0; t < e.length; t++) for (r = e[t], i = 0; i < r.length; i++) for (a = r[i], n = 0; n < a.length; n++) s = a[n], c.setUint32(o, s.data.byteLength), o += 4, d.set(s.data, o), o += s.data.byteLength;
                return d
            }
        }, ko = So.groupNalsIntoFrames, wo = So.groupFramesIntoGops, Eo = So.extendFirstKeyFrame,
        Co = So.generateSampleTable, Ao = So.concatenateNalData, Lo = Object.freeze({
            default: So,
            __moduleExports: So,
            groupNalsIntoFrames: ko,
            groupFramesIntoGops: wo,
            extendFirstKeyFrame: Eo,
            generateSampleTable: Co,
            concatenateNalData: Ao
        }), Oo = {
            clearDtsInfo: function (e) {
                delete e.minSegmentDts, delete e.maxSegmentDts, delete e.minSegmentPts, delete e.maxSegmentPts
            }, calculateTrackBaseMediaDecodeTime: function (e, t) {
                var i, n = e.minSegmentDts;
                return t || (n -= e.timelineStartInfo.dts), i = e.timelineStartInfo.baseMediaDecodeTime, i += n, i = Math.max(0, i), "audio" === e.type && (i *= e.samplerate / 9e4, i = Math.floor(i)), i
            }, collectDtsInfo: function (e, t) {
                "number" == typeof t.pts && (void 0 === e.timelineStartInfo.pts && (e.timelineStartInfo.pts = t.pts), void 0 === e.minSegmentPts ? e.minSegmentPts = t.pts : e.minSegmentPts = Math.min(e.minSegmentPts, t.pts), void 0 === e.maxSegmentPts ? e.maxSegmentPts = t.pts : e.maxSegmentPts = Math.max(e.maxSegmentPts, t.pts)), "number" == typeof t.dts && (void 0 === e.timelineStartInfo.dts && (e.timelineStartInfo.dts = t.dts), void 0 === e.minSegmentDts ? e.minSegmentDts = t.dts : e.minSegmentDts = Math.min(e.minSegmentDts, t.dts), void 0 === e.maxSegmentDts ? e.maxSegmentDts = t.dts : e.maxSegmentDts = Math.max(e.maxSegmentDts, t.dts))
            }
        }, Io = Oo.clearDtsInfo, Po = Oo.calculateTrackBaseMediaDecodeTime, Ro = Oo.collectDtsInfo, xo = Object.freeze({
            default: Oo,
            __moduleExports: Oo,
            clearDtsInfo: Io,
            calculateTrackBaseMediaDecodeTime: Po,
            collectDtsInfo: Ro
        }), Do = {
            parseSei: function (e) {
                for (var t = 0, i = {payloadType: -1, payloadSize: 0}, n = 0, r = 0; t < e.byteLength && 128 !== e[t];) {
                    for (; 255 === e[t];) n += 255, t++;
                    for (n += e[t++]; 255 === e[t];) r += 255, t++;
                    if (r += e[t++], !i.payload && 4 === n) {
                        i.payloadType = n, i.payloadSize = r, i.payload = e.subarray(t, t + r);
                        break
                    }
                    t += r, n = 0, r = 0
                }
                return i
            }, parseUserData: function (e) {
                return 181 !== e.payload[0] ? null : 49 != (e.payload[1] << 8 | e.payload[2]) ? null : "GA94" !== String.fromCharCode(e.payload[3], e.payload[4], e.payload[5], e.payload[6]) ? null : 3 !== e.payload[7] ? null : e.payload.subarray(8, e.payload.length - 1)
            }, parseCaptionPackets: function (e, t) {
                var i, n, r, a, s = [];
                if (!(64 & t[0])) return s;
                for (n = 31 & t[0], i = 0; i < n; i++) a = {
                    type: 3 & t[2 + (r = 3 * i)],
                    pts: e
                }, 4 & t[r + 2] && (a.ccData = t[r + 3] << 8 | t[r + 4], s.push(a));
                return s
            }, discardEmulationPreventionBytes: function (e) {
                for (var t, i, n = e.byteLength, r = [], a = 1; a < n - 2;) 0 === e[a] && 0 === e[a + 1] && 3 === e[a + 2] ? (r.push(a + 2), a += 2) : a++;
                if (0 === r.length) return e;
                t = n - r.length, i = new Uint8Array(t);
                var s = 0;
                for (a = 0; a < t; s++, a++) s === r[0] && (s++, r.shift()), i[a] = e[s];
                return i
            }, USER_DATA_REGISTERED_ITU_T_T35: 4
        }, Uo = Do.parseSei, Mo = Do.parseUserData, Bo = Do.parseCaptionPackets, jo = Do.discardEmulationPreventionBytes,
        No = Do.USER_DATA_REGISTERED_ITU_T_T35, Fo = Object.freeze({
            default: Do,
            __moduleExports: Do,
            parseSei: Uo,
            parseUserData: Mo,
            parseCaptionPackets: Bo,
            discardEmulationPreventionBytes: jo,
            USER_DATA_REGISTERED_ITU_T_T35: No
        }), Vo = bo && vo || bo, Go = Fo && Do || Fo, Ho = function e() {
            e.prototype.init.call(this), this.captionPackets_ = [], this.ccStreams_ = [new Yo(0, 0), new Yo(0, 1), new Yo(1, 0), new Yo(1, 1)], this.reset(), this.ccStreams_.forEach(function (e) {
                e.on("data", this.trigger.bind(this, "data")), e.on("done", this.trigger.bind(this, "done"))
            }, this)
        };
    (Ho.prototype = new Vo).push = function (e) {
        var t, i, n;
        if ("sei_rbsp" === e.nalUnitType && (t = Go.parseSei(e.escapedRBSP)).payloadType === Go.USER_DATA_REGISTERED_ITU_T_T35 && (i = Go.parseUserData(t))) if (e.dts < this.latestDts_) this.ignoreNextEqualDts_ = !0; else {
            if (e.dts === this.latestDts_ && this.ignoreNextEqualDts_) return this.numSameDts_--, void(this.numSameDts_ || (this.ignoreNextEqualDts_ = !1));
            n = Go.parseCaptionPackets(e.pts, i), this.captionPackets_ = this.captionPackets_.concat(n), this.latestDts_ !== e.dts && (this.numSameDts_ = 0), this.numSameDts_++, this.latestDts_ = e.dts
        }
    }, Ho.prototype.flush = function () {
        this.captionPackets_.length ? (this.captionPackets_.forEach(function (e, t) {
            e.presortIndex = t
        }), this.captionPackets_.sort(function (e, t) {
            return e.pts === t.pts ? e.presortIndex - t.presortIndex : e.pts - t.pts
        }), this.captionPackets_.forEach(function (e) {
            e.type < 2 && this.dispatchCea608Packet(e)
        }, this), this.captionPackets_.length = 0, this.ccStreams_.forEach(function (e) {
            e.flush()
        }, this)) : this.ccStreams_.forEach(function (e) {
            e.flush()
        }, this)
    }, Ho.prototype.reset = function () {
        this.latestDts_ = null, this.ignoreNextEqualDts_ = !1, this.numSameDts_ = 0, this.activeCea608Channel_ = [null, null], this.ccStreams_.forEach(function (e) {
            e.reset()
        })
    }, Ho.prototype.dispatchCea608Packet = function (e) {
        this.setsChannel1Active(e) ? this.activeCea608Channel_[e.type] = 0 : this.setsChannel2Active(e) && (this.activeCea608Channel_[e.type] = 1), null !== this.activeCea608Channel_[e.type] && this.ccStreams_[(e.type << 1) + this.activeCea608Channel_[e.type]].push(e)
    }, Ho.prototype.setsChannel1Active = function (e) {
        return 4096 == (30720 & e.ccData)
    }, Ho.prototype.setsChannel2Active = function (e) {
        return 6144 == (30720 & e.ccData)
    };
    var qo = {
            42: 225,
            92: 233,
            94: 237,
            95: 243,
            96: 250,
            123: 231,
            124: 247,
            125: 209,
            126: 241,
            127: 9608,
            304: 174,
            305: 176,
            306: 189,
            307: 191,
            308: 8482,
            309: 162,
            310: 163,
            311: 9834,
            312: 224,
            313: 160,
            314: 232,
            315: 226,
            316: 234,
            317: 238,
            318: 244,
            319: 251,
            544: 193,
            545: 201,
            546: 211,
            547: 218,
            548: 220,
            549: 252,
            550: 8216,
            551: 161,
            552: 42,
            553: 39,
            554: 8212,
            555: 169,
            556: 8480,
            557: 8226,
            558: 8220,
            559: 8221,
            560: 192,
            561: 194,
            562: 199,
            563: 200,
            564: 202,
            565: 203,
            566: 235,
            567: 206,
            568: 207,
            569: 239,
            570: 212,
            571: 217,
            572: 249,
            573: 219,
            574: 171,
            575: 187,
            800: 195,
            801: 227,
            802: 205,
            803: 204,
            804: 236,
            805: 210,
            806: 242,
            807: 213,
            808: 245,
            809: 123,
            810: 125,
            811: 92,
            812: 94,
            813: 95,
            814: 124,
            815: 126,
            816: 196,
            817: 228,
            818: 214,
            819: 246,
            820: 223,
            821: 165,
            822: 164,
            823: 9474,
            824: 197,
            825: 229,
            826: 216,
            827: 248,
            828: 9484,
            829: 9488,
            830: 9492,
            831: 9496
        }, zo = function (e) {
            return null === e ? "" : (e = qo[e] || e, String.fromCharCode(e))
        }, Wo = [4352, 4384, 4608, 4640, 5376, 5408, 5632, 5664, 5888, 5920, 4096, 4864, 4896, 5120, 5152],
        Xo = function () {
            for (var e = [], t = 15; t--;) e.push("");
            return e
        }, Yo = function e(t, i) {
            e.prototype.init.call(this), this.field_ = t || 0, this.dataChannel_ = i || 0, this.name_ = "CC" + (1 + (this.field_ << 1 | this.dataChannel_)), this.setConstants(), this.reset(), this.push = function (e) {
                var t, i, n, r, a;
                if ((t = 32639 & e.ccData) !== this.lastControlCode_) {
                    if (4096 == (61440 & t) ? this.lastControlCode_ = t : t !== this.PADDING_ && (this.lastControlCode_ = null), n = t >>> 8, r = 255 & t, t !== this.PADDING_) if (t === this.RESUME_CAPTION_LOADING_) this.mode_ = "popOn"; else if (t === this.END_OF_CAPTION_) this.mode_ = "popOn", this.clearFormatting(e.pts), this.flushDisplayed(e.pts), i = this.displayed_, this.displayed_ = this.nonDisplayed_, this.nonDisplayed_ = i, this.startPts_ = e.pts; else if (t === this.ROLL_UP_2_ROWS_) this.rollUpRows_ = 2, this.setRollUp(e.pts); else if (t === this.ROLL_UP_3_ROWS_) this.rollUpRows_ = 3, this.setRollUp(e.pts); else if (t === this.ROLL_UP_4_ROWS_) this.rollUpRows_ = 4, this.setRollUp(e.pts); else if (t === this.CARRIAGE_RETURN_) this.clearFormatting(e.pts), this.flushDisplayed(e.pts), this.shiftRowsUp_(), this.startPts_ = e.pts; else if (t === this.BACKSPACE_) "popOn" === this.mode_ ? this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1) : this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1); else if (t === this.ERASE_DISPLAYED_MEMORY_) this.flushDisplayed(e.pts), this.displayed_ = Xo(); else if (t === this.ERASE_NON_DISPLAYED_MEMORY_) this.nonDisplayed_ = Xo(); else if (t === this.RESUME_DIRECT_CAPTIONING_) "paintOn" !== this.mode_ && (this.flushDisplayed(e.pts), this.displayed_ = Xo()), this.mode_ = "paintOn", this.startPts_ = e.pts; else if (this.isSpecialCharacter(n, r)) a = zo((n = (3 & n) << 8) | r), this[this.mode_](e.pts, a), this.column_++; else if (this.isExtCharacter(n, r)) "popOn" === this.mode_ ? this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1) : this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1), a = zo((n = (3 & n) << 8) | r), this[this.mode_](e.pts, a), this.column_++; else if (this.isMidRowCode(n, r)) this.clearFormatting(e.pts), this[this.mode_](e.pts, " "), this.column_++, 14 == (14 & r) && this.addFormatting(e.pts, ["i"]), 1 == (1 & r) && this.addFormatting(e.pts, ["u"]); else if (this.isOffsetControlCode(n, r)) this.column_ += 3 & r; else if (this.isPAC(n, r)) {
                        var s = Wo.indexOf(7968 & t);
                        "rollUp" === this.mode_ && this.setRollUp(e.pts, s), s !== this.row_ && (this.clearFormatting(e.pts), this.row_ = s), 1 & r && -1 === this.formatting_.indexOf("u") && this.addFormatting(e.pts, ["u"]), 16 == (16 & t) && (this.column_ = 4 * ((14 & t) >> 1)), this.isColorPAC(r) && 14 == (14 & r) && this.addFormatting(e.pts, ["i"])
                    } else this.isNormalChar(n) && (0 === r && (r = null), a = zo(n), a += zo(r), this[this.mode_](e.pts, a), this.column_ += a.length)
                } else this.lastControlCode_ = null
            }
        };
    Yo.prototype = new Vo, Yo.prototype.flushDisplayed = function (e) {
        var t = this.displayed_.map(function (e) {
            return e.trim()
        }).join("\n").replace(/^\n+|\n+$/g, "");
        t.length && this.trigger("data", {startPts: this.startPts_, endPts: e, text: t, stream: this.name_})
    }, Yo.prototype.reset = function () {
        this.mode_ = "popOn", this.topRow_ = 0, this.startPts_ = 0, this.displayed_ = Xo(), this.nonDisplayed_ = Xo(), this.lastControlCode_ = null, this.column_ = 0, this.row_ = 14, this.rollUpRows_ = 2, this.formatting_ = []
    }, Yo.prototype.setConstants = function () {
        0 === this.dataChannel_ ? (this.BASE_ = 16, this.EXT_ = 17, this.CONTROL_ = (20 | this.field_) << 8, this.OFFSET_ = 23) : 1 === this.dataChannel_ && (this.BASE_ = 24, this.EXT_ = 25, this.CONTROL_ = (28 | this.field_) << 8, this.OFFSET_ = 31), this.PADDING_ = 0, this.RESUME_CAPTION_LOADING_ = 32 | this.CONTROL_, this.END_OF_CAPTION_ = 47 | this.CONTROL_, this.ROLL_UP_2_ROWS_ = 37 | this.CONTROL_, this.ROLL_UP_3_ROWS_ = 38 | this.CONTROL_, this.ROLL_UP_4_ROWS_ = 39 | this.CONTROL_, this.CARRIAGE_RETURN_ = 45 | this.CONTROL_, this.RESUME_DIRECT_CAPTIONING_ = 41 | this.CONTROL_, this.BACKSPACE_ = 33 | this.CONTROL_, this.ERASE_DISPLAYED_MEMORY_ = 44 | this.CONTROL_, this.ERASE_NON_DISPLAYED_MEMORY_ = 46 | this.CONTROL_
    }, Yo.prototype.isSpecialCharacter = function (e, t) {
        return e === this.EXT_ && t >= 48 && t <= 63
    }, Yo.prototype.isExtCharacter = function (e, t) {
        return (e === this.EXT_ + 1 || e === this.EXT_ + 2) && t >= 32 && t <= 63
    }, Yo.prototype.isMidRowCode = function (e, t) {
        return e === this.EXT_ && t >= 32 && t <= 47
    }, Yo.prototype.isOffsetControlCode = function (e, t) {
        return e === this.OFFSET_ && t >= 33 && t <= 35
    }, Yo.prototype.isPAC = function (e, t) {
        return e >= this.BASE_ && e < this.BASE_ + 8 && t >= 64 && t <= 127
    }, Yo.prototype.isColorPAC = function (e) {
        return e >= 64 && e <= 79 || e >= 96 && e <= 127
    }, Yo.prototype.isNormalChar = function (e) {
        return e >= 32 && e <= 127
    }, Yo.prototype.setRollUp = function (e, t) {
        if ("rollUp" !== this.mode_ && (this.row_ = 14, this.mode_ = "rollUp", this.flushDisplayed(e), this.nonDisplayed_ = Xo(), this.displayed_ = Xo()), void 0 !== t && t !== this.row_) for (var i = 0; i < this.rollUpRows_; i++) this.displayed_[t - i] = this.displayed_[this.row_ - i], this.displayed_[this.row_ - i] = "";
        void 0 === t && (t = this.row_), this.topRow_ = t - this.rollUpRows_ + 1
    }, Yo.prototype.addFormatting = function (e, t) {
        this.formatting_ = this.formatting_.concat(t);
        var i = t.reduce(function (e, t) {
            return e + "<" + t + ">"
        }, "");
        this[this.mode_](e, i)
    }, Yo.prototype.clearFormatting = function (e) {
        if (this.formatting_.length) {
            var t = this.formatting_.reverse().reduce(function (e, t) {
                return e + "</" + t + ">"
            }, "");
            this.formatting_ = [], this[this.mode_](e, t)
        }
    }, Yo.prototype.popOn = function (e, t) {
        var i = this.nonDisplayed_[this.row_];
        i += t, this.nonDisplayed_[this.row_] = i
    }, Yo.prototype.rollUp = function (e, t) {
        var i = this.displayed_[this.row_];
        i += t, this.displayed_[this.row_] = i
    }, Yo.prototype.shiftRowsUp_ = function () {
        var e;
        for (e = 0; e < this.topRow_; e++) this.displayed_[e] = "";
        for (e = this.row_ + 1; e < 15; e++) this.displayed_[e] = "";
        for (e = this.topRow_; e < this.row_; e++) this.displayed_[e] = this.displayed_[e + 1];
        this.displayed_[this.row_] = ""
    }, Yo.prototype.paintOn = function (e, t) {
        var i = this.displayed_[this.row_];
        i += t, this.displayed_[this.row_] = i
    };
    var Ko = {CaptionStream: Ho, Cea608Stream: Yo}, $o = Ko.CaptionStream, Qo = Ko.Cea608Stream,
        Jo = Object.freeze({default: Ko, __moduleExports: Ko, CaptionStream: $o, Cea608Stream: Qo}),
        Zo = {H264_STREAM_TYPE: 27, ADTS_STREAM_TYPE: 15, METADATA_STREAM_TYPE: 21}, eu = Zo.H264_STREAM_TYPE,
        tu = Zo.ADTS_STREAM_TYPE, iu = Zo.METADATA_STREAM_TYPE, nu = Object.freeze({
            default: Zo,
            __moduleExports: Zo,
            H264_STREAM_TYPE: eu,
            ADTS_STREAM_TYPE: tu,
            METADATA_STREAM_TYPE: iu
        }), ru = function (e, t) {
            var i = 1;
            for (e > t && (i = -1); Math.abs(t - e) > 4294967296;) e += 8589934592 * i;
            return e
        }, au = function e(t) {
            var i, n;
            e.prototype.init.call(this), this.type_ = t, this.push = function (e) {
                e.type === this.type_ && (void 0 === n && (n = e.dts), e.dts = ru(e.dts, n), e.pts = ru(e.pts, n), i = e.dts, this.trigger("data", e))
            }, this.flush = function () {
                n = i, this.trigger("done")
            }, this.discontinuity = function () {
                n = void 0, i = void 0
            }
        };
    au.prototype = new Vo;
    var su, ou = {TimestampRolloverStream: au, handleRollover: ru}, uu = ou.TimestampRolloverStream,
        lu = ou.handleRollover,
        du = Object.freeze({default: ou, __moduleExports: ou, TimestampRolloverStream: uu, handleRollover: lu}),
        cu = nu && Zo || nu, hu = function (e, t, i) {
            var n, r = "";
            for (n = t; n < i; n++) r += "%" + ("00" + e[n].toString(16)).slice(-2);
            return r
        }, fu = function (e, t, i) {
            return decodeURIComponent(hu(e, t, i))
        }, pu = function (e) {
            return e[0] << 21 | e[1] << 14 | e[2] << 7 | e[3]
        }, mu = {
            TXXX: function (e) {
                var t;
                if (3 === e.data[0]) {
                    for (t = 1; t < e.data.length; t++) if (0 === e.data[t]) {
                        e.description = fu(e.data, 1, t), e.value = fu(e.data, t + 1, e.data.length).replace(/\0*$/, "");
                        break
                    }
                    e.data = e.value
                }
            }, WXXX: function (e) {
                var t;
                if (3 === e.data[0]) for (t = 1; t < e.data.length; t++) if (0 === e.data[t]) {
                    e.description = fu(e.data, 1, t), e.url = fu(e.data, t + 1, e.data.length);
                    break
                }
            }, PRIV: function (e) {
                var t;
                for (t = 0; t < e.data.length; t++) if (0 === e.data[t]) {
                    e.owner = (i = e.data, n = 0, r = t, unescape(hu(i, n, r)));
                    break
                }
                var i, n, r;
                e.privateData = e.data.subarray(t + 1), e.data = e.privateData
            }
        };
    (su = function (e) {
        var t, i = {debug: !(!e || !e.debug), descriptor: e && e.descriptor}, n = 0, r = [], a = 0;
        if (su.prototype.init.call(this), this.dispatchType = cu.METADATA_STREAM_TYPE.toString(16), i.descriptor) for (t = 0; t < i.descriptor.length; t++) this.dispatchType += ("00" + i.descriptor[t].toString(16)).slice(-2);
        this.push = function (e) {
            var t, s, o, u, l;
            if ("timed-metadata" === e.type) if (e.dataAlignmentIndicator && (a = 0, r.length = 0), 0 === r.length && (e.data.length < 10 || e.data[0] !== "I".charCodeAt(0) || e.data[1] !== "D".charCodeAt(0) || e.data[2] !== "3".charCodeAt(0))) i.debug && console.log("Skipping unrecognized metadata packet"); else if (r.push(e), a += e.data.byteLength, 1 === r.length && (n = pu(e.data.subarray(6, 10)), n += 10), !(a < n)) {
                for (t = {
                    data: new Uint8Array(n),
                    frames: [],
                    pts: r[0].pts,
                    dts: r[0].dts
                }, l = 0; l < n;) t.data.set(r[0].data.subarray(0, n - l), l), l += r[0].data.byteLength, a -= r[0].data.byteLength, r.shift();
                s = 10, 64 & t.data[5] && (s += 4, s += pu(t.data.subarray(10, 14)), n -= pu(t.data.subarray(16, 20)));
                do {
                    if ((o = pu(t.data.subarray(s + 4, s + 8))) < 1) return console.log("Malformed ID3 frame encountered. Skipping metadata parsing.");
                    if ((u = {
                        id: String.fromCharCode(t.data[s], t.data[s + 1], t.data[s + 2], t.data[s + 3]),
                        data: t.data.subarray(s + 10, s + o + 10)
                    }).key = u.id, mu[u.id] && (mu[u.id](u), "com.apple.streaming.transportStreamTimestamp" === u.owner)) {
                        var d = u.data, c = (1 & d[3]) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;
                        c *= 4, c += 3 & d[7], u.timeStamp = c, void 0 === t.pts && void 0 === t.dts && (t.pts = u.timeStamp, t.dts = u.timeStamp), this.trigger("timestamp", u)
                    }
                    t.frames.push(u), s += 10, s += o
                } while (s < n);
                this.trigger("data", t)
            }
        }
    }).prototype = new Vo;
    var gu, yu, _u, vu = su, bu = Object.freeze({default: vu, __moduleExports: vu}), Tu = Jo && Ko || Jo,
        Su = du && ou || du, ku = bu && vu || bu, wu = Su.TimestampRolloverStream;
    (gu = function () {
        var e = new Uint8Array(188), t = 0;
        gu.prototype.init.call(this), this.push = function (i) {
            var n, r = 0, a = 188;
            for (t ? ((n = new Uint8Array(i.byteLength + t)).set(e.subarray(0, t)), n.set(i, t), t = 0) : n = i; a < n.byteLength;) 71 !== n[r] || 71 !== n[a] ? (r++, a++) : (this.trigger("data", n.subarray(r, a)), r += 188, a += 188);
            r < n.byteLength && (e.set(n.subarray(r), 0), t = n.byteLength - r)
        }, this.flush = function () {
            188 === t && 71 === e[0] && (this.trigger("data", e), t = 0), this.trigger("done")
        }
    }).prototype = new Vo, (yu = function () {
        var e, t, i, n;
        yu.prototype.init.call(this), n = this, this.packetsWaitingForPmt = [], this.programMapTable = void 0, e = function (e, n) {
            var r = 0;
            n.payloadUnitStartIndicator && (r += e[r] + 1), "pat" === n.type ? t(e.subarray(r), n) : i(e.subarray(r), n)
        }, t = function (e, t) {
            t.section_number = e[7], t.last_section_number = e[8], n.pmtPid = (31 & e[10]) << 8 | e[11], t.pmtPid = n.pmtPid
        }, i = function (e, t) {
            var i, r;
            if (1 & e[5]) {
                for (n.programMapTable = {
                    video: null,
                    audio: null,
                    "timed-metadata": {}
                }, i = 3 + ((15 & e[1]) << 8 | e[2]) - 4, r = 12 + ((15 & e[10]) << 8 | e[11]); r < i;) {
                    var a = e[r], s = (31 & e[r + 1]) << 8 | e[r + 2];
                    a === cu.H264_STREAM_TYPE && null === n.programMapTable.video ? n.programMapTable.video = s : a === cu.ADTS_STREAM_TYPE && null === n.programMapTable.audio ? n.programMapTable.audio = s : a === cu.METADATA_STREAM_TYPE && (n.programMapTable["timed-metadata"][s] = a), r += 5 + ((15 & e[r + 3]) << 8 | e[r + 4])
                }
                t.programMapTable = n.programMapTable
            }
        }, this.push = function (t) {
            var i = {}, n = 4;
            if (i.payloadUnitStartIndicator = !!(64 & t[1]), i.pid = 31 & t[1], i.pid <<= 8, i.pid |= t[2], (48 & t[3]) >>> 4 > 1 && (n += t[n] + 1), 0 === i.pid) i.type = "pat", e(t.subarray(n), i), this.trigger("data", i); else if (i.pid === this.pmtPid) for (i.type = "pmt", e(t.subarray(n), i), this.trigger("data", i); this.packetsWaitingForPmt.length;) this.processPes_.apply(this, this.packetsWaitingForPmt.shift()); else void 0 === this.programMapTable ? this.packetsWaitingForPmt.push([t, n, i]) : this.processPes_(t, n, i)
        }, this.processPes_ = function (e, t, i) {
            i.pid === this.programMapTable.video ? i.streamType = cu.H264_STREAM_TYPE : i.pid === this.programMapTable.audio ? i.streamType = cu.ADTS_STREAM_TYPE : i.streamType = this.programMapTable["timed-metadata"][i.pid], i.type = "pes", i.data = e.subarray(t), this.trigger("data", i)
        }
    }).prototype = new Vo, yu.STREAM_TYPES = {h264: 27, adts: 15}, (_u = function () {
        var e = this, t = {data: [], size: 0}, i = {data: [], size: 0}, n = {data: [], size: 0},
            r = function (t, i, n) {
                var r, a = new Uint8Array(t.size), s = {type: i}, o = 0, u = 0, l = !1;
                if (t.data.length && !(t.size < 9)) {
                    for (s.trackId = t.data[0].pid, o = 0; o < t.data.length; o++) r = t.data[o], a.set(r.data, u), u += r.data.byteLength;
                    !function (e, t) {
                        var i;
                        t.packetLength = 6 + (e[4] << 8 | e[5]), t.dataAlignmentIndicator = 0 != (4 & e[6]), 192 & (i = e[7]) && (t.pts = (14 & e[9]) << 27 | (255 & e[10]) << 20 | (254 & e[11]) << 12 | (255 & e[12]) << 5 | (254 & e[13]) >>> 3, t.pts *= 4, t.pts += (6 & e[13]) >>> 1, t.dts = t.pts, 64 & i && (t.dts = (14 & e[14]) << 27 | (255 & e[15]) << 20 | (254 & e[16]) << 12 | (255 & e[17]) << 5 | (254 & e[18]) >>> 3, t.dts *= 4, t.dts += (6 & e[18]) >>> 1)), t.data = e.subarray(9 + e[8])
                    }(a, s), l = "video" === i || s.packetLength <= t.size, (n || l) && (t.size = 0, t.data.length = 0), l && e.trigger("data", s)
                }
            };
        _u.prototype.init.call(this), this.push = function (a) {
            ({
                pat: function () {
                }, pes: function () {
                    var e, s;
                    switch (a.streamType) {
                        case cu.H264_STREAM_TYPE:
                        case cu.H264_STREAM_TYPE:
                            e = t, s = "video";
                            break;
                        case cu.ADTS_STREAM_TYPE:
                            e = i, s = "audio";
                            break;
                        case cu.METADATA_STREAM_TYPE:
                            e = n, s = "timed-metadata";
                            break;
                        default:
                            return
                    }
                    a.payloadUnitStartIndicator && r(e, s, !0), e.data.push(a), e.size += a.data.byteLength
                }, pmt: function () {
                    var t = {type: "metadata", tracks: []}, i = a.programMapTable;
                    null !== i.video && t.tracks.push({
                        timelineStartInfo: {baseMediaDecodeTime: 0},
                        id: +i.video,
                        codec: "avc",
                        type: "video"
                    }), null !== i.audio && t.tracks.push({
                        timelineStartInfo: {baseMediaDecodeTime: 0},
                        id: +i.audio,
                        codec: "adts",
                        type: "audio"
                    }), e.trigger("data", t)
                }
            })[a.type]()
        }, this.flush = function () {
            r(t, "video"), r(i, "audio"), r(n, "timed-metadata"), this.trigger("done")
        }
    }).prototype = new Vo;
    var Eu = {
        PAT_PID: 0,
        MP2T_PACKET_LENGTH: 188,
        TransportPacketStream: gu,
        TransportParseStream: yu,
        ElementaryStream: _u,
        TimestampRolloverStream: wu,
        CaptionStream: Tu.CaptionStream,
        Cea608Stream: Tu.Cea608Stream,
        MetadataStream: ku
    };
    for (var Cu in cu) cu.hasOwnProperty(Cu) && (Eu[Cu] = cu[Cu]);
    var Au, Lu = Eu, Ou = Object.freeze({default: Lu, __moduleExports: Lu}),
        Iu = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
    (Au = function () {
        var e;
        Au.prototype.init.call(this), this.push = function (t) {
            var i, n, r, a, s, o, u = 0, l = 0;
            if ("audio" === t.type) for (e ? (a = e, (e = new Uint8Array(a.byteLength + t.data.byteLength)).set(a), e.set(t.data, a.byteLength)) : e = t.data; u + 5 < e.length;) if (255 === e[u] && 240 == (246 & e[u + 1])) {
                if (n = 2 * (1 & ~e[u + 1]), i = (3 & e[u + 3]) << 11 | e[u + 4] << 3 | (224 & e[u + 5]) >> 5, o = 9e4 * (s = 1024 * (1 + (3 & e[u + 6]))) / Iu[(60 & e[u + 2]) >>> 2], r = u + i, e.byteLength < r) return;
                if (this.trigger("data", {
                    pts: t.pts + l * o,
                    dts: t.dts + l * o,
                    sampleCount: s,
                    audioobjecttype: 1 + (e[u + 2] >>> 6 & 3),
                    channelcount: (1 & e[u + 2]) << 2 | (192 & e[u + 3]) >>> 6,
                    samplerate: Iu[(60 & e[u + 2]) >>> 2],
                    samplingfrequencyindex: (60 & e[u + 2]) >>> 2,
                    samplesize: 16,
                    data: e.subarray(u + 7 + n, r)
                }), e.byteLength === r) return void(e = void 0);
                l++, e = e.subarray(r)
            } else u++
        }, this.flush = function () {
            this.trigger("done")
        }
    }).prototype = new Vo;
    var Pu, Ru, xu, Du = Au, Uu = Object.freeze({default: Du, __moduleExports: Du}), Mu = function (e) {
        var t = e.byteLength, i = 0, n = 0;
        this.length = function () {
            return 8 * t
        }, this.bitsAvailable = function () {
            return 8 * t + n
        }, this.loadWord = function () {
            var r = e.byteLength - t, a = new Uint8Array(4), s = Math.min(4, t);
            if (0 === s) throw new Error("no bytes available");
            a.set(e.subarray(r, r + s)), i = new DataView(a.buffer).getUint32(0), n = 8 * s, t -= s
        }, this.skipBits = function (e) {
            var r;
            n > e ? (i <<= e, n -= e) : (e -= n, e -= 8 * (r = Math.floor(e / 8)), t -= r, this.loadWord(), i <<= e, n -= e)
        }, this.readBits = function (e) {
            var r = Math.min(n, e), a = i >>> 32 - r;
            return (n -= r) > 0 ? i <<= r : t > 0 && this.loadWord(), (r = e - r) > 0 ? a << r | this.readBits(r) : a
        }, this.skipLeadingZeros = function () {
            var e;
            for (e = 0; e < n; ++e) if (0 != (i & 2147483648 >>> e)) return i <<= e, n -= e, e;
            return this.loadWord(), e + this.skipLeadingZeros()
        }, this.skipUnsignedExpGolomb = function () {
            this.skipBits(1 + this.skipLeadingZeros())
        }, this.skipExpGolomb = function () {
            this.skipBits(1 + this.skipLeadingZeros())
        }, this.readUnsignedExpGolomb = function () {
            var e = this.skipLeadingZeros();
            return this.readBits(e + 1) - 1
        }, this.readExpGolomb = function () {
            var e = this.readUnsignedExpGolomb();
            return 1 & e ? 1 + e >>> 1 : -1 * (e >>> 1)
        }, this.readBoolean = function () {
            return 1 === this.readBits(1)
        }, this.readUnsignedByte = function () {
            return this.readBits(8)
        }, this.loadWord()
    }, Bu = Object.freeze({default: Mu, __moduleExports: Mu}), ju = Bu && Mu || Bu;
    (Ru = function () {
        var e, t, i = 0;
        Ru.prototype.init.call(this), this.push = function (n) {
            var r;
            for (t ? ((r = new Uint8Array(t.byteLength + n.data.byteLength)).set(t), r.set(n.data, t.byteLength), t = r) : t = n.data; i < t.byteLength - 3; i++) if (1 === t[i + 2]) {
                e = i + 5;
                break
            }
            for (; e < t.byteLength;) switch (t[e]) {
                case 0:
                    if (0 !== t[e - 1]) {
                        e += 2;
                        break
                    }
                    if (0 !== t[e - 2]) {
                        e++;
                        break
                    }
                    i + 3 !== e - 2 && this.trigger("data", t.subarray(i + 3, e - 2));
                    do {
                        e++
                    } while (1 !== t[e] && e < t.length);
                    i = e - 2, e += 3;
                    break;
                case 1:
                    if (0 !== t[e - 1] || 0 !== t[e - 2]) {
                        e += 3;
                        break
                    }
                    this.trigger("data", t.subarray(i + 3, e - 2)), i = e - 2, e += 3;
                    break;
                default:
                    e += 3
            }
            t = t.subarray(i), e -= i, i = 0
        }, this.flush = function () {
            t && t.byteLength > 3 && this.trigger("data", t.subarray(i + 3)), t = null, i = 0, this.trigger("done")
        }
    }).prototype = new Vo, xu = {
        100: !0,
        110: !0,
        122: !0,
        244: !0,
        44: !0,
        83: !0,
        86: !0,
        118: !0,
        128: !0,
        138: !0,
        139: !0,
        134: !0
    }, (Pu = function () {
        var e, t, i, n, r, a, s, o = new Ru;
        Pu.prototype.init.call(this), e = this, this.push = function (e) {
            "video" === e.type && (t = e.trackId, i = e.pts, n = e.dts, o.push(e))
        }, o.on("data", function (s) {
            var o = {trackId: t, pts: i, dts: n, data: s};
            switch (31 & s[0]) {
                case 5:
                    o.nalUnitType = "slice_layer_without_partitioning_rbsp_idr";
                    break;
                case 6:
                    o.nalUnitType = "sei_rbsp", o.escapedRBSP = r(s.subarray(1));
                    break;
                case 7:
                    o.nalUnitType = "seq_parameter_set_rbsp", o.escapedRBSP = r(s.subarray(1)), o.config = a(o.escapedRBSP);
                    break;
                case 8:
                    o.nalUnitType = "pic_parameter_set_rbsp";
                    break;
                case 9:
                    o.nalUnitType = "access_unit_delimiter_rbsp"
            }
            e.trigger("data", o)
        }), o.on("done", function () {
            e.trigger("done")
        }), this.flush = function () {
            o.flush()
        }, s = function (e, t) {
            var i, n = 8, r = 8;
            for (i = 0; i < e; i++) 0 !== r && (r = (n + t.readExpGolomb() + 256) % 256), n = 0 === r ? n : r
        }, r = function (e) {
            for (var t, i, n = e.byteLength, r = [], a = 1; a < n - 2;) 0 === e[a] && 0 === e[a + 1] && 3 === e[a + 2] ? (r.push(a + 2), a += 2) : a++;
            if (0 === r.length) return e;
            t = n - r.length, i = new Uint8Array(t);
            var s = 0;
            for (a = 0; a < t; s++, a++) s === r[0] && (s++, r.shift()), i[a] = e[s];
            return i
        }, a = function (e) {
            var t, i, n, r, a, o, u, l, d, c, h, f, p, m = 0, g = 0, y = 0, _ = 0, v = 1;
            if (i = (t = new ju(e)).readUnsignedByte(), r = t.readUnsignedByte(), n = t.readUnsignedByte(), t.skipUnsignedExpGolomb(), xu[i] && (3 === (a = t.readUnsignedExpGolomb()) && t.skipBits(1), t.skipUnsignedExpGolomb(), t.skipUnsignedExpGolomb(), t.skipBits(1), t.readBoolean())) for (h = 3 !== a ? 8 : 12, p = 0; p < h; p++) t.readBoolean() && s(p < 6 ? 16 : 64, t);
            if (t.skipUnsignedExpGolomb(), 0 === (o = t.readUnsignedExpGolomb())) t.readUnsignedExpGolomb(); else if (1 === o) for (t.skipBits(1), t.skipExpGolomb(), t.skipExpGolomb(), u = t.readUnsignedExpGolomb(), p = 0; p < u; p++) t.skipExpGolomb();
            if (t.skipUnsignedExpGolomb(), t.skipBits(1), l = t.readUnsignedExpGolomb(), d = t.readUnsignedExpGolomb(), 0 === (c = t.readBits(1)) && t.skipBits(1), t.skipBits(1), t.readBoolean() && (m = t.readUnsignedExpGolomb(), g = t.readUnsignedExpGolomb(), y = t.readUnsignedExpGolomb(), _ = t.readUnsignedExpGolomb()), t.readBoolean() && t.readBoolean()) {
                switch (t.readUnsignedByte()) {
                    case 1:
                        f = [1, 1];
                        break;
                    case 2:
                        f = [12, 11];
                        break;
                    case 3:
                        f = [10, 11];
                        break;
                    case 4:
                        f = [16, 11];
                        break;
                    case 5:
                        f = [40, 33];
                        break;
                    case 6:
                        f = [24, 11];
                        break;
                    case 7:
                        f = [20, 11];
                        break;
                    case 8:
                        f = [32, 11];
                        break;
                    case 9:
                        f = [80, 33];
                        break;
                    case 10:
                        f = [18, 11];
                        break;
                    case 11:
                        f = [15, 11];
                        break;
                    case 12:
                        f = [64, 33];
                        break;
                    case 13:
                        f = [160, 99];
                        break;
                    case 14:
                        f = [4, 3];
                        break;
                    case 15:
                        f = [3, 2];
                        break;
                    case 16:
                        f = [2, 1];
                        break;
                    case 255:
                        f = [t.readUnsignedByte() << 8 | t.readUnsignedByte(), t.readUnsignedByte() << 8 | t.readUnsignedByte()]
                }
                f && (v = f[0] / f[1])
            }
            return {
                profileIdc: i,
                levelIdc: n,
                profileCompatibility: r,
                width: Math.ceil((16 * (l + 1) - 2 * m - 2 * g) * v),
                height: (2 - c) * (d + 1) * 16 - 2 * y - 2 * _
            }
        }
    }).prototype = new Vo;
    var Nu, Fu = {H264Stream: Pu, NalByteStream: Ru}, Vu = Fu.H264Stream, Gu = Fu.NalByteStream,
        Hu = Object.freeze({default: Fu, __moduleExports: Fu, H264Stream: Vu, NalByteStream: Gu});
    (Nu = function () {
        var e = new Uint8Array, t = 0;
        Nu.prototype.init.call(this), this.setTimestamp = function (e) {
            t = e
        }, this.parseId3TagSize = function (e, t) {
            var i = e[t + 6] << 21 | e[t + 7] << 14 | e[t + 8] << 7 | e[t + 9];
            return (16 & e[t + 5]) >> 4 ? i + 20 : i + 10
        }, this.parseAdtsSize = function (e, t) {
            var i = (224 & e[t + 5]) >> 5, n = e[t + 4] << 3;
            return 6144 & e[t + 3] | n | i
        }, this.push = function (i) {
            var n, r, a, s, o = 0, u = 0;
            for (e.length ? (s = e.length, (e = new Uint8Array(i.byteLength + s)).set(e.subarray(0, s)), e.set(i, s)) : e = i; e.length - u >= 3;) if (e[u] !== "I".charCodeAt(0) || e[u + 1] !== "D".charCodeAt(0) || e[u + 2] !== "3".charCodeAt(0)) if (!0 & e[u] && 240 == (240 & e[u + 1])) {
                if (e.length - u < 7) break;
                if ((o = this.parseAdtsSize(e, u)) > e.length) break;
                a = {type: "audio", data: e.subarray(u, u + o), pts: t, dts: t}, this.trigger("data", a), u += o
            } else u++; else {
                if (e.length - u < 10) break;
                if ((o = this.parseId3TagSize(e, u)) > e.length) break;
                r = {type: "timed-metadata", data: e.subarray(u, u + o)}, this.trigger("data", r), u += o
            }
            n = e.length - u, e = n > 0 ? e.subarray(u) : new Uint8Array
        }
    }).prototype = new Vo;
    var qu, zu, Wu, Xu, Yu, Ku, $u, Qu, Ju, Zu, el, tl, il = Nu, nl = Object.freeze({default: il, __moduleExports: il}),
        rl = [33, 16, 5, 32, 164, 27], al = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252],
        sl = function (e) {
            for (var t = []; e--;) t.push(0);
            return t
        }, ol = {
            96e3: [rl, [227, 64], sl(154), [56]],
            88200: [rl, [231], sl(170), [56]],
            64e3: [rl, [248, 192], sl(240), [56]],
            48e3: [rl, [255, 192], sl(268), [55, 148, 128], sl(54), [112]],
            44100: [rl, [255, 192], sl(268), [55, 163, 128], sl(84), [112]],
            32e3: [rl, [255, 192], sl(268), [55, 234], sl(226), [112]],
            24e3: [rl, [255, 192], sl(268), [55, 255, 128], sl(268), [111, 112], sl(126), [224]],
            16e3: [rl, [255, 192], sl(268), [55, 255, 128], sl(268), [111, 255], sl(269), [223, 108], sl(195), [1, 192]],
            12e3: [al, sl(268), [3, 127, 248], sl(268), [6, 255, 240], sl(268), [13, 255, 224], sl(268), [27, 253, 128], sl(259), [56]],
            11025: [al, sl(268), [3, 127, 248], sl(268), [6, 255, 240], sl(268), [13, 255, 224], sl(268), [27, 255, 192], sl(268), [55, 175, 128], sl(108), [112]],
            8e3: [al, sl(268), [3, 121, 16], sl(47), [7]]
        }, ul = (qu = ol, Object.keys(qu).reduce(function (e, t) {
            return e[t] = new Uint8Array(qu[t].reduce(function (e, t) {
                return e.concat(t)
            }, [])), e
        }, {})), ll = Object.freeze({default: ul, __moduleExports: ul}), dl = {
            secondsToVideoTs: zu = function (e) {
                return 9e4 * e
            }, secondsToAudioTs: Wu = function (e, t) {
                return e * t
            }, videoTsToSeconds: Xu = function (e) {
                return e / 9e4
            }, audioTsToSeconds: Yu = function (e, t) {
                return e / t
            }, audioTsToVideoTs: function (e, t) {
                return zu(Yu(e, t))
            }, videoTsToAudioTs: function (e, t) {
                return Wu(Xu(e), t)
            }
        }, cl = dl.secondsToVideoTs, hl = dl.secondsToAudioTs, fl = dl.videoTsToSeconds, pl = dl.audioTsToSeconds,
        ml = dl.audioTsToVideoTs, gl = dl.videoTsToAudioTs, yl = Object.freeze({
            default: dl,
            __moduleExports: dl,
            secondsToVideoTs: cl,
            secondsToAudioTs: hl,
            videoTsToSeconds: fl,
            audioTsToSeconds: pl,
            audioTsToVideoTs: ml,
            videoTsToAudioTs: gl
        }), _l = yo && co || yo, vl = Lo && So || Lo, bl = xo && Oo || xo, Tl = Ou && Lu || Ou, Sl = Uu && Du || Uu,
        kl = nl && il || nl, wl = ll && ul || ll, El = yl && dl || yl, Cl = (Hu && Fu || Hu).H264Stream,
        Al = ["audioobjecttype", "channelcount", "samplerate", "samplingfrequencyindex", "samplesize"],
        Ll = ["width", "height", "profileIdc", "levelIdc", "profileCompatibility"];
    Zu = function (e) {
        return e[0] === "I".charCodeAt(0) && e[1] === "D".charCodeAt(0) && e[2] === "3".charCodeAt(0)
    }, el = function (e, t) {
        var i;
        if (e.length !== t.length) return !1;
        for (i = 0; i < e.length; i++) if (e[i] !== t[i]) return !1;
        return !0
    }, tl = function (e) {
        var t, i = 0;
        for (t = 0; t < e.length; t++) i += e[t].data.byteLength;
        return i
    }, ($u = function (e, t) {
        var i = [], n = 0, r = 0, a = 0, s = 1 / 0;
        t = t || {}, $u.prototype.init.call(this), this.push = function (t) {
            bl.collectDtsInfo(e, t), e && Al.forEach(function (i) {
                e[i] = t[i]
            }), i.push(t)
        }, this.setEarliestDts = function (t) {
            r = t - e.timelineStartInfo.baseMediaDecodeTime
        }, this.setVideoBaseMediaDecodeTime = function (e) {
            s = e
        }, this.setAudioAppendStart = function (e) {
            a = e
        }, this.flush = function () {
            var r, a, s, o;
            0 !== i.length ? (r = this.trimAdtsFramesByEarliestDts_(i), e.baseMediaDecodeTime = bl.calculateTrackBaseMediaDecodeTime(e, t.keepOriginalTimestamps), this.prefixWithSilence_(e, r), e.samples = this.generateSampleTable_(r), s = _l.mdat(this.concatenateFrameData_(r)), i = [], a = _l.moof(n, [e]), o = new Uint8Array(a.byteLength + s.byteLength), n++, o.set(a), o.set(s, a.byteLength), bl.clearDtsInfo(e), this.trigger("data", {
                track: e,
                boxes: o
            }), this.trigger("done", "AudioSegmentStream")) : this.trigger("done", "AudioSegmentStream")
        }, this.prefixWithSilence_ = function (e, t) {
            var i, n, r, o = 0, u = 0, l = 0, d = 0;
            if (t.length && (i = El.audioTsToVideoTs(e.baseMediaDecodeTime, e.samplerate), o = Math.ceil(9e4 / (e.samplerate / 1024)), a && s && (u = i - Math.max(a, s), d = (l = Math.floor(u / o)) * o), !(l < 1 || d > 45e3))) {
                for ((n = wl[e.samplerate]) || (n = t[0].data), r = 0; r < l; r++) t.splice(r, 0, {data: n});
                e.baseMediaDecodeTime -= Math.floor(El.videoTsToAudioTs(d, e.samplerate))
            }
        }, this.trimAdtsFramesByEarliestDts_ = function (t) {
            return e.minSegmentDts >= r ? t : (e.minSegmentDts = 1 / 0, t.filter(function (t) {
                return t.dts >= r && (e.minSegmentDts = Math.min(e.minSegmentDts, t.dts), e.minSegmentPts = e.minSegmentDts, !0)
            }))
        }, this.generateSampleTable_ = function (e) {
            var t, i, n = [];
            for (t = 0; t < e.length; t++) i = e[t], n.push({size: i.data.byteLength, duration: 1024});
            return n
        }, this.concatenateFrameData_ = function (e) {
            var t, i, n = 0, r = new Uint8Array(tl(e));
            for (t = 0; t < e.length; t++) i = e[t], r.set(i.data, n), n += i.data.byteLength;
            return r
        }
    }).prototype = new Vo, (Ku = function (e, t) {
        var i, n, r = 0, a = [], s = [];
        t = t || {}, Ku.prototype.init.call(this), delete e.minPTS, this.gopCache_ = [], this.push = function (t) {
            bl.collectDtsInfo(e, t), "seq_parameter_set_rbsp" !== t.nalUnitType || i || (i = t.config, e.sps = [t.data], Ll.forEach(function (t) {
                e[t] = i[t]
            }, this)), "pic_parameter_set_rbsp" !== t.nalUnitType || n || (n = t.data, e.pps = [t.data]), a.push(t)
        }, this.flush = function () {
            for (var i, n, o, u, l, d; a.length && "access_unit_delimiter_rbsp" !== a[0].nalUnitType;) a.shift();
            if (0 === a.length) return this.resetStream_(), void this.trigger("done", "VideoSegmentStream");
            if (i = vl.groupNalsIntoFrames(a), (o = vl.groupFramesIntoGops(i))[0][0].keyFrame || ((n = this.getGopForFusion_(a[0], e)) ? (o.unshift(n), o.byteLength += n.byteLength, o.nalCount += n.nalCount, o.pts = n.pts, o.dts = n.dts, o.duration += n.duration) : o = vl.extendFirstKeyFrame(o)), s.length) {
                var c;
                if (!(c = t.alignGopsAtEnd ? this.alignGopsAtEnd_(o) : this.alignGopsAtStart_(o))) return this.gopCache_.unshift({
                    gop: o.pop(),
                    pps: e.pps,
                    sps: e.sps
                }), this.gopCache_.length = Math.min(6, this.gopCache_.length), a = [], this.resetStream_(), void this.trigger("done", "VideoSegmentStream");
                bl.clearDtsInfo(e), o = c
            }
            bl.collectDtsInfo(e, o), e.samples = vl.generateSampleTable(o), l = _l.mdat(vl.concatenateNalData(o)), e.baseMediaDecodeTime = bl.calculateTrackBaseMediaDecodeTime(e, t.keepOriginalTimestamps), this.trigger("processedGopsInfo", o.map(function (e) {
                return {pts: e.pts, dts: e.dts, byteLength: e.byteLength}
            })), this.gopCache_.unshift({
                gop: o.pop(),
                pps: e.pps,
                sps: e.sps
            }), this.gopCache_.length = Math.min(6, this.gopCache_.length), a = [], this.trigger("baseMediaDecodeTime", e.baseMediaDecodeTime), this.trigger("timelineStartInfo", e.timelineStartInfo), u = _l.moof(r, [e]), d = new Uint8Array(u.byteLength + l.byteLength), r++, d.set(u), d.set(l, u.byteLength), this.trigger("data", {
                track: e,
                boxes: d
            }), this.resetStream_(), this.trigger("done", "VideoSegmentStream")
        }, this.resetStream_ = function () {
            bl.clearDtsInfo(e), i = void 0, n = void 0
        }, this.getGopForFusion_ = function (t) {
            var i, n, r, a, s, o = 1 / 0;
            for (s = 0; s < this.gopCache_.length; s++) r = (a = this.gopCache_[s]).gop, e.pps && el(e.pps[0], a.pps[0]) && e.sps && el(e.sps[0], a.sps[0]) && (r.dts < e.timelineStartInfo.dts || (i = t.dts - r.dts - r.duration) >= -1e4 && i <= 45e3 && (!n || o > i) && (n = a, o = i));
            return n ? n.gop : null
        }, this.alignGopsAtStart_ = function (e) {
            var t, i, n, r, a, o, u, l;
            for (a = e.byteLength, o = e.nalCount, u = e.duration, t = i = 0; t < s.length && i < e.length && (n = s[t], r = e[i], n.pts !== r.pts);) r.pts > n.pts ? t++ : (i++, a -= r.byteLength, o -= r.nalCount, u -= r.duration);
            return 0 === i ? e : i === e.length ? null : ((l = e.slice(i)).byteLength = a, l.duration = u, l.nalCount = o, l.pts = l[0].pts, l.dts = l[0].dts, l)
        }, this.alignGopsAtEnd_ = function (e) {
            var t, i, n, r, a, o;
            for (t = s.length - 1, i = e.length - 1, a = null, o = !1; t >= 0 && i >= 0;) {
                if (n = s[t], r = e[i], n.pts === r.pts) {
                    o = !0;
                    break
                }
                n.pts > r.pts ? t-- : (t === s.length - 1 && (a = i), i--)
            }
            if (!o && null === a) return null;
            var u;
            if (0 === (u = o ? i : a)) return e;
            var l = e.slice(u), d = l.reduce(function (e, t) {
                return e.byteLength += t.byteLength, e.duration += t.duration, e.nalCount += t.nalCount, e
            }, {byteLength: 0, duration: 0, nalCount: 0});
            return l.byteLength = d.byteLength, l.duration = d.duration, l.nalCount = d.nalCount, l.pts = l[0].pts, l.dts = l[0].dts, l
        }, this.alignGopsWith = function (e) {
            s = e
        }
    }).prototype = new Vo, (Ju = function (e, t) {
        this.numberOfTracks = 0, this.metadataStream = t, void 0 !== e.remux ? this.remuxTracks = !!e.remux : this.remuxTracks = !0, this.pendingTracks = [], this.videoTrack = null, this.pendingBoxes = [], this.pendingCaptions = [], this.pendingMetadata = [], this.pendingBytes = 0, this.emittedTracks = 0, Ju.prototype.init.call(this), this.push = function (e) {
            return e.text ? this.pendingCaptions.push(e) : e.frames ? this.pendingMetadata.push(e) : (this.pendingTracks.push(e.track), this.pendingBoxes.push(e.boxes), this.pendingBytes += e.boxes.byteLength, "video" === e.track.type && (this.videoTrack = e.track), void("audio" === e.track.type && (this.audioTrack = e.track)))
        }
    }).prototype = new Vo, Ju.prototype.flush = function (e) {
        var t, i, n, r, a = 0, s = {captions: [], captionStreams: {}, metadata: [], info: {}}, o = 0;
        if (this.pendingTracks.length < this.numberOfTracks) {
            if ("VideoSegmentStream" !== e && "AudioSegmentStream" !== e) return;
            if (this.remuxTracks) return;
            if (0 === this.pendingTracks.length) return this.emittedTracks++, void(this.emittedTracks >= this.numberOfTracks && (this.trigger("done"), this.emittedTracks = 0))
        }
        for (this.videoTrack ? (o = this.videoTrack.timelineStartInfo.pts, Ll.forEach(function (e) {
            s.info[e] = this.videoTrack[e]
        }, this)) : this.audioTrack && (o = this.audioTrack.timelineStartInfo.pts, Al.forEach(function (e) {
            s.info[e] = this.audioTrack[e]
        }, this)), 1 === this.pendingTracks.length ? s.type = this.pendingTracks[0].type : s.type = "combined", this.emittedTracks += this.pendingTracks.length, n = _l.initSegment(this.pendingTracks), s.initSegment = new Uint8Array(n.byteLength), s.initSegment.set(n), s.data = new Uint8Array(this.pendingBytes), r = 0; r < this.pendingBoxes.length; r++) s.data.set(this.pendingBoxes[r], a), a += this.pendingBoxes[r].byteLength;
        for (r = 0; r < this.pendingCaptions.length; r++) (t = this.pendingCaptions[r]).startTime = t.startPts - o, t.startTime /= 9e4, t.endTime = t.endPts - o, t.endTime /= 9e4, s.captionStreams[t.stream] = !0, s.captions.push(t);
        for (r = 0; r < this.pendingMetadata.length; r++) (i = this.pendingMetadata[r]).cueTime = i.pts - o, i.cueTime /= 9e4, s.metadata.push(i);
        s.metadata.dispatchType = this.metadataStream.dispatchType, this.pendingTracks.length = 0, this.videoTrack = null, this.pendingBoxes.length = 0, this.pendingCaptions.length = 0, this.pendingBytes = 0, this.pendingMetadata.length = 0, this.trigger("data", s), this.emittedTracks >= this.numberOfTracks && (this.trigger("done"), this.emittedTracks = 0)
    }, (Qu = function (e) {
        var t, i, n = this, r = !0;
        Qu.prototype.init.call(this), e = e || {}, this.baseMediaDecodeTime = e.baseMediaDecodeTime || 0, this.transmuxPipeline_ = {}, this.setupAacPipeline = function () {
            var t = {};
            this.transmuxPipeline_ = t, t.type = "aac", t.metadataStream = new Tl.MetadataStream, t.aacStream = new kl, t.audioTimestampRolloverStream = new Tl.TimestampRolloverStream("audio"), t.timedMetadataTimestampRolloverStream = new Tl.TimestampRolloverStream("timed-metadata"), t.adtsStream = new Sl, t.coalesceStream = new Ju(e, t.metadataStream), t.headOfPipeline = t.aacStream, t.aacStream.pipe(t.audioTimestampRolloverStream).pipe(t.adtsStream), t.aacStream.pipe(t.timedMetadataTimestampRolloverStream).pipe(t.metadataStream).pipe(t.coalesceStream), t.metadataStream.on("timestamp", function (e) {
                t.aacStream.setTimestamp(e.timeStamp)
            }), t.aacStream.on("data", function (r) {
                "timed-metadata" !== r.type || t.audioSegmentStream || (i = i || {
                    timelineStartInfo: {baseMediaDecodeTime: n.baseMediaDecodeTime},
                    codec: "adts",
                    type: "audio"
                }, t.coalesceStream.numberOfTracks++, t.audioSegmentStream = new $u(i, e), t.adtsStream.pipe(t.audioSegmentStream).pipe(t.coalesceStream))
            }), t.coalesceStream.on("data", this.trigger.bind(this, "data")), t.coalesceStream.on("done", this.trigger.bind(this, "done"))
        }, this.setupTsPipeline = function () {
            var r = {};
            this.transmuxPipeline_ = r, r.type = "ts", r.metadataStream = new Tl.MetadataStream, r.packetStream = new Tl.TransportPacketStream, r.parseStream = new Tl.TransportParseStream, r.elementaryStream = new Tl.ElementaryStream, r.videoTimestampRolloverStream = new Tl.TimestampRolloverStream("video"), r.audioTimestampRolloverStream = new Tl.TimestampRolloverStream("audio"), r.timedMetadataTimestampRolloverStream = new Tl.TimestampRolloverStream("timed-metadata"), r.adtsStream = new Sl, r.h264Stream = new Cl, r.captionStream = new Tl.CaptionStream, r.coalesceStream = new Ju(e, r.metadataStream), r.headOfPipeline = r.packetStream, r.packetStream.pipe(r.parseStream).pipe(r.elementaryStream), r.elementaryStream.pipe(r.videoTimestampRolloverStream).pipe(r.h264Stream), r.elementaryStream.pipe(r.audioTimestampRolloverStream).pipe(r.adtsStream), r.elementaryStream.pipe(r.timedMetadataTimestampRolloverStream).pipe(r.metadataStream).pipe(r.coalesceStream), r.h264Stream.pipe(r.captionStream).pipe(r.coalesceStream), r.elementaryStream.on("data", function (a) {
                var s;
                if ("metadata" === a.type) {
                    for (s = a.tracks.length; s--;) t || "video" !== a.tracks[s].type ? i || "audio" !== a.tracks[s].type || ((i = a.tracks[s]).timelineStartInfo.baseMediaDecodeTime = n.baseMediaDecodeTime) : (t = a.tracks[s]).timelineStartInfo.baseMediaDecodeTime = n.baseMediaDecodeTime;
                    t && !r.videoSegmentStream && (r.coalesceStream.numberOfTracks++, r.videoSegmentStream = new Ku(t, e), r.videoSegmentStream.on("timelineStartInfo", function (e) {
                        i && (i.timelineStartInfo = e, r.audioSegmentStream.setEarliestDts(e.dts))
                    }), r.videoSegmentStream.on("processedGopsInfo", n.trigger.bind(n, "gopInfo")), r.videoSegmentStream.on("baseMediaDecodeTime", function (e) {
                        i && r.audioSegmentStream.setVideoBaseMediaDecodeTime(e)
                    }), r.h264Stream.pipe(r.videoSegmentStream).pipe(r.coalesceStream)), i && !r.audioSegmentStream && (r.coalesceStream.numberOfTracks++, r.audioSegmentStream = new $u(i, e), r.adtsStream.pipe(r.audioSegmentStream).pipe(r.coalesceStream))
                }
            }), r.coalesceStream.on("data", this.trigger.bind(this, "data")), r.coalesceStream.on("done", this.trigger.bind(this, "done"))
        }, this.setBaseMediaDecodeTime = function (e) {
            var n = this.transmuxPipeline_;
            this.baseMediaDecodeTime = e, i && (i.timelineStartInfo.dts = void 0, i.timelineStartInfo.pts = void 0, bl.clearDtsInfo(i), i.timelineStartInfo.baseMediaDecodeTime = e, n.audioTimestampRolloverStream && n.audioTimestampRolloverStream.discontinuity()), t && (n.videoSegmentStream && (n.videoSegmentStream.gopCache_ = [], n.videoTimestampRolloverStream.discontinuity()), t.timelineStartInfo.dts = void 0, t.timelineStartInfo.pts = void 0, bl.clearDtsInfo(t), n.captionStream.reset(), t.timelineStartInfo.baseMediaDecodeTime = e), n.timedMetadataTimestampRolloverStream && n.timedMetadataTimestampRolloverStream.discontinuity()
        }, this.setAudioAppendStart = function (e) {
            i && this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(e)
        }, this.alignGopsWith = function (e) {
            t && this.transmuxPipeline_.videoSegmentStream && this.transmuxPipeline_.videoSegmentStream.alignGopsWith(e)
        }, this.push = function (e) {
            if (r) {
                var t = Zu(e);
                t && "aac" !== this.transmuxPipeline_.type ? this.setupAacPipeline() : t || "ts" === this.transmuxPipeline_.type || this.setupTsPipeline(), r = !1
            }
            this.transmuxPipeline_.headOfPipeline.push(e)
        }, this.flush = function () {
            r = !0, this.transmuxPipeline_.headOfPipeline.flush()
        }, this.resetCaptions = function () {
            this.transmuxPipeline_.captionStream && this.transmuxPipeline_.captionStream.reset()
        }
    }).prototype = new Vo;
    var Ol, Il, Pl = {
            Transmuxer: Qu,
            VideoSegmentStream: Ku,
            AudioSegmentStream: $u,
            AUDIO_PROPERTIES: Al,
            VIDEO_PROPERTIES: Ll
        }, Rl = Pl.Transmuxer, xl = Pl.VideoSegmentStream, Dl = Pl.AudioSegmentStream, Ul = Pl.AUDIO_PROPERTIES,
        Ml = Pl.VIDEO_PROPERTIES, Bl = Object.freeze({
            default: Pl,
            __moduleExports: Pl,
            Transmuxer: Rl,
            VideoSegmentStream: xl,
            AudioSegmentStream: Dl,
            AUDIO_PROPERTIES: Ul,
            VIDEO_PROPERTIES: Ml
        }), jl = uo.parseType, Nl = function (e) {
            return new Date(1e3 * e - 20828448e5)
        }, Fl = function (e) {
            return {
                isLeading: (12 & e[0]) >>> 2,
                dependsOn: 3 & e[0],
                isDependedOn: (192 & e[1]) >>> 6,
                hasRedundancy: (48 & e[1]) >>> 4,
                paddingValue: (14 & e[1]) >>> 1,
                isNonSyncSample: 1 & e[1],
                degradationPriority: e[2] << 8 | e[3]
            }
        }, Vl = {
            avc1: function (e) {
                var t = new DataView(e.buffer, e.byteOffset, e.byteLength);
                return {
                    dataReferenceIndex: t.getUint16(6),
                    width: t.getUint16(24),
                    height: t.getUint16(26),
                    horizresolution: t.getUint16(28) + t.getUint16(30) / 16,
                    vertresolution: t.getUint16(32) + t.getUint16(34) / 16,
                    frameCount: t.getUint16(40),
                    depth: t.getUint16(74),
                    config: Ol(e.subarray(78, e.byteLength))
                }
            }, avcC: function (e) {
                var t, i, n, r, a = new DataView(e.buffer, e.byteOffset, e.byteLength), s = {
                    configurationVersion: e[0],
                    avcProfileIndication: e[1],
                    profileCompatibility: e[2],
                    avcLevelIndication: e[3],
                    lengthSizeMinusOne: 3 & e[4],
                    sps: [],
                    pps: []
                }, o = 31 & e[5];
                for (n = 6, r = 0; r < o; r++) i = a.getUint16(n), n += 2, s.sps.push(new Uint8Array(e.subarray(n, n + i))), n += i;
                for (t = e[n], n++, r = 0; r < t; r++) i = a.getUint16(n), n += 2, s.pps.push(new Uint8Array(e.subarray(n, n + i))), n += i;
                return s
            }, btrt: function (e) {
                var t = new DataView(e.buffer, e.byteOffset, e.byteLength);
                return {bufferSizeDB: t.getUint32(0), maxBitrate: t.getUint32(4), avgBitrate: t.getUint32(8)}
            }, esds: function (e) {
                return {
                    version: e[0],
                    flags: new Uint8Array(e.subarray(1, 4)),
                    esId: e[6] << 8 | e[7],
                    streamPriority: 31 & e[8],
                    decoderConfig: {
                        objectProfileIndication: e[11],
                        streamType: e[12] >>> 2 & 63,
                        bufferSize: e[13] << 16 | e[14] << 8 | e[15],
                        maxBitrate: e[16] << 24 | e[17] << 16 | e[18] << 8 | e[19],
                        avgBitrate: e[20] << 24 | e[21] << 16 | e[22] << 8 | e[23],
                        decoderConfigDescriptor: {
                            tag: e[24],
                            length: e[25],
                            audioObjectType: e[26] >>> 3 & 31,
                            samplingFrequencyIndex: (7 & e[26]) << 1 | e[27] >>> 7 & 1,
                            channelConfiguration: e[27] >>> 3 & 15
                        }
                    }
                }
            }, ftyp: function (e) {
                for (var t = new DataView(e.buffer, e.byteOffset, e.byteLength), i = {
                    majorBrand: jl(e.subarray(0, 4)),
                    minorVersion: t.getUint32(4),
                    compatibleBrands: []
                }, n = 8; n < e.byteLength;) i.compatibleBrands.push(jl(e.subarray(n, n + 4))), n += 4;
                return i
            }, dinf: function (e) {
                return {boxes: Ol(e)}
            }, dref: function (e) {
                return {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), dataReferences: Ol(e.subarray(8))}
            }, hdlr: function (e) {
                var t = {
                    version: new DataView(e.buffer, e.byteOffset, e.byteLength).getUint8(0),
                    flags: new Uint8Array(e.subarray(1, 4)),
                    handlerType: jl(e.subarray(8, 12)),
                    name: ""
                }, i = 8;
                for (i = 24; i < e.byteLength; i++) {
                    if (0 === e[i]) {
                        i++;
                        break
                    }
                    t.name += String.fromCharCode(e[i])
                }
                return t.name = decodeURIComponent(escape(t.name)), t
            }, mdat: function (e) {
                return {
                    byteLength: e.byteLength, nals: function (e) {
                        var t, i, n = new DataView(e.buffer, e.byteOffset, e.byteLength), r = [];
                        for (t = 0; t + 4 < e.length; t += i) if (i = n.getUint32(t), t += 4, i <= 0) r.push("<span style='color:red;'>MALFORMED DATA</span>"); else switch (31 & e[t]) {
                            case 1:
                                r.push("slice_layer_without_partitioning_rbsp");
                                break;
                            case 5:
                                r.push("slice_layer_without_partitioning_rbsp_idr");
                                break;
                            case 6:
                                r.push("sei_rbsp");
                                break;
                            case 7:
                                r.push("seq_parameter_set_rbsp");
                                break;
                            case 8:
                                r.push("pic_parameter_set_rbsp");
                                break;
                            case 9:
                                r.push("access_unit_delimiter_rbsp");
                                break;
                            default:
                                r.push("UNKNOWN NAL - " + e[t] & 31)
                        }
                        return r
                    }(e)
                }
            }, mdhd: function (e) {
                var t, i = new DataView(e.buffer, e.byteOffset, e.byteLength), n = 4,
                    r = {version: i.getUint8(0), flags: new Uint8Array(e.subarray(1, 4)), language: ""};
                return 1 === r.version ? (n += 4, r.creationTime = Nl(i.getUint32(n)), n += 8, r.modificationTime = Nl(i.getUint32(n)), n += 4, r.timescale = i.getUint32(n), n += 8, r.duration = i.getUint32(n)) : (r.creationTime = Nl(i.getUint32(n)), n += 4, r.modificationTime = Nl(i.getUint32(n)), n += 4, r.timescale = i.getUint32(n), n += 4, r.duration = i.getUint32(n)), n += 4, t = i.getUint16(n), r.language += String.fromCharCode(96 + (t >> 10)), r.language += String.fromCharCode(96 + ((992 & t) >> 5)), r.language += String.fromCharCode(96 + (31 & t)), r
            }, mdia: function (e) {
                return {boxes: Ol(e)}
            }, mfhd: function (e) {
                return {
                    version: e[0],
                    flags: new Uint8Array(e.subarray(1, 4)),
                    sequenceNumber: e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7]
                }
            }, minf: function (e) {
                return {boxes: Ol(e)}
            }, mp4a: function (e) {
                var t = new DataView(e.buffer, e.byteOffset, e.byteLength), i = {
                    dataReferenceIndex: t.getUint16(6),
                    channelcount: t.getUint16(16),
                    samplesize: t.getUint16(18),
                    samplerate: t.getUint16(24) + t.getUint16(26) / 65536
                };
                return e.byteLength > 28 && (i.streamDescriptor = Ol(e.subarray(28))[0]), i
            }, moof: function (e) {
                return {boxes: Ol(e)}
            }, moov: function (e) {
                return {boxes: Ol(e)}
            }, mvex: function (e) {
                return {boxes: Ol(e)}
            }, mvhd: function (e) {
                var t = new DataView(e.buffer, e.byteOffset, e.byteLength), i = 4,
                    n = {version: t.getUint8(0), flags: new Uint8Array(e.subarray(1, 4))};
                return 1 === n.version ? (i += 4, n.creationTime = Nl(t.getUint32(i)), i += 8, n.modificationTime = Nl(t.getUint32(i)), i += 4, n.timescale = t.getUint32(i), i += 8, n.duration = t.getUint32(i)) : (n.creationTime = Nl(t.getUint32(i)), i += 4, n.modificationTime = Nl(t.getUint32(i)), i += 4, n.timescale = t.getUint32(i), i += 4, n.duration = t.getUint32(i)), i += 4, n.rate = t.getUint16(i) + t.getUint16(i + 2) / 16, i += 4, n.volume = t.getUint8(i) + t.getUint8(i + 1) / 8, i += 2, i += 2, i += 8, n.matrix = new Uint32Array(e.subarray(i, i + 36)), i += 36, i += 24, n.nextTrackId = t.getUint32(i), n
            }, pdin: function (e) {
                var t = new DataView(e.buffer, e.byteOffset, e.byteLength);
                return {
                    version: t.getUint8(0),
                    flags: new Uint8Array(e.subarray(1, 4)),
                    rate: t.getUint32(4),
                    initialDelay: t.getUint32(8)
                }
            }, sdtp: function (e) {
                var t, i = {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), samples: []};
                for (t = 4; t < e.byteLength; t++) i.samples.push({
                    dependsOn: (48 & e[t]) >> 4,
                    isDependedOn: (12 & e[t]) >> 2,
                    hasRedundancy: 3 & e[t]
                });
                return i
            }, sidx: function (e) {
                var t, i = new DataView(e.buffer, e.byteOffset, e.byteLength), n = {
                    version: e[0],
                    flags: new Uint8Array(e.subarray(1, 4)),
                    references: [],
                    referenceId: i.getUint32(4),
                    timescale: i.getUint32(8),
                    earliestPresentationTime: i.getUint32(12),
                    firstOffset: i.getUint32(16)
                }, r = i.getUint16(22);
                for (t = 24; r; t += 12, r--) n.references.push({
                    referenceType: (128 & e[t]) >>> 7,
                    referencedSize: 2147483647 & i.getUint32(t),
                    subsegmentDuration: i.getUint32(t + 4),
                    startsWithSap: !!(128 & e[t + 8]),
                    sapType: (112 & e[t + 8]) >>> 4,
                    sapDeltaTime: 268435455 & i.getUint32(t + 8)
                });
                return n
            }, smhd: function (e) {
                return {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), balance: e[4] + e[5] / 256}
            }, stbl: function (e) {
                return {boxes: Ol(e)}
            }, stco: function (e) {
                var t, i = new DataView(e.buffer, e.byteOffset, e.byteLength),
                    n = {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), chunkOffsets: []}, r = i.getUint32(4);
                for (t = 8; r; t += 4, r--) n.chunkOffsets.push(i.getUint32(t));
                return n
            }, stsc: function (e) {
                var t, i = new DataView(e.buffer, e.byteOffset, e.byteLength), n = i.getUint32(4),
                    r = {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), sampleToChunks: []};
                for (t = 8; n; t += 12, n--) r.sampleToChunks.push({
                    firstChunk: i.getUint32(t),
                    samplesPerChunk: i.getUint32(t + 4),
                    sampleDescriptionIndex: i.getUint32(t + 8)
                });
                return r
            }, stsd: function (e) {
                return {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), sampleDescriptions: Ol(e.subarray(8))}
            }, stsz: function (e) {
                var t, i = new DataView(e.buffer, e.byteOffset, e.byteLength),
                    n = {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), sampleSize: i.getUint32(4), entries: []};
                for (t = 12; t < e.byteLength; t += 4) n.entries.push(i.getUint32(t));
                return n
            }, stts: function (e) {
                var t, i = new DataView(e.buffer, e.byteOffset, e.byteLength),
                    n = {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), timeToSamples: []}, r = i.getUint32(4);
                for (t = 8; r; t += 8, r--) n.timeToSamples.push({
                    sampleCount: i.getUint32(t),
                    sampleDelta: i.getUint32(t + 4)
                });
                return n
            }, styp: function (e) {
                return Vl.ftyp(e)
            }, tfdt: function (e) {
                var t = {
                    version: e[0],
                    flags: new Uint8Array(e.subarray(1, 4)),
                    baseMediaDecodeTime: e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7]
                };
                return 1 === t.version && (t.baseMediaDecodeTime *= Math.pow(2, 32), t.baseMediaDecodeTime += e[8] << 24 | e[9] << 16 | e[10] << 8 | e[11]), t
            }, tfhd: function (e) {
                var t, i = new DataView(e.buffer, e.byteOffset, e.byteLength),
                    n = {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), trackId: i.getUint32(4)},
                    r = 1 & n.flags[2], a = 2 & n.flags[2], s = 8 & n.flags[2], o = 16 & n.flags[2], u = 32 & n.flags[2],
                    l = 65536 & n.flags[0], d = 131072 & n.flags[0];
                return t = 8, r && (t += 4, n.baseDataOffset = i.getUint32(12), t += 4), a && (n.sampleDescriptionIndex = i.getUint32(t), t += 4), s && (n.defaultSampleDuration = i.getUint32(t), t += 4), o && (n.defaultSampleSize = i.getUint32(t), t += 4), u && (n.defaultSampleFlags = i.getUint32(t)), l && (n.durationIsEmpty = !0), !r && d && (n.baseDataOffsetIsMoof = !0), n
            }, tkhd: function (e) {
                var t = new DataView(e.buffer, e.byteOffset, e.byteLength), i = 4,
                    n = {version: t.getUint8(0), flags: new Uint8Array(e.subarray(1, 4))};
                return 1 === n.version ? (i += 4, n.creationTime = Nl(t.getUint32(i)), i += 8, n.modificationTime = Nl(t.getUint32(i)), i += 4, n.trackId = t.getUint32(i), i += 4, i += 8, n.duration = t.getUint32(i)) : (n.creationTime = Nl(t.getUint32(i)), i += 4, n.modificationTime = Nl(t.getUint32(i)), i += 4, n.trackId = t.getUint32(i), i += 4, i += 4, n.duration = t.getUint32(i)), i += 4, i += 8, n.layer = t.getUint16(i), i += 2, n.alternateGroup = t.getUint16(i), i += 2, n.volume = t.getUint8(i) + t.getUint8(i + 1) / 8, i += 2, i += 2, n.matrix = new Uint32Array(e.subarray(i, i + 36)), i += 36, n.width = t.getUint16(i) + t.getUint16(i + 2) / 16, i += 4, n.height = t.getUint16(i) + t.getUint16(i + 2) / 16, n
            }, traf: function (e) {
                return {boxes: Ol(e)}
            }, trak: function (e) {
                return {boxes: Ol(e)}
            }, trex: function (e) {
                var t = new DataView(e.buffer, e.byteOffset, e.byteLength);
                return {
                    version: e[0],
                    flags: new Uint8Array(e.subarray(1, 4)),
                    trackId: t.getUint32(4),
                    defaultSampleDescriptionIndex: t.getUint32(8),
                    defaultSampleDuration: t.getUint32(12),
                    defaultSampleSize: t.getUint32(16),
                    sampleDependsOn: 3 & e[20],
                    sampleIsDependedOn: (192 & e[21]) >> 6,
                    sampleHasRedundancy: (48 & e[21]) >> 4,
                    samplePaddingValue: (14 & e[21]) >> 1,
                    sampleIsDifferenceSample: !!(1 & e[21]),
                    sampleDegradationPriority: t.getUint16(22)
                }
            }, trun: function (e) {
                var t, i = {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), samples: []},
                    n = new DataView(e.buffer, e.byteOffset, e.byteLength), r = 1 & i.flags[2], a = 4 & i.flags[2],
                    s = 1 & i.flags[1], o = 2 & i.flags[1], u = 4 & i.flags[1], l = 8 & i.flags[1], d = n.getUint32(4),
                    c = 8;
                for (r && (i.dataOffset = n.getInt32(c), c += 4), a && d && (t = {flags: Fl(e.subarray(c, c + 4))}, c += 4, s && (t.duration = n.getUint32(c), c += 4), o && (t.size = n.getUint32(c), c += 4), l && (t.compositionTimeOffset = n.getUint32(c), c += 4), i.samples.push(t), d--); d--;) t = {}, s && (t.duration = n.getUint32(c), c += 4), o && (t.size = n.getUint32(c), c += 4), u && (t.flags = Fl(e.subarray(c, c + 4)), c += 4), l && (t.compositionTimeOffset = n.getUint32(c), c += 4), i.samples.push(t);
                return i
            }, "url ": function (e) {
                return {version: e[0], flags: new Uint8Array(e.subarray(1, 4))}
            }, vmhd: function (e) {
                var t = new DataView(e.buffer, e.byteOffset, e.byteLength);
                return {
                    version: e[0],
                    flags: new Uint8Array(e.subarray(1, 4)),
                    graphicsmode: t.getUint16(4),
                    opcolor: new Uint16Array([t.getUint16(6), t.getUint16(8), t.getUint16(10)])
                }
            }
        }, Gl = {
            inspect: Ol = function (e) {
                for (var t, i, n, r, a, s = 0, o = [], u = new ArrayBuffer(e.length), l = new Uint8Array(u), d = 0; d < e.length; ++d) l[d] = e[d];
                for (t = new DataView(u); s < e.byteLength;) i = t.getUint32(s), n = jl(e.subarray(s + 4, s + 8)), r = i > 1 ? s + i : e.byteLength, (a = (Vl[n] || function (e) {
                    return {data: e}
                })(e.subarray(s + 8, r))).size = i, a.type = n, o.push(a), s = r;
                return o
            }, textify: Il = function (e, t) {
                var i;
                return t = t || 0, i = new Array(2 * t + 1).join(" "), e.map(function (e, n) {
                    return i + e.type + "\n" + Object.keys(e).filter(function (e) {
                        return "type" !== e && "boxes" !== e
                    }).map(function (t) {
                        var n = i + "  " + t + ": ", r = e[t];
                        if (r instanceof Uint8Array || r instanceof Uint32Array) {
                            var a = Array.prototype.slice.call(new Uint8Array(r.buffer, r.byteOffset, r.byteLength)).map(function (e) {
                                return " " + ("00" + e.toString(16)).slice(-2)
                            }).join("").match(/.{1,24}/g);
                            return a ? 1 === a.length ? n + "<" + a.join("").slice(1) + ">" : n + "<\n" + a.map(function (e) {
                                return i + "  " + e
                            }).join("\n") + "\n" + i + "  >" : n + "<>"
                        }
                        return n + JSON.stringify(r, null, 2).split("\n").map(function (e, t) {
                            return 0 === t ? e : i + "  " + e
                        }).join("\n")
                    }).join("\n") + (e.boxes ? "\n" + Il(e.boxes, t + 1) : "")
                }).join("\n")
            }, parseTfdt: Vl.tfdt, parseHdlr: Vl.hdlr, parseTfhd: Vl.tfhd, parseTrun: Vl.trun
        }, Hl = Gl.inspect, ql = Gl.textify, zl = Gl.parseTfdt, Wl = Gl.parseHdlr, Xl = Gl.parseTfhd, Yl = Gl.parseTrun,
        Kl = Object.freeze({
            default: Gl,
            __moduleExports: Gl,
            inspect: Hl,
            textify: ql,
            parseTfdt: zl,
            parseHdlr: Wl,
            parseTfhd: Xl,
            parseTrun: Yl
        }), $l = Kl && Gl || Kl, Ql = Go.discardEmulationPreventionBytes, Jl = Tu.CaptionStream, Zl = function (e, t) {
            for (var i = e, n = 0; n < t.length; n++) {
                var r = t[n];
                if (i < r.size) return r;
                i -= r.size
            }
            return null
        }, ed = function (e, t) {
            var i = uo.findBox(e, ["moof", "traf"]), n = {}, r = [];
            return uo.findBox(e, ["mdat"]).forEach(function (e, t) {
                var n = i[t];
                r.push({mdat: e, traf: n})
            }), r.forEach(function (e) {
                var i, r = e.mdat, a = e.traf, s = uo.findBox(a, ["tfhd"]), o = $l.parseTfhd(s[0]), u = o.trackId,
                    l = uo.findBox(a, ["tfdt"]), d = l.length > 0 ? $l.parseTfdt(l[0]).baseMediaDecodeTime : 0,
                    c = uo.findBox(a, ["trun"]);
                t === u && c.length > 0 && (i = function (e, t, i) {
                    var n, r, a, s, o = new DataView(e.buffer, e.byteOffset, e.byteLength), u = [];
                    for (r = 0; r + 4 < e.length; r += a) if (a = o.getUint32(r), r += 4, !(a <= 0)) switch (31 & e[r]) {
                        case 6:
                            var l = e.subarray(r + 1, r + 1 + a), d = Zl(r, t);
                            n = {
                                nalUnitType: "sei_rbsp",
                                size: a,
                                data: l,
                                escapedRBSP: Ql(l),
                                trackId: i
                            }, d ? (n.pts = d.pts, n.dts = d.dts, s = d) : (n.pts = s.pts, n.dts = s.dts), u.push(n)
                    }
                    return u
                }(r, function (e, t, i) {
                    var n = t, r = i.defaultSampleDuration || 0, a = i.defaultSampleSize || 0, s = i.trackId, o = [];
                    return e.forEach(function (e) {
                        var t = $l.parseTrun(e).samples;
                        t.forEach(function (e) {
                            void 0 === e.duration && (e.duration = r), void 0 === e.size && (e.size = a), e.trackId = s, e.dts = n, void 0 === e.compositionTimeOffset && (e.compositionTimeOffset = 0), e.pts = n + e.compositionTimeOffset, n += e.duration
                        }), o = o.concat(t)
                    }), o
                }(c, d, o), u), n[u] || (n[u] = []), n[u] = n[u].concat(i))
            }), n
        }, td = function () {
            var e, t, i, n, r, a = !1;
            this.isInitialized = function () {
                return a
            }, this.init = function () {
                e = new Jl, a = !0, e.on("data", function (e) {
                    e.startTime = e.startPts / n, e.endTime = e.endPts / n, r.captions.push(e), r.captionStreams[e.stream] = !0
                })
            }, this.isNewInit = function (e, t) {
                return !(e && 0 === e.length || t && "object" === (void 0 === t ? "undefined" : g(t)) && 0 === Object.keys(t).length || i === e[0] && n === t[i])
            }, this.parse = function (e, a, s) {
                var o;
                if (!this.isInitialized()) return null;
                if (!a || !s) return null;
                if (this.isNewInit(a, s)) i = a[0], n = s[i]; else if (!i || !n) return t.push(e), null;
                for (; t.length > 0;) {
                    var u = t.shift();
                    this.parse(u, a, s)
                }
                d = n;
                var l, d;
                return null !== (o = (l = i) ? {
                    seiNals: ed(e, l)[l],
                    timescale: d
                } : null) && o.seiNals ? (this.pushNals(o.seiNals), this.flushStream(), r) : null
            }, this.pushNals = function (t) {
                if (!this.isInitialized() || !t || 0 === t.length) return null;
                t.forEach(function (t) {
                    e.push(t)
                })
            }, this.flushStream = function () {
                if (!this.isInitialized()) return null;
                e.flush()
            }, this.clearParsedCaptions = function () {
                r.captions = [], r.captionStreams = {}
            }, this.resetCaptionStream = function () {
                if (!this.isInitialized()) return null;
                e.reset()
            }, this.clearAllCaptions = function () {
                this.clearParsedCaptions(), this.resetCaptionStream()
            }, this.reset = function () {
                t = [], i = null, n = null, r ? this.clearParsedCaptions() : r = {
                    captions: [],
                    captionStreams: {}
                }, this.resetCaptionStream()
            }, this.reset()
        }, id = Object.freeze({default: td, __moduleExports: td}), nd = Bl && Pl || Bl, rd = id && td || id, ad = {
            generator: _l,
            probe: uo,
            Transmuxer: nd.Transmuxer,
            AudioSegmentStream: nd.AudioSegmentStream,
            VideoSegmentStream: nd.VideoSegmentStream,
            CaptionParser: rd
        }.CaptionParser, sd = function (e) {
            var t = 31 & e[1];
            return t <<= 8, t |= e[2]
        }, od = function (e) {
            return !!(64 & e[1])
        }, ud = function (e) {
            var t = 0;
            return (48 & e[3]) >>> 4 > 1 && (t += e[4] + 1), t
        }, ld = function (e) {
            switch (e) {
                case 5:
                    return "slice_layer_without_partitioning_rbsp_idr";
                case 6:
                    return "sei_rbsp";
                case 7:
                    return "seq_parameter_set_rbsp";
                case 8:
                    return "pic_parameter_set_rbsp";
                case 9:
                    return "access_unit_delimiter_rbsp";
                default:
                    return null
            }
        }, dd = {
            parseType: function (e, t) {
                var i = sd(e);
                return 0 === i ? "pat" : i === t ? "pmt" : t ? "pes" : null
            }, parsePat: function (e) {
                var t = od(e), i = 4 + ud(e);
                return t && (i += e[i] + 1), (31 & e[i + 10]) << 8 | e[i + 11]
            }, parsePmt: function (e) {
                var t = {}, i = od(e), n = 4 + ud(e);
                if (i && (n += e[n] + 1), 1 & e[n + 5]) {
                    var r;
                    r = 3 + ((15 & e[n + 1]) << 8 | e[n + 2]) - 4;
                    for (var a = 12 + ((15 & e[n + 10]) << 8 | e[n + 11]); a < r;) {
                        var s = n + a;
                        t[(31 & e[s + 1]) << 8 | e[s + 2]] = e[s], a += 5 + ((15 & e[s + 3]) << 8 | e[s + 4])
                    }
                    return t
                }
            }, parsePayloadUnitStartIndicator: od, parsePesType: function (e, t) {
                switch (t[sd(e)]) {
                    case cu.H264_STREAM_TYPE:
                        return "video";
                    case cu.ADTS_STREAM_TYPE:
                        return "audio";
                    case cu.METADATA_STREAM_TYPE:
                        return "timed-metadata";
                    default:
                        return null
                }
            }, parsePesTime: function (e) {
                if (!od(e)) return null;
                var t = 4 + ud(e);
                if (t >= e.byteLength) return null;
                var i, n = null;
                return 192 & (i = e[t + 7]) && ((n = {}).pts = (14 & e[t + 9]) << 27 | (255 & e[t + 10]) << 20 | (254 & e[t + 11]) << 12 | (255 & e[t + 12]) << 5 | (254 & e[t + 13]) >>> 3, n.pts *= 4, n.pts += (6 & e[t + 13]) >>> 1, n.dts = n.pts, 64 & i && (n.dts = (14 & e[t + 14]) << 27 | (255 & e[t + 15]) << 20 | (254 & e[t + 16]) << 12 | (255 & e[t + 17]) << 5 | (254 & e[t + 18]) >>> 3, n.dts *= 4, n.dts += (6 & e[t + 18]) >>> 1)), n
            }, videoPacketContainsKeyFrame: function (e) {
                for (var t = 4 + ud(e), i = e.subarray(t), n = 0, r = 0, a = !1; r < i.byteLength - 3; r++) if (1 === i[r + 2]) {
                    n = r + 5;
                    break
                }
                for (; n < i.byteLength;) switch (i[n]) {
                    case 0:
                        if (0 !== i[n - 1]) {
                            n += 2;
                            break
                        }
                        if (0 !== i[n - 2]) {
                            n++;
                            break
                        }
                        r + 3 !== n - 2 && "slice_layer_without_partitioning_rbsp_idr" === ld(31 & i[r + 3]) && (a = !0);
                        do {
                            n++
                        } while (1 !== i[n] && n < i.length);
                        r = n - 2, n += 3;
                        break;
                    case 1:
                        if (0 !== i[n - 1] || 0 !== i[n - 2]) {
                            n += 3;
                            break
                        }
                        "slice_layer_without_partitioning_rbsp_idr" === ld(31 & i[r + 3]) && (a = !0), r = n - 2, n += 3;
                        break;
                    default:
                        n += 3
                }
                return i = i.subarray(r), n -= r, r = 0, i && i.byteLength > 3 && "slice_layer_without_partitioning_rbsp_idr" === ld(31 & i[r + 3]) && (a = !0), a
            }
        }, cd = dd.parseType, hd = dd.parsePat, fd = dd.parsePmt, pd = dd.parsePayloadUnitStartIndicator,
        md = dd.parsePesType, gd = dd.parsePesTime, yd = dd.videoPacketContainsKeyFrame, _d = Object.freeze({
            default: dd,
            __moduleExports: dd,
            parseType: cd,
            parsePat: hd,
            parsePmt: fd,
            parsePayloadUnitStartIndicator: pd,
            parsePesType: md,
            parsePesTime: gd,
            videoPacketContainsKeyFrame: yd
        }), vd = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350], bd = function (e) {
            return e[0] << 21 | e[1] << 14 | e[2] << 7 | e[3]
        }, Td = {
            parseId3TagSize: function (e, t) {
                var i = e[t + 6] << 21 | e[t + 7] << 14 | e[t + 8] << 7 | e[t + 9];
                return (16 & e[t + 5]) >> 4 ? i + 20 : i + 10
            }, parseAdtsSize: function (e, t) {
                var i = (224 & e[t + 5]) >> 5, n = e[t + 4] << 3;
                return 6144 & e[t + 3] | n | i
            }, parseType: function (e, t) {
                return e[t] === "I".charCodeAt(0) && e[t + 1] === "D".charCodeAt(0) && e[t + 2] === "3".charCodeAt(0) ? "timed-metadata" : !0 & e[t] && 240 == (240 & e[t + 1]) ? "audio" : null
            }, parseSampleRate: function (e) {
                for (var t = 0; t + 5 < e.length;) {
                    if (255 === e[t] && 240 == (246 & e[t + 1])) return vd[(60 & e[t + 2]) >>> 2];
                    t++
                }
                return null
            }, parseAacTimestamp: function (e) {
                var t, i, n;
                t = 10, 64 & e[5] && (t += 4, t += bd(e.subarray(10, 14)));
                do {
                    if ((i = bd(e.subarray(t + 4, t + 8))) < 1) return null;
                    if ("PRIV" === String.fromCharCode(e[t], e[t + 1], e[t + 2], e[t + 3])) {
                        n = e.subarray(t + 10, t + i + 10);
                        for (var r = 0; r < n.byteLength; r++) if (0 === n[r]) {
                            if ("com.apple.streaming.transportStreamTimestamp" === (o = n, u = 0, l = r, unescape(function (e, t, i) {
                                var n, r = "";
                                for (n = t; n < i; n++) r += "%" + ("00" + e[n].toString(16)).slice(-2);
                                return r
                            }(o, u, l)))) {
                                var a = n.subarray(r + 1),
                                    s = (1 & a[3]) << 30 | a[4] << 22 | a[5] << 14 | a[6] << 6 | a[7] >>> 2;
                                return s *= 4, s += 3 & a[7]
                            }
                            break
                        }
                    }
                    t += 10, t += i
                } while (t < e.byteLength);
                var o, u, l;
                return null
            }
        }, Sd = Td.parseId3TagSize, kd = Td.parseAdtsSize, wd = Td.parseType, Ed = Td.parseSampleRate,
        Cd = Td.parseAacTimestamp, Ad = Object.freeze({
            default: Td,
            __moduleExports: Td,
            parseId3TagSize: Sd,
            parseAdtsSize: kd,
            parseType: wd,
            parseSampleRate: Ed,
            parseAacTimestamp: Cd
        }), Ld = _d && dd || _d, Od = Ad && Td || Ad, Id = Su.handleRollover, Pd = {};
    Pd.ts = Ld, Pd.aac = Od;
    var Rd = function (e, t, i) {
        for (var n, r, a, s, o = 0, u = 188, l = !1; u < e.byteLength;) if (71 !== e[o] || 71 !== e[u]) o++, u++; else {
            switch (n = e.subarray(o, u), Pd.ts.parseType(n, t.pid)) {
                case"pes":
                    r = Pd.ts.parsePesType(n, t.table), a = Pd.ts.parsePayloadUnitStartIndicator(n), "audio" === r && a && (s = Pd.ts.parsePesTime(n)) && (s.type = "audio", i.audio.push(s), l = !0)
            }
            if (l) break;
            o += 188, u += 188
        }
        for (o = (u = e.byteLength) - 188, l = !1; o >= 0;) if (71 !== e[o] || 71 !== e[u]) o--, u--; else {
            switch (n = e.subarray(o, u), Pd.ts.parseType(n, t.pid)) {
                case"pes":
                    r = Pd.ts.parsePesType(n, t.table), a = Pd.ts.parsePayloadUnitStartIndicator(n), "audio" === r && a && (s = Pd.ts.parsePesTime(n)) && (s.type = "audio", i.audio.push(s), l = !0)
            }
            if (l) break;
            o -= 188, u -= 188
        }
    }, xd = function (e, t, i) {
        for (var n, r, a, s, o, u, l, d = 0, c = 188, h = !1, f = {
            data: [],
            size: 0
        }; c < e.byteLength;) if (71 !== e[d] || 71 !== e[c]) d++, c++; else {
            switch (n = e.subarray(d, c), Pd.ts.parseType(n, t.pid)) {
                case"pes":
                    if (r = Pd.ts.parsePesType(n, t.table), a = Pd.ts.parsePayloadUnitStartIndicator(n), "video" === r && (a && !h && (s = Pd.ts.parsePesTime(n)) && (s.type = "video", i.video.push(s), h = !0), !i.firstKeyFrame)) {
                        if (a && 0 !== f.size) {
                            for (o = new Uint8Array(f.size), u = 0; f.data.length;) l = f.data.shift(), o.set(l, u), u += l.byteLength;
                            Pd.ts.videoPacketContainsKeyFrame(o) && (i.firstKeyFrame = Pd.ts.parsePesTime(o), i.firstKeyFrame.type = "video"), f.size = 0
                        }
                        f.data.push(n), f.size += n.byteLength
                    }
            }
            if (h && i.firstKeyFrame) break;
            d += 188, c += 188
        }
        for (d = (c = e.byteLength) - 188, h = !1; d >= 0;) if (71 !== e[d] || 71 !== e[c]) d--, c--; else {
            switch (n = e.subarray(d, c), Pd.ts.parseType(n, t.pid)) {
                case"pes":
                    r = Pd.ts.parsePesType(n, t.table), a = Pd.ts.parsePayloadUnitStartIndicator(n), "video" === r && a && (s = Pd.ts.parsePesTime(n)) && (s.type = "video", i.video.push(s), h = !0)
            }
            if (h) break;
            d -= 188, c -= 188
        }
    }, Dd = function (e) {
        var t = {pid: null, table: null}, i = {};
        !function (e, t) {
            for (var i, n = 0, r = 188; r < e.byteLength;) if (71 !== e[n] || 71 !== e[r]) n++, r++; else {
                switch (i = e.subarray(n, r), Pd.ts.parseType(i, t.pid)) {
                    case"pat":
                        t.pid || (t.pid = Pd.ts.parsePat(i));
                        break;
                    case"pmt":
                        t.table || (t.table = Pd.ts.parsePmt(i))
                }
                if (t.pid && t.table) return;
                n += 188, r += 188
            }
        }(e, t);
        for (var n in t.table) if (t.table.hasOwnProperty(n)) {
            switch (t.table[n]) {
                case cu.H264_STREAM_TYPE:
                    i.video = [], xd(e, t, i), 0 === i.video.length && delete i.video;
                    break;
                case cu.ADTS_STREAM_TYPE:
                    i.audio = [], Rd(e, t, i), 0 === i.audio.length && delete i.audio
            }
        }
        return i
    }, Ud = function (e, t) {
        var i, n;
        return i = e, (n = i[0] === "I".charCodeAt(0) && i[1] === "D".charCodeAt(0) && i[2] === "3".charCodeAt(0) ? function (e) {
            for (var t, i = !1, n = 0, r = null, a = null, s = 0, o = 0; e.length - o >= 3;) {
                switch (Pd.aac.parseType(e, o)) {
                    case"timed-metadata":
                        if (e.length - o < 10) {
                            i = !0;
                            break
                        }
                        if ((s = Pd.aac.parseId3TagSize(e, o)) > e.length) {
                            i = !0;
                            break
                        }
                        null === a && (t = e.subarray(o, o + s), a = Pd.aac.parseAacTimestamp(t)), o += s;
                        break;
                    case"audio":
                        if (e.length - o < 7) {
                            i = !0;
                            break
                        }
                        if ((s = Pd.aac.parseAdtsSize(e, o)) > e.length) {
                            i = !0;
                            break
                        }
                        null === r && (t = e.subarray(o, o + s), r = Pd.aac.parseSampleRate(t)), n++, o += s;
                        break;
                    default:
                        o++
                }
                if (i) return null
            }
            if (null === r || null === a) return null;
            var u = 9e4 / r;
            return {
                audio: [{type: "audio", dts: a, pts: a}, {
                    type: "audio",
                    dts: a + 1024 * n * u,
                    pts: a + 1024 * n * u
                }]
            }
        }(e) : Dd(e)) && (n.audio || n.video) ? (function (e, t) {
            if (e.audio && e.audio.length) {
                var i = t;
                void 0 === i && (i = e.audio[0].dts), e.audio.forEach(function (e) {
                    e.dts = Id(e.dts, i), e.pts = Id(e.pts, i), e.dtsTime = e.dts / 9e4, e.ptsTime = e.pts / 9e4
                })
            }
            if (e.video && e.video.length) {
                var n = t;
                if (void 0 === n && (n = e.video[0].dts), e.video.forEach(function (e) {
                    e.dts = Id(e.dts, n), e.pts = Id(e.pts, n), e.dtsTime = e.dts / 9e4, e.ptsTime = e.pts / 9e4
                }), e.firstKeyFrame) {
                    var r = e.firstKeyFrame;
                    r.dts = Id(r.dts, n), r.pts = Id(r.pts, n), r.dtsTime = r.dts / 9e4, r.ptsTime = r.dts / 9e4
                }
            }
        }(n, t), n) : null
    };
    var Md = function (e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }, Bd = function () {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                }
            }

            return function (t, i, n) {
                return i && e(t.prototype, i), n && e(t, n), t
            }
        }(), jd = function (e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" !== (void 0 === t ? "undefined" : g(t)) && "function" != typeof t ? e : t
        }, Nd = function () {
            var e = [[[], [], [], [], []], [[], [], [], [], []]], t = e[0], i = e[1], n = t[4], r = i[4], a = void 0,
                s = void 0, o = void 0, u = [], l = [], d = void 0, c = void 0, h = void 0, f = void 0, p = void 0;
            for (a = 0; a < 256; a++) l[(u[a] = a << 1 ^ 283 * (a >> 7)) ^ a] = a;
            for (s = o = 0; !n[s]; s ^= d || 1, o = l[o] || 1) for (h = (h = o ^ o << 1 ^ o << 2 ^ o << 3 ^ o << 4) >> 8 ^ 255 & h ^ 99, n[s] = h, r[h] = s, p = 16843009 * u[c = u[d = u[s]]] ^ 65537 * c ^ 257 * d ^ 16843008 * s, f = 257 * u[h] ^ 16843008 * h, a = 0; a < 4; a++) t[a][s] = f = f << 24 ^ f >>> 8, i[a][h] = p = p << 24 ^ p >>> 8;
            for (a = 0; a < 5; a++) t[a] = t[a].slice(0), i[a] = i[a].slice(0);
            return e
        }, Fd = null, Vd = function () {
            function e(t) {
                Md(this, e), Fd || (Fd = Nd()), this._tables = [[Fd[0][0].slice(), Fd[0][1].slice(), Fd[0][2].slice(), Fd[0][3].slice(), Fd[0][4].slice()], [Fd[1][0].slice(), Fd[1][1].slice(), Fd[1][2].slice(), Fd[1][3].slice(), Fd[1][4].slice()]];
                var i = void 0, n = void 0, r = void 0, a = void 0, s = void 0, o = this._tables[0][4], u = this._tables[1],
                    l = t.length, d = 1;
                if (4 !== l && 6 !== l && 8 !== l) throw new Error("Invalid aes key size");
                for (a = t.slice(0), s = [], this._key = [a, s], i = l; i < 4 * l + 28; i++) r = a[i - 1], (i % l == 0 || 8 === l && i % l == 4) && (r = o[r >>> 24] << 24 ^ o[r >> 16 & 255] << 16 ^ o[r >> 8 & 255] << 8 ^ o[255 & r], i % l == 0 && (r = r << 8 ^ r >>> 24 ^ d << 24, d = d << 1 ^ 283 * (d >> 7))), a[i] = a[i - l] ^ r;
                for (n = 0; i; n++, i--) r = a[3 & n ? i : i - 4], s[n] = i <= 4 || n < 4 ? r : u[0][o[r >>> 24]] ^ u[1][o[r >> 16 & 255]] ^ u[2][o[r >> 8 & 255]] ^ u[3][o[255 & r]]
            }

            return e.prototype.decrypt = function (e, t, i, n, r, a) {
                var s = this._key[1], o = e ^ s[0], u = n ^ s[1], l = i ^ s[2], d = t ^ s[3], c = void 0, h = void 0,
                    f = void 0, p = s.length / 4 - 2, m = void 0, g = 4, y = this._tables[1], _ = y[0], v = y[1], b = y[2],
                    T = y[3], S = y[4];
                for (m = 0; m < p; m++) c = _[o >>> 24] ^ v[u >> 16 & 255] ^ b[l >> 8 & 255] ^ T[255 & d] ^ s[g], h = _[u >>> 24] ^ v[l >> 16 & 255] ^ b[d >> 8 & 255] ^ T[255 & o] ^ s[g + 1], f = _[l >>> 24] ^ v[d >> 16 & 255] ^ b[o >> 8 & 255] ^ T[255 & u] ^ s[g + 2], d = _[d >>> 24] ^ v[o >> 16 & 255] ^ b[u >> 8 & 255] ^ T[255 & l] ^ s[g + 3], g += 4, o = c, u = h, l = f;
                for (m = 0; m < 4; m++) r[(3 & -m) + a] = S[o >>> 24] << 24 ^ S[u >> 16 & 255] << 16 ^ S[l >> 8 & 255] << 8 ^ S[255 & d] ^ s[g++], c = o, o = u, u = l, l = d, d = c
            }, e
        }(), Gd = function () {
            function e() {
                Md(this, e), this.listeners = {}
            }

            return e.prototype.on = function (e, t) {
                this.listeners[e] || (this.listeners[e] = []), this.listeners[e].push(t)
            }, e.prototype.off = function (e, t) {
                if (!this.listeners[e]) return !1;
                var i = this.listeners[e].indexOf(t);
                return this.listeners[e].splice(i, 1), i > -1
            }, e.prototype.trigger = function (e) {
                var t = this.listeners[e];
                if (t) if (2 === arguments.length) for (var i = t.length, n = 0; n < i; ++n) t[n].call(this, arguments[1]); else for (var r = Array.prototype.slice.call(arguments, 1), a = t.length, s = 0; s < a; ++s) t[s].apply(this, r)
            }, e.prototype.dispose = function () {
                this.listeners = {}
            }, e.prototype.pipe = function (e) {
                this.on("data", function (t) {
                    e.push(t)
                })
            }, e
        }(), Hd = function (e) {
            !function (e, t) {
                if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + (void 0 === t ? "undefined" : g(t)));
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }(t, e);

            function t() {
                Md(this, t);
                var i = jd(this, e.call(this, Gd));
                return i.jobs = [], i.delay = 1, i.timeout_ = null, i
            }

            return t.prototype.processJob_ = function () {
                this.jobs.shift()(), this.jobs.length ? this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay) : this.timeout_ = null
            }, t.prototype.push = function (e) {
                this.jobs.push(e), this.timeout_ || (this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay))
            }, t
        }(Gd), qd = function (e) {
            return e << 24 | (65280 & e) << 8 | (16711680 & e) >> 8 | e >>> 24
        }, zd = function (e, t, i) {
            var n = new Int32Array(e.buffer, e.byteOffset, e.byteLength >> 2), r = new Vd(Array.prototype.slice.call(t)),
                a = new Uint8Array(e.byteLength), s = new Int32Array(a.buffer), o = void 0, u = void 0, l = void 0,
                d = void 0, c = void 0, h = void 0, f = void 0, p = void 0, m = void 0;
            for (o = i[0], u = i[1], l = i[2], d = i[3], m = 0; m < n.length; m += 4) c = qd(n[m]), h = qd(n[m + 1]), f = qd(n[m + 2]), p = qd(n[m + 3]), r.decrypt(c, h, f, p, s, m), s[m] = qd(s[m] ^ o), s[m + 1] = qd(s[m + 1] ^ u), s[m + 2] = qd(s[m + 2] ^ l), s[m + 3] = qd(s[m + 3] ^ d), o = c, u = h, l = f, d = p;
            return a
        }, Wd = function () {
            function e(t, i, n, r) {
                Md(this, e);
                var a = e.STEP, s = new Int32Array(t.buffer), o = new Uint8Array(t.byteLength), u = 0;
                for (this.asyncStream_ = new Hd, this.asyncStream_.push(this.decryptChunk_(s.subarray(u, u + a), i, n, o)), u = a; u < s.length; u += a) n = new Uint32Array([qd(s[u - 4]), qd(s[u - 3]), qd(s[u - 2]), qd(s[u - 1])]), this.asyncStream_.push(this.decryptChunk_(s.subarray(u, u + a), i, n, o));
                this.asyncStream_.push(function () {
                    r(null, (e = o).subarray(0, e.byteLength - e[e.byteLength - 1]));
                    var e
                })
            }

            return e.prototype.decryptChunk_ = function (e, t, i, n) {
                return function () {
                    var r = zd(e, t, i);
                    n.set(r, e.byteOffset)
                }
            }, Bd(e, null, [{
                key: "STEP", get: function () {
                    return 32e3
                }
            }]), e
        }(), Xd = function (e, t) {
            return /^[a-z]+:/i.test(t) ? t : (/\/\//i.test(e) || (e = Ca.buildAbsoluteURL(r.location.href, e)), Ca.buildAbsoluteURL(e, t))
        }, Yd = function (e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }, Kd = function () {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                }
            }

            return function (t, i, n) {
                return i && e(t.prototype, i), n && e(t, n), t
            }
        }(), $d = function (e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + (void 0 === t ? "undefined" : g(t)));
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }, Qd = function (e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" !== (void 0 === t ? "undefined" : g(t)) && "function" != typeof t ? e : t
        }, Jd = function () {
            return function (e, t) {
                if (Array.isArray(e)) return e;
                if (Symbol.iterator in Object(e)) return function (e, t) {
                    var i = [], n = !0, r = !1, a = void 0;
                    try {
                        for (var s, o = e[Symbol.iterator](); !(n = (s = o.next()).done) && (i.push(s.value), !t || i.length !== t); n = !0) ;
                    } catch (e) {
                        r = !0, a = e
                    } finally {
                        try {
                            !n && o.return && o.return()
                        } finally {
                            if (r) throw a
                        }
                    }
                    return i
                }(e, t);
                throw new TypeError("Invalid attempt to destructure non-iterable instance")
            }
        }(), Zd = ka.mergeOptions, ec = ka.EventTarget, tc = ka.log, ic = function (e, t) {
            ["AUDIO", "SUBTITLES"].forEach(function (i) {
                for (var n in e.mediaGroups[i]) for (var r in e.mediaGroups[i][n]) {
                    var a = e.mediaGroups[i][n][r];
                    t(a, i, n, r)
                }
            })
        }, nc = function (e, t) {
            var i = Zd(e, {}), n = i.playlists[t.uri];
            if (!n) return null;
            if (n.segments && t.segments && n.segments.length === t.segments.length && n.mediaSequence === t.mediaSequence) return null;
            var r = Zd(n, t);
            n.segments && (r.segments = function (e, t, i) {
                var n = t.slice();
                i = i || 0;
                for (var r = Math.min(e.length, t.length + i), a = i; a < r; a++) n[a - i] = Zd(e[a], n[a - i]);
                return n
            }(n.segments, t.segments, t.mediaSequence - n.mediaSequence)), r.segments.forEach(function (e) {
                t = e, i = r.resolvedUri, t.resolvedUri || (t.resolvedUri = Xd(i, t.uri)), t.key && !t.key.resolvedUri && (t.key.resolvedUri = Xd(i, t.key.uri)), t.map && !t.map.resolvedUri && (t.map.resolvedUri = Xd(i, t.map.uri));
                var t, i
            });
            for (var a = 0; a < i.playlists.length; a++) i.playlists[a].uri === t.uri && (i.playlists[a] = r);
            return i.playlists[t.uri] = r, i
        }, rc = function (e) {
            for (var t = e.playlists.length; t--;) {
                var i = e.playlists[t];
                e.playlists[i.uri] = i, i.resolvedUri = Xd(e.uri, i.uri), i.id = t, i.attributes || (i.attributes = {}, tc.warn("Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute."))
            }
        }, ac = function (e) {
            ic(e, function (t) {
                t.uri && (t.resolvedUri = Xd(e.uri, t.uri))
            })
        }, sc = function (e, t) {
            var i = e.segments[e.segments.length - 1];
            return t && i && i.duration ? 1e3 * i.duration : 500 * (e.targetDuration || 10)
        }, oc = function (e) {
            $d(t, ec);

            function t(e, i, n) {
                Yd(this, t);
                var r = Qd(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                if (r.srcUrl = e, r.hls_ = i, r.withCredentials = n, !r.srcUrl) throw new Error("A non-empty playlist URL is required");
                return r.state = "HAVE_NOTHING", r.on("mediaupdatetimeout", function () {
                    "HAVE_METADATA" === r.state && (r.state = "HAVE_CURRENT_METADATA", r.request = r.hls_.xhr({
                        uri: Xd(r.master.uri, r.media().uri),
                        withCredentials: r.withCredentials
                    }, function (e, t) {
                        if (r.request) return e ? r.playlistRequestError(r.request, r.media().uri, "HAVE_METADATA") : void r.haveMetadata(r.request, r.media().uri)
                    }))
                }), r
            }

            return Kd(t, [{
                key: "playlistRequestError", value: function (e, t, i) {
                    this.request = null, i && (this.state = i), this.error = {
                        playlist: this.master.playlists[t],
                        status: e.status,
                        message: "HLS playlist request error at URL: " + t,
                        responseText: e.responseText,
                        code: e.status >= 500 ? 4 : 2
                    }, this.trigger("error")
                }
            }, {
                key: "haveMetadata", value: function (e, t) {
                    var i = this;
                    this.request = null, this.state = "HAVE_METADATA";
                    var n = new Ua;
                    n.push(e.responseText), n.end(), n.manifest.uri = t, n.manifest.attributes = n.manifest.attributes || {};
                    var a = nc(this.master, n.manifest);
                    this.targetDuration = n.manifest.targetDuration, a ? (this.master = a, this.media_ = this.master.playlists[n.manifest.uri]) : this.trigger("playlistunchanged"), this.media().endList || (r.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = r.setTimeout(function () {
                        i.trigger("mediaupdatetimeout")
                    }, sc(this.media(), !!a))), this.trigger("loadedplaylist")
                }
            }, {
                key: "dispose", value: function () {
                    this.stopRequest(), r.clearTimeout(this.mediaUpdateTimeout)
                }
            }, {
                key: "stopRequest", value: function () {
                    if (this.request) {
                        var e = this.request;
                        this.request = null, e.onreadystatechange = null, e.abort()
                    }
                }
            }, {
                key: "media", value: function (e) {
                    var t = this;
                    if (!e) return this.media_;
                    if ("HAVE_NOTHING" === this.state) throw new Error("Cannot switch media playlist from " + this.state);
                    var i = this.state;
                    if ("string" == typeof e) {
                        if (!this.master.playlists[e]) throw new Error("Unknown playlist URI: " + e);
                        e = this.master.playlists[e]
                    }
                    var n = !this.media_ || e.uri !== this.media_.uri;
                    if (this.master.playlists[e.uri].endList) return this.request && (this.request.onreadystatechange = null, this.request.abort(), this.request = null), this.state = "HAVE_METADATA", this.media_ = e, void(n && (this.trigger("mediachanging"), this.trigger("mediachange")));
                    if (n) {
                        if (this.state = "SWITCHING_MEDIA", this.request) {
                            if (Xd(this.master.uri, e.uri) === this.request.url) return;
                            this.request.onreadystatechange = null, this.request.abort(), this.request = null
                        }
                        this.media_ && this.trigger("mediachanging"), this.request = this.hls_.xhr({
                            uri: Xd(this.master.uri, e.uri),
                            withCredentials: this.withCredentials
                        }, function (n, r) {
                            if (t.request) {
                                if (n) return t.playlistRequestError(t.request, e.uri, i);
                                t.haveMetadata(r, e.uri), "HAVE_MASTER" === i ? t.trigger("loadedmetadata") : t.trigger("mediachange")
                            }
                        })
                    }
                }
            }, {
                key: "pause", value: function () {
                    this.stopRequest(), r.clearTimeout(this.mediaUpdateTimeout), "HAVE_NOTHING" === this.state && (this.started = !1), "SWITCHING_MEDIA" === this.state ? this.media_ ? this.state = "HAVE_METADATA" : this.state = "HAVE_MASTER" : "HAVE_CURRENT_METADATA" === this.state && (this.state = "HAVE_METADATA")
                }
            }, {
                key: "load", value: function (e) {
                    var t = this;
                    r.clearTimeout(this.mediaUpdateTimeout);
                    var i = this.media();
                    if (e) {
                        var n = i ? i.targetDuration / 2 * 1e3 : 5e3;
                        this.mediaUpdateTimeout = r.setTimeout(function () {
                            return t.load()
                        }, n)
                    } else this.started ? i && !i.endList ? this.trigger("mediaupdatetimeout") : this.trigger("loadedplaylist") : this.start()
                }
            }, {
                key: "start", value: function () {
                    var e = this;
                    this.started = !0, this.request = this.hls_.xhr({
                        uri: this.srcUrl,
                        withCredentials: this.withCredentials
                    }, function (t, i) {
                        if (e.request) {
                            if (e.request = null, t) return e.error = {
                                status: i.status,
                                message: "HLS playlist request error at URL: " + e.srcUrl,
                                responseText: i.responseText,
                                code: 2
                            }, "HAVE_NOTHING" === e.state && (e.started = !1), e.trigger("error");
                            var n = new Ua;
                            return n.push(i.responseText), n.end(), e.state = "HAVE_MASTER", n.manifest.uri = e.srcUrl, n.manifest.playlists ? (e.master = n.manifest, rc(e.master), ac(e.master), e.trigger("loadedplaylist"), void(e.request || e.media(n.manifest.playlists[0]))) : (e.master = {
                                mediaGroups: {
                                    AUDIO: {},
                                    VIDEO: {},
                                    "CLOSED-CAPTIONS": {},
                                    SUBTITLES: {}
                                }, uri: r.location.href, playlists: [{uri: e.srcUrl, id: 0}]
                            }, e.master.playlists[e.srcUrl] = e.master.playlists[0], e.master.playlists[0].resolvedUri = e.srcUrl, e.master.playlists[0].attributes = e.master.playlists[0].attributes || {}, e.haveMetadata(i, e.srcUrl), e.trigger("loadedmetadata"))
                        }
                    })
                }
            }]), t
        }(), uc = ka.createTimeRange, lc = function (e, t, i) {
            var n = void 0, r = void 0;
            return void 0 === t && (t = e.mediaSequence + e.segments.length), t < e.mediaSequence ? 0 : (n = function (e, t) {
                var i = 0, n = t - e.mediaSequence, r = e.segments[n];
                if (r) {
                    if (void 0 !== r.start) return {result: r.start, precise: !0};
                    if (void 0 !== r.end) return {result: r.end - r.duration, precise: !0}
                }
                for (; n--;) {
                    if (void 0 !== (r = e.segments[n]).end) return {result: i + r.end, precise: !0};
                    if (i += r.duration, void 0 !== r.start) return {result: i + r.start, precise: !0}
                }
                return {result: i, precise: !1}
            }(e, t)).precise ? n.result : (r = function (e, t) {
                for (var i = 0, n = void 0, r = t - e.mediaSequence; r < e.segments.length; r++) {
                    if (void 0 !== (n = e.segments[r]).start) return {result: n.start - i, precise: !0};
                    if (i += n.duration, void 0 !== n.end) return {result: n.end - i, precise: !0}
                }
                return {result: -1, precise: !1}
            }(e, t)).precise ? r.result : n.result + i
        }, dc = function (e, t, i) {
            if (!e) return 0;
            if ("number" != typeof i && (i = 0), void 0 === t) {
                if (e.totalDuration) return e.totalDuration;
                if (!e.endList) return r.Infinity
            }
            return lc(e, t, i)
        }, cc = function (e, t, i) {
            var n = 0;
            if (t > i) {
                var r = [i, t];
                t = r[0], i = r[1]
            }
            if (t < 0) {
                for (var a = t; a < Math.min(0, i); a++) n += e.targetDuration;
                t = 0
            }
            for (var s = t; s < i; s++) n += e.segments[s].duration;
            return n
        }, hc = function (e) {
            if (!e.segments.length) return 0;
            for (var t = e.segments.length - 1, i = e.segments[t].duration || e.targetDuration, n = i + 2 * e.targetDuration; t-- && !((i += e.segments[t].duration) >= n);) ;
            return Math.max(0, t)
        }, fc = function (e, t, i) {
            if (!e || !e.segments) return null;
            if (e.endList) return dc(e);
            if (null === t) return null;
            t = t || 0;
            var n = i ? hc(e) : e.segments.length;
            return lc(e, e.mediaSequence + n, t)
        }, pc = function (e) {
            return e - Math.floor(e) == 0
        }, mc = function (e, t) {
            if (pc(t)) return t + .1 * e;
            for (var i = t.toString().split(".")[1].length, n = 1; n <= i; n++) {
                var r = Math.pow(10, n), a = t * r;
                if (pc(a) || n === i) return (a + e) / r
            }
        }, gc = mc.bind(null, 1), yc = mc.bind(null, -1), _c = function (e) {
            return e.excludeUntil && e.excludeUntil > Date.now()
        }, vc = function (e) {
            return e.excludeUntil && e.excludeUntil === 1 / 0
        }, bc = function (e) {
            var t = _c(e);
            return !e.disabled && !t
        }, Tc = function (e, t) {
            return t.attributes && t.attributes[e]
        }, Sc = function (e, t) {
            if (1 === e.playlists.length) return !0;
            var i = t.attributes.BANDWIDTH || Number.MAX_VALUE;
            return 0 === e.playlists.filter(function (e) {
                return !!bc(e) && (e.attributes.BANDWIDTH || 0) < i
            }).length
        }, kc = {
            duration: dc, seekable: function (e, t) {
                var i = t || 0, n = fc(e, t, !0);
                return null === n ? uc() : uc(i, n)
            }, safeLiveIndex: hc, getMediaInfoForTime: function (e, t, i, n) {
                var r = void 0, a = void 0, s = e.segments.length, o = t - n;
                if (o < 0) {
                    if (i > 0) for (r = i - 1; r >= 0; r--) if (a = e.segments[r], (o += yc(a.duration)) > 0) return {
                        mediaIndex: r,
                        startTime: n - cc(e, i, r)
                    };
                    return {mediaIndex: 0, startTime: t}
                }
                if (i < 0) {
                    for (r = i; r < 0; r++) if ((o -= e.targetDuration) < 0) return {mediaIndex: 0, startTime: t};
                    i = 0
                }
                for (r = i; r < s; r++) if (a = e.segments[r], (o -= gc(a.duration)) < 0) return {
                    mediaIndex: r,
                    startTime: n + cc(e, i, r)
                };
                return {mediaIndex: s - 1, startTime: t}
            }, isEnabled: bc, isDisabled: function (e) {
                return e.disabled
            }, isBlacklisted: _c, isIncompatible: vc, playlistEnd: fc, isAes: function (e) {
                for (var t = 0; t < e.segments.length; t++) if (e.segments[t].key) return !0;
                return !1
            }, isFmp4: function (e) {
                for (var t = 0; t < e.segments.length; t++) if (e.segments[t].map) return !0;
                return !1
            }, hasAttribute: Tc, estimateSegmentRequestTime: function (e, t, i) {
                var n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;
                if (!Tc("BANDWIDTH", i)) return NaN;
                return (e * i.attributes.BANDWIDTH - 8 * n) / t
            }, isLowestEnabledRendition: Sc
        }, wc = ka.xhr, Ec = ka.mergeOptions, Cc = function () {
            return function e(t, i) {
                t = Ec({timeout: 45e3}, t);
                var n = e.beforeRequest || ka.Hls.xhr.beforeRequest;
                if (n && "function" == typeof n) {
                    var r = n(t);
                    r && (t = r)
                }
                var a = wc(t, function (e, t) {
                    var n = a.response;
                    !e && n && (a.responseTime = Date.now(), a.roundTripTime = a.responseTime - a.requestTime, a.bytesReceived = n.byteLength || n.length, a.bandwidth || (a.bandwidth = Math.floor(a.bytesReceived / a.roundTripTime * 8 * 1e3))), t.headers && (a.responseHeaders = t.headers), e && "ETIMEDOUT" === e.code && (a.timedout = !0), e || a.aborted || 200 === t.statusCode || 206 === t.statusCode || 0 === t.statusCode || (e = new Error("XHR Failed with a response of: " + (a && (n || a.responseText)))), i(e, a)
                }), s = a.abort;
                return a.abort = function () {
                    return a.aborted = !0, s.apply(a, arguments)
                }, a.uri = t.uri, a.requestTime = Date.now(), a
            }
        }, Ac = function (e, t) {
            var i = e.toString(16);
            return "00".substring(0, 2 - i.length) + i + (t % 2 ? " " : "")
        }, Lc = function (e) {
            return e >= 32 && e < 126 ? String.fromCharCode(e) : "."
        }, Oc = function (e) {
            var t = {};
            return Object.keys(e).forEach(function (i) {
                var n = e[i];
                ArrayBuffer.isView(n) ? t[i] = {
                    bytes: n.buffer,
                    byteOffset: n.byteOffset,
                    byteLength: n.byteLength
                } : t[i] = n
            }), t
        }, Ic = function (e) {
            var t = e.byterange || {length: 1 / 0, offset: 0};
            return [t.length, t.offset, e.resolvedUri].join(",")
        }, Pc = function (e) {
            for (var t = Array.prototype.slice.call(e), i = "", n = 0; n < t.length / 16; n++) i += t.slice(16 * n, 16 * n + 16).map(Ac).join("") + " " + t.slice(16 * n, 16 * n + 16).map(Lc).join("") + "\n";
            return i
        }, Rc = Object.freeze({
            createTransferableMessage: Oc, initSegmentId: Ic, hexDump: Pc, tagDump: function (e) {
                var t = e.bytes;
                return Pc(t)
            }, textRanges: function (e) {
                var t = "", i = void 0;
                for (i = 0; i < e.length; i++) t += (n = e, r = i, n.start(r) + "-" + n.end(r) + " ");
                var n, r;
                return t
            }
        }), xc = function (e, t) {
            var i = [], n = void 0;
            if (e && e.length) for (n = 0; n < e.length; n++) t(e.start(n), e.end(n)) && i.push([e.start(n), e.end(n)]);
            return ka.createTimeRanges(i)
        }, Dc = function (e, t) {
            return xc(e, function (e, i) {
                return e - 1 / 30 <= t && i + 1 / 30 >= t
            })
        }, Uc = function (e, t) {
            return xc(e, function (e) {
                return e - 1 / 30 >= t
            })
        }, Mc = function (e) {
            var t = [];
            if (!e || !e.length) return "";
            for (var i = 0; i < e.length; i++) t.push(e.start(i) + " => " + e.end(i));
            return t.join(", ")
        }, Bc = function (e) {
            for (var t = [], i = 0; i < e.length; i++) t.push({start: e.start(i), end: e.end(i)});
            return t
        }, jc = function (e, t, i) {
            var n = void 0, r = void 0;
            if (i && i.cues) for (n = i.cues.length; n--;) (r = i.cues[n]).startTime <= t && r.endTime >= e && i.removeCue(r)
        }, Nc = function (e) {
            return isNaN(e) || Math.abs(e) === 1 / 0 ? Number.MAX_VALUE : e
        }, Fc = function (e, t, i) {
            var n = r.WebKitDataCue || r.VTTCue;
            if (t && t.forEach(function (e) {
                var t = e.stream;
                this.inbandTextTracks_[t].addCue(new n(e.startTime + this.timestampOffset, e.endTime + this.timestampOffset, e.text))
            }, e), i) {
                var a = Nc(e.mediaSource_.duration);
                if (i.forEach(function (e) {
                    var t = e.cueTime + this.timestampOffset;
                    e.frames.forEach(function (e) {
                        var i = new n(t, t, e.value || e.url || e.data || "");
                        i.frame = e, i.value = e, r = i, Object.defineProperties(r.frame, {
                            id: {
                                get: function () {
                                    return ka.log.warn("cue.frame.id is deprecated. Use cue.value.key instead."), r.value.key
                                }
                            }, value: {
                                get: function () {
                                    return ka.log.warn("cue.frame.value is deprecated. Use cue.value.data instead."), r.value.data
                                }
                            }, privateData: {
                                get: function () {
                                    return ka.log.warn("cue.frame.privateData is deprecated. Use cue.value.data instead."), r.value.data
                                }
                            }
                        });
                        var r;
                        this.metadataTrack_.addCue(i)
                    }, this)
                }, e), e.metadataTrack_ && e.metadataTrack_.cues && e.metadataTrack_.cues.length) {
                    for (var s = e.metadataTrack_.cues, o = [], u = 0; u < s.length; u++) s[u] && o.push(s[u]);
                    var l = o.reduce(function (e, t) {
                        var i = e[t.startTime] || [];
                        return i.push(t), e[t.startTime] = i, e
                    }, {}), d = Object.keys(l).sort(function (e, t) {
                        return Number(e) - Number(t)
                    });
                    d.forEach(function (e, t) {
                        var i = l[e], n = Number(d[t + 1]) || a;
                        i.forEach(function (e) {
                            e.endTime = n
                        })
                    })
                }
            }
        }, Vc = "undefined" != typeof window ? window : {}, Gc = "undefined" == typeof Symbol ? "__target" : Symbol(),
        Hc = "application/javascript",
        qc = Vc.BlobBuilder || Vc.WebKitBlobBuilder || Vc.MozBlobBuilder || Vc.MSBlobBuilder,
        zc = Vc.URL || Vc.webkitURL || zc && zc.msURL, Wc = Vc.Worker;

    function Xc(e, t) {
        return function (i) {
            var n = this;
            if (!t) return new Wc(e);
            if (Wc && !i) {
                var r = Qc(t.toString().replace(/^function.+?{/, "").slice(0, -1));
                return this[Gc] = new Wc(r), function (e, t) {
                    if (!e || !t) return;
                    var i = e.terminate;
                    e.objURL = t, e.terminate = function () {
                        e.objURL && zc.revokeObjectURL(e.objURL), i.call(e)
                    }
                }(this[Gc], r), this[Gc]
            }
            var a = {
                postMessage: function (e) {
                    n.onmessage && setTimeout(function () {
                        n.onmessage({data: e, target: a})
                    })
                }
            };
            t.call(a), this.postMessage = function (e) {
                setTimeout(function () {
                    a.onmessage({data: e, target: n})
                })
            }, this.isThisThread = !0
        }
    }

    if (Wc) {
        var Yc, Kc = Qc("self.onmessage = function () {}"), $c = new Uint8Array(1);
        try {
            (Yc = new Wc(Kc)).postMessage($c, [$c.buffer])
        } catch (e) {
            Wc = null
        } finally {
            zc.revokeObjectURL(Kc), Yc && Yc.terminate()
        }
    }

    function Qc(e) {
        try {
            return zc.createObjectURL(new Blob([e], {type: Hc}))
        } catch (i) {
            var t = new qc;
            return t.append(e), zc.createObjectURL(t.getBlob(type))
        }
    }

    var Jc = new Xc("./transmuxer-worker.worker.js", function (e, t) {
        var i = this;
        !function () {
            var e, t, n, r, a, s, o, u, l, d, c, h, f, p, m, y, _, v, b, T, S, k, w, E, C, A, L, O, I, P, R, x, D, U, M,
                B, j = Math.pow(2, 32) - 1;
            !function () {
                var e;
                if (w = {
                    avc1: [],
                    avcC: [],
                    btrt: [],
                    dinf: [],
                    dref: [],
                    esds: [],
                    ftyp: [],
                    hdlr: [],
                    mdat: [],
                    mdhd: [],
                    mdia: [],
                    mfhd: [],
                    minf: [],
                    moof: [],
                    moov: [],
                    mp4a: [],
                    mvex: [],
                    mvhd: [],
                    sdtp: [],
                    smhd: [],
                    stbl: [],
                    stco: [],
                    stsc: [],
                    stsd: [],
                    stsz: [],
                    stts: [],
                    styp: [],
                    tfdt: [],
                    tfhd: [],
                    traf: [],
                    trak: [],
                    trun: [],
                    trex: [],
                    tkhd: [],
                    vmhd: []
                }, "undefined" != typeof Uint8Array) {
                    for (e in w) w.hasOwnProperty(e) && (w[e] = [e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)]);
                    E = new Uint8Array(["i".charCodeAt(0), "s".charCodeAt(0), "o".charCodeAt(0), "m".charCodeAt(0)]), A = new Uint8Array(["a".charCodeAt(0), "v".charCodeAt(0), "c".charCodeAt(0), "1".charCodeAt(0)]), C = new Uint8Array([0, 0, 0, 1]), L = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]), O = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]), I = {
                        video: L,
                        audio: O
                    }, x = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]), R = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), D = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), U = D, M = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), B = D, P = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])
                }
            }(), e = function (e) {
                var t, i, n = [], r = 0;
                for (t = 1; t < arguments.length; t++) n.push(arguments[t]);
                for (t = n.length; t--;) r += n[t].byteLength;
                for (i = new Uint8Array(r + 8), new DataView(i.buffer, i.byteOffset, i.byteLength).setUint32(0, i.byteLength), i.set(e, 4), t = 0, r = 8; t < n.length; t++) i.set(n[t], r), r += n[t].byteLength;
                return i
            }, t = function () {
                return e(w.dinf, e(w.dref, x))
            }, n = function (t) {
                return e(w.esds, new Uint8Array([0, 0, 0, 0, 3, 25, 0, 0, 0, 4, 17, 64, 21, 0, 6, 0, 0, 0, 218, 192, 0, 0, 218, 192, 5, 2, t.audioobjecttype << 3 | t.samplingfrequencyindex >>> 1, t.samplingfrequencyindex << 7 | t.channelcount << 3, 6, 1, 2]))
            }, r = function () {
                return e(w.ftyp, E, C, E, A)
            }, y = function (t) {
                return e(w.hdlr, I[t])
            }, a = function (t) {
                return e(w.mdat, t)
            }, m = function (t) {
                var i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 1, 95, 144, t.duration >>> 24 & 255, t.duration >>> 16 & 255, t.duration >>> 8 & 255, 255 & t.duration, 85, 196, 0, 0]);
                return t.samplerate && (i[12] = t.samplerate >>> 24 & 255, i[13] = t.samplerate >>> 16 & 255, i[14] = t.samplerate >>> 8 & 255, i[15] = 255 & t.samplerate), e(w.mdhd, i)
            }, p = function (t) {
                return e(w.mdia, m(t), y(t.type), o(t))
            }, s = function (t) {
                return e(w.mfhd, new Uint8Array([0, 0, 0, 0, (4278190080 & t) >> 24, (16711680 & t) >> 16, (65280 & t) >> 8, 255 & t]))
            }, o = function (i) {
                return e(w.minf, "video" === i.type ? e(w.vmhd, P) : e(w.smhd, R), t(), v(i))
            }, u = function (t, i) {
                for (var n = [], r = i.length; r--;) n[r] = T(i[r]);
                return e.apply(null, [w.moof, s(t)].concat(n))
            }, l = function (t) {
                for (var i = t.length, n = []; i--;) n[i] = h(t[i]);
                return e.apply(null, [w.moov, c(4294967295)].concat(n).concat(d(t)))
            }, d = function (t) {
                for (var i = t.length, n = []; i--;) n[i] = S(t[i]);
                return e.apply(null, [w.mvex].concat(n))
            }, c = function (t) {
                var i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 95, 144, (4278190080 & t) >> 24, (16711680 & t) >> 16, (65280 & t) >> 8, 255 & t, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
                return e(w.mvhd, i)
            }, _ = function (t) {
                var i, n, r = t.samples || [], a = new Uint8Array(4 + r.length);
                for (n = 0; n < r.length; n++) i = r[n].flags, a[n + 4] = i.dependsOn << 4 | i.isDependedOn << 2 | i.hasRedundancy;
                return e(w.sdtp, a)
            }, v = function (t) {
                return e(w.stbl, b(t), e(w.stts, B), e(w.stsc, U), e(w.stsz, M), e(w.stco, D))
            }, function () {
                var t, i;
                b = function (n) {
                    return e(w.stsd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]), "video" === n.type ? t(n) : i(n))
                }, t = function (t) {
                    var i, n = t.sps || [], r = t.pps || [], a = [], s = [];
                    for (i = 0; i < n.length; i++) a.push((65280 & n[i].byteLength) >>> 8), a.push(255 & n[i].byteLength), a = a.concat(Array.prototype.slice.call(n[i]));
                    for (i = 0; i < r.length; i++) s.push((65280 & r[i].byteLength) >>> 8), s.push(255 & r[i].byteLength), s = s.concat(Array.prototype.slice.call(r[i]));
                    return e(w.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (65280 & t.width) >> 8, 255 & t.width, (65280 & t.height) >> 8, 255 & t.height, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 19, 118, 105, 100, 101, 111, 106, 115, 45, 99, 111, 110, 116, 114, 105, 98, 45, 104, 108, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), e(w.avcC, new Uint8Array([1, t.profileIdc, t.profileCompatibility, t.levelIdc, 255].concat([n.length]).concat(a).concat([r.length]).concat(s))), e(w.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])))
                }, i = function (t) {
                    return e(w.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, (65280 & t.channelcount) >> 8, 255 & t.channelcount, (65280 & t.samplesize) >> 8, 255 & t.samplesize, 0, 0, 0, 0, (65280 & t.samplerate) >> 8, 255 & t.samplerate, 0, 0]), n(t))
                }
            }(), f = function (t) {
                var i = new Uint8Array([0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, (4278190080 & t.id) >> 24, (16711680 & t.id) >> 16, (65280 & t.id) >> 8, 255 & t.id, 0, 0, 0, 0, (4278190080 & t.duration) >> 24, (16711680 & t.duration) >> 16, (65280 & t.duration) >> 8, 255 & t.duration, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, (65280 & t.width) >> 8, 255 & t.width, 0, 0, (65280 & t.height) >> 8, 255 & t.height, 0, 0]);
                return e(w.tkhd, i)
            }, T = function (t) {
                var i, n, r, a, s, o;
                return i = e(w.tfhd, new Uint8Array([0, 0, 0, 58, (4278190080 & t.id) >> 24, (16711680 & t.id) >> 16, (65280 & t.id) >> 8, 255 & t.id, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])), s = Math.floor(t.baseMediaDecodeTime / (j + 1)), o = Math.floor(t.baseMediaDecodeTime % (j + 1)), n = e(w.tfdt, new Uint8Array([1, 0, 0, 0, s >>> 24 & 255, s >>> 16 & 255, s >>> 8 & 255, 255 & s, o >>> 24 & 255, o >>> 16 & 255, o >>> 8 & 255, 255 & o])), 92, "audio" === t.type ? (r = k(t, 92), e(w.traf, i, n, r)) : (a = _(t), r = k(t, a.length + 92), e(w.traf, i, n, r, a))
            }, h = function (t) {
                return t.duration = t.duration || 4294967295, e(w.trak, f(t), p(t))
            }, S = function (t) {
                var i = new Uint8Array([0, 0, 0, 0, (4278190080 & t.id) >> 24, (16711680 & t.id) >> 16, (65280 & t.id) >> 8, 255 & t.id, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]);
                return "video" !== t.type && (i[i.length - 1] = 0), e(w.trex, i)
            }, function () {
                var t, i, n;
                n = function (e, t) {
                    var i = 0, n = 0, r = 0, a = 0;
                    return e.length && (void 0 !== e[0].duration && (i = 1), void 0 !== e[0].size && (n = 2), void 0 !== e[0].flags && (r = 4), void 0 !== e[0].compositionTimeOffset && (a = 8)), [0, 0, i | n | r | a, 1, (4278190080 & e.length) >>> 24, (16711680 & e.length) >>> 16, (65280 & e.length) >>> 8, 255 & e.length, (4278190080 & t) >>> 24, (16711680 & t) >>> 16, (65280 & t) >>> 8, 255 & t]
                }, i = function (t, i) {
                    var r, a, s, o;
                    for (i += 20 + 16 * (a = t.samples || []).length, r = n(a, i), o = 0; o < a.length; o++) s = a[o], r = r.concat([(4278190080 & s.duration) >>> 24, (16711680 & s.duration) >>> 16, (65280 & s.duration) >>> 8, 255 & s.duration, (4278190080 & s.size) >>> 24, (16711680 & s.size) >>> 16, (65280 & s.size) >>> 8, 255 & s.size, s.flags.isLeading << 2 | s.flags.dependsOn, s.flags.isDependedOn << 6 | s.flags.hasRedundancy << 4 | s.flags.paddingValue << 1 | s.flags.isNonSyncSample, 61440 & s.flags.degradationPriority, 15 & s.flags.degradationPriority, (4278190080 & s.compositionTimeOffset) >>> 24, (16711680 & s.compositionTimeOffset) >>> 16, (65280 & s.compositionTimeOffset) >>> 8, 255 & s.compositionTimeOffset]);
                    return e(w.trun, new Uint8Array(r))
                }, t = function (t, i) {
                    var r, a, s, o;
                    for (i += 20 + 8 * (a = t.samples || []).length, r = n(a, i), o = 0; o < a.length; o++) s = a[o], r = r.concat([(4278190080 & s.duration) >>> 24, (16711680 & s.duration) >>> 16, (65280 & s.duration) >>> 8, 255 & s.duration, (4278190080 & s.size) >>> 24, (16711680 & s.size) >>> 16, (65280 & s.size) >>> 8, 255 & s.size]);
                    return e(w.trun, new Uint8Array(r))
                }, k = function (e, n) {
                    return "audio" === e.type ? t(e, n) : i(e, n)
                }
            }();
            var N, F, V = {
                ftyp: r, mdat: a, moof: u, moov: l, initSegment: function (e) {
                    var t, i = r(), n = l(e);
                    return (t = new Uint8Array(i.byteLength + n.byteLength)).set(i), t.set(n, i.byteLength), t
                }
            }, G = function (e) {
                return e >>> 0
            }, H = {
                findBox: N = function (e, t) {
                    var i, n, r, a, s, o = [];
                    if (!t.length) return null;
                    for (i = 0; i < e.byteLength;) n = G(e[i] << 24 | e[i + 1] << 16 | e[i + 2] << 8 | e[i + 3]), r = F(e.subarray(i + 4, i + 8)), a = n > 1 ? i + n : e.byteLength, r === t[0] && (1 === t.length ? o.push(e.subarray(i + 8, a)) : (s = N(e.subarray(i + 8, a), t.slice(1))).length && (o = o.concat(s))), i = a;
                    return o
                }, parseType: F = function (e) {
                    var t = "";
                    return t += String.fromCharCode(e[0]), t += String.fromCharCode(e[1]), t += String.fromCharCode(e[2]), t += String.fromCharCode(e[3])
                }, timescale: function (e) {
                    return N(e, ["moov", "trak"]).reduce(function (e, t) {
                        var i, n, r, a, s;
                        return (i = N(t, ["tkhd"])[0]) ? (n = i[0], a = G(i[r = 0 === n ? 12 : 20] << 24 | i[r + 1] << 16 | i[r + 2] << 8 | i[r + 3]), (s = N(t, ["mdia", "mdhd"])[0]) ? (r = 0 === (n = s[0]) ? 12 : 20, e[a] = G(s[r] << 24 | s[r + 1] << 16 | s[r + 2] << 8 | s[r + 3]), e) : null) : null
                    }, {})
                }, startTime: function (e, t) {
                    var i, n, r;
                    return i = N(t, ["moof", "traf"]), n = [].concat.apply([], i.map(function (t) {
                        return N(t, ["tfhd"]).map(function (i) {
                            var n, r;
                            return n = G(i[4] << 24 | i[5] << 16 | i[6] << 8 | i[7]), r = e[n] || 9e4, (N(t, ["tfdt"]).map(function (e) {
                                var t, i;
                                return t = e[0], i = G(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7]), 1 === t && (i *= Math.pow(2, 32), i += G(e[8] << 24 | e[9] << 16 | e[10] << 8 | e[11])), i
                            })[0] || 1 / 0) / r
                        })
                    })), r = Math.min.apply(null, n), isFinite(r) ? r : 0
                }, videoTrackIds: function (e) {
                    var t = [];
                    return N(e, ["moov", "trak"]).forEach(function (e) {
                        var i = N(e, ["mdia", "hdlr"]), n = N(e, ["tkhd"]);
                        i.forEach(function (e, i) {
                            var r, a, s = F(e.subarray(8, 12)), o = n[i];
                            "vide" === s && (a = 0 === (r = new DataView(o.buffer, o.byteOffset, o.byteLength)).getUint8(0) ? r.getUint32(12) : r.getUint32(20), t.push(a))
                        })
                    }), t
                }
            }, q = function () {
                this.init = function () {
                    var e = {};
                    this.on = function (t, i) {
                        e[t] || (e[t] = []), e[t] = e[t].concat(i)
                    }, this.off = function (t, i) {
                        var n;
                        return !!e[t] && (n = e[t].indexOf(i), e[t] = e[t].slice(), e[t].splice(n, 1), n > -1)
                    }, this.trigger = function (t) {
                        var i, n, r, a;
                        if (i = e[t]) if (2 === arguments.length) for (r = i.length, n = 0; n < r; ++n) i[n].call(this, arguments[1]); else {
                            for (a = [], n = arguments.length, n = 1; n < arguments.length; ++n) a.push(arguments[n]);
                            for (r = i.length, n = 0; n < r; ++n) i[n].apply(this, a)
                        }
                    }, this.dispose = function () {
                        e = {}
                    }
                }
            };
            q.prototype.pipe = function (e) {
                return this.on("data", function (t) {
                    e.push(t)
                }), this.on("done", function (t) {
                    e.flush(t)
                }), e
            }, q.prototype.push = function (e) {
                this.trigger("data", e)
            }, q.prototype.flush = function (e) {
                this.trigger("done", e)
            };
            var z = q, W = function (e, t) {
                var i = {
                    size: 0,
                    flags: {
                        isLeading: 0,
                        dependsOn: 1,
                        isDependedOn: 0,
                        hasRedundancy: 0,
                        degradationPriority: 0,
                        isNonSyncSample: 1
                    }
                };
                return i.dataOffset = t, i.compositionTimeOffset = e.pts - e.dts, i.duration = e.duration, i.size = 4 * e.length, i.size += e.byteLength, e.keyFrame && (i.flags.dependsOn = 2, i.flags.isNonSyncSample = 0), i
            }, X = function (e) {
                var t, i, n = [], r = [];
                for (n.byteLength = 0, t = 0; t < e.length; t++) "access_unit_delimiter_rbsp" === (i = e[t]).nalUnitType ? (n.length && (n.duration = i.dts - n.dts, r.push(n)), (n = [i]).byteLength = i.data.byteLength, n.pts = i.pts, n.dts = i.dts) : ("slice_layer_without_partitioning_rbsp_idr" === i.nalUnitType && (n.keyFrame = !0), n.duration = i.dts - n.dts, n.byteLength += i.data.byteLength, n.push(i));
                return r.length && (!n.duration || n.duration <= 0) && (n.duration = r[r.length - 1].duration), r.push(n), r
            }, Y = function (e) {
                var t, i, n = [], r = [];
                for (n.byteLength = 0, n.nalCount = 0, n.duration = 0, n.pts = e[0].pts, n.dts = e[0].dts, r.byteLength = 0, r.nalCount = 0, r.duration = 0, r.pts = e[0].pts, r.dts = e[0].dts, t = 0; t < e.length; t++) (i = e[t]).keyFrame ? (n.length && (r.push(n), r.byteLength += n.byteLength, r.nalCount += n.nalCount, r.duration += n.duration), (n = [i]).nalCount = i.length, n.byteLength = i.byteLength, n.pts = i.pts, n.dts = i.dts, n.duration = i.duration) : (n.duration += i.duration, n.nalCount += i.length, n.byteLength += i.byteLength, n.push(i));
                return r.length && n.duration <= 0 && (n.duration = r[r.length - 1].duration), r.byteLength += n.byteLength, r.nalCount += n.nalCount, r.duration += n.duration, r.push(n), r
            }, K = function (e) {
                var t;
                return !e[0][0].keyFrame && e.length > 1 && (t = e.shift(), e.byteLength -= t.byteLength, e.nalCount -= t.nalCount, e[0][0].dts = t.dts, e[0][0].pts = t.pts, e[0][0].duration += t.duration), e
            }, $ = function (e, t) {
                var i, n, r, a, s, o = t || 0, u = [];
                for (i = 0; i < e.length; i++) for (a = e[i], n = 0; n < a.length; n++) s = a[n], o += (r = W(s, o)).size, u.push(r);
                return u
            }, Q = function (e) {
                var t, i, n, r, a, s, o = 0, u = e.byteLength, l = e.nalCount, d = new Uint8Array(u + 4 * l),
                    c = new DataView(d.buffer);
                for (t = 0; t < e.length; t++) for (r = e[t], i = 0; i < r.length; i++) for (a = r[i], n = 0; n < a.length; n++) s = a[n], c.setUint32(o, s.data.byteLength), o += 4, d.set(s.data, o), o += s.data.byteLength;
                return d
            }, J = function (e) {
                delete e.minSegmentDts, delete e.maxSegmentDts, delete e.minSegmentPts, delete e.maxSegmentPts
            }, Z = function (e, t) {
                var i, n = e.minSegmentDts;
                return t || (n -= e.timelineStartInfo.dts), i = e.timelineStartInfo.baseMediaDecodeTime, i += n, i = Math.max(0, i), "audio" === e.type && (i *= e.samplerate / 9e4, i = Math.floor(i)), i
            }, ee = function (e, t) {
                "number" == typeof t.pts && (void 0 === e.timelineStartInfo.pts && (e.timelineStartInfo.pts = t.pts), void 0 === e.minSegmentPts ? e.minSegmentPts = t.pts : e.minSegmentPts = Math.min(e.minSegmentPts, t.pts), void 0 === e.maxSegmentPts ? e.maxSegmentPts = t.pts : e.maxSegmentPts = Math.max(e.maxSegmentPts, t.pts)), "number" == typeof t.dts && (void 0 === e.timelineStartInfo.dts && (e.timelineStartInfo.dts = t.dts), void 0 === e.minSegmentDts ? e.minSegmentDts = t.dts : e.minSegmentDts = Math.min(e.minSegmentDts, t.dts), void 0 === e.maxSegmentDts ? e.maxSegmentDts = t.dts : e.maxSegmentDts = Math.max(e.maxSegmentDts, t.dts))
            }, te = function (e) {
                for (var t = 0, i = {
                    payloadType: -1,
                    payloadSize: 0
                }, n = 0, r = 0; t < e.byteLength && 128 !== e[t];) {
                    for (; 255 === e[t];) n += 255, t++;
                    for (n += e[t++]; 255 === e[t];) r += 255, t++;
                    if (r += e[t++], !i.payload && 4 === n) {
                        i.payloadType = n, i.payloadSize = r, i.payload = e.subarray(t, t + r);
                        break
                    }
                    t += r, n = 0, r = 0
                }
                return i
            }, ie = function (e) {
                return 181 !== e.payload[0] ? null : 49 != (e.payload[1] << 8 | e.payload[2]) ? null : "GA94" !== String.fromCharCode(e.payload[3], e.payload[4], e.payload[5], e.payload[6]) ? null : 3 !== e.payload[7] ? null : e.payload.subarray(8, e.payload.length - 1)
            }, ne = function (e, t) {
                var i, n, r, a, s = [];
                if (!(64 & t[0])) return s;
                for (n = 31 & t[0], i = 0; i < n; i++) a = {
                    type: 3 & t[2 + (r = 3 * i)],
                    pts: e
                }, 4 & t[r + 2] && (a.ccData = t[r + 3] << 8 | t[r + 4], s.push(a));
                return s
            }, re = function (e) {
                for (var t, i, n = e.byteLength, r = [], a = 1; a < n - 2;) 0 === e[a] && 0 === e[a + 1] && 3 === e[a + 2] ? (r.push(a + 2), a += 2) : a++;
                if (0 === r.length) return e;
                t = n - r.length, i = new Uint8Array(t);
                var s = 0;
                for (a = 0; a < t; s++, a++) s === r[0] && (s++, r.shift()), i[a] = e[s];
                return i
            }, ae = 4, se = function e() {
                e.prototype.init.call(this), this.captionPackets_ = [], this.ccStreams_ = [new ce(0, 0), new ce(0, 1), new ce(1, 0), new ce(1, 1)], this.reset(), this.ccStreams_.forEach(function (e) {
                    e.on("data", this.trigger.bind(this, "data")), e.on("done", this.trigger.bind(this, "done"))
                }, this)
            };
            (se.prototype = new z).push = function (e) {
                var t, i, n;
                if ("sei_rbsp" === e.nalUnitType && (t = te(e.escapedRBSP)).payloadType === ae && (i = ie(t))) if (e.dts < this.latestDts_) this.ignoreNextEqualDts_ = !0; else {
                    if (e.dts === this.latestDts_ && this.ignoreNextEqualDts_) return this.numSameDts_--, void(this.numSameDts_ || (this.ignoreNextEqualDts_ = !1));
                    n = ne(e.pts, i), this.captionPackets_ = this.captionPackets_.concat(n), this.latestDts_ !== e.dts && (this.numSameDts_ = 0), this.numSameDts_++, this.latestDts_ = e.dts
                }
            }, se.prototype.flush = function () {
                this.captionPackets_.length ? (this.captionPackets_.forEach(function (e, t) {
                    e.presortIndex = t
                }), this.captionPackets_.sort(function (e, t) {
                    return e.pts === t.pts ? e.presortIndex - t.presortIndex : e.pts - t.pts
                }), this.captionPackets_.forEach(function (e) {
                    e.type < 2 && this.dispatchCea608Packet(e)
                }, this), this.captionPackets_.length = 0, this.ccStreams_.forEach(function (e) {
                    e.flush()
                }, this)) : this.ccStreams_.forEach(function (e) {
                    e.flush()
                }, this)
            }, se.prototype.reset = function () {
                this.latestDts_ = null, this.ignoreNextEqualDts_ = !1, this.numSameDts_ = 0, this.activeCea608Channel_ = [null, null], this.ccStreams_.forEach(function (e) {
                    e.reset()
                })
            }, se.prototype.dispatchCea608Packet = function (e) {
                this.setsChannel1Active(e) ? this.activeCea608Channel_[e.type] = 0 : this.setsChannel2Active(e) && (this.activeCea608Channel_[e.type] = 1), null !== this.activeCea608Channel_[e.type] && this.ccStreams_[(e.type << 1) + this.activeCea608Channel_[e.type]].push(e)
            }, se.prototype.setsChannel1Active = function (e) {
                return 4096 == (30720 & e.ccData)
            }, se.prototype.setsChannel2Active = function (e) {
                return 6144 == (30720 & e.ccData)
            };
            var oe = {
                    42: 225,
                    92: 233,
                    94: 237,
                    95: 243,
                    96: 250,
                    123: 231,
                    124: 247,
                    125: 209,
                    126: 241,
                    127: 9608,
                    304: 174,
                    305: 176,
                    306: 189,
                    307: 191,
                    308: 8482,
                    309: 162,
                    310: 163,
                    311: 9834,
                    312: 224,
                    313: 160,
                    314: 232,
                    315: 226,
                    316: 234,
                    317: 238,
                    318: 244,
                    319: 251,
                    544: 193,
                    545: 201,
                    546: 211,
                    547: 218,
                    548: 220,
                    549: 252,
                    550: 8216,
                    551: 161,
                    552: 42,
                    553: 39,
                    554: 8212,
                    555: 169,
                    556: 8480,
                    557: 8226,
                    558: 8220,
                    559: 8221,
                    560: 192,
                    561: 194,
                    562: 199,
                    563: 200,
                    564: 202,
                    565: 203,
                    566: 235,
                    567: 206,
                    568: 207,
                    569: 239,
                    570: 212,
                    571: 217,
                    572: 249,
                    573: 219,
                    574: 171,
                    575: 187,
                    800: 195,
                    801: 227,
                    802: 205,
                    803: 204,
                    804: 236,
                    805: 210,
                    806: 242,
                    807: 213,
                    808: 245,
                    809: 123,
                    810: 125,
                    811: 92,
                    812: 94,
                    813: 95,
                    814: 124,
                    815: 126,
                    816: 196,
                    817: 228,
                    818: 214,
                    819: 246,
                    820: 223,
                    821: 165,
                    822: 164,
                    823: 9474,
                    824: 197,
                    825: 229,
                    826: 216,
                    827: 248,
                    828: 9484,
                    829: 9488,
                    830: 9492,
                    831: 9496
                }, ue = function (e) {
                    return null === e ? "" : (e = oe[e] || e, String.fromCharCode(e))
                }, le = [4352, 4384, 4608, 4640, 5376, 5408, 5632, 5664, 5888, 5920, 4096, 4864, 4896, 5120, 5152],
                de = function () {
                    for (var e = [], t = 15; t--;) e.push("");
                    return e
                }, ce = function e(t, i) {
                    e.prototype.init.call(this), this.field_ = t || 0, this.dataChannel_ = i || 0, this.name_ = "CC" + (1 + (this.field_ << 1 | this.dataChannel_)), this.setConstants(), this.reset(), this.push = function (e) {
                        var t, i, n, r, a;
                        if ((t = 32639 & e.ccData) !== this.lastControlCode_) {
                            if (4096 == (61440 & t) ? this.lastControlCode_ = t : t !== this.PADDING_ && (this.lastControlCode_ = null), n = t >>> 8, r = 255 & t, t !== this.PADDING_) if (t === this.RESUME_CAPTION_LOADING_) this.mode_ = "popOn"; else if (t === this.END_OF_CAPTION_) this.mode_ = "popOn", this.clearFormatting(e.pts), this.flushDisplayed(e.pts), i = this.displayed_, this.displayed_ = this.nonDisplayed_, this.nonDisplayed_ = i, this.startPts_ = e.pts; else if (t === this.ROLL_UP_2_ROWS_) this.rollUpRows_ = 2, this.setRollUp(e.pts); else if (t === this.ROLL_UP_3_ROWS_) this.rollUpRows_ = 3, this.setRollUp(e.pts); else if (t === this.ROLL_UP_4_ROWS_) this.rollUpRows_ = 4, this.setRollUp(e.pts); else if (t === this.CARRIAGE_RETURN_) this.clearFormatting(e.pts), this.flushDisplayed(e.pts), this.shiftRowsUp_(), this.startPts_ = e.pts; else if (t === this.BACKSPACE_) "popOn" === this.mode_ ? this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1) : this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1); else if (t === this.ERASE_DISPLAYED_MEMORY_) this.flushDisplayed(e.pts), this.displayed_ = de(); else if (t === this.ERASE_NON_DISPLAYED_MEMORY_) this.nonDisplayed_ = de(); else if (t === this.RESUME_DIRECT_CAPTIONING_) "paintOn" !== this.mode_ && (this.flushDisplayed(e.pts), this.displayed_ = de()), this.mode_ = "paintOn", this.startPts_ = e.pts; else if (this.isSpecialCharacter(n, r)) a = ue((n = (3 & n) << 8) | r), this[this.mode_](e.pts, a), this.column_++; else if (this.isExtCharacter(n, r)) "popOn" === this.mode_ ? this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1) : this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1), a = ue((n = (3 & n) << 8) | r), this[this.mode_](e.pts, a), this.column_++; else if (this.isMidRowCode(n, r)) this.clearFormatting(e.pts), this[this.mode_](e.pts, " "), this.column_++, 14 == (14 & r) && this.addFormatting(e.pts, ["i"]), 1 == (1 & r) && this.addFormatting(e.pts, ["u"]); else if (this.isOffsetControlCode(n, r)) this.column_ += 3 & r; else if (this.isPAC(n, r)) {
                                var s = le.indexOf(7968 & t);
                                "rollUp" === this.mode_ && this.setRollUp(e.pts, s), s !== this.row_ && (this.clearFormatting(e.pts), this.row_ = s), 1 & r && -1 === this.formatting_.indexOf("u") && this.addFormatting(e.pts, ["u"]), 16 == (16 & t) && (this.column_ = 4 * ((14 & t) >> 1)), this.isColorPAC(r) && 14 == (14 & r) && this.addFormatting(e.pts, ["i"])
                            } else this.isNormalChar(n) && (0 === r && (r = null), a = ue(n), a += ue(r), this[this.mode_](e.pts, a), this.column_ += a.length)
                        } else this.lastControlCode_ = null
                    }
                };
            ce.prototype = new z, ce.prototype.flushDisplayed = function (e) {
                var t = this.displayed_.map(function (e) {
                    return e.trim()
                }).join("\n").replace(/^\n+|\n+$/g, "");
                t.length && this.trigger("data", {startPts: this.startPts_, endPts: e, text: t, stream: this.name_})
            }, ce.prototype.reset = function () {
                this.mode_ = "popOn", this.topRow_ = 0, this.startPts_ = 0, this.displayed_ = de(), this.nonDisplayed_ = de(), this.lastControlCode_ = null, this.column_ = 0, this.row_ = 14, this.rollUpRows_ = 2, this.formatting_ = []
            }, ce.prototype.setConstants = function () {
                0 === this.dataChannel_ ? (this.BASE_ = 16, this.EXT_ = 17, this.CONTROL_ = (20 | this.field_) << 8, this.OFFSET_ = 23) : 1 === this.dataChannel_ && (this.BASE_ = 24, this.EXT_ = 25, this.CONTROL_ = (28 | this.field_) << 8, this.OFFSET_ = 31), this.PADDING_ = 0, this.RESUME_CAPTION_LOADING_ = 32 | this.CONTROL_, this.END_OF_CAPTION_ = 47 | this.CONTROL_, this.ROLL_UP_2_ROWS_ = 37 | this.CONTROL_, this.ROLL_UP_3_ROWS_ = 38 | this.CONTROL_, this.ROLL_UP_4_ROWS_ = 39 | this.CONTROL_, this.CARRIAGE_RETURN_ = 45 | this.CONTROL_, this.RESUME_DIRECT_CAPTIONING_ = 41 | this.CONTROL_, this.BACKSPACE_ = 33 | this.CONTROL_, this.ERASE_DISPLAYED_MEMORY_ = 44 | this.CONTROL_, this.ERASE_NON_DISPLAYED_MEMORY_ = 46 | this.CONTROL_
            }, ce.prototype.isSpecialCharacter = function (e, t) {
                return e === this.EXT_ && t >= 48 && t <= 63
            }, ce.prototype.isExtCharacter = function (e, t) {
                return (e === this.EXT_ + 1 || e === this.EXT_ + 2) && t >= 32 && t <= 63
            }, ce.prototype.isMidRowCode = function (e, t) {
                return e === this.EXT_ && t >= 32 && t <= 47
            }, ce.prototype.isOffsetControlCode = function (e, t) {
                return e === this.OFFSET_ && t >= 33 && t <= 35
            }, ce.prototype.isPAC = function (e, t) {
                return e >= this.BASE_ && e < this.BASE_ + 8 && t >= 64 && t <= 127
            }, ce.prototype.isColorPAC = function (e) {
                return e >= 64 && e <= 79 || e >= 96 && e <= 127
            }, ce.prototype.isNormalChar = function (e) {
                return e >= 32 && e <= 127
            }, ce.prototype.setRollUp = function (e, t) {
                if ("rollUp" !== this.mode_ && (this.row_ = 14, this.mode_ = "rollUp", this.flushDisplayed(e), this.nonDisplayed_ = de(), this.displayed_ = de()), void 0 !== t && t !== this.row_) for (var i = 0; i < this.rollUpRows_; i++) this.displayed_[t - i] = this.displayed_[this.row_ - i], this.displayed_[this.row_ - i] = "";
                void 0 === t && (t = this.row_), this.topRow_ = t - this.rollUpRows_ + 1
            }, ce.prototype.addFormatting = function (e, t) {
                this.formatting_ = this.formatting_.concat(t);
                var i = t.reduce(function (e, t) {
                    return e + "<" + t + ">"
                }, "");
                this[this.mode_](e, i)
            }, ce.prototype.clearFormatting = function (e) {
                if (this.formatting_.length) {
                    var t = this.formatting_.reverse().reduce(function (e, t) {
                        return e + "</" + t + ">"
                    }, "");
                    this.formatting_ = [], this[this.mode_](e, t)
                }
            }, ce.prototype.popOn = function (e, t) {
                var i = this.nonDisplayed_[this.row_];
                i += t, this.nonDisplayed_[this.row_] = i
            }, ce.prototype.rollUp = function (e, t) {
                var i = this.displayed_[this.row_];
                i += t, this.displayed_[this.row_] = i
            }, ce.prototype.shiftRowsUp_ = function () {
                var e;
                for (e = 0; e < this.topRow_; e++) this.displayed_[e] = "";
                for (e = this.row_ + 1; e < 15; e++) this.displayed_[e] = "";
                for (e = this.topRow_; e < this.row_; e++) this.displayed_[e] = this.displayed_[e + 1];
                this.displayed_[this.row_] = ""
            }, ce.prototype.paintOn = function (e, t) {
                var i = this.displayed_[this.row_];
                i += t, this.displayed_[this.row_] = i
            };
            var he = {CaptionStream: se, Cea608Stream: ce},
                fe = {H264_STREAM_TYPE: 27, ADTS_STREAM_TYPE: 15, METADATA_STREAM_TYPE: 21}, pe = function (e, t) {
                    var i = 1;
                    for (e > t && (i = -1); Math.abs(t - e) > 4294967296;) e += 8589934592 * i;
                    return e
                }, me = function e(t) {
                    var i, n;
                    e.prototype.init.call(this), this.type_ = t, this.push = function (e) {
                        e.type === this.type_ && (void 0 === n && (n = e.dts), e.dts = pe(e.dts, n), e.pts = pe(e.pts, n), i = e.dts, this.trigger("data", e))
                    }, this.flush = function () {
                        n = i, this.trigger("done")
                    }, this.discontinuity = function () {
                        n = void 0, i = void 0
                    }
                };
            me.prototype = new z;
            var ge, ye = me, _e = function (e, t, i) {
                var n, r = "";
                for (n = t; n < i; n++) r += "%" + ("00" + e[n].toString(16)).slice(-2);
                return r
            }, ve = function (e, t, i) {
                return decodeURIComponent(_e(e, t, i))
            }, be = function (e) {
                return e[0] << 21 | e[1] << 14 | e[2] << 7 | e[3]
            }, Te = {
                TXXX: function (e) {
                    var t;
                    if (3 === e.data[0]) {
                        for (t = 1; t < e.data.length; t++) if (0 === e.data[t]) {
                            e.description = ve(e.data, 1, t), e.value = ve(e.data, t + 1, e.data.length).replace(/\0*$/, "");
                            break
                        }
                        e.data = e.value
                    }
                }, WXXX: function (e) {
                    var t;
                    if (3 === e.data[0]) for (t = 1; t < e.data.length; t++) if (0 === e.data[t]) {
                        e.description = ve(e.data, 1, t), e.url = ve(e.data, t + 1, e.data.length);
                        break
                    }
                }, PRIV: function (e) {
                    var t;
                    for (t = 0; t < e.data.length; t++) if (0 === e.data[t]) {
                        e.owner = (i = e.data, n = 0, r = t, unescape(_e(i, n, r)));
                        break
                    }
                    var i, n, r;
                    e.privateData = e.data.subarray(t + 1), e.data = e.privateData
                }
            };
            (ge = function (e) {
                var t, i = {debug: !(!e || !e.debug), descriptor: e && e.descriptor}, n = 0, r = [], a = 0;
                if (ge.prototype.init.call(this), this.dispatchType = fe.METADATA_STREAM_TYPE.toString(16), i.descriptor) for (t = 0; t < i.descriptor.length; t++) this.dispatchType += ("00" + i.descriptor[t].toString(16)).slice(-2);
                this.push = function (e) {
                    var t, s, o, u, l;
                    if ("timed-metadata" === e.type) if (e.dataAlignmentIndicator && (a = 0, r.length = 0), 0 === r.length && (e.data.length < 10 || e.data[0] !== "I".charCodeAt(0) || e.data[1] !== "D".charCodeAt(0) || e.data[2] !== "3".charCodeAt(0))) i.debug && console.log("Skipping unrecognized metadata packet"); else if (r.push(e), a += e.data.byteLength, 1 === r.length && (n = be(e.data.subarray(6, 10)), n += 10), !(a < n)) {
                        for (t = {
                            data: new Uint8Array(n),
                            frames: [],
                            pts: r[0].pts,
                            dts: r[0].dts
                        }, l = 0; l < n;) t.data.set(r[0].data.subarray(0, n - l), l), l += r[0].data.byteLength, a -= r[0].data.byteLength, r.shift();
                        s = 10, 64 & t.data[5] && (s += 4, s += be(t.data.subarray(10, 14)), n -= be(t.data.subarray(16, 20)));
                        do {
                            if ((o = be(t.data.subarray(s + 4, s + 8))) < 1) return console.log("Malformed ID3 frame encountered. Skipping metadata parsing.");
                            if ((u = {
                                id: String.fromCharCode(t.data[s], t.data[s + 1], t.data[s + 2], t.data[s + 3]),
                                data: t.data.subarray(s + 10, s + o + 10)
                            }).key = u.id, Te[u.id] && (Te[u.id](u), "com.apple.streaming.transportStreamTimestamp" === u.owner)) {
                                var d = u.data, c = (1 & d[3]) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;
                                c *= 4, c += 3 & d[7], u.timeStamp = c, void 0 === t.pts && void 0 === t.dts && (t.pts = u.timeStamp, t.dts = u.timeStamp), this.trigger("timestamp", u)
                            }
                            t.frames.push(u), s += 10, s += o
                        } while (s < n);
                        this.trigger("data", t)
                    }
                }
            }).prototype = new z;
            var Se, ke, we, Ee = ge, Ce = ye;
            (Se = function () {
                var e = new Uint8Array(188), t = 0;
                Se.prototype.init.call(this), this.push = function (i) {
                    var n, r = 0, a = 188;
                    for (t ? ((n = new Uint8Array(i.byteLength + t)).set(e.subarray(0, t)), n.set(i, t), t = 0) : n = i; a < n.byteLength;) 71 !== n[r] || 71 !== n[a] ? (r++, a++) : (this.trigger("data", n.subarray(r, a)), r += 188, a += 188);
                    r < n.byteLength && (e.set(n.subarray(r), 0), t = n.byteLength - r)
                }, this.flush = function () {
                    188 === t && 71 === e[0] && (this.trigger("data", e), t = 0), this.trigger("done")
                }
            }).prototype = new z, (ke = function () {
                var e, t, i, n;
                ke.prototype.init.call(this), n = this, this.packetsWaitingForPmt = [], this.programMapTable = void 0, e = function (e, n) {
                    var r = 0;
                    n.payloadUnitStartIndicator && (r += e[r] + 1), "pat" === n.type ? t(e.subarray(r), n) : i(e.subarray(r), n)
                }, t = function (e, t) {
                    t.section_number = e[7], t.last_section_number = e[8], n.pmtPid = (31 & e[10]) << 8 | e[11], t.pmtPid = n.pmtPid
                }, i = function (e, t) {
                    var i, r;
                    if (1 & e[5]) {
                        for (n.programMapTable = {
                            video: null,
                            audio: null,
                            "timed-metadata": {}
                        }, i = 3 + ((15 & e[1]) << 8 | e[2]) - 4, r = 12 + ((15 & e[10]) << 8 | e[11]); r < i;) {
                            var a = e[r], s = (31 & e[r + 1]) << 8 | e[r + 2];
                            a === fe.H264_STREAM_TYPE && null === n.programMapTable.video ? n.programMapTable.video = s : a === fe.ADTS_STREAM_TYPE && null === n.programMapTable.audio ? n.programMapTable.audio = s : a === fe.METADATA_STREAM_TYPE && (n.programMapTable["timed-metadata"][s] = a), r += 5 + ((15 & e[r + 3]) << 8 | e[r + 4])
                        }
                        t.programMapTable = n.programMapTable
                    }
                }, this.push = function (t) {
                    var i = {}, n = 4;
                    if (i.payloadUnitStartIndicator = !!(64 & t[1]), i.pid = 31 & t[1], i.pid <<= 8, i.pid |= t[2], (48 & t[3]) >>> 4 > 1 && (n += t[n] + 1), 0 === i.pid) i.type = "pat", e(t.subarray(n), i), this.trigger("data", i); else if (i.pid === this.pmtPid) for (i.type = "pmt", e(t.subarray(n), i), this.trigger("data", i); this.packetsWaitingForPmt.length;) this.processPes_.apply(this, this.packetsWaitingForPmt.shift()); else void 0 === this.programMapTable ? this.packetsWaitingForPmt.push([t, n, i]) : this.processPes_(t, n, i)
                }, this.processPes_ = function (e, t, i) {
                    i.pid === this.programMapTable.video ? i.streamType = fe.H264_STREAM_TYPE : i.pid === this.programMapTable.audio ? i.streamType = fe.ADTS_STREAM_TYPE : i.streamType = this.programMapTable["timed-metadata"][i.pid], i.type = "pes", i.data = e.subarray(t), this.trigger("data", i)
                }
            }).prototype = new z, ke.STREAM_TYPES = {h264: 27, adts: 15}, (we = function () {
                var e = this, t = {data: [], size: 0}, i = {data: [], size: 0}, n = {data: [], size: 0},
                    r = function (t, i, n) {
                        var r, a = new Uint8Array(t.size), s = {type: i}, o = 0, u = 0, l = !1;
                        if (t.data.length && !(t.size < 9)) {
                            for (s.trackId = t.data[0].pid, o = 0; o < t.data.length; o++) r = t.data[o], a.set(r.data, u), u += r.data.byteLength;
                            !function (e, t) {
                                var i;
                                t.packetLength = 6 + (e[4] << 8 | e[5]), t.dataAlignmentIndicator = 0 != (4 & e[6]), 192 & (i = e[7]) && (t.pts = (14 & e[9]) << 27 | (255 & e[10]) << 20 | (254 & e[11]) << 12 | (255 & e[12]) << 5 | (254 & e[13]) >>> 3, t.pts *= 4, t.pts += (6 & e[13]) >>> 1, t.dts = t.pts, 64 & i && (t.dts = (14 & e[14]) << 27 | (255 & e[15]) << 20 | (254 & e[16]) << 12 | (255 & e[17]) << 5 | (254 & e[18]) >>> 3, t.dts *= 4, t.dts += (6 & e[18]) >>> 1)), t.data = e.subarray(9 + e[8])
                            }(a, s), l = "video" === i || s.packetLength <= t.size, (n || l) && (t.size = 0, t.data.length = 0), l && e.trigger("data", s)
                        }
                    };
                we.prototype.init.call(this), this.push = function (a) {
                    ({
                        pat: function () {
                        }, pes: function () {
                            var e, s;
                            switch (a.streamType) {
                                case fe.H264_STREAM_TYPE:
                                case fe.H264_STREAM_TYPE:
                                    e = t, s = "video";
                                    break;
                                case fe.ADTS_STREAM_TYPE:
                                    e = i, s = "audio";
                                    break;
                                case fe.METADATA_STREAM_TYPE:
                                    e = n, s = "timed-metadata";
                                    break;
                                default:
                                    return
                            }
                            a.payloadUnitStartIndicator && r(e, s, !0), e.data.push(a), e.size += a.data.byteLength
                        }, pmt: function () {
                            var t = {type: "metadata", tracks: []}, i = a.programMapTable;
                            null !== i.video && t.tracks.push({
                                timelineStartInfo: {baseMediaDecodeTime: 0},
                                id: +i.video,
                                codec: "avc",
                                type: "video"
                            }), null !== i.audio && t.tracks.push({
                                timelineStartInfo: {baseMediaDecodeTime: 0},
                                id: +i.audio,
                                codec: "adts",
                                type: "audio"
                            }), e.trigger("data", t)
                        }
                    })[a.type]()
                }, this.flush = function () {
                    r(t, "video"), r(i, "audio"), r(n, "timed-metadata"), this.trigger("done")
                }
            }).prototype = new z;
            var Ae = {
                PAT_PID: 0,
                MP2T_PACKET_LENGTH: 188,
                TransportPacketStream: Se,
                TransportParseStream: ke,
                ElementaryStream: we,
                TimestampRolloverStream: Ce,
                CaptionStream: he.CaptionStream,
                Cea608Stream: he.Cea608Stream,
                MetadataStream: Ee
            };
            for (var Le in fe) fe.hasOwnProperty(Le) && (Ae[Le] = fe[Le]);
            var Oe, Ie = Ae, Pe = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
            (Oe = function () {
                var e;
                Oe.prototype.init.call(this), this.push = function (t) {
                    var i, n, r, a, s, o, u = 0, l = 0;
                    if ("audio" === t.type) for (e ? (a = e, (e = new Uint8Array(a.byteLength + t.data.byteLength)).set(a), e.set(t.data, a.byteLength)) : e = t.data; u + 5 < e.length;) if (255 === e[u] && 240 == (246 & e[u + 1])) {
                        if (n = 2 * (1 & ~e[u + 1]), i = (3 & e[u + 3]) << 11 | e[u + 4] << 3 | (224 & e[u + 5]) >> 5, o = 9e4 * (s = 1024 * (1 + (3 & e[u + 6]))) / Pe[(60 & e[u + 2]) >>> 2], r = u + i, e.byteLength < r) return;
                        if (this.trigger("data", {
                            pts: t.pts + l * o,
                            dts: t.dts + l * o,
                            sampleCount: s,
                            audioobjecttype: 1 + (e[u + 2] >>> 6 & 3),
                            channelcount: (1 & e[u + 2]) << 2 | (192 & e[u + 3]) >>> 6,
                            samplerate: Pe[(60 & e[u + 2]) >>> 2],
                            samplingfrequencyindex: (60 & e[u + 2]) >>> 2,
                            samplesize: 16,
                            data: e.subarray(u + 7 + n, r)
                        }), e.byteLength === r) return void(e = void 0);
                        l++, e = e.subarray(r)
                    } else u++
                }, this.flush = function () {
                    this.trigger("done")
                }
            }).prototype = new z;
            var Re, xe, De, Ue = Oe, Me = function (e) {
                var t = e.byteLength, i = 0, n = 0;
                this.length = function () {
                    return 8 * t
                }, this.bitsAvailable = function () {
                    return 8 * t + n
                }, this.loadWord = function () {
                    var r = e.byteLength - t, a = new Uint8Array(4), s = Math.min(4, t);
                    if (0 === s) throw new Error("no bytes available");
                    a.set(e.subarray(r, r + s)), i = new DataView(a.buffer).getUint32(0), n = 8 * s, t -= s
                }, this.skipBits = function (e) {
                    var r;
                    n > e ? (i <<= e, n -= e) : (e -= n, e -= 8 * (r = Math.floor(e / 8)), t -= r, this.loadWord(), i <<= e, n -= e)
                }, this.readBits = function (e) {
                    var r = Math.min(n, e), a = i >>> 32 - r;
                    return (n -= r) > 0 ? i <<= r : t > 0 && this.loadWord(), (r = e - r) > 0 ? a << r | this.readBits(r) : a
                }, this.skipLeadingZeros = function () {
                    var e;
                    for (e = 0; e < n; ++e) if (0 != (i & 2147483648 >>> e)) return i <<= e, n -= e, e;
                    return this.loadWord(), e + this.skipLeadingZeros()
                }, this.skipUnsignedExpGolomb = function () {
                    this.skipBits(1 + this.skipLeadingZeros())
                }, this.skipExpGolomb = function () {
                    this.skipBits(1 + this.skipLeadingZeros())
                }, this.readUnsignedExpGolomb = function () {
                    var e = this.skipLeadingZeros();
                    return this.readBits(e + 1) - 1
                }, this.readExpGolomb = function () {
                    var e = this.readUnsignedExpGolomb();
                    return 1 & e ? 1 + e >>> 1 : -1 * (e >>> 1)
                }, this.readBoolean = function () {
                    return 1 === this.readBits(1)
                }, this.readUnsignedByte = function () {
                    return this.readBits(8)
                }, this.loadWord()
            };
            (xe = function () {
                var e, t, i = 0;
                xe.prototype.init.call(this), this.push = function (n) {
                    var r;
                    for (t ? ((r = new Uint8Array(t.byteLength + n.data.byteLength)).set(t), r.set(n.data, t.byteLength), t = r) : t = n.data; i < t.byteLength - 3; i++) if (1 === t[i + 2]) {
                        e = i + 5;
                        break
                    }
                    for (; e < t.byteLength;) switch (t[e]) {
                        case 0:
                            if (0 !== t[e - 1]) {
                                e += 2;
                                break
                            }
                            if (0 !== t[e - 2]) {
                                e++;
                                break
                            }
                            i + 3 !== e - 2 && this.trigger("data", t.subarray(i + 3, e - 2));
                            do {
                                e++
                            } while (1 !== t[e] && e < t.length);
                            i = e - 2, e += 3;
                            break;
                        case 1:
                            if (0 !== t[e - 1] || 0 !== t[e - 2]) {
                                e += 3;
                                break
                            }
                            this.trigger("data", t.subarray(i + 3, e - 2)), i = e - 2, e += 3;
                            break;
                        default:
                            e += 3
                    }
                    t = t.subarray(i), e -= i, i = 0
                }, this.flush = function () {
                    t && t.byteLength > 3 && this.trigger("data", t.subarray(i + 3)), t = null, i = 0, this.trigger("done")
                }
            }).prototype = new z, De = {
                100: !0,
                110: !0,
                122: !0,
                244: !0,
                44: !0,
                83: !0,
                86: !0,
                118: !0,
                128: !0,
                138: !0,
                139: !0,
                134: !0
            }, (Re = function () {
                var e, t, i, n, r, a, s, o = new xe;
                Re.prototype.init.call(this), e = this, this.push = function (e) {
                    "video" === e.type && (t = e.trackId, i = e.pts, n = e.dts, o.push(e))
                }, o.on("data", function (s) {
                    var o = {trackId: t, pts: i, dts: n, data: s};
                    switch (31 & s[0]) {
                        case 5:
                            o.nalUnitType = "slice_layer_without_partitioning_rbsp_idr";
                            break;
                        case 6:
                            o.nalUnitType = "sei_rbsp", o.escapedRBSP = r(s.subarray(1));
                            break;
                        case 7:
                            o.nalUnitType = "seq_parameter_set_rbsp", o.escapedRBSP = r(s.subarray(1)), o.config = a(o.escapedRBSP);
                            break;
                        case 8:
                            o.nalUnitType = "pic_parameter_set_rbsp";
                            break;
                        case 9:
                            o.nalUnitType = "access_unit_delimiter_rbsp"
                    }
                    e.trigger("data", o)
                }), o.on("done", function () {
                    e.trigger("done")
                }), this.flush = function () {
                    o.flush()
                }, s = function (e, t) {
                    var i, n = 8, r = 8;
                    for (i = 0; i < e; i++) 0 !== r && (r = (n + t.readExpGolomb() + 256) % 256), n = 0 === r ? n : r
                }, r = function (e) {
                    for (var t, i, n = e.byteLength, r = [], a = 1; a < n - 2;) 0 === e[a] && 0 === e[a + 1] && 3 === e[a + 2] ? (r.push(a + 2), a += 2) : a++;
                    if (0 === r.length) return e;
                    t = n - r.length, i = new Uint8Array(t);
                    var s = 0;
                    for (a = 0; a < t; s++, a++) s === r[0] && (s++, r.shift()), i[a] = e[s];
                    return i
                }, a = function (e) {
                    var t, i, n, r, a, o, u, l, d, c, h, f, p, m = 0, g = 0, y = 0, _ = 0, v = 1;
                    if (i = (t = new Me(e)).readUnsignedByte(), r = t.readUnsignedByte(), n = t.readUnsignedByte(), t.skipUnsignedExpGolomb(), De[i] && (3 === (a = t.readUnsignedExpGolomb()) && t.skipBits(1), t.skipUnsignedExpGolomb(), t.skipUnsignedExpGolomb(), t.skipBits(1), t.readBoolean())) for (h = 3 !== a ? 8 : 12, p = 0; p < h; p++) t.readBoolean() && s(p < 6 ? 16 : 64, t);
                    if (t.skipUnsignedExpGolomb(), 0 === (o = t.readUnsignedExpGolomb())) t.readUnsignedExpGolomb(); else if (1 === o) for (t.skipBits(1), t.skipExpGolomb(), t.skipExpGolomb(), u = t.readUnsignedExpGolomb(), p = 0; p < u; p++) t.skipExpGolomb();
                    if (t.skipUnsignedExpGolomb(), t.skipBits(1), l = t.readUnsignedExpGolomb(), d = t.readUnsignedExpGolomb(), 0 === (c = t.readBits(1)) && t.skipBits(1), t.skipBits(1), t.readBoolean() && (m = t.readUnsignedExpGolomb(), g = t.readUnsignedExpGolomb(), y = t.readUnsignedExpGolomb(), _ = t.readUnsignedExpGolomb()), t.readBoolean() && t.readBoolean()) {
                        switch (t.readUnsignedByte()) {
                            case 1:
                                f = [1, 1];
                                break;
                            case 2:
                                f = [12, 11];
                                break;
                            case 3:
                                f = [10, 11];
                                break;
                            case 4:
                                f = [16, 11];
                                break;
                            case 5:
                                f = [40, 33];
                                break;
                            case 6:
                                f = [24, 11];
                                break;
                            case 7:
                                f = [20, 11];
                                break;
                            case 8:
                                f = [32, 11];
                                break;
                            case 9:
                                f = [80, 33];
                                break;
                            case 10:
                                f = [18, 11];
                                break;
                            case 11:
                                f = [15, 11];
                                break;
                            case 12:
                                f = [64, 33];
                                break;
                            case 13:
                                f = [160, 99];
                                break;
                            case 14:
                                f = [4, 3];
                                break;
                            case 15:
                                f = [3, 2];
                                break;
                            case 16:
                                f = [2, 1];
                                break;
                            case 255:
                                f = [t.readUnsignedByte() << 8 | t.readUnsignedByte(), t.readUnsignedByte() << 8 | t.readUnsignedByte()]
                        }
                        f && (v = f[0] / f[1])
                    }
                    return {
                        profileIdc: i,
                        levelIdc: n,
                        profileCompatibility: r,
                        width: Math.ceil((16 * (l + 1) - 2 * m - 2 * g) * v),
                        height: (2 - c) * (d + 1) * 16 - 2 * y - 2 * _
                    }
                }
            }).prototype = new z;
            var Be, je = {H264Stream: Re, NalByteStream: xe};
            (Be = function () {
                var e = new Uint8Array, t = 0;
                Be.prototype.init.call(this), this.setTimestamp = function (e) {
                    t = e
                }, this.parseId3TagSize = function (e, t) {
                    var i = e[t + 6] << 21 | e[t + 7] << 14 | e[t + 8] << 7 | e[t + 9];
                    return (16 & e[t + 5]) >> 4 ? i + 20 : i + 10
                }, this.parseAdtsSize = function (e, t) {
                    var i = (224 & e[t + 5]) >> 5, n = e[t + 4] << 3;
                    return 6144 & e[t + 3] | n | i
                }, this.push = function (i) {
                    var n, r, a, s, o = 0, u = 0;
                    for (e.length ? (s = e.length, (e = new Uint8Array(i.byteLength + s)).set(e.subarray(0, s)), e.set(i, s)) : e = i; e.length - u >= 3;) if (e[u] !== "I".charCodeAt(0) || e[u + 1] !== "D".charCodeAt(0) || e[u + 2] !== "3".charCodeAt(0)) if (!0 & e[u] && 240 == (240 & e[u + 1])) {
                        if (e.length - u < 7) break;
                        if ((o = this.parseAdtsSize(e, u)) > e.length) break;
                        a = {type: "audio", data: e.subarray(u, u + o), pts: t, dts: t}, this.trigger("data", a), u += o
                    } else u++; else {
                        if (e.length - u < 10) break;
                        if ((o = this.parseId3TagSize(e, u)) > e.length) break;
                        r = {type: "timed-metadata", data: e.subarray(u, u + o)}, this.trigger("data", r), u += o
                    }
                    n = e.length - u, e = n > 0 ? e.subarray(u) : new Uint8Array
                }
            }).prototype = new z;
            var Ne, Fe, Ve, Ge, He, qe, ze, We, Xe, Ye, Ke, $e, Qe = Be, Je = [33, 16, 5, 32, 164, 27],
                Ze = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252], et = function (e) {
                    for (var t = []; e--;) t.push(0);
                    return t
                }, tt = {
                    96e3: [Je, [227, 64], et(154), [56]],
                    88200: [Je, [231], et(170), [56]],
                    64e3: [Je, [248, 192], et(240), [56]],
                    48e3: [Je, [255, 192], et(268), [55, 148, 128], et(54), [112]],
                    44100: [Je, [255, 192], et(268), [55, 163, 128], et(84), [112]],
                    32e3: [Je, [255, 192], et(268), [55, 234], et(226), [112]],
                    24e3: [Je, [255, 192], et(268), [55, 255, 128], et(268), [111, 112], et(126), [224]],
                    16e3: [Je, [255, 192], et(268), [55, 255, 128], et(268), [111, 255], et(269), [223, 108], et(195), [1, 192]],
                    12e3: [Ze, et(268), [3, 127, 248], et(268), [6, 255, 240], et(268), [13, 255, 224], et(268), [27, 253, 128], et(259), [56]],
                    11025: [Ze, et(268), [3, 127, 248], et(268), [6, 255, 240], et(268), [13, 255, 224], et(268), [27, 255, 192], et(268), [55, 175, 128], et(108), [112]],
                    8e3: [Ze, et(268), [3, 121, 16], et(47), [7]]
                }, it = (Ne = tt, Object.keys(Ne).reduce(function (e, t) {
                    return e[t] = new Uint8Array(Ne[t].reduce(function (e, t) {
                        return e.concat(t)
                    }, [])), e
                }, {})), nt = (Fe = function (e) {
                    return 9e4 * e
                }, Ve = function (e, t) {
                    return e * t
                }, Ge = function (e) {
                    return e / 9e4
                }, He = function (e, t) {
                    return e / t
                }, function (e, t) {
                    return Fe(He(e, t))
                }), rt = function (e, t) {
                    return Ve(Ge(e), t)
                }, at = je.H264Stream,
                st = ["audioobjecttype", "channelcount", "samplerate", "samplingfrequencyindex", "samplesize"],
                ot = ["width", "height", "profileIdc", "levelIdc", "profileCompatibility"];
            Ye = function (e) {
                return e[0] === "I".charCodeAt(0) && e[1] === "D".charCodeAt(0) && e[2] === "3".charCodeAt(0)
            }, Ke = function (e, t) {
                var i;
                if (e.length !== t.length) return !1;
                for (i = 0; i < e.length; i++) if (e[i] !== t[i]) return !1;
                return !0
            }, $e = function (e) {
                var t, i = 0;
                for (t = 0; t < e.length; t++) i += e[t].data.byteLength;
                return i
            }, (ze = function (e, t) {
                var i = [], n = 0, r = 0, a = 0, s = 1 / 0;
                t = t || {}, ze.prototype.init.call(this), this.push = function (t) {
                    ee(e, t), e && st.forEach(function (i) {
                        e[i] = t[i]
                    }), i.push(t)
                }, this.setEarliestDts = function (t) {
                    r = t - e.timelineStartInfo.baseMediaDecodeTime
                }, this.setVideoBaseMediaDecodeTime = function (e) {
                    s = e
                }, this.setAudioAppendStart = function (e) {
                    a = e
                }, this.flush = function () {
                    var r, a, s, o;
                    0 !== i.length ? (r = this.trimAdtsFramesByEarliestDts_(i), e.baseMediaDecodeTime = Z(e, t.keepOriginalTimestamps), this.prefixWithSilence_(e, r), e.samples = this.generateSampleTable_(r), s = V.mdat(this.concatenateFrameData_(r)), i = [], a = V.moof(n, [e]), o = new Uint8Array(a.byteLength + s.byteLength), n++, o.set(a), o.set(s, a.byteLength), J(e), this.trigger("data", {
                        track: e,
                        boxes: o
                    }), this.trigger("done", "AudioSegmentStream")) : this.trigger("done", "AudioSegmentStream")
                }, this.prefixWithSilence_ = function (e, t) {
                    var i, n, r, o = 0, u = 0, l = 0, d = 0;
                    if (t.length && (i = nt(e.baseMediaDecodeTime, e.samplerate), o = Math.ceil(9e4 / (e.samplerate / 1024)), a && s && (u = i - Math.max(a, s), d = (l = Math.floor(u / o)) * o), !(l < 1 || d > 45e3))) {
                        for ((n = it[e.samplerate]) || (n = t[0].data), r = 0; r < l; r++) t.splice(r, 0, {data: n});
                        e.baseMediaDecodeTime -= Math.floor(rt(d, e.samplerate))
                    }
                }, this.trimAdtsFramesByEarliestDts_ = function (t) {
                    return e.minSegmentDts >= r ? t : (e.minSegmentDts = 1 / 0, t.filter(function (t) {
                        return t.dts >= r && (e.minSegmentDts = Math.min(e.minSegmentDts, t.dts), e.minSegmentPts = e.minSegmentDts, !0)
                    }))
                }, this.generateSampleTable_ = function (e) {
                    var t, i, n = [];
                    for (t = 0; t < e.length; t++) i = e[t], n.push({size: i.data.byteLength, duration: 1024});
                    return n
                }, this.concatenateFrameData_ = function (e) {
                    var t, i, n = 0, r = new Uint8Array($e(e));
                    for (t = 0; t < e.length; t++) i = e[t], r.set(i.data, n), n += i.data.byteLength;
                    return r
                }
            }).prototype = new z, (qe = function (e, t) {
                var i, n, r = 0, a = [], s = [];
                t = t || {}, qe.prototype.init.call(this), delete e.minPTS, this.gopCache_ = [], this.push = function (t) {
                    ee(e, t), "seq_parameter_set_rbsp" !== t.nalUnitType || i || (i = t.config, e.sps = [t.data], ot.forEach(function (t) {
                        e[t] = i[t]
                    }, this)), "pic_parameter_set_rbsp" !== t.nalUnitType || n || (n = t.data, e.pps = [t.data]), a.push(t)
                }, this.flush = function () {
                    for (var i, n, o, u, l, d; a.length && "access_unit_delimiter_rbsp" !== a[0].nalUnitType;) a.shift();
                    if (0 === a.length) return this.resetStream_(), void this.trigger("done", "VideoSegmentStream");
                    if (i = X(a), (o = Y(i))[0][0].keyFrame || ((n = this.getGopForFusion_(a[0], e)) ? (o.unshift(n), o.byteLength += n.byteLength, o.nalCount += n.nalCount, o.pts = n.pts, o.dts = n.dts, o.duration += n.duration) : o = K(o)), s.length) {
                        var c;
                        if (!(c = t.alignGopsAtEnd ? this.alignGopsAtEnd_(o) : this.alignGopsAtStart_(o))) return this.gopCache_.unshift({
                            gop: o.pop(),
                            pps: e.pps,
                            sps: e.sps
                        }), this.gopCache_.length = Math.min(6, this.gopCache_.length), a = [], this.resetStream_(), void this.trigger("done", "VideoSegmentStream");
                        J(e), o = c
                    }
                    ee(e, o), e.samples = $(o), l = V.mdat(Q(o)), e.baseMediaDecodeTime = Z(e, t.keepOriginalTimestamps), this.trigger("processedGopsInfo", o.map(function (e) {
                        return {pts: e.pts, dts: e.dts, byteLength: e.byteLength}
                    })), this.gopCache_.unshift({
                        gop: o.pop(),
                        pps: e.pps,
                        sps: e.sps
                    }), this.gopCache_.length = Math.min(6, this.gopCache_.length), a = [], this.trigger("baseMediaDecodeTime", e.baseMediaDecodeTime), this.trigger("timelineStartInfo", e.timelineStartInfo), u = V.moof(r, [e]), d = new Uint8Array(u.byteLength + l.byteLength), r++, d.set(u), d.set(l, u.byteLength), this.trigger("data", {
                        track: e,
                        boxes: d
                    }), this.resetStream_(), this.trigger("done", "VideoSegmentStream")
                }, this.resetStream_ = function () {
                    J(e), i = void 0, n = void 0
                }, this.getGopForFusion_ = function (t) {
                    var i, n, r, a, s, o = 1 / 0;
                    for (s = 0; s < this.gopCache_.length; s++) r = (a = this.gopCache_[s]).gop, e.pps && Ke(e.pps[0], a.pps[0]) && e.sps && Ke(e.sps[0], a.sps[0]) && (r.dts < e.timelineStartInfo.dts || (i = t.dts - r.dts - r.duration) >= -1e4 && i <= 45e3 && (!n || o > i) && (n = a, o = i));
                    return n ? n.gop : null
                }, this.alignGopsAtStart_ = function (e) {
                    var t, i, n, r, a, o, u, l;
                    for (a = e.byteLength, o = e.nalCount, u = e.duration, t = i = 0; t < s.length && i < e.length && (n = s[t], r = e[i], n.pts !== r.pts);) r.pts > n.pts ? t++ : (i++, a -= r.byteLength, o -= r.nalCount, u -= r.duration);
                    return 0 === i ? e : i === e.length ? null : ((l = e.slice(i)).byteLength = a, l.duration = u, l.nalCount = o, l.pts = l[0].pts, l.dts = l[0].dts, l)
                }, this.alignGopsAtEnd_ = function (e) {
                    var t, i, n, r, a, o;
                    for (t = s.length - 1, i = e.length - 1, a = null, o = !1; t >= 0 && i >= 0;) {
                        if (n = s[t], r = e[i], n.pts === r.pts) {
                            o = !0;
                            break
                        }
                        n.pts > r.pts ? t-- : (t === s.length - 1 && (a = i), i--)
                    }
                    if (!o && null === a) return null;
                    var u;
                    if (0 === (u = o ? i : a)) return e;
                    var l = e.slice(u), d = l.reduce(function (e, t) {
                        return e.byteLength += t.byteLength, e.duration += t.duration, e.nalCount += t.nalCount, e
                    }, {byteLength: 0, duration: 0, nalCount: 0});
                    return l.byteLength = d.byteLength, l.duration = d.duration, l.nalCount = d.nalCount, l.pts = l[0].pts, l.dts = l[0].dts, l
                }, this.alignGopsWith = function (e) {
                    s = e
                }
            }).prototype = new z, (Xe = function (e, t) {
                this.numberOfTracks = 0, this.metadataStream = t, void 0 !== e.remux ? this.remuxTracks = !!e.remux : this.remuxTracks = !0, this.pendingTracks = [], this.videoTrack = null, this.pendingBoxes = [], this.pendingCaptions = [], this.pendingMetadata = [], this.pendingBytes = 0, this.emittedTracks = 0, Xe.prototype.init.call(this), this.push = function (e) {
                    return e.text ? this.pendingCaptions.push(e) : e.frames ? this.pendingMetadata.push(e) : (this.pendingTracks.push(e.track), this.pendingBoxes.push(e.boxes), this.pendingBytes += e.boxes.byteLength, "video" === e.track.type && (this.videoTrack = e.track), void("audio" === e.track.type && (this.audioTrack = e.track)))
                }
            }).prototype = new z, Xe.prototype.flush = function (e) {
                var t, i, n, r, a = 0, s = {captions: [], captionStreams: {}, metadata: [], info: {}}, o = 0;
                if (this.pendingTracks.length < this.numberOfTracks) {
                    if ("VideoSegmentStream" !== e && "AudioSegmentStream" !== e) return;
                    if (this.remuxTracks) return;
                    if (0 === this.pendingTracks.length) return this.emittedTracks++, void(this.emittedTracks >= this.numberOfTracks && (this.trigger("done"), this.emittedTracks = 0))
                }
                for (this.videoTrack ? (o = this.videoTrack.timelineStartInfo.pts, ot.forEach(function (e) {
                    s.info[e] = this.videoTrack[e]
                }, this)) : this.audioTrack && (o = this.audioTrack.timelineStartInfo.pts, st.forEach(function (e) {
                    s.info[e] = this.audioTrack[e]
                }, this)), 1 === this.pendingTracks.length ? s.type = this.pendingTracks[0].type : s.type = "combined", this.emittedTracks += this.pendingTracks.length, n = V.initSegment(this.pendingTracks), s.initSegment = new Uint8Array(n.byteLength), s.initSegment.set(n), s.data = new Uint8Array(this.pendingBytes), r = 0; r < this.pendingBoxes.length; r++) s.data.set(this.pendingBoxes[r], a), a += this.pendingBoxes[r].byteLength;
                for (r = 0; r < this.pendingCaptions.length; r++) (t = this.pendingCaptions[r]).startTime = t.startPts - o, t.startTime /= 9e4, t.endTime = t.endPts - o, t.endTime /= 9e4, s.captionStreams[t.stream] = !0, s.captions.push(t);
                for (r = 0; r < this.pendingMetadata.length; r++) (i = this.pendingMetadata[r]).cueTime = i.pts - o, i.cueTime /= 9e4, s.metadata.push(i);
                s.metadata.dispatchType = this.metadataStream.dispatchType, this.pendingTracks.length = 0, this.videoTrack = null, this.pendingBoxes.length = 0, this.pendingCaptions.length = 0, this.pendingBytes = 0, this.pendingMetadata.length = 0, this.trigger("data", s), this.emittedTracks >= this.numberOfTracks && (this.trigger("done"), this.emittedTracks = 0)
            }, (We = function (e) {
                var t, i, n = this, r = !0;
                We.prototype.init.call(this), e = e || {}, this.baseMediaDecodeTime = e.baseMediaDecodeTime || 0, this.transmuxPipeline_ = {}, this.setupAacPipeline = function () {
                    var t = {};
                    this.transmuxPipeline_ = t, t.type = "aac", t.metadataStream = new Ie.MetadataStream, t.aacStream = new Qe, t.audioTimestampRolloverStream = new Ie.TimestampRolloverStream("audio"), t.timedMetadataTimestampRolloverStream = new Ie.TimestampRolloverStream("timed-metadata"), t.adtsStream = new Ue, t.coalesceStream = new Xe(e, t.metadataStream), t.headOfPipeline = t.aacStream, t.aacStream.pipe(t.audioTimestampRolloverStream).pipe(t.adtsStream), t.aacStream.pipe(t.timedMetadataTimestampRolloverStream).pipe(t.metadataStream).pipe(t.coalesceStream), t.metadataStream.on("timestamp", function (e) {
                        t.aacStream.setTimestamp(e.timeStamp)
                    }), t.aacStream.on("data", function (r) {
                        "timed-metadata" !== r.type || t.audioSegmentStream || (i = i || {
                            timelineStartInfo: {baseMediaDecodeTime: n.baseMediaDecodeTime},
                            codec: "adts",
                            type: "audio"
                        }, t.coalesceStream.numberOfTracks++, t.audioSegmentStream = new ze(i, e), t.adtsStream.pipe(t.audioSegmentStream).pipe(t.coalesceStream))
                    }), t.coalesceStream.on("data", this.trigger.bind(this, "data")), t.coalesceStream.on("done", this.trigger.bind(this, "done"))
                }, this.setupTsPipeline = function () {
                    var r = {};
                    this.transmuxPipeline_ = r, r.type = "ts", r.metadataStream = new Ie.MetadataStream, r.packetStream = new Ie.TransportPacketStream, r.parseStream = new Ie.TransportParseStream, r.elementaryStream = new Ie.ElementaryStream, r.videoTimestampRolloverStream = new Ie.TimestampRolloverStream("video"), r.audioTimestampRolloverStream = new Ie.TimestampRolloverStream("audio"), r.timedMetadataTimestampRolloverStream = new Ie.TimestampRolloverStream("timed-metadata"), r.adtsStream = new Ue, r.h264Stream = new at, r.captionStream = new Ie.CaptionStream, r.coalesceStream = new Xe(e, r.metadataStream), r.headOfPipeline = r.packetStream, r.packetStream.pipe(r.parseStream).pipe(r.elementaryStream), r.elementaryStream.pipe(r.videoTimestampRolloverStream).pipe(r.h264Stream), r.elementaryStream.pipe(r.audioTimestampRolloverStream).pipe(r.adtsStream), r.elementaryStream.pipe(r.timedMetadataTimestampRolloverStream).pipe(r.metadataStream).pipe(r.coalesceStream), r.h264Stream.pipe(r.captionStream).pipe(r.coalesceStream), r.elementaryStream.on("data", function (a) {
                        var s;
                        if ("metadata" === a.type) {
                            for (s = a.tracks.length; s--;) t || "video" !== a.tracks[s].type ? i || "audio" !== a.tracks[s].type || ((i = a.tracks[s]).timelineStartInfo.baseMediaDecodeTime = n.baseMediaDecodeTime) : (t = a.tracks[s]).timelineStartInfo.baseMediaDecodeTime = n.baseMediaDecodeTime;
                            t && !r.videoSegmentStream && (r.coalesceStream.numberOfTracks++, r.videoSegmentStream = new qe(t, e), r.videoSegmentStream.on("timelineStartInfo", function (e) {
                                i && (i.timelineStartInfo = e, r.audioSegmentStream.setEarliestDts(e.dts))
                            }), r.videoSegmentStream.on("processedGopsInfo", n.trigger.bind(n, "gopInfo")), r.videoSegmentStream.on("baseMediaDecodeTime", function (e) {
                                i && r.audioSegmentStream.setVideoBaseMediaDecodeTime(e)
                            }), r.h264Stream.pipe(r.videoSegmentStream).pipe(r.coalesceStream)), i && !r.audioSegmentStream && (r.coalesceStream.numberOfTracks++, r.audioSegmentStream = new ze(i, e), r.adtsStream.pipe(r.audioSegmentStream).pipe(r.coalesceStream))
                        }
                    }), r.coalesceStream.on("data", this.trigger.bind(this, "data")), r.coalesceStream.on("done", this.trigger.bind(this, "done"))
                }, this.setBaseMediaDecodeTime = function (e) {
                    var n = this.transmuxPipeline_;
                    this.baseMediaDecodeTime = e, i && (i.timelineStartInfo.dts = void 0, i.timelineStartInfo.pts = void 0, J(i), i.timelineStartInfo.baseMediaDecodeTime = e, n.audioTimestampRolloverStream && n.audioTimestampRolloverStream.discontinuity()), t && (n.videoSegmentStream && (n.videoSegmentStream.gopCache_ = [], n.videoTimestampRolloverStream.discontinuity()), t.timelineStartInfo.dts = void 0, t.timelineStartInfo.pts = void 0, J(t), n.captionStream.reset(), t.timelineStartInfo.baseMediaDecodeTime = e), n.timedMetadataTimestampRolloverStream && n.timedMetadataTimestampRolloverStream.discontinuity()
                }, this.setAudioAppendStart = function (e) {
                    i && this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(e)
                }, this.alignGopsWith = function (e) {
                    t && this.transmuxPipeline_.videoSegmentStream && this.transmuxPipeline_.videoSegmentStream.alignGopsWith(e)
                }, this.push = function (e) {
                    if (r) {
                        var t = Ye(e);
                        t && "aac" !== this.transmuxPipeline_.type ? this.setupAacPipeline() : t || "ts" === this.transmuxPipeline_.type || this.setupTsPipeline(), r = !1
                    }
                    this.transmuxPipeline_.headOfPipeline.push(e)
                }, this.flush = function () {
                    r = !0, this.transmuxPipeline_.headOfPipeline.flush()
                }, this.resetCaptions = function () {
                    this.transmuxPipeline_.captionStream && this.transmuxPipeline_.captionStream.reset()
                }
            }).prototype = new z;
            var ut, lt, dt = {
                Transmuxer: We,
                VideoSegmentStream: qe,
                AudioSegmentStream: ze,
                AUDIO_PROPERTIES: st,
                VIDEO_PROPERTIES: ot
            }, ct = H.parseType, ht = function (e) {
                return new Date(1e3 * e - 20828448e5)
            }, ft = function (e) {
                return {
                    isLeading: (12 & e[0]) >>> 2,
                    dependsOn: 3 & e[0],
                    isDependedOn: (192 & e[1]) >>> 6,
                    hasRedundancy: (48 & e[1]) >>> 4,
                    paddingValue: (14 & e[1]) >>> 1,
                    isNonSyncSample: 1 & e[1],
                    degradationPriority: e[2] << 8 | e[3]
                }
            }, pt = {
                avc1: function (e) {
                    var t = new DataView(e.buffer, e.byteOffset, e.byteLength);
                    return {
                        dataReferenceIndex: t.getUint16(6),
                        width: t.getUint16(24),
                        height: t.getUint16(26),
                        horizresolution: t.getUint16(28) + t.getUint16(30) / 16,
                        vertresolution: t.getUint16(32) + t.getUint16(34) / 16,
                        frameCount: t.getUint16(40),
                        depth: t.getUint16(74),
                        config: ut(e.subarray(78, e.byteLength))
                    }
                }, avcC: function (e) {
                    var t, i, n, r, a = new DataView(e.buffer, e.byteOffset, e.byteLength), s = {
                        configurationVersion: e[0],
                        avcProfileIndication: e[1],
                        profileCompatibility: e[2],
                        avcLevelIndication: e[3],
                        lengthSizeMinusOne: 3 & e[4],
                        sps: [],
                        pps: []
                    }, o = 31 & e[5];
                    for (n = 6, r = 0; r < o; r++) i = a.getUint16(n), n += 2, s.sps.push(new Uint8Array(e.subarray(n, n + i))), n += i;
                    for (t = e[n], n++, r = 0; r < t; r++) i = a.getUint16(n), n += 2, s.pps.push(new Uint8Array(e.subarray(n, n + i))), n += i;
                    return s
                }, btrt: function (e) {
                    var t = new DataView(e.buffer, e.byteOffset, e.byteLength);
                    return {bufferSizeDB: t.getUint32(0), maxBitrate: t.getUint32(4), avgBitrate: t.getUint32(8)}
                }, esds: function (e) {
                    return {
                        version: e[0],
                        flags: new Uint8Array(e.subarray(1, 4)),
                        esId: e[6] << 8 | e[7],
                        streamPriority: 31 & e[8],
                        decoderConfig: {
                            objectProfileIndication: e[11],
                            streamType: e[12] >>> 2 & 63,
                            bufferSize: e[13] << 16 | e[14] << 8 | e[15],
                            maxBitrate: e[16] << 24 | e[17] << 16 | e[18] << 8 | e[19],
                            avgBitrate: e[20] << 24 | e[21] << 16 | e[22] << 8 | e[23],
                            decoderConfigDescriptor: {
                                tag: e[24],
                                length: e[25],
                                audioObjectType: e[26] >>> 3 & 31,
                                samplingFrequencyIndex: (7 & e[26]) << 1 | e[27] >>> 7 & 1,
                                channelConfiguration: e[27] >>> 3 & 15
                            }
                        }
                    }
                }, ftyp: function (e) {
                    for (var t = new DataView(e.buffer, e.byteOffset, e.byteLength), i = {
                        majorBrand: ct(e.subarray(0, 4)),
                        minorVersion: t.getUint32(4),
                        compatibleBrands: []
                    }, n = 8; n < e.byteLength;) i.compatibleBrands.push(ct(e.subarray(n, n + 4))), n += 4;
                    return i
                }, dinf: function (e) {
                    return {boxes: ut(e)}
                }, dref: function (e) {
                    return {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), dataReferences: ut(e.subarray(8))}
                }, hdlr: function (e) {
                    var t = {
                        version: new DataView(e.buffer, e.byteOffset, e.byteLength).getUint8(0),
                        flags: new Uint8Array(e.subarray(1, 4)),
                        handlerType: ct(e.subarray(8, 12)),
                        name: ""
                    }, i = 8;
                    for (i = 24; i < e.byteLength; i++) {
                        if (0 === e[i]) {
                            i++;
                            break
                        }
                        t.name += String.fromCharCode(e[i])
                    }
                    return t.name = decodeURIComponent(escape(t.name)), t
                }, mdat: function (e) {
                    return {
                        byteLength: e.byteLength, nals: function (e) {
                            var t, i, n = new DataView(e.buffer, e.byteOffset, e.byteLength), r = [];
                            for (t = 0; t + 4 < e.length; t += i) if (i = n.getUint32(t), t += 4, i <= 0) r.push("<span style='color:red;'>MALFORMED DATA</span>"); else switch (31 & e[t]) {
                                case 1:
                                    r.push("slice_layer_without_partitioning_rbsp");
                                    break;
                                case 5:
                                    r.push("slice_layer_without_partitioning_rbsp_idr");
                                    break;
                                case 6:
                                    r.push("sei_rbsp");
                                    break;
                                case 7:
                                    r.push("seq_parameter_set_rbsp");
                                    break;
                                case 8:
                                    r.push("pic_parameter_set_rbsp");
                                    break;
                                case 9:
                                    r.push("access_unit_delimiter_rbsp");
                                    break;
                                default:
                                    r.push("UNKNOWN NAL - " + e[t] & 31)
                            }
                            return r
                        }(e)
                    }
                }, mdhd: function (e) {
                    var t, i = new DataView(e.buffer, e.byteOffset, e.byteLength), n = 4,
                        r = {version: i.getUint8(0), flags: new Uint8Array(e.subarray(1, 4)), language: ""};
                    return 1 === r.version ? (n += 4, r.creationTime = ht(i.getUint32(n)), n += 8, r.modificationTime = ht(i.getUint32(n)), n += 4, r.timescale = i.getUint32(n), n += 8, r.duration = i.getUint32(n)) : (r.creationTime = ht(i.getUint32(n)), n += 4, r.modificationTime = ht(i.getUint32(n)), n += 4, r.timescale = i.getUint32(n), n += 4, r.duration = i.getUint32(n)), n += 4, t = i.getUint16(n), r.language += String.fromCharCode(96 + (t >> 10)), r.language += String.fromCharCode(96 + ((992 & t) >> 5)), r.language += String.fromCharCode(96 + (31 & t)), r
                }, mdia: function (e) {
                    return {boxes: ut(e)}
                }, mfhd: function (e) {
                    return {
                        version: e[0],
                        flags: new Uint8Array(e.subarray(1, 4)),
                        sequenceNumber: e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7]
                    }
                }, minf: function (e) {
                    return {boxes: ut(e)}
                }, mp4a: function (e) {
                    var t = new DataView(e.buffer, e.byteOffset, e.byteLength), i = {
                        dataReferenceIndex: t.getUint16(6),
                        channelcount: t.getUint16(16),
                        samplesize: t.getUint16(18),
                        samplerate: t.getUint16(24) + t.getUint16(26) / 65536
                    };
                    return e.byteLength > 28 && (i.streamDescriptor = ut(e.subarray(28))[0]), i
                }, moof: function (e) {
                    return {boxes: ut(e)}
                }, moov: function (e) {
                    return {boxes: ut(e)}
                }, mvex: function (e) {
                    return {boxes: ut(e)}
                }, mvhd: function (e) {
                    var t = new DataView(e.buffer, e.byteOffset, e.byteLength), i = 4,
                        n = {version: t.getUint8(0), flags: new Uint8Array(e.subarray(1, 4))};
                    return 1 === n.version ? (i += 4, n.creationTime = ht(t.getUint32(i)), i += 8, n.modificationTime = ht(t.getUint32(i)), i += 4, n.timescale = t.getUint32(i), i += 8, n.duration = t.getUint32(i)) : (n.creationTime = ht(t.getUint32(i)), i += 4, n.modificationTime = ht(t.getUint32(i)), i += 4, n.timescale = t.getUint32(i), i += 4, n.duration = t.getUint32(i)), i += 4, n.rate = t.getUint16(i) + t.getUint16(i + 2) / 16, i += 4, n.volume = t.getUint8(i) + t.getUint8(i + 1) / 8, i += 2, i += 2, i += 8, n.matrix = new Uint32Array(e.subarray(i, i + 36)), i += 36, i += 24, n.nextTrackId = t.getUint32(i), n
                }, pdin: function (e) {
                    var t = new DataView(e.buffer, e.byteOffset, e.byteLength);
                    return {
                        version: t.getUint8(0),
                        flags: new Uint8Array(e.subarray(1, 4)),
                        rate: t.getUint32(4),
                        initialDelay: t.getUint32(8)
                    }
                }, sdtp: function (e) {
                    var t, i = {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), samples: []};
                    for (t = 4; t < e.byteLength; t++) i.samples.push({
                        dependsOn: (48 & e[t]) >> 4,
                        isDependedOn: (12 & e[t]) >> 2,
                        hasRedundancy: 3 & e[t]
                    });
                    return i
                }, sidx: function (e) {
                    var t, i = new DataView(e.buffer, e.byteOffset, e.byteLength), n = {
                        version: e[0],
                        flags: new Uint8Array(e.subarray(1, 4)),
                        references: [],
                        referenceId: i.getUint32(4),
                        timescale: i.getUint32(8),
                        earliestPresentationTime: i.getUint32(12),
                        firstOffset: i.getUint32(16)
                    }, r = i.getUint16(22);
                    for (t = 24; r; t += 12, r--) n.references.push({
                        referenceType: (128 & e[t]) >>> 7,
                        referencedSize: 2147483647 & i.getUint32(t),
                        subsegmentDuration: i.getUint32(t + 4),
                        startsWithSap: !!(128 & e[t + 8]),
                        sapType: (112 & e[t + 8]) >>> 4,
                        sapDeltaTime: 268435455 & i.getUint32(t + 8)
                    });
                    return n
                }, smhd: function (e) {
                    return {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), balance: e[4] + e[5] / 256}
                }, stbl: function (e) {
                    return {boxes: ut(e)}
                }, stco: function (e) {
                    var t, i = new DataView(e.buffer, e.byteOffset, e.byteLength),
                        n = {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), chunkOffsets: []},
                        r = i.getUint32(4);
                    for (t = 8; r; t += 4, r--) n.chunkOffsets.push(i.getUint32(t));
                    return n
                }, stsc: function (e) {
                    var t, i = new DataView(e.buffer, e.byteOffset, e.byteLength), n = i.getUint32(4),
                        r = {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), sampleToChunks: []};
                    for (t = 8; n; t += 12, n--) r.sampleToChunks.push({
                        firstChunk: i.getUint32(t),
                        samplesPerChunk: i.getUint32(t + 4),
                        sampleDescriptionIndex: i.getUint32(t + 8)
                    });
                    return r
                }, stsd: function (e) {
                    return {
                        version: e[0],
                        flags: new Uint8Array(e.subarray(1, 4)),
                        sampleDescriptions: ut(e.subarray(8))
                    }
                }, stsz: function (e) {
                    var t, i = new DataView(e.buffer, e.byteOffset, e.byteLength), n = {
                        version: e[0],
                        flags: new Uint8Array(e.subarray(1, 4)),
                        sampleSize: i.getUint32(4),
                        entries: []
                    };
                    for (t = 12; t < e.byteLength; t += 4) n.entries.push(i.getUint32(t));
                    return n
                }, stts: function (e) {
                    var t, i = new DataView(e.buffer, e.byteOffset, e.byteLength),
                        n = {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), timeToSamples: []},
                        r = i.getUint32(4);
                    for (t = 8; r; t += 8, r--) n.timeToSamples.push({
                        sampleCount: i.getUint32(t),
                        sampleDelta: i.getUint32(t + 4)
                    });
                    return n
                }, styp: function (e) {
                    return pt.ftyp(e)
                }, tfdt: function (e) {
                    var t = {
                        version: e[0],
                        flags: new Uint8Array(e.subarray(1, 4)),
                        baseMediaDecodeTime: e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7]
                    };
                    return 1 === t.version && (t.baseMediaDecodeTime *= Math.pow(2, 32), t.baseMediaDecodeTime += e[8] << 24 | e[9] << 16 | e[10] << 8 | e[11]), t
                }, tfhd: function (e) {
                    var t, i = new DataView(e.buffer, e.byteOffset, e.byteLength),
                        n = {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), trackId: i.getUint32(4)},
                        r = 1 & n.flags[2], a = 2 & n.flags[2], s = 8 & n.flags[2], o = 16 & n.flags[2],
                        u = 32 & n.flags[2], l = 65536 & n.flags[0], d = 131072 & n.flags[0];
                    return t = 8, r && (t += 4, n.baseDataOffset = i.getUint32(12), t += 4), a && (n.sampleDescriptionIndex = i.getUint32(t), t += 4), s && (n.defaultSampleDuration = i.getUint32(t), t += 4), o && (n.defaultSampleSize = i.getUint32(t), t += 4), u && (n.defaultSampleFlags = i.getUint32(t)), l && (n.durationIsEmpty = !0), !r && d && (n.baseDataOffsetIsMoof = !0), n
                }, tkhd: function (e) {
                    var t = new DataView(e.buffer, e.byteOffset, e.byteLength), i = 4,
                        n = {version: t.getUint8(0), flags: new Uint8Array(e.subarray(1, 4))};
                    return 1 === n.version ? (i += 4, n.creationTime = ht(t.getUint32(i)), i += 8, n.modificationTime = ht(t.getUint32(i)), i += 4, n.trackId = t.getUint32(i), i += 4, i += 8, n.duration = t.getUint32(i)) : (n.creationTime = ht(t.getUint32(i)), i += 4, n.modificationTime = ht(t.getUint32(i)), i += 4, n.trackId = t.getUint32(i), i += 4, i += 4, n.duration = t.getUint32(i)), i += 4, i += 8, n.layer = t.getUint16(i), i += 2, n.alternateGroup = t.getUint16(i), i += 2, n.volume = t.getUint8(i) + t.getUint8(i + 1) / 8, i += 2, i += 2, n.matrix = new Uint32Array(e.subarray(i, i + 36)), i += 36, n.width = t.getUint16(i) + t.getUint16(i + 2) / 16, i += 4, n.height = t.getUint16(i) + t.getUint16(i + 2) / 16, n
                }, traf: function (e) {
                    return {boxes: ut(e)}
                }, trak: function (e) {
                    return {boxes: ut(e)}
                }, trex: function (e) {
                    var t = new DataView(e.buffer, e.byteOffset, e.byteLength);
                    return {
                        version: e[0],
                        flags: new Uint8Array(e.subarray(1, 4)),
                        trackId: t.getUint32(4),
                        defaultSampleDescriptionIndex: t.getUint32(8),
                        defaultSampleDuration: t.getUint32(12),
                        defaultSampleSize: t.getUint32(16),
                        sampleDependsOn: 3 & e[20],
                        sampleIsDependedOn: (192 & e[21]) >> 6,
                        sampleHasRedundancy: (48 & e[21]) >> 4,
                        samplePaddingValue: (14 & e[21]) >> 1,
                        sampleIsDifferenceSample: !!(1 & e[21]),
                        sampleDegradationPriority: t.getUint16(22)
                    }
                }, trun: function (e) {
                    var t, i = {version: e[0], flags: new Uint8Array(e.subarray(1, 4)), samples: []},
                        n = new DataView(e.buffer, e.byteOffset, e.byteLength), r = 1 & i.flags[2], a = 4 & i.flags[2],
                        s = 1 & i.flags[1], o = 2 & i.flags[1], u = 4 & i.flags[1], l = 8 & i.flags[1],
                        d = n.getUint32(4), c = 8;
                    for (r && (i.dataOffset = n.getInt32(c), c += 4), a && d && (t = {flags: ft(e.subarray(c, c + 4))}, c += 4, s && (t.duration = n.getUint32(c), c += 4), o && (t.size = n.getUint32(c), c += 4), l && (t.compositionTimeOffset = n.getUint32(c), c += 4), i.samples.push(t), d--); d--;) t = {}, s && (t.duration = n.getUint32(c), c += 4), o && (t.size = n.getUint32(c), c += 4), u && (t.flags = ft(e.subarray(c, c + 4)), c += 4), l && (t.compositionTimeOffset = n.getUint32(c), c += 4), i.samples.push(t);
                    return i
                }, "url ": function (e) {
                    return {version: e[0], flags: new Uint8Array(e.subarray(1, 4))}
                }, vmhd: function (e) {
                    var t = new DataView(e.buffer, e.byteOffset, e.byteLength);
                    return {
                        version: e[0],
                        flags: new Uint8Array(e.subarray(1, 4)),
                        graphicsmode: t.getUint16(4),
                        opcolor: new Uint16Array([t.getUint16(6), t.getUint16(8), t.getUint16(10)])
                    }
                }
            }, mt = {
                inspect: ut = function (e) {
                    for (var t, i, n, r, a, s = 0, o = [], u = new ArrayBuffer(e.length), l = new Uint8Array(u), d = 0; d < e.length; ++d) l[d] = e[d];
                    for (t = new DataView(u); s < e.byteLength;) i = t.getUint32(s), n = ct(e.subarray(s + 4, s + 8)), r = i > 1 ? s + i : e.byteLength, (a = (pt[n] || function (e) {
                        return {data: e}
                    })(e.subarray(s + 8, r))).size = i, a.type = n, o.push(a), s = r;
                    return o
                }, textify: lt = function (e, t) {
                    var i;
                    return t = t || 0, i = new Array(2 * t + 1).join(" "), e.map(function (e, n) {
                        return i + e.type + "\n" + Object.keys(e).filter(function (e) {
                            return "type" !== e && "boxes" !== e
                        }).map(function (t) {
                            var n = i + "  " + t + ": ", r = e[t];
                            if (r instanceof Uint8Array || r instanceof Uint32Array) {
                                var a = Array.prototype.slice.call(new Uint8Array(r.buffer, r.byteOffset, r.byteLength)).map(function (e) {
                                    return " " + ("00" + e.toString(16)).slice(-2)
                                }).join("").match(/.{1,24}/g);
                                return a ? 1 === a.length ? n + "<" + a.join("").slice(1) + ">" : n + "<\n" + a.map(function (e) {
                                    return i + "  " + e
                                }).join("\n") + "\n" + i + "  >" : n + "<>"
                            }
                            return n + JSON.stringify(r, null, 2).split("\n").map(function (e, t) {
                                return 0 === t ? e : i + "  " + e
                            }).join("\n")
                        }).join("\n") + (e.boxes ? "\n" + lt(e.boxes, t + 1) : "")
                    }).join("\n")
                }, parseTfdt: pt.tfdt, parseHdlr: pt.hdlr, parseTfhd: pt.tfhd, parseTrun: pt.trun
            }, gt = re, yt = he.CaptionStream, _t = function (e, t) {
                for (var i = e, n = 0; n < t.length; n++) {
                    var r = t[n];
                    if (i < r.size) return r;
                    i -= r.size
                }
                return null
            }, vt = function (e, t) {
                var i = H.findBox(e, ["moof", "traf"]), n = {}, r = [];
                return H.findBox(e, ["mdat"]).forEach(function (e, t) {
                    var n = i[t];
                    r.push({mdat: e, traf: n})
                }), r.forEach(function (e) {
                    var i, r = e.mdat, a = e.traf, s = H.findBox(a, ["tfhd"]), o = mt.parseTfhd(s[0]), u = o.trackId,
                        l = H.findBox(a, ["tfdt"]), d = l.length > 0 ? mt.parseTfdt(l[0]).baseMediaDecodeTime : 0,
                        c = H.findBox(a, ["trun"]);
                    t === u && c.length > 0 && (i = function (e, t, i) {
                        var n, r, a, s, o = new DataView(e.buffer, e.byteOffset, e.byteLength), u = [];
                        for (r = 0; r + 4 < e.length; r += a) if (a = o.getUint32(r), r += 4, !(a <= 0)) switch (31 & e[r]) {
                            case 6:
                                var l = e.subarray(r + 1, r + 1 + a), d = _t(r, t);
                                n = {
                                    nalUnitType: "sei_rbsp",
                                    size: a,
                                    data: l,
                                    escapedRBSP: gt(l),
                                    trackId: i
                                }, d ? (n.pts = d.pts, n.dts = d.dts, s = d) : (n.pts = s.pts, n.dts = s.dts), u.push(n)
                        }
                        return u
                    }(r, function (e, t, i) {
                        var n = t, r = i.defaultSampleDuration || 0, a = i.defaultSampleSize || 0, s = i.trackId,
                            o = [];
                        return e.forEach(function (e) {
                            var t = mt.parseTrun(e).samples;
                            t.forEach(function (e) {
                                void 0 === e.duration && (e.duration = r), void 0 === e.size && (e.size = a), e.trackId = s, e.dts = n, void 0 === e.compositionTimeOffset && (e.compositionTimeOffset = 0), e.pts = n + e.compositionTimeOffset, n += e.duration
                            }), o = o.concat(t)
                        }), o
                    }(c, d, o), u), n[u] || (n[u] = []), n[u] = n[u].concat(i))
                }), n
            }, bt = {
                generator: V,
                probe: H,
                Transmuxer: dt.Transmuxer,
                AudioSegmentStream: dt.AudioSegmentStream,
                VideoSegmentStream: dt.VideoSegmentStream,
                CaptionParser: function () {
                    var e, t, i, n, r, a = !1;
                    this.isInitialized = function () {
                        return a
                    }, this.init = function () {
                        e = new yt, a = !0, e.on("data", function (e) {
                            e.startTime = e.startPts / n, e.endTime = e.endPts / n, r.captions.push(e), r.captionStreams[e.stream] = !0
                        })
                    }, this.isNewInit = function (e, t) {
                        return !(e && 0 === e.length || t && "object" === (void 0 === t ? "undefined" : g(t)) && 0 === Object.keys(t).length || i === e[0] && n === t[i])
                    }, this.parse = function (e, a, s) {
                        var o;
                        if (!this.isInitialized()) return null;
                        if (!a || !s) return null;
                        if (this.isNewInit(a, s)) i = a[0], n = s[i]; else if (!i || !n) return t.push(e), null;
                        for (; t.length > 0;) {
                            var u = t.shift();
                            this.parse(u, a, s)
                        }
                        d = n;
                        var l, d;
                        return null !== (o = (l = i) ? {
                            seiNals: vt(e, l)[l],
                            timescale: d
                        } : null) && o.seiNals ? (this.pushNals(o.seiNals), this.flushStream(), r) : null
                    }, this.pushNals = function (t) {
                        if (!this.isInitialized() || !t || 0 === t.length) return null;
                        t.forEach(function (t) {
                            e.push(t)
                        })
                    }, this.flushStream = function () {
                        if (!this.isInitialized()) return null;
                        e.flush()
                    }, this.clearParsedCaptions = function () {
                        r.captions = [], r.captionStreams = {}
                    }, this.resetCaptionStream = function () {
                        if (!this.isInitialized()) return null;
                        e.reset()
                    }, this.clearAllCaptions = function () {
                        this.clearParsedCaptions(), this.resetCaptionStream()
                    }, this.reset = function () {
                        t = [], i = null, n = null, r ? this.clearParsedCaptions() : r = {
                            captions: [],
                            captionStreams: {}
                        }, this.resetCaptionStream()
                    }, this.reset()
                }
            }, Tt = function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }, St = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }(), kt = function () {
                function e(t, i) {
                    Tt(this, e), this.options = i || {}, this.self = t, this.init()
                }

                return St(e, [{
                    key: "init", value: function () {
                        this.transmuxer && this.transmuxer.dispose(), this.transmuxer = new bt.Transmuxer(this.options), e = this.self, (t = this.transmuxer).on("data", function (t) {
                            var i = t.initSegment;
                            t.initSegment = {data: i.buffer, byteOffset: i.byteOffset, byteLength: i.byteLength};
                            var n = t.data;
                            t.data = n.buffer, e.postMessage({
                                action: "data",
                                segment: t,
                                byteOffset: n.byteOffset,
                                byteLength: n.byteLength
                            }, [t.data])
                        }), t.captionStream && t.captionStream.on("data", function (t) {
                            e.postMessage({action: "caption", data: t})
                        }), t.on("done", function (t) {
                            e.postMessage({action: "done"})
                        }), t.on("gopInfo", function (t) {
                            e.postMessage({action: "gopInfo", gopInfo: t})
                        });
                        var e, t
                    }
                }, {
                    key: "push", value: function (e) {
                        var t = new Uint8Array(e.data, e.byteOffset, e.byteLength);
                        this.transmuxer.push(t)
                    }
                }, {
                    key: "reset", value: function () {
                        this.init()
                    }
                }, {
                    key: "setTimestampOffset", value: function (e) {
                        var t = e.timestampOffset || 0;
                        this.transmuxer.setBaseMediaDecodeTime(Math.round(9e4 * t))
                    }
                }, {
                    key: "setAudioAppendStart", value: function (e) {
                        this.transmuxer.setAudioAppendStart(Math.ceil(9e4 * e.appendStart))
                    }
                }, {
                    key: "flush", value: function (e) {
                        this.transmuxer.flush()
                    }
                }, {
                    key: "resetCaptions", value: function () {
                        this.transmuxer.resetCaptions()
                    }
                }, {
                    key: "alignGopsWith", value: function (e) {
                        this.transmuxer.alignGopsWith(e.gopsToAlignWith.slice())
                    }
                }]), e
            }();
            new function (e) {
                e.onmessage = function (t) {
                    "init" === t.data.action && t.data.options ? this.messageHandlers = new kt(e, t.data.options) : (this.messageHandlers || (this.messageHandlers = new kt(e)), t.data && t.data.action && "init" !== t.data.action && this.messageHandlers[t.data.action] && this.messageHandlers[t.data.action](t.data))
                }
            }(i)
        }()
    }), Zc = {videoCodec: "avc1", videoObjectTypeIndicator: ".4d400d", audioProfile: "2"}, eh = function (e) {
        return e.map(function (e) {
            return e.replace(/avc1\.(\d+)\.(\d+)/i, function (e, t, i) {
                return "avc1." + ("00" + Number(t).toString(16)).slice(-2) + "00" + ("00" + Number(i).toString(16)).slice(-2)
            })
        })
    }, th = function () {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", t = {codecCount: 0}, i = void 0;
        return t.codecCount = e.split(",").length, t.codecCount = t.codecCount || 2, (i = /(^|\s|,)+(avc[13])([^ ,]*)/i.exec(e)) && (t.videoCodec = i[2], t.videoObjectTypeIndicator = i[3]), t.audioProfile = /(^|\s|,)+mp4a.[0-9A-Fa-f]+\.([0-9A-Fa-f]+)/i.exec(e), t.audioProfile = t.audioProfile && t.audioProfile[2], t
    }, ih = function (e, t, i) {
        return e + "/" + t + '; codecs="' + i.filter(function (e) {
            return !!e
        }).join(", ") + '"'
    }, nh = function (e, t) {
        var i, n = (i = t, i.segments && i.segments.length && i.segments[0].map ? "mp4" : "mp2t"), r = function (e) {
            var t = e.attributes || {};
            return t.CODECS ? th(t.CODECS) : Zc
        }(t), a = t.attributes || {}, s = !0, o = !1;
        if (!t) return [];
        if (e.mediaGroups.AUDIO && a.AUDIO) {
            var u = e.mediaGroups.AUDIO[a.AUDIO];
            if (u) {
                o = !0, s = !1;
                for (var l in u) if (!u[l].uri && !u[l].playlists) {
                    s = !0;
                    break
                }
            }
        }
        o && !r.audioProfile && (s || (r.audioProfile = function (e, t) {
            if (!e.mediaGroups.AUDIO || !t) return null;
            var i = e.mediaGroups.AUDIO[t];
            if (!i) return null;
            for (var n in i) {
                var r = i[n];
                if (r.default && r.playlists) return th(r.playlists[0].attributes.CODECS).audioProfile
            }
            return null
        }(e, a.AUDIO)), r.audioProfile || (ka.log.warn("Multiple audio tracks present but no audio codec string is specified. Attempting to use the default audio codec (mp4a.40.2)"), r.audioProfile = Zc.audioProfile));
        var d = {};
        r.videoCodec && (d.video = "" + r.videoCodec + r.videoObjectTypeIndicator), r.audioProfile && (d.audio = "mp4a.40." + r.audioProfile);
        var c = ih("audio", n, [d.audio]), h = ih("video", n, [d.video]), f = ih("video", n, [d.video, d.audio]);
        return o ? !s && d.video ? [h, c] : s || d.video ? [f, c] : [c, c] : d.video ? [f] : [c]
    }, rh = function (e) {
        return /mp4a\.\d+.\d+/i.test(e)
    }, ah = function (e) {
        return /avc1\.[\da-f]+/i.test(e)
    }, sh = function (e, t, i) {
        var n = null, r = null, a = 0, s = [], o = [];
        if (!e && !t) return ka.createTimeRange();
        if (!e) return t.buffered;
        if (!t) return e.buffered;
        if (i) return e.buffered;
        if (0 === e.buffered.length && 0 === t.buffered.length) return ka.createTimeRange();
        for (var u = e.buffered, l = t.buffered, d = u.length; d--;) s.push({
            time: u.start(d),
            type: "start"
        }), s.push({time: u.end(d), type: "end"});
        for (d = l.length; d--;) s.push({time: l.start(d), type: "start"}), s.push({time: l.end(d), type: "end"});
        for (s.sort(function (e, t) {
            return e.time - t.time
        }), d = 0; d < s.length; d++) "start" === s[d].type ? 2 === ++a && (n = s[d].time) : "end" === s[d].type && 1 === --a && (r = s[d].time), null !== n && null !== r && (o.push([n, r]), n = null, r = null);
        return ka.createTimeRanges(o)
    }, oh = function (e) {
        $d(t, e);

        function t(e, i) {
            Yd(this, t);
            var n = Qd(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, ka.EventTarget));
            n.timestampOffset_ = 0, n.pendingBuffers_ = [], n.bufferUpdating_ = !1, n.mediaSource_ = e, n.codecs_ = i, n.audioCodec_ = null, n.videoCodec_ = null, n.audioDisabled_ = !1, n.appendAudioInitSegment_ = !0, n.gopBuffer_ = [], n.timeMapping_ = 0, n.safeAppend_ = ka.browser.IE_VERSION >= 11;
            var r = {remux: !1, alignGopsAtEnd: n.safeAppend_};
            return n.codecs_.forEach(function (e) {
                rh(e) ? n.audioCodec_ = e : ah(e) && (n.videoCodec_ = e)
            }), n.transmuxer_ = new Jc, n.transmuxer_.postMessage({
                action: "init",
                options: r
            }), n.transmuxer_.onmessage = function (e) {
                return "data" === e.data.action ? n.data_(e) : "done" === e.data.action ? n.done_(e) : "gopInfo" === e.data.action ? n.appendGopInfo_(e) : void 0
            }, Object.defineProperty(n, "timestampOffset", {
                get: function () {
                    return this.timestampOffset_
                }, set: function (e) {
                    "number" == typeof e && e >= 0 && (this.timestampOffset_ = e, this.appendAudioInitSegment_ = !0, this.gopBuffer_.length = 0, this.timeMapping_ = 0, this.transmuxer_.postMessage({
                        action: "setTimestampOffset",
                        timestampOffset: e
                    }))
                }
            }), Object.defineProperty(n, "appendWindowStart", {
                get: function () {
                    return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart
                }, set: function (e) {
                    this.videoBuffer_ && (this.videoBuffer_.appendWindowStart = e), this.audioBuffer_ && (this.audioBuffer_.appendWindowStart = e)
                }
            }), Object.defineProperty(n, "updating", {
                get: function () {
                    return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating)
                }
            }), Object.defineProperty(n, "buffered", {
                get: function () {
                    return sh(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_)
                }
            }), n
        }

        return Kd(t, [{
            key: "data_", value: function (e) {
                var t = e.data.segment;
                t.data = new Uint8Array(t.data, e.data.byteOffset, e.data.byteLength), t.initSegment = new Uint8Array(t.initSegment.data, t.initSegment.byteOffset, t.initSegment.byteLength), function (e, t, i) {
                    var n = t.player_;
                    if (i.captions && i.captions.length) {
                        e.inbandTextTracks_ || (e.inbandTextTracks_ = {});
                        for (var r in i.captionStreams) if (!e.inbandTextTracks_[r]) {
                            n.tech_.trigger({type: "usage", name: "hls-608"});
                            var a = n.textTracks().getTrackById(r);
                            e.inbandTextTracks_[r] = a || n.addRemoteTextTrack({
                                kind: "captions",
                                id: r,
                                label: r
                            }, !1).track
                        }
                    }
                    i.metadata && i.metadata.length && !e.metadataTrack_ && (e.metadataTrack_ = n.addRemoteTextTrack({
                        kind: "metadata",
                        label: "Timed Metadata"
                    }, !1).track, e.metadataTrack_.inBandMetadataTrackDispatchType = i.metadata.dispatchType)
                }(this, this.mediaSource_, t), this.pendingBuffers_.push(t)
            }
        }, {
            key: "done_", value: function (e) {
                "closed" !== this.mediaSource_.readyState ? this.processPendingSegments_() : this.pendingBuffers_.length = 0
            }
        }, {
            key: "createRealSourceBuffers_", value: function () {
                var e = this, t = ["audio", "video"];
                t.forEach(function (i) {
                    if (e[i + "Codec_"] && !e[i + "Buffer_"]) {
                        var n = null;
                        if (e.mediaSource_[i + "Buffer_"]) (n = e.mediaSource_[i + "Buffer_"]).updating = !1; else {
                            var r = i + '/mp4;codecs="' + e[i + "Codec_"] + '"';
                            n = function (e, t) {
                                var i = e.addSourceBuffer(t), n = Object.create(null);
                                n.updating = !1, n.realBuffer_ = i;
                                var r = function (e) {
                                    "function" == typeof i[e] ? n[e] = function () {
                                        return i[e].apply(i, arguments)
                                    } : void 0 === n[e] && Object.defineProperty(n, e, {
                                        get: function () {
                                            return i[e]
                                        }, set: function (t) {
                                            return i[e] = t
                                        }
                                    })
                                };
                                for (var a in i) r(a);
                                return n
                            }(e.mediaSource_.nativeMediaSource_, r), e.mediaSource_[i + "Buffer_"] = n
                        }
                        e[i + "Buffer_"] = n, ["update", "updatestart", "updateend"].forEach(function (r) {
                            n.addEventListener(r, function () {
                                if ("audio" !== i || !e.audioDisabled_) {
                                    "updateend" === r && (e[i + "Buffer_"].updating = !1);
                                    return t.every(function (t) {
                                        return !("audio" !== t || !e.audioDisabled_) || (i === t || !e[t + "Buffer_"] || !e[t + "Buffer_"].updating)
                                    }) ? e.trigger(r) : void 0
                                }
                            })
                        })
                    }
                })
            }
        }, {
            key: "appendBuffer", value: function (e) {
                if (this.bufferUpdating_ = !0, this.audioBuffer_ && this.audioBuffer_.buffered.length) {
                    var t = this.audioBuffer_.buffered;
                    this.transmuxer_.postMessage({action: "setAudioAppendStart", appendStart: t.end(t.length - 1)})
                }
                this.videoBuffer_ && this.transmuxer_.postMessage({
                    action: "alignGopsWith",
                    gopsToAlignWith: function (e, t, i) {
                        if (void 0 === t || null === t || !e.length) return [];
                        var n = Math.ceil(9e4 * (t - i + 3)), r = void 0;
                        for (r = 0; r < e.length && !(e[r].pts > n); r++) ;
                        return e.slice(r)
                    }(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)
                }), this.transmuxer_.postMessage({
                    action: "push",
                    data: e.buffer,
                    byteOffset: e.byteOffset,
                    byteLength: e.byteLength
                }, [e.buffer]), this.transmuxer_.postMessage({action: "flush"})
            }
        }, {
            key: "appendGopInfo_", value: function (e) {
                this.gopBuffer_ = function (e, t, i) {
                    if (!t.length) return e;
                    if (i) return t.slice();
                    for (var n = t[0].pts, r = 0; r < e.length && !(e[r].pts >= n); r++) ;
                    return e.slice(0, r).concat(t)
                }(this.gopBuffer_, e.data.gopInfo, this.safeAppend_)
            }
        }, {
            key: "remove", value: function (e, t) {
                if (this.videoBuffer_ && (this.videoBuffer_.updating = !0, this.videoBuffer_.remove(e, t), this.gopBuffer_ = function (e, t, i, n) {
                    for (var r = Math.ceil(9e4 * (t - n)), a = Math.ceil(9e4 * (i - n)), s = e.slice(), o = e.length; o-- && !(e[o].pts <= a);) ;
                    if (-1 === o) return s;
                    for (var u = o + 1; u-- && !(e[u].pts <= r);) ;
                    return u = Math.max(u, 0), s.splice(u, o - u + 1), s
                }(this.gopBuffer_, e, t, this.timeMapping_)), !this.audioDisabled_ && this.audioBuffer_ && (this.audioBuffer_.updating = !0, this.audioBuffer_.remove(e, t)), jc(e, t, this.metadataTrack_), this.inbandTextTracks_) for (var i in this.inbandTextTracks_) jc(e, t, this.inbandTextTracks_[i])
            }
        }, {
            key: "processPendingSegments_", value: function () {
                var e = {video: {segments: [], bytes: 0}, audio: {segments: [], bytes: 0}, captions: [], metadata: []};
                e = this.pendingBuffers_.reduce(function (e, t) {
                    var i = t.type, n = t.data, r = t.initSegment;
                    return e[i].segments.push(n), e[i].bytes += n.byteLength, e[i].initSegment = r, t.captions && (e.captions = e.captions.concat(t.captions)), t.info && (e[i].info = t.info), t.metadata && (e.metadata = e.metadata.concat(t.metadata)), e
                }, e), this.videoBuffer_ || this.audioBuffer_ || (0 === e.video.bytes && (this.videoCodec_ = null), 0 === e.audio.bytes && (this.audioCodec_ = null), this.createRealSourceBuffers_()), e.audio.info && this.mediaSource_.trigger({
                    type: "audioinfo",
                    info: e.audio.info
                }), e.video.info && this.mediaSource_.trigger({
                    type: "videoinfo",
                    info: e.video.info
                }), this.appendAudioInitSegment_ && (!this.audioDisabled_ && this.audioBuffer_ && (e.audio.segments.unshift(e.audio.initSegment), e.audio.bytes += e.audio.initSegment.byteLength), this.appendAudioInitSegment_ = !1);
                var t = !1;
                this.videoBuffer_ && e.video.bytes ? (e.video.segments.unshift(e.video.initSegment), e.video.bytes += e.video.initSegment.byteLength, this.concatAndAppendSegments_(e.video, this.videoBuffer_), Fc(this, e.captions, e.metadata)) : !this.videoBuffer_ || !this.audioDisabled_ && this.audioBuffer_ || (t = !0), !this.audioDisabled_ && this.audioBuffer_ && this.concatAndAppendSegments_(e.audio, this.audioBuffer_), this.pendingBuffers_.length = 0, t && this.trigger("updateend"), this.bufferUpdating_ = !1
            }
        }, {
            key: "concatAndAppendSegments_", value: function (e, t) {
                var i = 0, n = void 0;
                if (e.bytes) {
                    n = new Uint8Array(e.bytes), e.segments.forEach(function (e) {
                        n.set(e, i), i += e.byteLength
                    });
                    try {
                        t.updating = !0, t.appendBuffer(n)
                    } catch (e) {
                        this.mediaSource_.player_ && this.mediaSource_.player_.error({
                            code: -3,
                            type: "APPEND_BUFFER_ERR",
                            message: e.message,
                            originalError: e
                        })
                    }
                }
            }
        }, {
            key: "abort", value: function () {
                this.videoBuffer_ && this.videoBuffer_.abort(), !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.abort(), this.transmuxer_ && this.transmuxer_.postMessage({action: "reset"}), this.pendingBuffers_.length = 0, this.bufferUpdating_ = !1
            }
        }]), t
    }(ka.EventTarget), uh = function (e) {
        $d(t, e);

        function t() {
            Yd(this, t);
            var e = Qd(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this)), i = void 0;
            e.nativeMediaSource_ = new r.MediaSource;
            for (i in e.nativeMediaSource_) i in t.prototype || "function" != typeof e.nativeMediaSource_[i] || (e[i] = e.nativeMediaSource_[i].bind(e.nativeMediaSource_));
            return e.duration_ = NaN, Object.defineProperty(e, "duration", {
                get: function () {
                    return this.duration_ === 1 / 0 ? this.duration_ : this.nativeMediaSource_.duration
                }, set: function (e) {
                    this.duration_ = e, e === 1 / 0 || (this.nativeMediaSource_.duration = e)
                }
            }), Object.defineProperty(e, "seekable", {
                get: function () {
                    return this.duration_ === 1 / 0 ? ka.createTimeRanges([[0, this.nativeMediaSource_.duration]]) : this.nativeMediaSource_.seekable
                }
            }), Object.defineProperty(e, "readyState", {
                get: function () {
                    return this.nativeMediaSource_.readyState
                }
            }), Object.defineProperty(e, "activeSourceBuffers", {
                get: function () {
                    return this.activeSourceBuffers_
                }
            }), e.sourceBuffers = [], e.activeSourceBuffers_ = [], e.updateActiveSourceBuffers_ = function () {
                if (e.activeSourceBuffers_.length = 0, 1 === e.sourceBuffers.length) {
                    var t = e.sourceBuffers[0];
                    return t.appendAudioInitSegment_ = !0, t.audioDisabled_ = !t.audioCodec_, void e.activeSourceBuffers_.push(t)
                }
                for (var i = !1, n = !0, r = 0; r < e.player_.audioTracks().length; r++) {
                    var a = e.player_.audioTracks()[r];
                    if (a.enabled && "main" !== a.kind) {
                        i = !0, n = !1;
                        break
                    }
                }
                e.sourceBuffers.forEach(function (t, r) {
                    if (t.appendAudioInitSegment_ = !0, t.videoCodec_ && t.audioCodec_) t.audioDisabled_ = i; else if (t.videoCodec_ && !t.audioCodec_) t.audioDisabled_ = !0, n = !1; else if (!t.videoCodec_ && t.audioCodec_ && (t.audioDisabled_ = r ? n : !n, t.audioDisabled_)) return;
                    e.activeSourceBuffers_.push(t)
                })
            }, e.onPlayerMediachange_ = function () {
                e.sourceBuffers.forEach(function (e) {
                    e.appendAudioInitSegment_ = !0
                })
            }, e.onHlsReset_ = function () {
                e.sourceBuffers.forEach(function (e) {
                    e.transmuxer_ && e.transmuxer_.postMessage({action: "resetCaptions"})
                })
            }, e.onHlsSegmentTimeMapping_ = function (t) {
                e.sourceBuffers.forEach(function (e) {
                    return e.timeMapping_ = t.mapping
                })
            }, ["sourceopen", "sourceclose", "sourceended"].forEach(function (e) {
                this.nativeMediaSource_.addEventListener(e, this.trigger.bind(this))
            }, e), e.on("sourceopen", function (t) {
                var i = l.querySelector('[src="' + e.url_ + '"]');
                i && (e.player_ = ka(i.parentNode), e.player_.tech_.on("hls-reset", e.onHlsReset_), e.player_.tech_.on("hls-segment-time-mapping", e.onHlsSegmentTimeMapping_), e.player_.audioTracks && e.player_.audioTracks() && (e.player_.audioTracks().on("change", e.updateActiveSourceBuffers_), e.player_.audioTracks().on("addtrack", e.updateActiveSourceBuffers_), e.player_.audioTracks().on("removetrack", e.updateActiveSourceBuffers_)), e.player_.on("mediachange", e.onPlayerMediachange_))
            }), e.on("sourceended", function (t) {
                for (var i = Nc(e.duration), n = 0; n < e.sourceBuffers.length; n++) {
                    var r = e.sourceBuffers[n], a = r.metadataTrack_ && r.metadataTrack_.cues;
                    a && a.length && (a[a.length - 1].endTime = i)
                }
            }), e.on("sourceclose", function (e) {
                this.sourceBuffers.forEach(function (e) {
                    e.transmuxer_ && e.transmuxer_.terminate()
                }), this.sourceBuffers.length = 0, this.player_ && (this.player_.audioTracks && this.player_.audioTracks() && (this.player_.audioTracks().off("change", this.updateActiveSourceBuffers_), this.player_.audioTracks().off("addtrack", this.updateActiveSourceBuffers_), this.player_.audioTracks().off("removetrack", this.updateActiveSourceBuffers_)), this.player_.el_ && (this.player_.off("mediachange", this.onPlayerMediachange_), this.player_.tech_.off("hls-reset", this.onHlsReset_), this.player_.tech_.off("hls-segment-time-mapping", this.onHlsSegmentTimeMapping_)))
            }), e
        }

        return Kd(t, [{
            key: "addSeekableRange_", value: function (e, t) {
                var i = void 0;
                if (this.duration !== 1 / 0) throw(i = new Error("MediaSource.addSeekableRange() can only be invoked when the duration is Infinity")).name = "InvalidStateError", i.code = 11, i;
                (t > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) && (this.nativeMediaSource_.duration = t)
            }
        }, {
            key: "addSourceBuffer", value: function (e) {
                var t = void 0, i = function (e) {
                    var t = {type: "", parameters: {}}, i = e.trim().split(";");
                    return t.type = i.shift().trim(), i.forEach(function (e) {
                        var i = e.trim().split("=");
                        if (i.length > 1) {
                            var n = i[0].replace(/"/g, "").trim(), r = i[1].replace(/"/g, "").trim();
                            t.parameters[n] = r
                        }
                    }), t
                }(e);
                if (/^(video|audio)\/mp2t$/i.test(i.type)) {
                    var n = [];
                    i.parameters && i.parameters.codecs && (n = i.parameters.codecs.split(","), n = (n = eh(n)).filter(function (e) {
                        return rh(e) || ah(e)
                    })), 0 === n.length && (n = ["avc1.4d400d", "mp4a.40.2"]), t = new oh(this, n), 0 !== this.sourceBuffers.length && (this.sourceBuffers[0].createRealSourceBuffers_(), t.createRealSourceBuffers_(), this.sourceBuffers[0].audioDisabled_ = !0)
                } else t = this.nativeMediaSource_.addSourceBuffer(e);
                return this.sourceBuffers.push(t), t
            }
        }]), t
    }(ka.EventTarget), lh = 0;
    ka.mediaSources = {};
    var dh = function (e, t) {
        var i = ka.mediaSources[e];
        if (!i) throw new Error("Media Source not found (Video.js)");
        i.trigger({type: "sourceopen", swfId: t})
    }, ch = function () {
        return !!r.MediaSource && !!r.MediaSource.isTypeSupported && r.MediaSource.isTypeSupported('video/mp4;codecs="avc1.4d400d,mp4a.40.2"')
    }, hh = function () {
        if (this.MediaSource = {open: dh, supportsNativeMediaSources: ch}, ch()) return new uh;
        throw new Error("Cannot use create a virtual MediaSource for this video")
    };
    hh.open = dh, hh.supportsNativeMediaSources = ch;
    var fh = {
        createObjectURL: function (e) {
            var t = void 0;
            return e instanceof uh ? (t = r.URL.createObjectURL(e.nativeMediaSource_), e.url_ = t, t) : e instanceof uh ? (t = "blob:vjs-media-source/" + lh, lh++, ka.mediaSources[t] = e, t) : (t = r.URL.createObjectURL(e), e.url_ = t, t)
        }
    };
    ka.MediaSource = hh, ka.URL = fh;
    var ph = ka.EventTarget, mh = ka.mergeOptions, gh = function (e, t) {
        for (var i = mh(e, {
            duration: t.duration,
            minimumUpdatePeriod: t.minimumUpdatePeriod
        }), n = 0; n < t.playlists.length; n++) {
            var r = nc(i, t.playlists[n]);
            r && (i = r)
        }
        return ic(t, function (e, t, n, r) {
            if (e.playlists && e.playlists.length) {
                var a = e.playlists[0].uri, s = nc(i, e.playlists[0]);
                s && ((i = s).mediaGroups[t][n][r].playlists[0] = i.playlists[a])
            }
        }), i
    }, yh = function (e) {
        $d(t, ph);

        function t(e, i, n, a) {
            Yd(this, t);
            var s = Qd(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
            if (s.hls_ = i, s.withCredentials = n, !e) throw new Error("A non-empty playlist URL or playlist is required");
            return s.on("minimumUpdatePeriod", function () {
                s.refreshXml_()
            }), s.on("mediaupdatetimeout", function () {
                s.refreshMedia_()
            }), "string" == typeof e ? (s.srcUrl = e, s.state = "HAVE_NOTHING", Qd(s)) : (s.masterPlaylistLoader_ = a, s.state = "HAVE_METADATA", s.started = !0, s.media(e), r.setTimeout(function () {
                s.trigger("loadedmetadata")
            }, 0), s)
        }

        return Kd(t, [{
            key: "dispose", value: function () {
                this.stopRequest(), r.clearTimeout(this.mediaUpdateTimeout)
            }
        }, {
            key: "stopRequest", value: function () {
                if (this.request) {
                    var e = this.request;
                    this.request = null, e.onreadystatechange = null, e.abort()
                }
            }
        }, {
            key: "media", value: function (e) {
                if (!e) return this.media_;
                if ("HAVE_NOTHING" === this.state) throw new Error("Cannot switch media playlist from " + this.state);
                var t = this.state;
                if ("string" == typeof e) {
                    if (!this.master.playlists[e]) throw new Error("Unknown playlist URI: " + e);
                    e = this.master.playlists[e]
                }
                var i = !this.media_ || e.uri !== this.media_.uri;
                this.state = "HAVE_METADATA", i && (this.media_ && this.trigger("mediachanging"), this.media_ = e, this.refreshMedia_(), "HAVE_MASTER" !== t && this.trigger("mediachange"))
            }
        }, {
            key: "pause", value: function () {
                this.stopRequest(), "HAVE_NOTHING" === this.state && (this.started = !1)
            }
        }, {
            key: "load", value: function () {
                this.started ? this.trigger("loadedplaylist") : this.start()
            }
        }, {
            key: "parseMasterXml", value: function () {
                var e = io(this.masterXml_, {manifestUri: this.srcUrl, clientOffset: this.clientOffset_});
                e.uri = this.srcUrl;
                for (var t = 0; t < e.playlists.length; t++) {
                    var i = "placeholder-uri-" + t;
                    e.playlists[t].uri = i, e.playlists[i] = e.playlists[t]
                }
                return ic(e, function (t, i, n, r) {
                    if (t.playlists && t.playlists.length) {
                        var a = "placeholder-uri-" + i + "-" + n + "-" + r;
                        t.playlists[0].uri = a, e.playlists[a] = t.playlists[0]
                    }
                }), rc(e), ac(e), e
            }
        }, {
            key: "start", value: function () {
                var e = this;
                this.started = !0, this.request = this.hls_.xhr({
                    uri: this.srcUrl,
                    withCredentials: this.withCredentials
                }, function (t, i) {
                    if (e.request) {
                        if (e.request = null, t) return e.error = {
                            status: i.status,
                            message: "DASH playlist request error at URL: " + e.srcUrl,
                            responseText: i.responseText,
                            code: 2
                        }, "HAVE_NOTHING" === e.state && (e.started = !1), e.trigger("error");
                        e.masterXml_ = i.responseText, i.responseHeaders && i.responseHeaders.date ? e.masterLoaded_ = Date.parse(i.responseHeaders.date) : e.masterLoaded_ = Date.now(), e.syncClientServerClock_(e.onClientServerClockSync_.bind(e))
                    }
                })
            }
        }, {
            key: "syncClientServerClock_", value: function (e) {
                var t = this, i = no(this.masterXml_);
                return null === i ? (this.clientOffset_ = this.masterLoaded_ - Date.now(), e()) : "DIRECT" === i.method ? (this.clientOffset_ = i.value - Date.now(), e()) : void(this.request = this.hls_.xhr({
                    uri: Xd(this.srcUrl, i.value),
                    method: i.method,
                    withCredentials: this.withCredentials
                }, function (n, r) {
                    if (t.request) {
                        if (n) return t.clientOffset_ = t.masterLoaded_ - Date.now(), e();
                        var a = void 0;
                        a = "HEAD" === i.method ? r.responseHeaders && r.responseHeaders.date ? Date.parse(r.responseHeaders.date) : t.masterLoaded_ : Date.parse(r.responseText), t.clientOffset_ = a - Date.now(), e()
                    }
                }))
            }
        }, {
            key: "onClientServerClockSync_", value: function () {
                var e = this;
                this.master = this.parseMasterXml(), this.state = "HAVE_MASTER", this.trigger("loadedplaylist"), this.media_ || this.media(this.master.playlists[0]), r.setTimeout(function () {
                    e.trigger("loadedmetadata")
                }, 0), this.master.minimumUpdatePeriod && r.setTimeout(function () {
                    e.trigger("minimumUpdatePeriod")
                }, this.master.minimumUpdatePeriod)
            }
        }, {
            key: "refreshXml_", value: function () {
                var e = this;
                this.request = this.hls_.xhr({
                    uri: this.srcUrl,
                    withCredentials: this.withCredentials
                }, function (t, i) {
                    if (e.request) {
                        if (e.request = null, t) return e.error = {
                            status: i.status,
                            message: "DASH playlist request error at URL: " + e.srcUrl,
                            responseText: i.responseText,
                            code: 2
                        }, "HAVE_NOTHING" === e.state && (e.started = !1), e.trigger("error");
                        e.masterXml_ = i.responseText;
                        var n = e.parseMasterXml();
                        e.master = gh(e.master, n), r.setTimeout(function () {
                            e.trigger("minimumUpdatePeriod")
                        }, e.master.minimumUpdatePeriod)
                    }
                })
            }
        }, {
            key: "refreshMedia_", value: function () {
                var e = this, t = void 0, i = void 0;
                this.masterPlaylistLoader_ ? (t = this.masterPlaylistLoader_.master, i = this.masterPlaylistLoader_.parseMasterXml()) : (t = this.master, i = this.parseMasterXml());
                var n = gh(t, i);
                n ? (this.masterPlaylistLoader_ ? this.masterPlaylistLoader_.master = n : this.master = n, this.media_ = n.playlists[this.media_.uri]) : this.trigger("playlistunchanged"), this.media().endList || (this.mediaUpdateTimeout = r.setTimeout(function () {
                    e.trigger("mediaupdatetimeout")
                }, sc(this.media(), !!n))), this.trigger("loadedplaylist")
            }
        }]), t
    }(), _h = function (e) {
        return ka.log.debug ? ka.log.debug.bind(ka, "VHS:", e + " >") : function () {
        }
    };

    function vh() {
    }

    var bh = function () {
            function e(t, i, n, r) {
                Yd(this, e), this.callbacks_ = [], this.pendingCallback_ = null, this.timestampOffset_ = 0, this.mediaSource = t, this.processedAppend_ = !1, this.type_ = n, this.mimeType_ = i, this.logger_ = _h("SourceUpdater[" + n + "][" + i + "]"), "closed" === t.readyState ? t.addEventListener("sourceopen", this.createSourceBuffer_.bind(this, i, r)) : this.createSourceBuffer_(i, r)
            }

            return Kd(e, [{
                key: "createSourceBuffer_", value: function (e, t) {
                    var i = this;
                    this.sourceBuffer_ = this.mediaSource.addSourceBuffer(e), this.logger_("created SourceBuffer"), t && (t.trigger("sourcebufferadded"), this.mediaSource.sourceBuffers.length < 2) ? t.on("sourcebufferadded", function () {
                        i.start_()
                    }) : this.start_()
                }
            }, {
                key: "start_", value: function () {
                    var e = this;
                    this.started_ = !0, this.onUpdateendCallback_ = function () {
                        var t = e.pendingCallback_;
                        e.pendingCallback_ = null, e.logger_("buffered [" + Mc(e.buffered()) + "]"), t && t(), e.runCallback_()
                    }, this.sourceBuffer_.addEventListener("updateend", this.onUpdateendCallback_), this.runCallback_()
                }
            }, {
                key: "abort", value: function (e) {
                    var t = this;
                    this.processedAppend_ && this.queueCallback_(function () {
                        t.sourceBuffer_.abort()
                    }, e)
                }
            }, {
                key: "appendBuffer", value: function (e, t) {
                    var i = this;
                    this.processedAppend_ = !0, this.queueCallback_(function () {
                        i.sourceBuffer_.appendBuffer(e)
                    }, t)
                }
            }, {
                key: "buffered", value: function () {
                    return this.sourceBuffer_ ? this.sourceBuffer_.buffered : ka.createTimeRanges()
                }
            }, {
                key: "remove", value: function (e, t) {
                    var i = this, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : vh;
                    this.processedAppend_ && this.queueCallback_(function () {
                        i.logger_("remove [" + e + " => " + t + "]"), i.sourceBuffer_.remove(e, t)
                    }, n)
                }
            }, {
                key: "updating", value: function () {
                    return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_
                }
            }, {
                key: "timestampOffset", value: function (e) {
                    var t = this;
                    return void 0 !== e && (this.queueCallback_(function () {
                        t.sourceBuffer_.timestampOffset = e
                    }), this.timestampOffset_ = e), this.timestampOffset_
                }
            }, {
                key: "queueCallback_", value: function (e, t) {
                    this.callbacks_.push([e.bind(this), t]), this.runCallback_()
                }
            }, {
                key: "runCallback_", value: function () {
                    var e = void 0;
                    !this.updating() && this.callbacks_.length && this.started_ && (e = this.callbacks_.shift(), this.pendingCallback_ = e[1], e[0]())
                }
            }, {
                key: "dispose", value: function () {
                    this.sourceBuffer_.removeEventListener("updateend", this.onUpdateendCallback_), this.sourceBuffer_ && "open" === this.mediaSource.readyState && this.sourceBuffer_.abort()
                }
            }]), e
        }(), Th = {
            GOAL_BUFFER_LENGTH: 30,
            MAX_GOAL_BUFFER_LENGTH: 60,
            GOAL_BUFFER_LENGTH_RATE: 1,
            BANDWIDTH_VARIANCE: 1.2,
            BUFFER_LOW_WATER_LINE: 0,
            MAX_BUFFER_LOW_WATER_LINE: 30,
            BUFFER_LOW_WATER_LINE_RATE: 1
        }, Sh = 2, kh = -101, wh = -102, Eh = function (e) {
            var t = {};
            return e.byterange && (t.Range = function (e) {
                var t = void 0;
                return t = e.offset + e.length - 1, "bytes=" + e.offset + "-" + t
            }(e.byterange)), t
        }, Ch = function (e) {
            e.forEach(function (e) {
                e.abort()
            })
        }, Ah = function (e, t) {
            return t.timedout ? {
                status: t.status,
                message: "HLS request timed-out at URL: " + t.uri,
                code: kh,
                xhr: t
            } : t.aborted ? {
                status: t.status,
                message: "HLS request aborted at URL: " + t.uri,
                code: wh,
                xhr: t
            } : e ? {status: t.status, message: "HLS request errored at URL: " + t.uri, code: Sh, xhr: t} : null
        }, Lh = function (e, t, i) {
            var n = [], r = 0;
            return function (a, s) {
                if (a && (Ch(e), n.push(a)), (r += 1) === e.length) {
                    if (s.endOfAllRequests = Date.now(), n.length > 0) {
                        var o = (c = n, c.reduce(function (e, t) {
                            return t.code > e.code ? t : e
                        }));
                        return i(o, s)
                    }
                    return s.encryptedBytes ? (l = s, d = i, (u = t).addEventListener("message", function e(t) {
                        if (t.data.source === l.requestId) {
                            u.removeEventListener("message", e);
                            var i = t.data.decrypted;
                            return l.bytes = new Uint8Array(i.bytes, i.byteOffset, i.byteLength), d(null, l)
                        }
                    }), void u.postMessage(Oc({
                        source: l.requestId,
                        encrypted: l.encryptedBytes,
                        key: l.key.bytes,
                        iv: l.key.iv
                    }), [l.encryptedBytes.buffer, l.key.bytes.buffer])) : i(null, s)
                }
                var u, l, d, c
            }
        }, Oh = function (e, t) {
            return function (i) {
                return e.stats = ka.mergeOptions(e.stats, function (e) {
                    var t = e.target,
                        i = {bandwidth: 1 / 0, bytesReceived: 0, roundTripTime: Date.now() - t.requestTime || 0};
                    return i.bytesReceived = e.loaded, i.bandwidth = Math.floor(i.bytesReceived / i.roundTripTime * 8 * 1e3), i
                }(i)), !e.stats.firstBytesReceivedAt && e.stats.bytesReceived && (e.stats.firstBytesReceivedAt = Date.now()), t(i, e)
            }
        }, Ih = function (e, t, i, n, r, a, s) {
            var o = [], u = Lh(o, i, s);
            if (r.key) {
                var l = e(ka.mergeOptions(t, {
                    uri: r.key.resolvedUri,
                    responseType: "arraybuffer"
                }), (d = r, c = u, function (e, t) {
                    var i = t.response, n = Ah(e, t);
                    if (n) return c(n, d);
                    if (16 !== i.byteLength) return c({
                        status: t.status,
                        message: "Invalid HLS key at URL: " + t.uri,
                        code: Sh,
                        xhr: t
                    }, d);
                    var r = new DataView(i);
                    return d.key.bytes = new Uint32Array([r.getUint32(0), r.getUint32(4), r.getUint32(8), r.getUint32(12)]), c(null, d)
                }));
                o.push(l)
            }
            var d, c;
            if (r.map && !r.map.bytes) {
                var h = e(ka.mergeOptions(t, {
                    uri: r.map.resolvedUri,
                    responseType: "arraybuffer",
                    headers: Eh(r.map)
                }), (f = r, p = n, m = u, function (e, t) {
                    var i = t.response, n = Ah(e, t);
                    return n ? m(n, f) : 0 === i.byteLength ? m({
                        status: t.status,
                        message: "Empty HLS segment content at URL: " + t.uri,
                        code: Sh,
                        xhr: t
                    }, f) : (f.map.bytes = new Uint8Array(t.response), p.isInitialized() || p.init(), f.map.timescales = uo.timescale(f.map.bytes), f.map.videoTrackIds = uo.videoTrackIds(f.map.bytes), m(null, f))
                }));
                o.push(h)
            }
            var f, p, m, g, y, _, v = e(ka.mergeOptions(t, {
                uri: r.resolvedUri,
                responseType: "arraybuffer",
                headers: Eh(r)
            }), (g = r, y = n, _ = u, function (e, t) {
                var i = t.response, n = Ah(e, t), r = void 0;
                if (n) return _(n, g);
                if (0 === i.byteLength) return _({
                    status: t.status,
                    message: "Empty HLS segment content at URL: " + t.uri,
                    code: Sh,
                    xhr: t
                }, g);
                g.stats = (a = t, {
                    bandwidth: a.bandwidth,
                    bytesReceived: a.bytesReceived || 0,
                    roundTripTime: a.roundTripTime || 0
                });
                var a;
                return g.key ? g.encryptedBytes = new Uint8Array(t.response) : g.bytes = new Uint8Array(t.response), g.map && g.map.bytes && (y.isInitialized() || y.init(), (r = y.parse(g.bytes, g.map.videoTrackIds, g.map.timescales)) && r.captions && (g.captionStreams = r.captionStreams, g.fmp4Captions = r.captions)), _(null, g)
            }));
            return v.addEventListener("progress", Oh(r, a)), o.push(v), function () {
                return Ch(o)
            }
        }, Ph = function (e, t) {
            var i = void 0;
            return e && (i = r.getComputedStyle(e)) ? i[t] : ""
        }, Rh = function (e, t) {
            var i = e.slice();
            e.sort(function (e, n) {
                var r = t(e, n);
                return 0 === r ? i.indexOf(e) - i.indexOf(n) : r
            })
        }, xh = function (e, t) {
            var i = void 0, n = void 0;
            return e.attributes.BANDWIDTH && (i = e.attributes.BANDWIDTH), i = i || r.Number.MAX_VALUE, t.attributes.BANDWIDTH && (n = t.attributes.BANDWIDTH), i - (n = n || r.Number.MAX_VALUE)
        }, Dh = function (e, t, i) {
            if (!e || !t) return !1;
            var n = i === e.segments.length;
            return e.endList && "open" === t.readyState && n
        }, Uh = function (e) {
            return "number" == typeof e && isFinite(e)
        }, Mh = function (e) {
            $d(t, e);

            function t(e) {
                Yd(this, t);
                var i = Qd(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                if (!e) throw new TypeError("Initialization settings are required");
                if ("function" != typeof e.currentTime) throw new TypeError("No currentTime getter specified");
                if (!e.mediaSource) throw new TypeError("No MediaSource specified");
                return i.bandwidth = e.bandwidth, i.throughput = {
                    rate: 0,
                    count: 0
                }, i.roundTrip = NaN, i.resetStats_(), i.mediaIndex = null, i.hasPlayed_ = e.hasPlayed, i.currentTime_ = e.currentTime, i.seekable_ = e.seekable, i.seeking_ = e.seeking, i.duration_ = e.duration, i.mediaSource_ = e.mediaSource, i.hls_ = e.hls, i.loaderType_ = e.loaderType, i.startingMedia_ = void 0, i.segmentMetadataTrack_ = e.segmentMetadataTrack, i.goalBufferLength_ = e.goalBufferLength, i.sourceType_ = e.sourceType, i.inbandTextTracks_ = e.inbandTextTracks, i.state_ = "INIT", i.checkBufferTimeout_ = null, i.error_ = void 0, i.currentTimeline_ = -1, i.pendingSegment_ = null, i.mimeType_ = null, i.sourceUpdater_ = null, i.xhrOptions_ = null, i.activeInitSegmentId_ = null, i.initSegments_ = {}, i.captionParser_ = new ad, i.decrypter_ = e.decrypter, i.syncController_ = e.syncController, i.syncPoint_ = {
                    segmentIndex: 0,
                    time: 0
                }, i.syncController_.on("syncinfoupdate", function () {
                    return i.trigger("syncinfoupdate")
                }), i.mediaSource_.addEventListener("sourceopen", function () {
                    return i.ended_ = !1
                }), i.fetchAtBuffer_ = !1, i.logger_ = _h("SegmentLoader[" + i.loaderType_ + "]"), Object.defineProperty(i, "state", {
                    get: function () {
                        return this.state_
                    }, set: function (e) {
                        e !== this.state_ && (this.logger_(this.state_ + " -> " + e), this.state_ = e)
                    }
                }), i
            }

            return Kd(t, [{
                key: "resetStats_", value: function () {
                    this.mediaBytesTransferred = 0, this.mediaRequests = 0, this.mediaRequestsAborted = 0, this.mediaRequestsTimedout = 0, this.mediaRequestsErrored = 0, this.mediaTransferDuration = 0, this.mediaSecondsLoaded = 0
                }
            }, {
                key: "dispose", value: function () {
                    this.state = "DISPOSED", this.pause(), this.abort_(), this.sourceUpdater_ && this.sourceUpdater_.dispose(), this.resetStats_(), this.captionParser_.reset()
                }
            }, {
                key: "abort", value: function () {
                    "WAITING" === this.state ? (this.abort_(), this.state = "READY", this.paused() || this.monitorBuffer_()) : this.pendingSegment_ && (this.pendingSegment_ = null)
                }
            }, {
                key: "abort_", value: function () {
                    this.pendingSegment_ && this.pendingSegment_.abortRequests(), this.pendingSegment_ = null
                }
            }, {
                key: "error", value: function (e) {
                    return void 0 !== e && (this.error_ = e), this.pendingSegment_ = null, this.error_
                }
            }, {
                key: "endOfStream", value: function () {
                    this.ended_ = !0, this.pause(), this.trigger("ended")
                }
            }, {
                key: "buffered_", value: function () {
                    return this.sourceUpdater_ ? this.sourceUpdater_.buffered() : ka.createTimeRanges()
                }
            }, {
                key: "initSegment", value: function (e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    if (!e) return null;
                    var i = Ic(e), n = this.initSegments_[i];
                    return t && !n && e.bytes && (this.initSegments_[i] = n = {
                        resolvedUri: e.resolvedUri,
                        byterange: e.byterange,
                        bytes: e.bytes,
                        timescales: e.timescales,
                        videoTrackIds: e.videoTrackIds
                    }), n || e
                }
            }, {
                key: "couldBeginLoading_", value: function () {
                    return this.playlist_ && (this.sourceUpdater_ || this.mimeType_ && "INIT" === this.state) && !this.paused()
                }
            }, {
                key: "load", value: function () {
                    if (this.monitorBuffer_(), this.playlist_) {
                        if (this.syncController_.setDateTimeMapping(this.playlist_), "INIT" === this.state && this.couldBeginLoading_()) return this.init_();
                        !this.couldBeginLoading_() || "READY" !== this.state && "INIT" !== this.state || (this.state = "READY")
                    }
                }
            }, {
                key: "init_", value: function () {
                    return this.state = "READY", this.sourceUpdater_ = new bh(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_), this.resetEverything(), this.monitorBuffer_()
                }
            }, {
                key: "playlist", value: function (e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    if (e) {
                        var i = this.playlist_, n = this.pendingSegment_;
                        this.playlist_ = e, this.xhrOptions_ = t, this.hasPlayed_() || (e.syncInfo = {
                            mediaSequence: e.mediaSequence,
                            time: 0
                        });
                        var r = i ? i.id : null;
                        if (this.logger_("playlist update [" + r + " => " + e.id + "]"), this.trigger("syncinfoupdate"), "INIT" === this.state && this.couldBeginLoading_()) return this.init_();
                        if (i && i.uri === e.uri) {
                            var a = e.mediaSequence - i.mediaSequence;
                            this.logger_("live window shift [" + a + "]"), null !== this.mediaIndex && (this.mediaIndex -= a), n && (n.mediaIndex -= a, n.mediaIndex >= 0 && (n.segment = e.segments[n.mediaIndex])), this.syncController_.saveExpiredSegmentInfo(i, e)
                        } else null !== this.mediaIndex && this.resyncLoader()
                    }
                }
            }, {
                key: "pause", value: function () {
                    this.checkBufferTimeout_ && (r.clearTimeout(this.checkBufferTimeout_), this.checkBufferTimeout_ = null)
                }
            }, {
                key: "paused", value: function () {
                    return null === this.checkBufferTimeout_
                }
            }, {
                key: "mimeType", value: function (e, t) {
                    this.mimeType_ || (this.mimeType_ = e, this.sourceBufferEmitter_ = t, "INIT" === this.state && this.couldBeginLoading_() && this.init_())
                }
            }, {
                key: "resetEverything", value: function (e) {
                    this.ended_ = !1, this.resetLoader(), this.remove(0, this.duration_(), e), this.captionParser_.clearAllCaptions(), this.trigger("reseteverything")
                }
            }, {
                key: "resetLoader", value: function () {
                    this.fetchAtBuffer_ = !1, this.resyncLoader()
                }
            }, {
                key: "resyncLoader", value: function () {
                    this.mediaIndex = null, this.syncPoint_ = null, this.abort()
                }
            }, {
                key: "remove", value: function (e, t, i) {
                    if (this.sourceUpdater_ && this.sourceUpdater_.remove(e, t, i), jc(e, t, this.segmentMetadataTrack_), this.inbandTextTracks_) for (var n in this.inbandTextTracks_) jc(e, t, this.inbandTextTracks_[n])
                }
            }, {
                key: "monitorBuffer_", value: function () {
                    this.checkBufferTimeout_ && r.clearTimeout(this.checkBufferTimeout_), this.checkBufferTimeout_ = r.setTimeout(this.monitorBufferTick_.bind(this), 1)
                }
            }, {
                key: "monitorBufferTick_", value: function () {
                    "READY" === this.state && this.fillBuffer_(), this.checkBufferTimeout_ && r.clearTimeout(this.checkBufferTimeout_), this.checkBufferTimeout_ = r.setTimeout(this.monitorBufferTick_.bind(this), 500)
                }
            }, {
                key: "fillBuffer_", value: function () {
                    if (!this.sourceUpdater_.updating()) {
                        this.syncPoint_ || (this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_()));
                        var e = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);
                        if (e) {
                            Dh(this.playlist_, this.mediaSource_, e.mediaIndex) ? this.endOfStream() : (e.mediaIndex !== this.playlist_.segments.length - 1 || "ended" !== this.mediaSource_.readyState || this.seeking_()) && ((e.timeline !== this.currentTimeline_ || null !== e.startOfSegment && e.startOfSegment < this.sourceUpdater_.timestampOffset()) && (this.syncController_.reset(), e.timestampOffset = e.startOfSegment, this.captionParser_.clearAllCaptions()), this.loadSegment_(e))
                        }
                    }
                }
            }, {
                key: "checkBuffer_", value: function (e, t, i, n, r, a) {
                    var s = 0, o = void 0;
                    e.length && (s = e.end(e.length - 1));
                    var u = Math.max(0, s - r);
                    if (!t.segments.length) return null;
                    if (u >= this.goalBufferLength_()) return null;
                    if (!n && u >= 1) return null;
                    if (null === a) return i = this.getSyncSegmentCandidate_(t), this.generateSegmentInfo_(t, i, null, !0);
                    if (null !== i) {
                        var l = t.segments[i];
                        return o = l && l.end ? l.end : s, this.generateSegmentInfo_(t, i + 1, o, !1)
                    }
                    if (this.fetchAtBuffer_) {
                        var d = kc.getMediaInfoForTime(t, s, a.segmentIndex, a.time);
                        i = d.mediaIndex, o = d.startTime
                    } else {
                        var c = kc.getMediaInfoForTime(t, r, a.segmentIndex, a.time);
                        i = c.mediaIndex, o = c.startTime
                    }
                    return this.generateSegmentInfo_(t, i, o, !1)
                }
            }, {
                key: "getSyncSegmentCandidate_", value: function (e) {
                    var t = this;
                    if (-1 === this.currentTimeline_) return 0;
                    var i = e.segments.map(function (e, t) {
                        return {timeline: e.timeline, segmentIndex: t}
                    }).filter(function (e) {
                        return e.timeline === t.currentTimeline_
                    });
                    return i.length ? i[Math.min(i.length - 1, 1)].segmentIndex : Math.max(e.segments.length - 1, 0)
                }
            }, {
                key: "generateSegmentInfo_", value: function (e, t, i, n) {
                    if (t < 0 || t >= e.segments.length) return null;
                    var r = e.segments[t];
                    return {
                        requestId: "segment-loader-" + Math.random(),
                        uri: r.resolvedUri,
                        mediaIndex: t,
                        isSyncRequest: n,
                        startOfSegment: i,
                        playlist: e,
                        bytes: null,
                        encryptedBytes: null,
                        timestampOffset: null,
                        timeline: r.timeline,
                        duration: r.duration,
                        segment: r
                    }
                }
            }, {
                key: "abortRequestEarly_", value: function (e) {
                    if (this.hls_.tech_.paused() || !this.xhrOptions_.timeout || !this.playlist_.attributes.BANDWIDTH) return !1;
                    if (Date.now() - (e.firstBytesReceivedAt || Date.now()) < 1e3) return !1;
                    var t = this.currentTime_(), i = e.bandwidth, n = this.pendingSegment_.duration,
                        r = kc.estimateSegmentRequestTime(n, i, this.playlist_, e.bytesReceived), a = function (e, t) {
                            var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
                            return ((e.length ? e.end(e.length - 1) : 0) - t) / i
                        }(this.buffered_(), t, this.hls_.tech_.playbackRate()) - 1;
                    if (r <= a) return !1;
                    var s = function (e) {
                        var t = e.master, i = e.currentTime, n = e.bandwidth, r = e.duration, a = e.segmentDuration,
                            s = e.timeUntilRebuffer, o = e.currentTimeline, u = e.syncController,
                            l = t.playlists.filter(function (e) {
                                return !kc.isIncompatible(e)
                            }), d = l.filter(kc.isEnabled);
                        d.length || (d = l.filter(function (e) {
                            return !kc.isDisabled(e)
                        }));
                        var c = d.filter(kc.hasAttribute.bind(null, "BANDWIDTH")).map(function (e) {
                            var t = u.getSyncPoint(e, r, o, i) ? 1 : 2;
                            return {playlist: e, rebufferingImpact: kc.estimateSegmentRequestTime(a, n, e) * t - s}
                        }), h = c.filter(function (e) {
                            return e.rebufferingImpact <= 0
                        });
                        return Rh(h, function (e, t) {
                            return xh(t.playlist, e.playlist)
                        }), h.length ? h[0] : (Rh(c, function (e, t) {
                            return e.rebufferingImpact - t.rebufferingImpact
                        }), c[0] || null)
                    }({
                        master: this.hls_.playlists.master,
                        currentTime: t,
                        bandwidth: i,
                        duration: this.duration_(),
                        segmentDuration: n,
                        timeUntilRebuffer: a,
                        currentTimeline: this.currentTimeline_,
                        syncController: this.syncController_
                    });
                    if (s) {
                        var o = r - a - s.rebufferingImpact, u = .5;
                        return a <= 1 / 30 && (u = 1), !s.playlist || s.playlist.uri === this.playlist_.uri || o < u ? !1 : (this.bandwidth = s.playlist.attributes.BANDWIDTH * Th.BANDWIDTH_VARIANCE + 1, this.abort(), this.trigger("earlyabort"), !0)
                    }
                }
            }, {
                key: "handleProgress_", value: function (e, t) {
                    this.pendingSegment_ && t.requestId === this.pendingSegment_.requestId && !this.abortRequestEarly_(t.stats) && this.trigger("progress")
                }
            }, {
                key: "loadSegment_", value: function (e) {
                    this.state = "WAITING", this.pendingSegment_ = e, this.trimBackBuffer_(e), e.abortRequests = Ih(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(e), this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this))
                }
            }, {
                key: "trimBackBuffer_", value: function (e) {
                    var t = function (e, t, i) {
                        var n = void 0;
                        return n = e.length && e.start(0) > 0 && e.start(0) < t ? e.start(0) : t - 30, Math.min(n, t - i)
                    }(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);
                    t > 0 && this.remove(0, t)
                }
            }, {
                key: "createSimplifiedSegmentObj_", value: function (e) {
                    var t = e.segment, i = {resolvedUri: t.resolvedUri, byterange: t.byterange, requestId: e.requestId};
                    if (t.key) {
                        var n = t.key.iv || new Uint32Array([0, 0, 0, e.mediaIndex + e.playlist.mediaSequence]);
                        i.key = {resolvedUri: t.key.resolvedUri, iv: n}
                    }
                    return t.map && (i.map = this.initSegment(t.map)), i
                }
            }, {
                key: "segmentRequestFinished_", value: function (e, t) {
                    if (this.mediaRequests += 1, t.stats && (this.mediaBytesTransferred += t.stats.bytesReceived, this.mediaTransferDuration += t.stats.roundTripTime), this.pendingSegment_) {
                        if (t.requestId === this.pendingSegment_.requestId) {
                            if (e) return this.pendingSegment_ = null, this.state = "READY", e.code === wh ? void(this.mediaRequestsAborted += 1) : (this.pause(), e.code === kh ? (this.mediaRequestsTimedout += 1, this.bandwidth = 1, this.roundTrip = NaN, void this.trigger("bandwidthupdate")) : (this.mediaRequestsErrored += 1, this.error(e), void this.trigger("error")));
                            this.bandwidth = t.stats.bandwidth, this.roundTrip = t.stats.roundTripTime, t.map && (t.map = this.initSegment(t.map, !0)), this.processSegmentResponse_(t)
                        }
                    } else this.mediaRequestsAborted += 1
                }
            }, {
                key: "processSegmentResponse_", value: function (e) {
                    var t = this.pendingSegment_;
                    t.bytes = e.bytes, e.map && (t.segment.map.bytes = e.map.bytes), t.endOfAllRequests = e.endOfAllRequests, e.fmp4Captions && (!function (e, t, i) {
                        for (var n in i) if (!e[n]) {
                            t.trigger({type: "usage", name: "hls-608"});
                            var r = t.textTracks().getTrackById(n);
                            e[n] = r || t.addRemoteTextTrack({kind: "captions", id: n, label: n}, !1).track
                        }
                    }(this.inbandTextTracks_, this.hls_.tech_, e.captionStreams), function (e) {
                        var t = e.inbandTextTracks, i = e.captionArray, n = e.timestampOffset;
                        if (i) {
                            var r = window.WebKitDataCue || window.VTTCue;
                            i.forEach(function (e) {
                                var i = e.stream, a = e.startTime, s = e.endTime;
                                t[i] && (a += n, s += n, t[i].addCue(new r(a, s, e.text)))
                            })
                        }
                    }({
                        inbandTextTracks: this.inbandTextTracks_,
                        captionArray: e.fmp4Captions,
                        timestampOffset: 0
                    }), this.captionParser_.clearParsedCaptions()), this.handleSegment_()
                }
            }, {
                key: "handleSegment_", value: function () {
                    var e = this;
                    if (this.pendingSegment_) {
                        var t = this.pendingSegment_, i = t.segment, n = this.syncController_.probeSegmentInfo(t);
                        void 0 === this.startingMedia_ && n && (n.containsAudio || n.containsVideo) && (this.startingMedia_ = {
                            containsAudio: n.containsAudio,
                            containsVideo: n.containsVideo
                        });
                        var r, a, s,
                            o = (r = this.loaderType_, a = this.startingMedia_, s = n, "main" === r && a && s ? s.containsAudio || s.containsVideo ? a.containsVideo && !s.containsVideo ? "Only audio found in segment when we expected video. We can't switch to audio only from a stream that had video. To get rid of this message, please add codec information to the manifest." : !a.containsVideo && s.containsVideo ? "Video found in segment when we expected only audio. We can't switch to a stream with video from an audio only stream. To get rid of this message, please add codec information to the manifest." : null : "Neither audio nor video found in segment." : null);
                        if (o) return this.error({message: o, blacklistDuration: 1 / 0}), void this.trigger("error");
                        if (t.isSyncRequest) return this.trigger("syncinfoupdate"), this.pendingSegment_ = null, void(this.state = "READY");
                        null !== t.timestampOffset && t.timestampOffset !== this.sourceUpdater_.timestampOffset() && (this.sourceUpdater_.timestampOffset(t.timestampOffset), this.trigger("timestampoffset"));
                        var u = this.syncController_.mappingForTimeline(t.timeline);
                        if (null !== u && this.trigger({
                            type: "segmenttimemapping",
                            mapping: u
                        }), this.state = "APPENDING", i.map) {
                            var l = Ic(i.map);
                            if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== l) {
                                var d = this.initSegment(i.map);
                                this.sourceUpdater_.appendBuffer(d.bytes, function () {
                                    e.activeInitSegmentId_ = l
                                })
                            }
                        }
                        t.byteLength = t.bytes.byteLength, "number" == typeof i.start && "number" == typeof i.end ? this.mediaSecondsLoaded += i.end - i.start : this.mediaSecondsLoaded += i.duration, this.logger_(function (e) {
                            var t = e.segment, i = t.start, n = t.end, r = e.playlist, a = r.mediaSequence, s = r.id,
                                o = r.segments, u = void 0 === o ? [] : o, l = e.mediaIndex, d = e.timeline;
                            return ["appending [" + l + "] of [" + a + ", " + (a + u.length) + "] from playlist [" + s + "]", "[" + i + " => " + n + "] in timeline [" + d + "]"].join(" ")
                        }(t)), this.sourceUpdater_.appendBuffer(t.bytes, this.handleUpdateEnd_.bind(this))
                    } else this.state = "READY"
                }
            }, {
                key: "handleUpdateEnd_", value: function () {
                    if (!this.pendingSegment_) return this.state = "READY", void(this.paused() || this.monitorBuffer_());
                    var e = this.pendingSegment_, t = e.segment, i = null !== this.mediaIndex;
                    if (this.pendingSegment_ = null, this.recordThroughput_(e), this.addSegmentMetadataCue_(e), this.state = "READY", this.mediaIndex = e.mediaIndex, this.fetchAtBuffer_ = !0, this.currentTimeline_ = e.timeline, this.trigger("syncinfoupdate"), t.end && this.currentTime_() - t.end > 3 * e.playlist.targetDuration) this.resetEverything(); else {
                        i && this.trigger("bandwidthupdate"), this.trigger("progress");
                        Dh(e.playlist, this.mediaSource_, e.mediaIndex + 1) && this.endOfStream(), this.paused() || this.monitorBuffer_()
                    }
                }
            }, {
                key: "recordThroughput_", value: function (e) {
                    var t = this.throughput.rate, i = Date.now() - e.endOfAllRequests + 1,
                        n = Math.floor(e.byteLength / i * 8 * 1e3);
                    this.throughput.rate += (n - t) / ++this.throughput.count
                }
            }, {
                key: "addSegmentMetadataCue_", value: function (e) {
                    if (this.segmentMetadataTrack_) {
                        var t = e.segment, i = t.start, n = t.end;
                        if (Uh(i) && Uh(n)) {
                            jc(i, n, this.segmentMetadataTrack_);
                            var a = r.WebKitDataCue || r.VTTCue, s = {
                                bandwidth: e.playlist.attributes.BANDWIDTH,
                                resolution: e.playlist.attributes.RESOLUTION,
                                codecs: e.playlist.attributes.CODECS,
                                byteLength: e.byteLength,
                                uri: e.uri,
                                timeline: e.timeline,
                                playlist: e.playlist.uri,
                                start: i,
                                end: n
                            }, o = new a(i, n, JSON.stringify(s));
                            o.value = s, this.segmentMetadataTrack_.addCue(o)
                        }
                    }
                }
            }]), t
        }(ka.EventTarget), Bh = function (e) {
            return decodeURIComponent(escape(String.fromCharCode.apply(null, e)))
        }, jh = new Uint8Array("\n\n".split("").map(function (e) {
            return e.charCodeAt(0)
        })), Nh = function (e) {
            $d(t, Mh);

            function t(e) {
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                Yd(this, t);
                var n = Qd(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e, i));
                return n.mediaSource_ = null, n.subtitlesTrack_ = null, n
            }

            return Kd(t, [{
                key: "buffered_", value: function () {
                    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) return ka.createTimeRanges();
                    var e = this.subtitlesTrack_.cues, t = e[0].startTime, i = e[e.length - 1].startTime;
                    return ka.createTimeRanges([[t, i]])
                }
            }, {
                key: "initSegment", value: function (e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    if (!e) return null;
                    var i = Ic(e), n = this.initSegments_[i];
                    if (t && !n && e.bytes) {
                        var r = jh.byteLength + e.bytes.byteLength, a = new Uint8Array(r);
                        a.set(e.bytes), a.set(jh, e.bytes.byteLength), this.initSegments_[i] = n = {
                            resolvedUri: e.resolvedUri,
                            byterange: e.byterange,
                            bytes: a
                        }
                    }
                    return n || e
                }
            }, {
                key: "couldBeginLoading_", value: function () {
                    return this.playlist_ && this.subtitlesTrack_ && !this.paused()
                }
            }, {
                key: "init_", value: function () {
                    return this.state = "READY", this.resetEverything(), this.monitorBuffer_()
                }
            }, {
                key: "track", value: function (e) {
                    return void 0 === e ? this.subtitlesTrack_ : (this.subtitlesTrack_ = e, "INIT" === this.state && this.couldBeginLoading_() && this.init_(), this.subtitlesTrack_)
                }
            }, {
                key: "remove", value: function (e, t) {
                    jc(e, t, this.subtitlesTrack_)
                }
            }, {
                key: "fillBuffer_", value: function () {
                    var e = this;
                    this.syncPoint_ || (this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_()));
                    var t = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);
                    if (t = this.skipEmptySegments_(t)) {
                        if (null === this.syncController_.timestampOffsetForTimeline(t.timeline)) {
                            var i = function () {
                                e.state = "READY", e.paused() || e.monitorBuffer_()
                            };
                            return this.syncController_.one("timestampoffset", i), void(this.state = "WAITING_ON_TIMELINE")
                        }
                        this.loadSegment_(t)
                    }
                }
            }, {
                key: "skipEmptySegments_", value: function (e) {
                    for (; e && e.segment.empty;) e = this.generateSegmentInfo_(e.playlist, e.mediaIndex + 1, e.startOfSegment + e.duration, e.isSyncRequest);
                    return e
                }
            }, {
                key: "handleSegment_", value: function () {
                    var e = this;
                    if (this.pendingSegment_ && this.subtitlesTrack_) {
                        this.state = "APPENDING";
                        var t = this.pendingSegment_, i = t.segment;
                        if ("function" != typeof r.WebVTT && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {
                            var n = function () {
                                e.handleSegment_()
                            };
                            return this.state = "WAITING_ON_VTTJS", this.subtitlesTrack_.tech_.one("vttjsloaded", n), void this.subtitlesTrack_.tech_.one("vttjserror", function () {
                                e.subtitlesTrack_.tech_.off("vttjsloaded", n), e.error({message: "Error loading vtt.js"}), e.state = "READY", e.pause(), e.trigger("error")
                            })
                        }
                        i.requested = !0;
                        try {
                            this.parseVTTCues_(t)
                        } catch (e) {
                            return this.error({message: e.message}), this.state = "READY", this.pause(), this.trigger("error")
                        }
                        if (this.updateTimeMapping_(t, this.syncController_.timelines[t.timeline], this.playlist_), t.isSyncRequest) return this.trigger("syncinfoupdate"), this.pendingSegment_ = null, void(this.state = "READY");
                        t.byteLength = t.bytes.byteLength, this.mediaSecondsLoaded += i.duration, t.cues.length && this.remove(t.cues[0].endTime, t.cues[t.cues.length - 1].endTime), t.cues.forEach(function (t) {
                            e.subtitlesTrack_.addCue(t)
                        }), this.handleUpdateEnd_()
                    } else this.state = "READY"
                }
            }, {
                key: "parseVTTCues_", value: function (e) {
                    var t = void 0, i = !1;
                    "function" == typeof r.TextDecoder ? t = new r.TextDecoder("utf8") : (t = r.WebVTT.StringDecoder(), i = !0);
                    var n = new r.WebVTT.Parser(r, r.vttjs, t);
                    if (e.cues = [], e.timestampmap = {
                        MPEGTS: 0,
                        LOCAL: 0
                    }, n.oncue = e.cues.push.bind(e.cues), n.ontimestampmap = function (t) {
                        return e.timestampmap = t
                    }, n.onparsingerror = function (e) {
                        ka.log.warn("Error encountered when parsing cues: " + e.message)
                    }, e.segment.map) {
                        var a = e.segment.map.bytes;
                        i && (a = Bh(a)), n.parse(a)
                    }
                    var s = e.bytes;
                    i && (s = Bh(s)), n.parse(s), n.flush()
                }
            }, {
                key: "updateTimeMapping_", value: function (e, t, i) {
                    var n = e.segment;
                    if (t) if (e.cues.length) {
                        var r = e.timestampmap, a = r.MPEGTS / 9e4 - r.LOCAL + t.mapping;
                        if (e.cues.forEach(function (e) {
                            e.startTime += a, e.endTime += a
                        }), !i.syncInfo) {
                            var s = e.cues[0].startTime, o = e.cues[e.cues.length - 1].startTime;
                            i.syncInfo = {mediaSequence: i.mediaSequence + e.mediaIndex, time: Math.min(s, o - n.duration)}
                        }
                    } else n.empty = !0
                }
            }]), t
        }(), Fh = function (e, t) {
            for (var i = e.cues, n = 0; n < i.length; n++) {
                var r = i[n];
                if (t >= r.adStartTime && t <= r.adEndTime) return r
            }
            return null
        }, Vh = Ud, Gh = [{
            name: "VOD", run: function (e, t, i, n, r) {
                if (i !== 1 / 0) {
                    return {time: 0, segmentIndex: 0}
                }
                return null
            }
        }, {
            name: "ProgramDateTime", run: function (e, t, i, n, r) {
                if (!e.datetimeToDisplayTime) return null;
                var a = t.segments || [], s = null, o = null;
                r = r || 0;
                for (var u = 0; u < a.length; u++) {
                    var l = a[u];
                    if (l.dateTimeObject) {
                        var d = l.dateTimeObject.getTime() / 1e3 + e.datetimeToDisplayTime, c = Math.abs(r - d);
                        if (null !== o && o < c) break;
                        o = c, s = {time: d, segmentIndex: u}
                    }
                }
                return s
            }
        }, {
            name: "Segment", run: function (e, t, i, n, r) {
                var a = t.segments || [], s = null, o = null;
                r = r || 0;
                for (var u = 0; u < a.length; u++) {
                    var l = a[u];
                    if (l.timeline === n && void 0 !== l.start) {
                        var d = Math.abs(r - l.start);
                        if (null !== o && o < d) break;
                        (!s || null === o || o >= d) && (o = d, s = {time: l.start, segmentIndex: u})
                    }
                }
                return s
            }
        }, {
            name: "Discontinuity", run: function (e, t, i, n, r) {
                var a = null;
                if (r = r || 0, t.discontinuityStarts && t.discontinuityStarts.length) for (var s = null, o = 0; o < t.discontinuityStarts.length; o++) {
                    var u = t.discontinuityStarts[o], l = t.discontinuitySequence + o + 1, d = e.discontinuities[l];
                    if (d) {
                        var c = Math.abs(r - d.time);
                        if (null !== s && s < c) break;
                        (!a || null === s || s >= c) && (s = c, a = {time: d.time, segmentIndex: u})
                    }
                }
                return a
            }
        }, {
            name: "Playlist", run: function (e, t, i, n, r) {
                if (t.syncInfo) {
                    return {time: t.syncInfo.time, segmentIndex: t.syncInfo.mediaSequence - t.mediaSequence}
                }
                return null
            }
        }], Hh = function (e) {
            $d(t, e);

            function t() {
                Yd(this, t);
                var e = Qd(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                return e.inspectCache_ = void 0, e.timelines = [], e.discontinuities = [], e.datetimeToDisplayTime = null, e.logger_ = _h("SyncController"), e
            }

            return Kd(t, [{
                key: "getSyncPoint", value: function (e, t, i, n) {
                    var r = this.runStrategies_(e, t, i, n);
                    return r.length ? this.selectSyncPoint_(r, {key: "time", value: n}) : null
                }
            }, {
                key: "getExpiredTime", value: function (e, t) {
                    if (!e || !e.segments) return null;
                    var i = this.runStrategies_(e, t, e.discontinuitySequence, 0);
                    if (!i.length) return null;
                    var n = this.selectSyncPoint_(i, {key: "segmentIndex", value: 0});
                    return n.segmentIndex > 0 && (n.time *= -1), Math.abs(n.time + cc(e, n.segmentIndex, 0))
                }
            }, {
                key: "runStrategies_", value: function (e, t, i, n) {
                    for (var r = [], a = 0; a < Gh.length; a++) {
                        var s = Gh[a], o = s.run(this, e, t, i, n);
                        o && (o.strategy = s.name, r.push({strategy: s.name, syncPoint: o}))
                    }
                    return r
                }
            }, {
                key: "selectSyncPoint_", value: function (e, t) {
                    for (var i = e[0].syncPoint, n = Math.abs(e[0].syncPoint[t.key] - t.value), r = e[0].strategy, a = 1; a < e.length; a++) {
                        var s = Math.abs(e[a].syncPoint[t.key] - t.value);
                        s < n && (n = s, i = e[a].syncPoint, r = e[a].strategy)
                    }
                    return this.logger_("syncPoint for [" + t.key + ": " + t.value + "] chosen with strategy [" + r + "]: [time:" + i.time + ", segmentIndex:" + i.segmentIndex + "]"), i
                }
            }, {
                key: "saveExpiredSegmentInfo", value: function (e, t) {
                    for (var i = t.mediaSequence - e.mediaSequence - 1; i >= 0; i--) {
                        var n = e.segments[i];
                        if (n && void 0 !== n.start) {
                            t.syncInfo = {
                                mediaSequence: e.mediaSequence + i,
                                time: n.start
                            }, this.logger_("playlist refresh sync: [time:" + t.syncInfo.time + ", mediaSequence: " + t.syncInfo.mediaSequence + "]"), this.trigger("syncinfoupdate");
                            break
                        }
                    }
                }
            }, {
                key: "setDateTimeMapping", value: function (e) {
                    if (!this.datetimeToDisplayTime && e.segments && e.segments.length && e.segments[0].dateTimeObject) {
                        var t = e.segments[0].dateTimeObject.getTime() / 1e3;
                        this.datetimeToDisplayTime = -t
                    }
                }
            }, {
                key: "reset", value: function () {
                    this.inspectCache_ = void 0
                }
            }, {
                key: "probeSegmentInfo", value: function (e) {
                    var t = e.segment, i = e.playlist, n = void 0;
                    return (n = t.map ? this.probeMp4Segment_(e) : this.probeTsSegment_(e)) && this.calculateSegmentTimeMapping_(e, n) && (this.saveDiscontinuitySyncInfo_(e), i.syncInfo || (i.syncInfo = {
                        mediaSequence: i.mediaSequence + e.mediaIndex,
                        time: t.start
                    })), n
                }
            }, {
                key: "probeMp4Segment_", value: function (e) {
                    var t = e.segment, i = uo.timescale(t.map.bytes), n = uo.startTime(i, e.bytes);
                    return null !== e.timestampOffset && (e.timestampOffset -= n), {start: n, end: n + t.duration}
                }
            }, {
                key: "probeTsSegment_", value: function (e) {
                    var t = Vh(e.bytes, this.inspectCache_), i = void 0, n = void 0;
                    return t ? (t.video && 2 === t.video.length ? (this.inspectCache_ = t.video[1].dts, i = t.video[0].dtsTime, n = t.video[1].dtsTime) : t.audio && 2 === t.audio.length && (this.inspectCache_ = t.audio[1].dts, i = t.audio[0].dtsTime, n = t.audio[1].dtsTime), {
                        start: i,
                        end: n,
                        containsVideo: t.video && 2 === t.video.length,
                        containsAudio: t.audio && 2 === t.audio.length
                    }) : null
                }
            }, {
                key: "timestampOffsetForTimeline", value: function (e) {
                    return void 0 === this.timelines[e] ? null : this.timelines[e].time
                }
            }, {
                key: "mappingForTimeline", value: function (e) {
                    return void 0 === this.timelines[e] ? null : this.timelines[e].mapping
                }
            }, {
                key: "calculateSegmentTimeMapping_", value: function (e, t) {
                    var i = e.segment, n = this.timelines[e.timeline];
                    if (null !== e.timestampOffset) n = {
                        time: e.startOfSegment,
                        mapping: e.startOfSegment - t.start
                    }, this.timelines[e.timeline] = n, this.trigger("timestampoffset"), this.logger_("time mapping for timeline " + e.timeline + ": [time: " + n.time + "] [mapping: " + n.mapping + "]"), i.start = e.startOfSegment, i.end = t.end + n.mapping; else {
                        if (!n) return !1;
                        i.start = t.start + n.mapping, i.end = t.end + n.mapping
                    }
                    return !0
                }
            }, {
                key: "saveDiscontinuitySyncInfo_", value: function (e) {
                    var t = e.playlist, i = e.segment;
                    if (i.discontinuity) this.discontinuities[i.timeline] = {
                        time: i.start,
                        accuracy: 0
                    }; else if (t.discontinuityStarts && t.discontinuityStarts.length) for (var n = 0; n < t.discontinuityStarts.length; n++) {
                        var r = t.discontinuityStarts[n], a = t.discontinuitySequence + n + 1, s = r - e.mediaIndex,
                            o = Math.abs(s);
                        if (!this.discontinuities[a] || this.discontinuities[a].accuracy > o) {
                            var u = void 0;
                            u = s < 0 ? i.start - cc(t, e.mediaIndex, r) : i.end + cc(t, e.mediaIndex + 1, r), this.discontinuities[a] = {
                                time: u,
                                accuracy: o
                            }
                        }
                    }
                }
            }]), t
        }(ka.EventTarget), qh = new Xc("./decrypter-worker.worker.js", function (e, t) {
            var i = this;
            !function () {
                var e = function (e, t) {
                    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                }, t = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), n = function (e, t) {
                    if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !t || "object" !== (void 0 === t ? "undefined" : g(t)) && "function" != typeof t ? e : t
                }, r = function () {
                    var e = [[[], [], [], [], []], [[], [], [], [], []]], t = e[0], i = e[1], n = t[4], r = i[4],
                        a = void 0, s = void 0, o = void 0, u = [], l = [], d = void 0, c = void 0, h = void 0, f = void 0,
                        p = void 0;
                    for (a = 0; a < 256; a++) l[(u[a] = a << 1 ^ 283 * (a >> 7)) ^ a] = a;
                    for (s = o = 0; !n[s]; s ^= d || 1, o = l[o] || 1) for (h = (h = o ^ o << 1 ^ o << 2 ^ o << 3 ^ o << 4) >> 8 ^ 255 & h ^ 99, n[s] = h, r[h] = s, p = 16843009 * u[c = u[d = u[s]]] ^ 65537 * c ^ 257 * d ^ 16843008 * s, f = 257 * u[h] ^ 16843008 * h, a = 0; a < 4; a++) t[a][s] = f = f << 24 ^ f >>> 8, i[a][h] = p = p << 24 ^ p >>> 8;
                    for (a = 0; a < 5; a++) t[a] = t[a].slice(0), i[a] = i[a].slice(0);
                    return e
                }, a = null, s = function () {
                    function t(i) {
                        e(this, t), a || (a = r()), this._tables = [[a[0][0].slice(), a[0][1].slice(), a[0][2].slice(), a[0][3].slice(), a[0][4].slice()], [a[1][0].slice(), a[1][1].slice(), a[1][2].slice(), a[1][3].slice(), a[1][4].slice()]];
                        var n = void 0, s = void 0, o = void 0, u = void 0, l = void 0, d = this._tables[0][4],
                            c = this._tables[1], h = i.length, f = 1;
                        if (4 !== h && 6 !== h && 8 !== h) throw new Error("Invalid aes key size");
                        for (u = i.slice(0), l = [], this._key = [u, l], n = h; n < 4 * h + 28; n++) o = u[n - 1], (n % h == 0 || 8 === h && n % h == 4) && (o = d[o >>> 24] << 24 ^ d[o >> 16 & 255] << 16 ^ d[o >> 8 & 255] << 8 ^ d[255 & o], n % h == 0 && (o = o << 8 ^ o >>> 24 ^ f << 24, f = f << 1 ^ 283 * (f >> 7))), u[n] = u[n - h] ^ o;
                        for (s = 0; n; s++, n--) o = u[3 & s ? n : n - 4], l[s] = n <= 4 || s < 4 ? o : c[0][d[o >>> 24]] ^ c[1][d[o >> 16 & 255]] ^ c[2][d[o >> 8 & 255]] ^ c[3][d[255 & o]]
                    }

                    return t.prototype.decrypt = function (e, t, i, n, r, a) {
                        var s = this._key[1], o = e ^ s[0], u = n ^ s[1], l = i ^ s[2], d = t ^ s[3], c = void 0,
                            h = void 0, f = void 0, p = s.length / 4 - 2, m = void 0, g = 4, y = this._tables[1], _ = y[0],
                            v = y[1], b = y[2], T = y[3], S = y[4];
                        for (m = 0; m < p; m++) c = _[o >>> 24] ^ v[u >> 16 & 255] ^ b[l >> 8 & 255] ^ T[255 & d] ^ s[g], h = _[u >>> 24] ^ v[l >> 16 & 255] ^ b[d >> 8 & 255] ^ T[255 & o] ^ s[g + 1], f = _[l >>> 24] ^ v[d >> 16 & 255] ^ b[o >> 8 & 255] ^ T[255 & u] ^ s[g + 2], d = _[d >>> 24] ^ v[o >> 16 & 255] ^ b[u >> 8 & 255] ^ T[255 & l] ^ s[g + 3], g += 4, o = c, u = h, l = f;
                        for (m = 0; m < 4; m++) r[(3 & -m) + a] = S[o >>> 24] << 24 ^ S[u >> 16 & 255] << 16 ^ S[l >> 8 & 255] << 8 ^ S[255 & d] ^ s[g++], c = o, o = u, u = l, l = d, d = c
                    }, t
                }(), o = function () {
                    function t() {
                        e(this, t), this.listeners = {}
                    }

                    return t.prototype.on = function (e, t) {
                        this.listeners[e] || (this.listeners[e] = []), this.listeners[e].push(t)
                    }, t.prototype.off = function (e, t) {
                        if (!this.listeners[e]) return !1;
                        var i = this.listeners[e].indexOf(t);
                        return this.listeners[e].splice(i, 1), i > -1
                    }, t.prototype.trigger = function (e) {
                        var t = this.listeners[e];
                        if (t) if (2 === arguments.length) for (var i = t.length, n = 0; n < i; ++n) t[n].call(this, arguments[1]); else for (var r = Array.prototype.slice.call(arguments, 1), a = t.length, s = 0; s < a; ++s) t[s].apply(this, r)
                    }, t.prototype.dispose = function () {
                        this.listeners = {}
                    }, t.prototype.pipe = function (e) {
                        this.on("data", function (t) {
                            e.push(t)
                        })
                    }, t
                }(), u = function (t) {
                    !function (e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + (void 0 === t ? "undefined" : g(t)));
                        e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                    }(i, t);

                    function i() {
                        e(this, i);
                        var r = n(this, t.call(this, o));
                        return r.jobs = [], r.delay = 1, r.timeout_ = null, r
                    }

                    return i.prototype.processJob_ = function () {
                        this.jobs.shift()(), this.jobs.length ? this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay) : this.timeout_ = null
                    }, i.prototype.push = function (e) {
                        this.jobs.push(e), this.timeout_ || (this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay))
                    }, i
                }(o), l = function (e) {
                    return e << 24 | (65280 & e) << 8 | (16711680 & e) >> 8 | e >>> 24
                }, d = function () {
                    function i(t, n, r, a) {
                        e(this, i);
                        var s = i.STEP, o = new Int32Array(t.buffer), d = new Uint8Array(t.byteLength), c = 0;
                        for (this.asyncStream_ = new u, this.asyncStream_.push(this.decryptChunk_(o.subarray(c, c + s), n, r, d)), c = s; c < o.length; c += s) r = new Uint32Array([l(o[c - 4]), l(o[c - 3]), l(o[c - 2]), l(o[c - 1])]), this.asyncStream_.push(this.decryptChunk_(o.subarray(c, c + s), n, r, d));
                        this.asyncStream_.push(function () {
                            a(null, (e = d).subarray(0, e.byteLength - e[e.byteLength - 1]));
                            var e
                        })
                    }

                    return i.prototype.decryptChunk_ = function (e, t, i, n) {
                        return function () {
                            var r = function (e, t, i) {
                                var n = new Int32Array(e.buffer, e.byteOffset, e.byteLength >> 2),
                                    r = new s(Array.prototype.slice.call(t)), a = new Uint8Array(e.byteLength),
                                    o = new Int32Array(a.buffer), u = void 0, d = void 0, c = void 0, h = void 0,
                                    f = void 0, p = void 0, m = void 0, g = void 0, y = void 0;
                                for (u = i[0], d = i[1], c = i[2], h = i[3], y = 0; y < n.length; y += 4) f = l(n[y]), p = l(n[y + 1]), m = l(n[y + 2]), g = l(n[y + 3]), r.decrypt(f, p, m, g, o, y), o[y] = l(o[y] ^ u), o[y + 1] = l(o[y + 1] ^ d), o[y + 2] = l(o[y + 2] ^ c), o[y + 3] = l(o[y + 3] ^ h), u = f, d = p, c = m, h = g;
                                return a
                            }(e, t, i);
                            n.set(r, e.byteOffset)
                        }
                    }, t(i, null, [{
                        key: "STEP", get: function () {
                            return 32e3
                        }
                    }]), i
                }();
                new function (e) {
                    e.onmessage = function (t) {
                        var i = t.data,
                            n = new Uint8Array(i.encrypted.bytes, i.encrypted.byteOffset, i.encrypted.byteLength),
                            r = new Uint32Array(i.key.bytes, i.key.byteOffset, i.key.byteLength / 4),
                            a = new Uint32Array(i.iv.bytes, i.iv.byteOffset, i.iv.byteLength / 4);
                        new d(n, r, a, function (t, n) {
                            e.postMessage(function (e) {
                                var t = {};
                                return Object.keys(e).forEach(function (i) {
                                    var n = e[i];
                                    ArrayBuffer.isView(n) ? t[i] = {
                                        bytes: n.buffer,
                                        byteOffset: n.byteOffset,
                                        byteLength: n.byteLength
                                    } : t[i] = n
                                }), t
                            }({source: i.source, decrypted: n}), [n.buffer])
                        })
                    }
                }(i)
            }()
        }), zh = function (e) {
            var t = e.default ? "main" : "alternative";
            return e.characteristics && e.characteristics.indexOf("public.accessibility.describes-video") >= 0 && (t = "main-desc"), t
        }, Wh = function (e, t) {
            e.abort(), e.pause(), t && t.activePlaylistLoader && (t.activePlaylistLoader.pause(), t.activePlaylistLoader = null)
        }, Xh = function (e, t) {
            t.activePlaylistLoader = e, e.load()
        }, Yh = {
            AUDIO: function (e, t) {
                return function () {
                    var i = t.segmentLoaders[e], n = t.mediaTypes[e], r = t.blacklistCurrentPlaylist;
                    Wh(i, n);
                    var a = n.activeTrack(), s = n.activeGroup(), o = (s.filter(function (e) {
                        return e.default
                    })[0] || s[0]).id, u = n.tracks[o];
                    if (a !== u) {
                        ka.log.warn("Problem encountered loading the alternate audio track.Switching back to default.");
                        for (var l in n.tracks) n.tracks[l].enabled = n.tracks[l] === u;
                        n.onTrackChanged()
                    } else r({message: "Problem encountered loading the default audio track."})
                }
            }, SUBTITLES: function (e, t) {
                return function () {
                    var i = t.segmentLoaders[e], n = t.mediaTypes[e];
                    ka.log.warn("Problem encountered loading the subtitle track.Disabling subtitle track."), Wh(i, n);
                    var r = n.activeTrack();
                    r && (r.mode = "disabled"), n.onTrackChanged()
                }
            }
        }, Kh = {
            AUDIO: function (e, t, i) {
                if (t) {
                    var n = i.tech, r = i.requestOptions, a = i.segmentLoaders[e];
                    t.on("loadedmetadata", function () {
                        var e = t.media();
                        a.playlist(e, r), (!n.paused() || e.endList && "none" !== n.preload()) && a.load()
                    }), t.on("loadedplaylist", function () {
                        a.playlist(t.media(), r), n.paused() || a.load()
                    }), t.on("error", Yh[e](e, i))
                }
            }, SUBTITLES: function (e, t, i) {
                var n = i.tech, r = i.requestOptions, a = i.segmentLoaders[e], s = i.mediaTypes[e];
                t.on("loadedmetadata", function () {
                    var e = t.media();
                    a.playlist(e, r), a.track(s.activeTrack()), (!n.paused() || e.endList && "none" !== n.preload()) && a.load()
                }), t.on("loadedplaylist", function () {
                    a.playlist(t.media(), r), n.paused() || a.load()
                }), t.on("error", Yh[e](e, i))
            }
        }, $h = function (e, t) {
            return function (i) {
                return i.attributes[e] === t
            }
        }, Qh = function (e) {
            return function (t) {
                return t.resolvedUri === e
            }
        }, Jh = {
            AUDIO: function (e, t) {
                var i = t.hls, n = t.sourceType, r = t.segmentLoaders[e], a = t.requestOptions.withCredentials,
                    s = t.master, o = s.mediaGroups, u = s.playlists, l = t.mediaTypes[e], d = l.groups, c = l.tracks,
                    h = t.masterPlaylistLoader;
                o[e] && 0 !== Object.keys(o[e]).length || (o[e] = {main: {default: {default: !0}}});
                for (var f in o[e]) {
                    d[f] || (d[f] = []);
                    var p = u.filter($h(e, f));
                    for (var m in o[e][f]) {
                        var g = o[e][f][m];
                        p.filter(Qh(g.resolvedUri)).length && delete g.resolvedUri;
                        var y = void 0;
                        if (y = g.resolvedUri ? new oc(g.resolvedUri, i, a) : g.playlists && "dash" === n ? new yh(g.playlists[0], i, a, h) : null, g = ka.mergeOptions({
                            id: m,
                            playlistLoader: y
                        }, g), Kh[e](e, g.playlistLoader, t), d[f].push(g), void 0 === c[m]) {
                            var _ = new ka.AudioTrack({
                                id: m,
                                kind: zh(g),
                                enabled: !1,
                                language: g.language,
                                default: g.default,
                                label: m
                            });
                            c[m] = _
                        }
                    }
                }
                r.on("error", Yh[e](e, t))
            }, SUBTITLES: function (e, t) {
                var i = t.tech, n = t.hls, r = t.sourceType, a = t.segmentLoaders[e], s = t.requestOptions.withCredentials,
                    o = t.master.mediaGroups, u = t.mediaTypes[e], l = u.groups, d = u.tracks, c = t.masterPlaylistLoader;
                for (var h in o[e]) {
                    l[h] || (l[h] = []);
                    for (var f in o[e][h]) if (!o[e][h][f].forced) {
                        var p = o[e][h][f], m = void 0;
                        if ("hls" === r ? m = new oc(p.resolvedUri, n, s) : "dash" === r && (m = new yh(p.playlists[0], n, s, c)), p = ka.mergeOptions({
                            id: f,
                            playlistLoader: m
                        }, p), Kh[e](e, p.playlistLoader, t), l[h].push(p), void 0 === d[f]) {
                            var g = i.addRemoteTextTrack({
                                id: f,
                                kind: "subtitles",
                                enabled: !1,
                                language: p.language,
                                label: f
                            }, !1).track;
                            d[f] = g
                        }
                    }
                }
                a.on("error", Yh[e](e, t))
            }, "CLOSED-CAPTIONS": function (e, t) {
                var i = t.tech, n = t.master.mediaGroups, r = t.mediaTypes[e], a = r.groups, s = r.tracks;
                for (var o in n[e]) {
                    a[o] || (a[o] = []);
                    for (var u in n[e][o]) {
                        var l = n[e][o][u];
                        if (l.instreamId.match(/CC\d/) && (a[o].push(ka.mergeOptions({id: u}, l)), void 0 === s[u])) {
                            var d = i.addRemoteTextTrack({
                                id: l.instreamId,
                                kind: "captions",
                                enabled: !1,
                                language: l.language,
                                label: u
                            }, !1).track;
                            s[u] = d
                        }
                    }
                }
            }
        }, Zh = {
            AUDIO: function (e, t) {
                return function () {
                    var i = t.mediaTypes[e].tracks;
                    for (var n in i) if (i[n].enabled) return i[n];
                    return null
                }
            }, SUBTITLES: function (e, t) {
                return function () {
                    var i = t.mediaTypes[e].tracks;
                    for (var n in i) if ("showing" === i[n].mode) return i[n];
                    return null
                }
            }
        }, ef = function (e) {
            ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach(function (t) {
                Jh[t](t, e)
            });
            var t = e.mediaTypes, i = e.masterPlaylistLoader, n = e.tech, r = e.hls;
            ["AUDIO", "SUBTITLES"].forEach(function (i) {
                t[i].activeGroup = (n = i, r = e, function (e) {
                    var t = r.masterPlaylistLoader, i = r.mediaTypes[n].groups, a = t.media();
                    if (!a) return null;
                    var s = null;
                    return a.attributes[n] && (s = i[a.attributes[n]]), s = s || i.main, void 0 === e ? s : null === e ? null : s.filter(function (t) {
                        return t.id === e.id
                    })[0] || null
                });
                var n, r;
                t[i].activeTrack = Zh[i](i, e), t[i].onGroupChanged = (a = i, s = e, function () {
                    var e = s.segmentLoaders, t = e[a], i = e.main, n = s.mediaTypes[a], r = n.activeTrack(),
                        o = n.activeGroup(r), u = n.activePlaylistLoader;
                    Wh(t, n), o && (o.playlistLoader ? (t.resyncLoader(), Xh(o.playlistLoader, n)) : u && i.resetEverything())
                });
                var a, s;
                t[i].onTrackChanged = (o = i, u = e, function () {
                    var e = u.segmentLoaders, t = e[o], i = e.main, n = u.mediaTypes[o], r = n.activeTrack(),
                        a = n.activeGroup(r), s = n.activePlaylistLoader;
                    Wh(t, n), a && (a.playlistLoader ? s !== a.playlistLoader ? (t.track && t.track(r), t.resetEverything(), Xh(a.playlistLoader, n)) : Xh(a.playlistLoader, n) : i.resetEverything())
                });
                var o, u
            });
            var a = t.AUDIO.activeGroup(), s = (a.filter(function (e) {
                return e.default
            })[0] || a[0]).id;
            t.AUDIO.tracks[s].enabled = !0, t.AUDIO.onTrackChanged(), i.on("mediachange", function () {
                ["AUDIO", "SUBTITLES"].forEach(function (e) {
                    return t[e].onGroupChanged()
                })
            });
            var o = function () {
                t.AUDIO.onTrackChanged(), n.trigger({type: "usage", name: "hls-audio-change"})
            };
            n.audioTracks().addEventListener("change", o), n.remoteTextTracks().addEventListener("change", t.SUBTITLES.onTrackChanged), r.on("dispose", function () {
                n.audioTracks().removeEventListener("change", o), n.remoteTextTracks().removeEventListener("change", t.SUBTITLES.onTrackChanged)
            }), n.clearTracks("audio");
            for (var u in t.AUDIO.tracks) n.audioTracks().addTrack(t.AUDIO.tracks[u])
        }, tf = function () {
            var e = {};
            return ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach(function (t) {
                e[t] = {
                    groups: {},
                    tracks: {},
                    activePlaylistLoader: null,
                    activeGroup: vh,
                    activeTrack: vh,
                    onGroupChanged: vh,
                    onTrackChanged: vh
                }
            }), e
        }, nf = void 0,
        rf = ["mediaRequests", "mediaRequestsAborted", "mediaRequestsTimedout", "mediaRequestsErrored", "mediaTransferDuration", "mediaBytesTransferred"],
        af = function (e) {
            return this.audioSegmentLoader_[e] + this.mainSegmentLoader_[e]
        }, sf = function (e) {
            $d(t, e);

            function t(e) {
                Yd(this, t);
                var i = Qd(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this)), n = e.url, r = e.withCredentials,
                    a = e.tech, s = e.bandwidth, o = e.externHls, u = e.useCueTags, l = e.blacklistDuration,
                    d = e.enableLowInitialPlaylist, c = e.sourceType, h = e.seekTo;
                if (!n) throw new Error("A non-empty playlist URL is required");
                nf = o, i.withCredentials = r, i.tech_ = a, i.hls_ = a.hls, i.seekTo_ = h, i.sourceType_ = c, i.useCueTags_ = u, i.blacklistDuration = l, i.enableLowInitialPlaylist = d, i.useCueTags_ && (i.cueTagsTrack_ = i.tech_.addTextTrack("metadata", "ad-cues"), i.cueTagsTrack_.inBandMetadataTrackDispatchType = ""), i.requestOptions_ = {
                    withCredentials: i.withCredentials,
                    timeout: null
                }, i.mediaTypes_ = tf(), i.mediaSource = new ka.MediaSource, i.mediaSource.addEventListener("sourceopen", i.handleSourceOpen_.bind(i)), i.seekable_ = ka.createTimeRanges(), i.hasPlayed_ = function () {
                    return !1
                }, i.syncController_ = new Hh(e), i.segmentMetadataTrack_ = a.addRemoteTextTrack({
                    kind: "metadata",
                    label: "segment-metadata"
                }, !1).track, i.decrypter_ = new qh, i.inbandTextTracks_ = {};
                var f = {
                    hls: i.hls_,
                    mediaSource: i.mediaSource,
                    currentTime: i.tech_.currentTime.bind(i.tech_),
                    seekable: function () {
                        return i.seekable()
                    },
                    seeking: function () {
                        return i.tech_.seeking()
                    },
                    duration: function () {
                        return i.mediaSource.duration
                    },
                    hasPlayed: function () {
                        return i.hasPlayed_()
                    },
                    goalBufferLength: function () {
                        return i.goalBufferLength()
                    },
                    bandwidth: s,
                    syncController: i.syncController_,
                    decrypter: i.decrypter_,
                    sourceType: i.sourceType_,
                    inbandTextTracks: i.inbandTextTracks_
                };
                return i.masterPlaylistLoader_ = "dash" === i.sourceType_ ? new yh(n, i.hls_, i.withCredentials) : new oc(n, i.hls_, i.withCredentials), i.setupMasterPlaylistLoaderListeners_(), i.mainSegmentLoader_ = new Mh(ka.mergeOptions(f, {
                    segmentMetadataTrack: i.segmentMetadataTrack_,
                    loaderType: "main"
                }), e), i.audioSegmentLoader_ = new Mh(ka.mergeOptions(f, {loaderType: "audio"}), e), i.subtitleSegmentLoader_ = new Nh(ka.mergeOptions(f, {loaderType: "vtt"}), e), i.setupSegmentLoaderListeners_(), rf.forEach(function (e) {
                    i[e + "_"] = af.bind(i, e)
                }), i.logger_ = _h("MPC"), i.masterPlaylistLoader_.load(), i
            }

            return Kd(t, [{
                key: "setupMasterPlaylistLoaderListeners_", value: function () {
                    var e = this;
                    this.masterPlaylistLoader_.on("loadedmetadata", function () {
                        var t = e.masterPlaylistLoader_.media(), i = 1.5 * e.masterPlaylistLoader_.targetDuration * 1e3;
                        Sc(e.masterPlaylistLoader_.master, e.masterPlaylistLoader_.media()) ? e.requestOptions_.timeout = 0 : e.requestOptions_.timeout = i, t.endList && "none" !== e.tech_.preload() && (e.mainSegmentLoader_.playlist(t, e.requestOptions_), e.mainSegmentLoader_.load()), ef({
                            sourceType: e.sourceType_,
                            segmentLoaders: {
                                AUDIO: e.audioSegmentLoader_,
                                SUBTITLES: e.subtitleSegmentLoader_,
                                main: e.mainSegmentLoader_
                            },
                            tech: e.tech_,
                            requestOptions: e.requestOptions_,
                            masterPlaylistLoader: e.masterPlaylistLoader_,
                            hls: e.hls_,
                            master: e.master(),
                            mediaTypes: e.mediaTypes_,
                            blacklistCurrentPlaylist: e.blacklistCurrentPlaylist.bind(e)
                        }), e.triggerPresenceUsage_(e.master(), t);
                        try {
                            e.setupSourceBuffers_()
                        } catch (t) {
                            return ka.log.warn("Failed to create SourceBuffers", t), e.mediaSource.endOfStream("decode")
                        }
                        e.setupFirstPlay(), e.trigger("selectedinitialmedia")
                    }), this.masterPlaylistLoader_.on("loadedplaylist", function () {
                        var t = e.masterPlaylistLoader_.media();
                        if (!t) {
                            e.excludeUnsupportedVariants_();
                            var i = void 0;
                            return e.enableLowInitialPlaylist && (i = e.selectInitialPlaylist()), i || (i = e.selectPlaylist()), e.initialMedia_ = i, void e.masterPlaylistLoader_.media(e.initialMedia_)
                        }
                        if (e.useCueTags_ && e.updateAdCues_(t), e.mainSegmentLoader_.playlist(t, e.requestOptions_), e.updateDuration(), e.tech_.paused() || (e.mainSegmentLoader_.load(), e.audioSegmentLoader_ && e.audioSegmentLoader_.load()), !t.endList) {
                            var n = function () {
                                var t = e.seekable();
                                0 !== t.length && e.mediaSource.addSeekableRange_(t.start(0), t.end(0))
                            };
                            if (e.duration() !== 1 / 0) {
                                var r = function t() {
                                    e.duration() === 1 / 0 ? n() : e.tech_.one("durationchange", t)
                                };
                                e.tech_.one("durationchange", r)
                            } else n()
                        }
                    }), this.masterPlaylistLoader_.on("error", function () {
                        e.blacklistCurrentPlaylist(e.masterPlaylistLoader_.error)
                    }), this.masterPlaylistLoader_.on("mediachanging", function () {
                        e.mainSegmentLoader_.abort(), e.mainSegmentLoader_.pause()
                    }), this.masterPlaylistLoader_.on("mediachange", function () {
                        var t = e.masterPlaylistLoader_.media(), i = 1.5 * e.masterPlaylistLoader_.targetDuration * 1e3;
                        Sc(e.masterPlaylistLoader_.master, e.masterPlaylistLoader_.media()) ? e.requestOptions_.timeout = 0 : e.requestOptions_.timeout = i, e.mainSegmentLoader_.playlist(t, e.requestOptions_), e.mainSegmentLoader_.load(), e.tech_.trigger({
                            type: "mediachange",
                            bubbles: !0
                        })
                    }), this.masterPlaylistLoader_.on("playlistunchanged", function () {
                        var t = e.masterPlaylistLoader_.media();
                        e.stuckAtPlaylistEnd_(t) && (e.blacklistCurrentPlaylist({message: "Playlist no longer updating."}), e.tech_.trigger("playliststuck"))
                    }), this.masterPlaylistLoader_.on("renditiondisabled", function () {
                        e.tech_.trigger({type: "usage", name: "hls-rendition-disabled"})
                    }), this.masterPlaylistLoader_.on("renditionenabled", function () {
                        e.tech_.trigger({type: "usage", name: "hls-rendition-enabled"})
                    })
                }
            }, {
                key: "triggerPresenceUsage_", value: function (e, t) {
                    var i = e.mediaGroups || {}, n = !0, r = Object.keys(i.AUDIO);
                    for (var a in i.AUDIO) for (var s in i.AUDIO[a]) {
                        i.AUDIO[a][s].uri || (n = !1)
                    }
                    n && this.tech_.trigger({
                        type: "usage",
                        name: "hls-demuxed"
                    }), Object.keys(i.SUBTITLES).length && this.tech_.trigger({
                        type: "usage",
                        name: "hls-webvtt"
                    }), nf.Playlist.isAes(t) && this.tech_.trigger({
                        type: "usage",
                        name: "hls-aes"
                    }), nf.Playlist.isFmp4(t) && this.tech_.trigger({
                        type: "usage",
                        name: "hls-fmp4"
                    }), r.length && Object.keys(i.AUDIO[r[0]]).length > 1 && this.tech_.trigger({
                        type: "usage",
                        name: "hls-alternate-audio"
                    }), this.useCueTags_ && this.tech_.trigger({type: "usage", name: "hls-playlist-cue-tags"})
                }
            }, {
                key: "setupSegmentLoaderListeners_", value: function () {
                    var e = this;
                    this.mainSegmentLoader_.on("bandwidthupdate", function () {
                        var t = e.selectPlaylist(), i = e.masterPlaylistLoader_.media(), n = e.tech_.buffered(),
                            r = n.length ? n.end(n.length - 1) - e.tech_.currentTime() : 0, a = e.bufferLowWaterLine();
                        (!i.endList || e.duration() < Th.MAX_BUFFER_LOW_WATER_LINE || t.attributes.BANDWIDTH < i.attributes.BANDWIDTH || r >= a) && e.masterPlaylistLoader_.media(t), e.tech_.trigger("bandwidthupdate")
                    }), this.mainSegmentLoader_.on("progress", function () {
                        e.trigger("progress")
                    }), this.mainSegmentLoader_.on("error", function () {
                        e.blacklistCurrentPlaylist(e.mainSegmentLoader_.error())
                    }), this.mainSegmentLoader_.on("syncinfoupdate", function () {
                        e.onSyncInfoUpdate_()
                    }), this.mainSegmentLoader_.on("timestampoffset", function () {
                        e.tech_.trigger({type: "usage", name: "hls-timestamp-offset"})
                    }), this.audioSegmentLoader_.on("syncinfoupdate", function () {
                        e.onSyncInfoUpdate_()
                    }), this.mainSegmentLoader_.on("ended", function () {
                        e.onEndOfStream()
                    }), this.mainSegmentLoader_.on("earlyabort", function () {
                        e.blacklistCurrentPlaylist({message: "Aborted early because there isn't enough bandwidth to complete the request without rebuffering."}, 120)
                    }), this.mainSegmentLoader_.on("reseteverything", function () {
                        e.tech_.trigger("hls-reset")
                    }), this.mainSegmentLoader_.on("segmenttimemapping", function (t) {
                        e.tech_.trigger({type: "hls-segment-time-mapping", mapping: t.mapping})
                    }), this.audioSegmentLoader_.on("ended", function () {
                        e.onEndOfStream()
                    })
                }
            }, {
                key: "mediaSecondsLoaded_", value: function () {
                    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded)
                }
            }, {
                key: "load", value: function () {
                    this.mainSegmentLoader_.load(), this.mediaTypes_.AUDIO.activePlaylistLoader && this.audioSegmentLoader_.load(), this.mediaTypes_.SUBTITLES.activePlaylistLoader && this.subtitleSegmentLoader_.load()
                }
            }, {
                key: "smoothQualityChange_", value: function () {
                    var e = this.selectPlaylist();
                    e !== this.masterPlaylistLoader_.media() && (this.masterPlaylistLoader_.media(e), this.mainSegmentLoader_.resetLoader())
                }
            }, {
                key: "fastQualityChange_", value: function () {
                    var e = this, t = this.selectPlaylist();
                    t !== this.masterPlaylistLoader_.media() && (this.masterPlaylistLoader_.media(t), this.mainSegmentLoader_.resetEverything(function () {
                        ka.browser.IE_VERSION || ka.browser.IS_EDGE ? e.tech_.setCurrentTime(e.tech_.currentTime() + .04) : e.tech_.setCurrentTime(e.tech_.currentTime())
                    }))
                }
            }, {
                key: "play", value: function () {
                    if (!this.setupFirstPlay()) {
                        this.tech_.ended() && this.seekTo_(0), this.hasPlayed_() && this.load();
                        var e = this.tech_.seekable();
                        return this.tech_.duration() === 1 / 0 && this.tech_.currentTime() < e.start(0) ? this.seekTo_(e.end(e.length - 1)) : void 0
                    }
                }
            }, {
                key: "setupFirstPlay", value: function () {
                    var e = this, t = this.masterPlaylistLoader_.media();
                    if (!t || this.tech_.paused() || this.hasPlayed_()) return !1;
                    if (!t.endList) {
                        var i = this.seekable();
                        if (!i.length) return !1;
                        if (ka.browser.IE_VERSION && 0 === this.tech_.readyState()) return this.tech_.one("loadedmetadata", function () {
                            e.trigger("firstplay"), e.seekTo_(i.end(0)), e.hasPlayed_ = function () {
                                return !0
                            }
                        }), !1;
                        this.trigger("firstplay"), this.seekTo_(i.end(0))
                    }
                    return this.hasPlayed_ = function () {
                        return !0
                    }, this.load(), !0
                }
            }, {
                key: "handleSourceOpen_", value: function () {
                    try {
                        this.setupSourceBuffers_()
                    } catch (e) {
                        return ka.log.warn("Failed to create Source Buffers", e), this.mediaSource.endOfStream("decode")
                    }
                    if (this.tech_.autoplay()) {
                        var e = this.tech_.play();
                        void 0 !== e && "function" == typeof e.then && e.then(null, function (e) {
                        })
                    }
                    this.trigger("sourceopen")
                }
            }, {
                key: "onEndOfStream", value: function () {
                    var e = this.mainSegmentLoader_.ended_;
                    this.mediaTypes_.AUDIO.activePlaylistLoader && (e = !this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo ? e && this.audioSegmentLoader_.ended_ : this.audioSegmentLoader_.ended_), e && this.mediaSource.endOfStream()
                }
            }, {
                key: "stuckAtPlaylistEnd_", value: function (e) {
                    if (!this.seekable().length) return !1;
                    var t = this.syncController_.getExpiredTime(e, this.mediaSource.duration);
                    if (null === t) return !1;
                    var i = nf.Playlist.playlistEnd(e, t), n = this.tech_.currentTime(), r = this.tech_.buffered();
                    if (!r.length) return i - n <= .1;
                    var a = r.end(r.length - 1);
                    return a - n <= .1 && i - a <= .1
                }
            }, {
                key: "blacklistCurrentPlaylist", value: function () {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = arguments[1],
                        i = void 0, n = void 0;
                    if (i = e.playlist || this.masterPlaylistLoader_.media(), t = t || e.blacklistDuration || this.blacklistDuration, !i) {
                        this.error = e;
                        try {
                            return this.mediaSource.endOfStream("network")
                        } catch (e) {
                            return this.trigger("error")
                        }
                    }
                    var r = 1 === this.masterPlaylistLoader_.master.playlists.filter(bc).length;
                    return r ? (ka.log.warn("Problem encountered with the current HLS playlist. Trying again since it is the final playlist."), this.tech_.trigger("retryplaylist"), this.masterPlaylistLoader_.load(r)) : (i.excludeUntil = Date.now() + 1e3 * t, this.tech_.trigger("blacklistplaylist"), this.tech_.trigger({
                        type: "usage",
                        name: "hls-rendition-blacklisted"
                    }), n = this.selectPlaylist(), ka.log.warn("Problem encountered with the current HLS playlist." + (e.message ? " " + e.message : "") + " Switching to another playlist."), this.masterPlaylistLoader_.media(n))
                }
            }, {
                key: "pauseLoading", value: function () {
                    this.mainSegmentLoader_.pause(), this.mediaTypes_.AUDIO.activePlaylistLoader && this.audioSegmentLoader_.pause(), this.mediaTypes_.SUBTITLES.activePlaylistLoader && this.subtitleSegmentLoader_.pause()
                }
            }, {
                key: "setCurrentTime", value: function (e) {
                    var t = Dc(this.tech_.buffered(), e);
                    return this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media() && this.masterPlaylistLoader_.media().segments ? t && t.length ? e : (this.mainSegmentLoader_.resetEverything(), this.mainSegmentLoader_.abort(), this.mediaTypes_.AUDIO.activePlaylistLoader && (this.audioSegmentLoader_.resetEverything(), this.audioSegmentLoader_.abort()), this.mediaTypes_.SUBTITLES.activePlaylistLoader && (this.subtitleSegmentLoader_.resetEverything(), this.subtitleSegmentLoader_.abort()), void this.load()) : 0
                }
            }, {
                key: "duration", value: function () {
                    return this.masterPlaylistLoader_ ? this.mediaSource ? this.mediaSource.duration : nf.Playlist.duration(this.masterPlaylistLoader_.media()) : 0
                }
            }, {
                key: "seekable", value: function () {
                    return this.seekable_
                }
            }, {
                key: "onSyncInfoUpdate_", value: function () {
                    var e = void 0, t = void 0;
                    if (this.masterPlaylistLoader_) {
                        var i = this.masterPlaylistLoader_.media();
                        if (i) {
                            var n = this.syncController_.getExpiredTime(i, this.mediaSource.duration);
                            if (null !== n && 0 !== (e = nf.Playlist.seekable(i, n)).length) {
                                if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                                    if (i = this.mediaTypes_.AUDIO.activePlaylistLoader.media(), null === (n = this.syncController_.getExpiredTime(i, this.mediaSource.duration))) return;
                                    if (0 === (t = nf.Playlist.seekable(i, n)).length) return
                                }
                                t ? t.start(0) > e.end(0) || e.start(0) > t.end(0) ? this.seekable_ = e : this.seekable_ = ka.createTimeRanges([[t.start(0) > e.start(0) ? t.start(0) : e.start(0), t.end(0) < e.end(0) ? t.end(0) : e.end(0)]]) : this.seekable_ = e, this.logger_("seekable updated [" + Mc(this.seekable_) + "]"), this.tech_.trigger("seekablechanged")
                            }
                        }
                    }
                }
            }, {
                key: "updateDuration", value: function () {
                    var e = this, t = this.mediaSource.duration,
                        i = nf.Playlist.duration(this.masterPlaylistLoader_.media()), n = this.tech_.buffered(),
                        r = function t() {
                            e.mediaSource.duration = i, e.tech_.trigger("durationchange"), e.mediaSource.removeEventListener("sourceopen", t)
                        };
                    n.length > 0 && (i = Math.max(i, n.end(n.length - 1))), t !== i && ("open" !== this.mediaSource.readyState ? this.mediaSource.addEventListener("sourceopen", r) : r())
                }
            }, {
                key: "dispose", value: function () {
                    var e = this;
                    this.decrypter_.terminate(), this.masterPlaylistLoader_.dispose(), this.mainSegmentLoader_.dispose(), ["AUDIO", "SUBTITLES"].forEach(function (t) {
                        var i = e.mediaTypes_[t].groups;
                        for (var n in i) i[n].forEach(function (e) {
                            e.playlistLoader && e.playlistLoader.dispose()
                        })
                    }), this.audioSegmentLoader_.dispose(), this.subtitleSegmentLoader_.dispose()
                }
            }, {
                key: "master", value: function () {
                    return this.masterPlaylistLoader_.master
                }
            }, {
                key: "media", value: function () {
                    return this.masterPlaylistLoader_.media() || this.initialMedia_
                }
            }, {
                key: "setupSourceBuffers_", value: function () {
                    var e = this.masterPlaylistLoader_.media(), t = void 0;
                    if (e && "open" === this.mediaSource.readyState) {
                        if ((t = nh(this.masterPlaylistLoader_.master, e)).length < 1) return this.error = "No compatible SourceBuffer configuration for the variant stream:" + e.resolvedUri, this.mediaSource.endOfStream("decode");
                        this.configureLoaderMimeTypes_(t), this.excludeIncompatibleVariants_(e)
                    }
                }
            }, {
                key: "configureLoaderMimeTypes_", value: function (e) {
                    var t = e.length > 1 && -1 === e[0].indexOf(",") && e[0] !== e[1] ? new ka.EventTarget : null;
                    this.mainSegmentLoader_.mimeType(e[0], t), e[1] && this.audioSegmentLoader_.mimeType(e[1], t)
                }
            }, {
                key: "excludeUnsupportedVariants_", value: function () {
                    this.master().playlists.forEach(function (e) {
                        e.attributes.CODECS && r.MediaSource && r.MediaSource.isTypeSupported && !r.MediaSource.isTypeSupported('video/mp4; codecs="' + (t = e.attributes.CODECS, t.replace(/avc1\.(\d+)\.(\d+)/i, function (e) {
                            return eh([e])[0]
                        })) + '"') && (e.excludeUntil = 1 / 0);
                        var t
                    })
                }
            }, {
                key: "excludeIncompatibleVariants_", value: function (e) {
                    var t = 2, i = null, n = void 0;
                    e.attributes.CODECS && (n = th(e.attributes.CODECS), i = n.videoCodec, t = n.codecCount), this.master().playlists.forEach(function (e) {
                        var n = {codecCount: 2, videoCodec: null};
                        e.attributes.CODECS && (n = th(e.attributes.CODECS)), n.codecCount !== t && (e.excludeUntil = 1 / 0), n.videoCodec !== i && (e.excludeUntil = 1 / 0)
                    })
                }
            }, {
                key: "updateAdCues_", value: function (e) {
                    var t = 0, i = this.seekable();
                    i.length && (t = i.start(0)), function (e, t) {
                        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                        if (e.segments) for (var n = i, a = void 0, s = 0; s < e.segments.length; s++) {
                            var o = e.segments[s];
                            if (a || (a = Fh(t, n + o.duration / 2)), a) {
                                if ("cueIn" in o) {
                                    a.endTime = n, a.adEndTime = n, n += o.duration, a = null;
                                    continue
                                }
                                if (n < a.endTime) {
                                    n += o.duration;
                                    continue
                                }
                                a.endTime += o.duration
                            } else if ("cueOut" in o && ((a = new r.VTTCue(n, n + o.duration, o.cueOut)).adStartTime = n, a.adEndTime = n + parseFloat(o.cueOut), t.addCue(a)), "cueOutCont" in o) {
                                var u = void 0, l = void 0, d = o.cueOutCont.split("/").map(parseFloat), c = Jd(d, 2);
                                u = c[0], l = c[1], (a = new r.VTTCue(n, n + o.duration, "")).adStartTime = n - u, a.adEndTime = a.adStartTime + l, t.addCue(a)
                            }
                            n += o.duration
                        }
                    }(e, this.cueTagsTrack_, t)
                }
            }, {
                key: "goalBufferLength", value: function () {
                    var e = this.tech_.currentTime(), t = Th.GOAL_BUFFER_LENGTH, i = Th.GOAL_BUFFER_LENGTH_RATE,
                        n = Math.max(t, Th.MAX_GOAL_BUFFER_LENGTH);
                    return Math.min(t + e * i, n)
                }
            }, {
                key: "bufferLowWaterLine", value: function () {
                    var e = this.tech_.currentTime(), t = Th.BUFFER_LOW_WATER_LINE, i = Th.BUFFER_LOW_WATER_LINE_RATE,
                        n = Math.max(t, Th.MAX_BUFFER_LOW_WATER_LINE);
                    return Math.min(t + e * i, n)
                }
            }]), t
        }(ka.EventTarget), of = function e(t, i, n) {
            Yd(this, e);
            var r = t.masterPlaylistController_.fastQualityChange_.bind(t.masterPlaylistController_);
            if (i.attributes.RESOLUTION) {
                var a = i.attributes.RESOLUTION;
                this.width = a.width, this.height = a.height
            }
            this.bandwidth = i.attributes.BANDWIDTH, this.id = n, this.enabled = (s = t.playlists, o = i.uri, u = r, function (e) {
                var t = s.master.playlists[o], i = vc(t), n = bc(t);
                return void 0 === e ? n : (e ? delete t.disabled : t.disabled = !0, e === n || i || (u(), e ? s.trigger("renditionenabled") : s.trigger("renditiondisabled")), e)
            });
            var s, o, u
        }, uf = ["seeking", "seeked", "pause", "playing", "error"], lf = function () {
            function e(t) {
                var i = this;
                Yd(this, e), this.tech_ = t.tech, this.seekable = t.seekable, this.seekTo = t.seekTo, this.consecutiveUpdates = 0, this.lastRecordedTime = null, this.timer_ = null, this.checkCurrentTimeTimeout_ = null, this.logger_ = _h("PlaybackWatcher"), this.logger_("initialize");
                var n = function () {
                    return i.monitorCurrentTime_()
                }, a = function () {
                    return i.techWaiting_()
                }, s = function () {
                    return i.cancelTimer_()
                }, o = function () {
                    return i.fixesBadSeeks_()
                };
                this.tech_.on("seekablechanged", o), this.tech_.on("waiting", a), this.tech_.on(uf, s), this.tech_.on("canplay", n), this.dispose = function () {
                    i.logger_("dispose"), i.tech_.off("seekablechanged", o), i.tech_.off("waiting", a), i.tech_.off(uf, s), i.tech_.off("canplay", n), i.checkCurrentTimeTimeout_ && r.clearTimeout(i.checkCurrentTimeTimeout_), i.cancelTimer_()
                }
            }

            return Kd(e, [{
                key: "monitorCurrentTime_", value: function () {
                    this.checkCurrentTime_(), this.checkCurrentTimeTimeout_ && r.clearTimeout(this.checkCurrentTimeTimeout_), this.checkCurrentTimeTimeout_ = r.setTimeout(this.monitorCurrentTime_.bind(this), 250)
                }
            }, {
                key: "checkCurrentTime_", value: function () {
                    if (this.tech_.seeking() && this.fixesBadSeeks_()) return this.consecutiveUpdates = 0, void(this.lastRecordedTime = this.tech_.currentTime());
                    if (!this.tech_.paused() && !this.tech_.seeking()) {
                        var e = this.tech_.currentTime(), t = this.tech_.buffered();
                        if (this.lastRecordedTime === e && (!t.length || e + .1 >= t.end(t.length - 1))) return this.techWaiting_();
                        this.consecutiveUpdates >= 5 && e === this.lastRecordedTime ? (this.consecutiveUpdates++, this.waiting_()) : e === this.lastRecordedTime ? this.consecutiveUpdates++ : (this.consecutiveUpdates = 0, this.lastRecordedTime = e)
                    }
                }
            }, {
                key: "cancelTimer_", value: function () {
                    this.consecutiveUpdates = 0, this.timer_ && (this.logger_("cancelTimer_"), clearTimeout(this.timer_)), this.timer_ = null
                }
            }, {
                key: "fixesBadSeeks_", value: function () {
                    var e = this.tech_.seeking(), t = this.seekable(), i = this.tech_.currentTime(), n = void 0;
                    if (e && this.afterSeekableWindow_(t, i)) {
                        n = t.end(t.length - 1)
                    }
                    if (e && this.beforeSeekableWindow_(t, i)) {
                        n = t.start(0) + .1
                    }
                    return void 0 !== n && (this.logger_("Trying to seek outside of seekable at time " + i + " with seekable range " + Mc(t) + ". Seeking to " + n + "."), this.seekTo(n), !0)
                }
            }, {
                key: "waiting_", value: function () {
                    if (!this.techWaiting_()) {
                        var e = this.tech_.currentTime(), t = this.tech_.buffered(), i = Dc(t, e);
                        return i.length && e + 3 <= i.end(0) ? (this.cancelTimer_(), this.seekTo(e), this.logger_("Stopped at " + e + " while inside a buffered region [" + i.start(0) + " -> " + i.end(0) + "]. Attempting to resume playback by seeking to the current time."), void this.tech_.trigger({
                            type: "usage",
                            name: "hls-unknown-waiting"
                        })) : void 0
                    }
                }
            }, {
                key: "techWaiting_", value: function () {
                    var e = this.seekable(), t = this.tech_.currentTime();
                    if (this.tech_.seeking() && this.fixesBadSeeks_()) return !0;
                    if (this.tech_.seeking() || null !== this.timer_) return !0;
                    if (this.beforeSeekableWindow_(e, t)) {
                        var i = e.end(e.length - 1);
                        return this.logger_("Fell out of live window at time " + t + ". Seeking to live point (seekable end) " + i), this.cancelTimer_(), this.seekTo(i), this.tech_.trigger({
                            type: "usage",
                            name: "hls-live-resync"
                        }), !0
                    }
                    var n = this.tech_.buffered(), r = Uc(n, t);
                    if (this.videoUnderflow_(r, n, t)) return this.cancelTimer_(), this.seekTo(t), this.tech_.trigger({
                        type: "usage",
                        name: "hls-video-underflow"
                    }), !0;
                    if (r.length > 0) {
                        var a = r.start(0) - t;
                        return this.logger_("Stopped at " + t + ", setting timer for " + a + ", seeking to " + r.start(0)), this.timer_ = setTimeout(this.skipTheGap_.bind(this), 1e3 * a, t), !0
                    }
                    return !1
                }
            }, {
                key: "afterSeekableWindow_", value: function (e, t) {
                    return !!e.length && t > e.end(e.length - 1) + .1
                }
            }, {
                key: "beforeSeekableWindow_", value: function (e, t) {
                    return !!(e.length && e.start(0) > 0 && t < e.start(0) - .1)
                }
            }, {
                key: "videoUnderflow_", value: function (e, t, i) {
                    if (0 === e.length) {
                        var n = this.gapFromVideoUnderflow_(t, i);
                        if (n) return this.logger_("Encountered a gap in video from " + n.start + " to " + n.end + ". Seeking to current time " + i), !0
                    }
                    return !1
                }
            }, {
                key: "skipTheGap_", value: function (e) {
                    var t = this.tech_.buffered(), i = this.tech_.currentTime(), n = Uc(t, i);
                    this.cancelTimer_(), 0 !== n.length && i === e && (this.logger_("skipTheGap_:", "currentTime:", i, "scheduled currentTime:", e, "nextRange start:", n.start(0)), this.seekTo(n.start(0) + 1 / 30), this.tech_.trigger({
                        type: "usage",
                        name: "hls-gap-skip"
                    }))
                }
            }, {
                key: "gapFromVideoUnderflow_", value: function (e, t) {
                    for (var i = function (e) {
                        if (e.length < 2) return ka.createTimeRanges();
                        for (var t = [], i = 1; i < e.length; i++) {
                            var n = e.end(i - 1), r = e.start(i);
                            t.push([n, r])
                        }
                        return ka.createTimeRanges(t)
                    }(e), n = 0; n < i.length; n++) {
                        var r = i.start(n), a = i.end(n);
                        if (t - r < 4 && t - r > 2) return {start: r, end: a}
                    }
                    return null
                }
            }]), e
        }(), df = {
            errorInterval: 30, getSource: function (e) {
                return e(this.tech({IWillNotUseThisInPlugins: !0}).currentSource_)
            }
        }, cf = function (e) {
            !function e(t, i) {
                var n = 0, r = 0, a = ka.mergeOptions(df, i);
                t.ready(function () {
                    t.trigger({type: "usage", name: "hls-error-reload-initialized"})
                });
                var s = function () {
                    r && t.currentTime(r)
                }, o = function (e) {
                    null !== e && void 0 !== e && (r = t.duration() !== 1 / 0 && t.currentTime() || 0, t.one("loadedmetadata", s), t.src(e), t.trigger({
                        type: "usage",
                        name: "hls-error-reload"
                    }), t.play())
                }, u = function () {
                    if (Date.now() - n < 1e3 * a.errorInterval) t.trigger({
                        type: "usage",
                        name: "hls-error-reload-canceled"
                    }); else {
                        if (a.getSource && "function" == typeof a.getSource) return n = Date.now(), a.getSource.call(t, o);
                        ka.log.error("ERROR: reloadSourceOnError - The option getSource must be a function!")
                    }
                }, l = function e() {
                    t.off("loadedmetadata", s), t.off("error", u), t.off("dispose", e)
                };
                t.on("error", u), t.on("dispose", l), t.reloadSourceOnError = function (i) {
                    l(), e(t, i)
                }
            }(this, e)
        };
    ka.use("*", function (e) {
        return {
            setSource: function (e, t) {
                t(null, e)
            }, setCurrentTime: function (t) {
                return e.vhs && e.currentSource().src === e.vhs.source_.src && e.vhs.setCurrentTime(t), t
            }, play: function () {
                e.vhs && e.currentSource().src === e.vhs.source_.src && e.vhs.setCurrentTime(e.currentTime())
            }
        }
    });
    var hf = {
        PlaylistLoader: oc,
        Playlist: kc,
        Decrypter: Wd,
        AsyncStream: Hd,
        decrypt: zd,
        utils: Rc,
        STANDARD_PLAYLIST_SELECTOR: function () {
            return function (e, t, i, n) {
                var a = e.playlists.map(function (e) {
                    var t = void 0, i = void 0;
                    return t = e.attributes.RESOLUTION && e.attributes.RESOLUTION.width, i = e.attributes.RESOLUTION && e.attributes.RESOLUTION.height, {
                        bandwidth: e.attributes.BANDWIDTH || r.Number.MAX_VALUE,
                        width: t,
                        height: i,
                        playlist: e
                    }
                });
                Rh(a, function (e, t) {
                    return e.bandwidth - t.bandwidth
                });
                var s = (a = a.filter(function (e) {
                    return !kc.isIncompatible(e.playlist)
                })).filter(function (e) {
                    return kc.isEnabled(e.playlist)
                });
                s.length || (s = a.filter(function (e) {
                    return !kc.isDisabled(e.playlist)
                }));
                var o = s.filter(function (e) {
                    return e.bandwidth * Th.BANDWIDTH_VARIANCE < t
                }), u = o[o.length - 1], l = o.filter(function (e) {
                    return e.bandwidth === u.bandwidth
                })[0], d = o.filter(function (e) {
                    return e.width && e.height
                });
                Rh(d, function (e, t) {
                    return e.width - t.width
                });
                var c = d.filter(function (e) {
                    return e.width === i && e.height === n
                });
                u = c[c.length - 1];
                var h = c.filter(function (e) {
                    return e.bandwidth === u.bandwidth
                })[0], f = void 0, p = void 0, m = void 0;
                h || (p = (f = d.filter(function (e) {
                    return e.width > i || e.height > n
                })).filter(function (e) {
                    return e.width === f[0].width && e.height === f[0].height
                }), u = p[p.length - 1], m = p.filter(function (e) {
                    return e.bandwidth === u.bandwidth
                })[0]);
                var g = m || h || l || s[0] || a[0];
                return g ? g.playlist : null
            }(this.playlists.master, this.systemBandwidth, parseInt(Ph(this.tech_.el(), "width"), 10), parseInt(Ph(this.tech_.el(), "height"), 10))
        },
        INITIAL_PLAYLIST_SELECTOR: function () {
            var e = this.playlists.master.playlists.filter(kc.isEnabled);
            Rh(e, function (e, t) {
                return xh(e, t)
            });
            return e.filter(function (e) {
                return th(e.attributes.CODECS).videoCodec
            })[0] || null
        },
        comparePlaylistBandwidth: xh,
        comparePlaylistResolution: function (e, t) {
            var i = void 0, n = void 0;
            return e.attributes.RESOLUTION && e.attributes.RESOLUTION.width && (i = e.attributes.RESOLUTION.width), i = i || r.Number.MAX_VALUE, t.attributes.RESOLUTION && t.attributes.RESOLUTION.width && (n = t.attributes.RESOLUTION.width), i === (n = n || r.Number.MAX_VALUE) && e.attributes.BANDWIDTH && t.attributes.BANDWIDTH ? e.attributes.BANDWIDTH - t.attributes.BANDWIDTH : i - n
        },
        xhr: Cc()
    };
    ["GOAL_BUFFER_LENGTH", "MAX_GOAL_BUFFER_LENGTH", "GOAL_BUFFER_LENGTH_RATE", "BUFFER_LOW_WATER_LINE", "MAX_BUFFER_LOW_WATER_LINE", "BUFFER_LOW_WATER_LINE_RATE", "BANDWIDTH_VARIANCE"].forEach(function (e) {
        Object.defineProperty(hf, e, {
            get: function () {
                return ka.log.warn("using Hls." + e + " is UNSAFE be sure you know what you are doing"), Th[e]
            }, set: function (t) {
                ka.log.warn("using Hls." + e + " is UNSAFE be sure you know what you are doing"), "number" != typeof t || t < 0 ? ka.log.warn("value of Hls." + e + " must be greater than or equal to 0") : Th[e] = t
            }
        })
    });
    var ff = function (e) {
        if (/^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i.test(e)) return "hls";
        return /^application\/dash\+xml/i.test(e) ? "dash" : null
    }, pf = function (e, t) {
        for (var i = t.media(), n = -1, r = 0; r < e.length; r++) if (e[r].id === i.uri) {
            n = r;
            break
        }
        e.selectedIndex_ = n, e.trigger({selectedIndex: n, type: "change"})
    };
    hf.canPlaySource = function () {
        return ka.log.warn("HLS is no longer a tech. Please remove it from your player's techOrder.")
    };
    var mf = function (e) {
        if ("dash" === e.options_.sourceType) {
            var t = ka.players[e.tech_.options_.playerId];
            if (t.eme) {
                var i = function (e, t, i) {
                    if (!e) return e;
                    var n = {};
                    for (var r in e) n[r] = {
                        audioContentType: 'audio/mp4; codecs="' + i.attributes.CODECS + '"',
                        videoContentType: 'video/mp4; codecs="' + t.attributes.CODECS + '"'
                    }, t.contentProtection && t.contentProtection[r] && t.contentProtection[r].pssh && (n[r].pssh = t.contentProtection[r].pssh), "string" == typeof e[r] && (n[r].url = e[r]);
                    return ka.mergeOptions(e, n)
                }(e.source_.keySystems, e.playlists.media(), e.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());
                i && (t.currentSource().keySystems = i)
            }
        }
    };
    hf.supportsNativeHls = function () {
        var e = l.createElement("video");
        if (!ka.getTech("Html5").isSupported()) return !1;
        return ["application/vnd.apple.mpegurl", "audio/mpegurl", "audio/x-mpegurl", "application/x-mpegurl", "video/x-mpegurl", "video/mpegurl", "application/mpegurl"].some(function (t) {
            return /maybe|probably/i.test(e.canPlayType(t))
        })
    }(), hf.supportsNativeDash = !!ka.getTech("Html5").isSupported() && /maybe|probably/i.test(l.createElement("video").canPlayType("application/dash+xml")), hf.supportsTypeNatively = function (e) {
        return "hls" === e ? hf.supportsNativeHls : "dash" === e && hf.supportsNativeDash
    }, hf.isSupported = function () {
        return ka.log.warn("HLS is no longer a tech. Please remove it from your player's techOrder.")
    };
    var gf = ka.getComponent("Component"), yf = function (e) {
        $d(t, gf);

        function t(e, i, n) {
            Yd(this, t);
            var r = Qd(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, i, n.hls));
            if (i.options_ && i.options_.playerId) {
                var a = ka(i.options_.playerId);
                a.hasOwnProperty("hls") || Object.defineProperty(a, "hls", {
                    get: function () {
                        return ka.log.warn("player.hls is deprecated. Use player.tech().hls instead."), i.trigger({
                            type: "usage",
                            name: "hls-player-access"
                        }), r
                    }
                }), a.vhs = r, a.dash = r
            }
            if (r.tech_ = i, r.source_ = e, r.stats = {}, r.setOptions_(), r.options_.overrideNative && i.overrideNativeAudioTracks && i.overrideNativeVideoTracks) i.overrideNativeAudioTracks(!0), i.overrideNativeVideoTracks(!0); else if (r.options_.overrideNative && (i.featuresNativeVideoTracks || i.featuresNativeAudioTracks)) throw new Error("Overriding native HLS requires emulated tracks. See https://git.io/vMpjB");
            return r.on(l, ["fullscreenchange", "webkitfullscreenchange", "mozfullscreenchange", "MSFullscreenChange"], function (e) {
                var t = l.fullscreenElement || l.webkitFullscreenElement || l.mozFullScreenElement || l.msFullscreenElement;
                t && t.contains(r.tech_.el()) && r.masterPlaylistController_.smoothQualityChange_()
            }), r.on(r.tech_, "error", function () {
                this.masterPlaylistController_ && this.masterPlaylistController_.pauseLoading()
            }), r.on(r.tech_, "play", r.play), r
        }

        return Kd(t, [{
            key: "setOptions_", value: function () {
                var e = this;
                this.options_.withCredentials = this.options_.withCredentials || !1, "number" != typeof this.options_.blacklistDuration && (this.options_.blacklistDuration = 300), "number" != typeof this.options_.bandwidth && (this.options_.bandwidth = 4194304), this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && 4194304 === this.options_.bandwidth, ["withCredentials", "bandwidth"].forEach(function (t) {
                    void 0 !== e.source_[t] && (e.options_[t] = e.source_[t])
                }), this.bandwidth = this.options_.bandwidth
            }
        }, {
            key: "src", value: function (e, t) {
                var i = this;
                e && (this.setOptions_(), this.options_.url = this.source_.src, this.options_.tech = this.tech_, this.options_.externHls = hf, this.options_.sourceType = ff(t), this.options_.seekTo = function (e) {
                    i.tech_.setCurrentTime(e), i.setCurrentTime(e)
                }, this.masterPlaylistController_ = new sf(this.options_), this.playbackWatcher_ = new lf(ka.mergeOptions(this.options_, {
                    seekable: function () {
                        return i.seekable()
                    }
                })), this.masterPlaylistController_.on("error", function () {
                    ka.players[i.tech_.options_.playerId].error(i.masterPlaylistController_.error)
                }), this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : hf.STANDARD_PLAYLIST_SELECTOR.bind(this), this.masterPlaylistController_.selectInitialPlaylist = hf.INITIAL_PLAYLIST_SELECTOR.bind(this), this.playlists = this.masterPlaylistController_.masterPlaylistLoader_, this.mediaSource = this.masterPlaylistController_.mediaSource, Object.defineProperties(this, {
                    selectPlaylist: {
                        get: function () {
                            return this.masterPlaylistController_.selectPlaylist
                        }, set: function (e) {
                            this.masterPlaylistController_.selectPlaylist = e.bind(this)
                        }
                    }, throughput: {
                        get: function () {
                            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate
                        }, set: function (e) {
                            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = e, this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1
                        }
                    }, bandwidth: {
                        get: function () {
                            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth
                        }, set: function (e) {
                            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = e, this.masterPlaylistController_.mainSegmentLoader_.throughput = {
                                rate: 0,
                                count: 0
                            }
                        }
                    }, systemBandwidth: {
                        get: function () {
                            var e = 1 / (this.bandwidth || 1), t = void 0;
                            t = this.throughput > 0 ? 1 / this.throughput : 0;
                            return Math.floor(1 / (e + t))
                        }, set: function () {
                            ka.log.error('The "systemBandwidth" property is read-only')
                        }
                    }
                }), Object.defineProperties(this.stats, {
                    bandwidth: {
                        get: function () {
                            return i.bandwidth || 0
                        }, enumerable: !0
                    }, mediaRequests: {
                        get: function () {
                            return i.masterPlaylistController_.mediaRequests_() || 0
                        }, enumerable: !0
                    }, mediaRequestsAborted: {
                        get: function () {
                            return i.masterPlaylistController_.mediaRequestsAborted_() || 0
                        }, enumerable: !0
                    }, mediaRequestsTimedout: {
                        get: function () {
                            return i.masterPlaylistController_.mediaRequestsTimedout_() || 0
                        }, enumerable: !0
                    }, mediaRequestsErrored: {
                        get: function () {
                            return i.masterPlaylistController_.mediaRequestsErrored_() || 0
                        }, enumerable: !0
                    }, mediaTransferDuration: {
                        get: function () {
                            return i.masterPlaylistController_.mediaTransferDuration_() || 0
                        }, enumerable: !0
                    }, mediaBytesTransferred: {
                        get: function () {
                            return i.masterPlaylistController_.mediaBytesTransferred_() || 0
                        }, enumerable: !0
                    }, mediaSecondsLoaded: {
                        get: function () {
                            return i.masterPlaylistController_.mediaSecondsLoaded_() || 0
                        }, enumerable: !0
                    }, buffered: {
                        get: function () {
                            return Bc(i.tech_.buffered())
                        }, enumerable: !0
                    }, currentTime: {
                        get: function () {
                            return i.tech_.currentTime()
                        }, enumerable: !0
                    }, currentSource: {
                        get: function () {
                            return i.tech_.currentSource_
                        }, enumerable: !0
                    }, currentTech: {
                        get: function () {
                            return i.tech_.name_
                        }, enumerable: !0
                    }, duration: {
                        get: function () {
                            return i.tech_.duration()
                        }, enumerable: !0
                    }, master: {
                        get: function () {
                            return i.playlists.master
                        }, enumerable: !0
                    }, playerDimensions: {
                        get: function () {
                            return i.tech_.currentDimensions()
                        }, enumerable: !0
                    }, seekable: {
                        get: function () {
                            return Bc(i.tech_.seekable())
                        }, enumerable: !0
                    }, timestamp: {
                        get: function () {
                            return Date.now()
                        }, enumerable: !0
                    }, videoPlaybackQuality: {
                        get: function () {
                            return i.tech_.getVideoPlaybackQuality()
                        }, enumerable: !0
                    }
                }), this.tech_.one("canplay", this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_)), this.masterPlaylistController_.on("selectedinitialmedia", function () {
                    !function (e) {
                        var t = e.playlists;
                        e.representations = function () {
                            return t.master.playlists.filter(function (e) {
                                return !vc(e)
                            }).map(function (t, i) {
                                return new of(e, t, t.uri)
                            })
                        }
                    }(i), mf(i)
                }), this.on(this.masterPlaylistController_, "progress", function () {
                    this.tech_.trigger("progress")
                }), this.tech_.ready(function () {
                    return i.setupQualityLevels_()
                }), this.tech_.el() && this.tech_.src(ka.URL.createObjectURL(this.masterPlaylistController_.mediaSource)))
            }
        }, {
            key: "setupQualityLevels_", value: function () {
                var e = this, t = ka.players[this.tech_.options_.playerId];
                t && t.qualityLevels && (this.qualityLevels_ = t.qualityLevels(), this.masterPlaylistController_.on("selectedinitialmedia", function () {
                    t = e.qualityLevels_, (i = e).representations().forEach(function (e) {
                        t.addQualityLevel(e)
                    }), pf(t, i.playlists);
                    var t, i
                }), this.playlists.on("mediachange", function () {
                    pf(e.qualityLevels_, e.playlists)
                }))
            }
        }, {
            key: "play", value: function () {
                this.masterPlaylistController_.play()
            }
        }, {
            key: "setCurrentTime", value: function (e) {
                this.masterPlaylistController_.setCurrentTime(e)
            }
        }, {
            key: "duration", value: function () {
                return this.masterPlaylistController_.duration()
            }
        }, {
            key: "seekable", value: function () {
                return this.masterPlaylistController_.seekable()
            }
        }, {
            key: "dispose", value: function () {
                this.playbackWatcher_ && this.playbackWatcher_.dispose(), this.masterPlaylistController_ && this.masterPlaylistController_.dispose(), this.qualityLevels_ && this.qualityLevels_.dispose(), function e(t, i, n) {
                    null === t && (t = Function.prototype);
                    var r = Object.getOwnPropertyDescriptor(t, i);
                    if (void 0 === r) {
                        var a = Object.getPrototypeOf(t);
                        return null === a ? void 0 : e(a, i, n)
                    }
                    if ("value" in r) return r.value;
                    var s = r.get;
                    if (void 0 !== s) return s.call(n)
                }(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "dispose", this).call(this)
            }
        }]), t
    }(), _f = {
        name: "videojs-http-streaming", VERSION: "1.2.6", canHandleSource: function (e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                i = ka.mergeOptions(ka.options, t);
            return _f.canPlayType(e.type, i)
        }, handleSource: function (e, t) {
            var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                n = ka.mergeOptions(ka.options, i);
            return t.hls = new yf(e, t, n), t.hls.xhr = Cc(), t.hls.src(e.src, e.type), t.hls
        }, canPlayType: function (e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                i = ka.mergeOptions(ka.options, t).hls.overrideNative, n = ff(e);
            return n && (!hf.supportsTypeNatively(n) || i) ? "maybe" : ""
        }
    };
    return void 0 !== ka.MediaSource && void 0 !== ka.URL || (ka.MediaSource = hh, ka.URL = fh), hh.supportsNativeMediaSources() && ka.getTech("Html5").registerSourceHandler(_f, 0), ka.HlsHandler = yf, ka.HlsSourceHandler = _f, ka.Hls = hf, ka.use || ka.registerComponent("Hls", hf), ka.options.hls = ka.options.hls || {}, ka.registerPlugin ? ka.registerPlugin("reloadSourceOnError", cf) : ka.plugin("reloadSourceOnError", cf), ka
}), function (e) {
    var t = e && e.videojs;
    t && (t.CDN_VERSION = "7.2.4")
}(window), function (e) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define([], e); else {
        ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).flvjs = e()
    }
}(function () {
    return function () {
        return function e(t, i, n) {
            function r(s, o) {
                if (!i[s]) {
                    if (!t[s]) {
                        var u = "function" == typeof require && require;
                        if (!o && u) return u(s, !0);
                        if (a) return a(s, !0);
                        var l = new Error("Cannot find module '" + s + "'");
                        throw l.code = "MODULE_NOT_FOUND", l
                    }
                    var d = i[s] = {exports: {}};
                    t[s][0].call(d.exports, function (e) {
                        return r(t[s][1][e] || e)
                    }, d, d.exports, e, t, i, n)
                }
                return i[s].exports
            }

            for (var a = "function" == typeof require && require, s = 0; s < n.length; s++) r(n[s]);
            return r
        }
    }()({
        1: [function (e, t, i) {
            (function (n, r) {
                a = this, s = function () {
                    "use strict";

                    function t(e) {
                        return "function" == typeof e
                    }

                    var i = Array.isArray ? Array.isArray : function (e) {
                        return "[object Array]" === Object.prototype.toString.call(e)
                    }, a = 0, s = void 0, o = void 0, u = function (e, t) {
                        m[a] = e, m[a + 1] = t, 2 === (a += 2) && (o ? o(g) : _())
                    };
                    var l = "undefined" != typeof window ? window : void 0, d = l || {},
                        c = d.MutationObserver || d.WebKitMutationObserver,
                        h = "undefined" == typeof self && void 0 !== n && "[object process]" === {}.toString.call(n),
                        f = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel;

                    function p() {
                        var e = setTimeout;
                        return function () {
                            return e(g, 1)
                        }
                    }

                    var m = new Array(1e3);

                    function g() {
                        for (var e = 0; e < a; e += 2) {
                            (0, m[e])(m[e + 1]), m[e] = void 0, m[e + 1] = void 0
                        }
                        a = 0
                    }

                    function y() {
                        try {
                            var e = Function("return this")().require("vertx");
                            return void 0 !== (s = e.runOnLoop || e.runOnContext) ? function () {
                                s(g)
                            } : p()
                        } catch (e) {
                            return p()
                        }
                    }

                    var _ = void 0;
                    _ = h ? function () {
                        return n.nextTick(g)
                    } : c ? function () {
                        var e = 0, t = new c(g), i = document.createTextNode("");
                        return t.observe(i, {characterData: !0}), function () {
                            i.data = e = ++e % 2
                        }
                    }() : f ? function () {
                        var e = new MessageChannel;
                        return e.port1.onmessage = g, function () {
                            return e.port2.postMessage(0)
                        }
                    }() : void 0 === l && "function" == typeof e ? y() : p();

                    function v(e, t) {
                        var i = this, n = new this.constructor(S);
                        void 0 === n[T] && B(n);
                        var r = i._state;
                        if (r) {
                            var a = arguments[r - 1];
                            u(function () {
                                return U(r, n, a, i._result)
                            })
                        } else x(i, n, e, t);
                        return n
                    }

                    function b(e) {
                        if (e && "object" == typeof e && e.constructor === this) return e;
                        var t = new this(S);
                        return O(t, e), t
                    }

                    var T = Math.random().toString(36).substring(2);

                    function S() {
                    }

                    var k = void 0, w = 1, E = 2, C = {error: null};

                    function A(e) {
                        try {
                            return e.then
                        } catch (e) {
                            return C.error = e, C
                        }
                    }

                    function L(e, i, n) {
                        i.constructor === e.constructor && n === v && i.constructor.resolve === b ? (s = e, (o = i)._state === w ? P(s, o._result) : o._state === E ? R(s, o._result) : x(o, void 0, function (e) {
                            return O(s, e)
                        }, function (e) {
                            return R(s, e)
                        })) : n === C ? (R(e, C.error), C.error = null) : void 0 === n ? P(e, i) : t(n) ? (r = i, a = n, u(function (e) {
                            var t = !1, i = function (e, t, i, n) {
                                try {
                                    e.call(t, i, n)
                                } catch (e) {
                                    return e
                                }
                            }(a, r, function (i) {
                                t || (t = !0, r !== i ? O(e, i) : P(e, i))
                            }, function (i) {
                                t || (t = !0, R(e, i))
                            }, e._label);
                            !t && i && (t = !0, R(e, i))
                        }, e)) : P(e, i);
                        var r, a, s, o
                    }

                    function O(e, t) {
                        e === t ? R(e, new TypeError("You cannot resolve a promise with itself")) : !function (e) {
                            var t = typeof e;
                            return null !== e && ("object" === t || "function" === t)
                        }(t) ? P(e, t) : L(e, t, A(t))
                    }

                    function I(e) {
                        e._onerror && e._onerror(e._result), D(e)
                    }

                    function P(e, t) {
                        e._state === k && (e._result = t, e._state = w, 0 !== e._subscribers.length && u(D, e))
                    }

                    function R(e, t) {
                        e._state === k && (e._state = E, e._result = t, u(I, e))
                    }

                    function x(e, t, i, n) {
                        var r = e._subscribers, a = r.length;
                        e._onerror = null, r[a] = t, r[a + w] = i, r[a + E] = n, 0 === a && e._state && u(D, e)
                    }

                    function D(e) {
                        var t = e._subscribers, i = e._state;
                        if (0 !== t.length) {
                            for (var n = void 0, r = void 0, a = e._result, s = 0; s < t.length; s += 3) n = t[s], r = t[s + i], n ? U(i, n, r, a) : r(a);
                            e._subscribers.length = 0
                        }
                    }

                    function U(e, i, n, r) {
                        var a = t(n), s = void 0, o = void 0, u = void 0, l = void 0;
                        if (a) {
                            if ((s = function (e, t) {
                                try {
                                    return e(t)
                                } catch (e) {
                                    return C.error = e, C
                                }
                            }(n, r)) === C ? (l = !0, o = s.error, s.error = null) : u = !0, i === s) return void R(i, new TypeError("A promises callback cannot return that same promise."))
                        } else s = r, u = !0;
                        i._state !== k || (a && u ? O(i, s) : l ? R(i, o) : e === w ? P(i, s) : e === E && R(i, s))
                    }

                    var M = 0;

                    function B(e) {
                        e[T] = M++, e._state = void 0, e._result = void 0, e._subscribers = []
                    }

                    var j = function () {
                        function e(e, t) {
                            this._instanceConstructor = e, this.promise = new e(S), this.promise[T] || B(this.promise), i(t) ? (this.length = t.length, this._remaining = t.length, this._result = new Array(this.length), 0 === this.length ? P(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(t), 0 === this._remaining && P(this.promise, this._result))) : R(this.promise, new Error("Array Methods must be provided an Array"))
                        }

                        return e.prototype._enumerate = function (e) {
                            for (var t = 0; this._state === k && t < e.length; t++) this._eachEntry(e[t], t)
                        }, e.prototype._eachEntry = function (e, t) {
                            var i = this._instanceConstructor, n = i.resolve;
                            if (n === b) {
                                var r = A(e);
                                if (r === v && e._state !== k) this._settledAt(e._state, t, e._result); else if ("function" != typeof r) this._remaining--, this._result[t] = e; else if (i === N) {
                                    var a = new i(S);
                                    L(a, e, r), this._willSettleAt(a, t)
                                } else this._willSettleAt(new i(function (t) {
                                    return t(e)
                                }), t)
                            } else this._willSettleAt(n(e), t)
                        }, e.prototype._settledAt = function (e, t, i) {
                            var n = this.promise;
                            n._state === k && (this._remaining--, e === E ? R(n, i) : this._result[t] = i), 0 === this._remaining && P(n, this._result)
                        }, e.prototype._willSettleAt = function (e, t) {
                            var i = this;
                            x(e, void 0, function (e) {
                                return i._settledAt(w, t, e)
                            }, function (e) {
                                return i._settledAt(E, t, e)
                            })
                        }, e
                    }();
                    var N = function () {
                        function e(t) {
                            this[T] = M++, this._result = this._state = void 0, this._subscribers = [], S !== t && ("function" != typeof t && function () {
                                throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")
                            }(), this instanceof e ? function (e, t) {
                                try {
                                    t(function (t) {
                                        O(e, t)
                                    }, function (t) {
                                        R(e, t)
                                    })
                                } catch (t) {
                                    R(e, t)
                                }
                            }(this, t) : function () {
                                throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")
                            }())
                        }

                        return e.prototype.catch = function (e) {
                            return this.then(null, e)
                        }, e.prototype.finally = function (e) {
                            var i = this.constructor;
                            return t(e) ? this.then(function (t) {
                                return i.resolve(e()).then(function () {
                                    return t
                                })
                            }, function (t) {
                                return i.resolve(e()).then(function () {
                                    throw t
                                })
                            }) : this.then(e, e)
                        }, e
                    }();
                    N.prototype.then = v, N.all = function (e) {
                        return new j(this, e).promise
                    }, N.race = function (e) {
                        var t = this;
                        return i(e) ? new t(function (i, n) {
                            for (var r = e.length, a = 0; a < r; a++) t.resolve(e[a]).then(i, n)
                        }) : new t(function (e, t) {
                            return t(new TypeError("You must pass an array to race."))
                        })
                    }, N.resolve = b, N.reject = function (e) {
                        var t = new this(S);
                        return R(t, e), t
                    }, N._setScheduler = function (e) {
                        o = e
                    }, N._setAsap = function (e) {
                        u = e
                    }, N._asap = u;
                    return N.polyfill = function () {
                        var e = void 0;
                        if (void 0 !== r) e = r; else if ("undefined" != typeof self) e = self; else try {
                            e = Function("return this")()
                        } catch (e) {
                            throw new Error("polyfill failed because global object is unavailable in this environment")
                        }
                        var t = e.Promise;
                        if (t) {
                            var i = null;
                            try {
                                i = Object.prototype.toString.call(t.resolve())
                            } catch (e) {
                            }
                            if ("[object Promise]" === i && !t.cast) return
                        }
                        e.Promise = N
                    }, N.Promise = N, N
                }, "object" == typeof i && void 0 !== t ? t.exports = s() : a.ES6Promise = s();
                var a, s
            }).call(this, e("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {_process: 3}],
        2: [function (e, t, i) {
            function n() {
                this._events = this._events || {}, this._maxListeners = this._maxListeners || void 0
            }

            t.exports = n, n.EventEmitter = n, n.prototype._events = void 0, n.prototype._maxListeners = void 0, n.defaultMaxListeners = 10, n.prototype.setMaxListeners = function (e) {
                if ("number" != typeof e || e < 0 || isNaN(e)) throw TypeError("n must be a positive number");
                return this._maxListeners = e, this
            }, n.prototype.emit = function (e) {
                var t, i, n, o, u, l;
                if (this._events || (this._events = {}), "error" === e && (!this._events.error || a(this._events.error) && !this._events.error.length)) {
                    if ((t = arguments[1]) instanceof Error) throw t;
                    var d = new Error('Uncaught, unspecified "error" event. (' + t + ")");
                    throw d.context = t, d
                }
                if (s(i = this._events[e])) return !1;
                if (r(i)) switch (arguments.length) {
                    case 1:
                        i.call(this);
                        break;
                    case 2:
                        i.call(this, arguments[1]);
                        break;
                    case 3:
                        i.call(this, arguments[1], arguments[2]);
                        break;
                    default:
                        o = Array.prototype.slice.call(arguments, 1), i.apply(this, o)
                } else if (a(i)) for (o = Array.prototype.slice.call(arguments, 1), n = (l = i.slice()).length, u = 0; u < n; u++) l[u].apply(this, o);
                return !0
            }, n.prototype.addListener = function (e, t) {
                var i;
                if (!r(t)) throw TypeError("listener must be a function");
                return this._events || (this._events = {}), this._events.newListener && this.emit("newListener", e, r(t.listener) ? t.listener : t), this._events[e] ? a(this._events[e]) ? this._events[e].push(t) : this._events[e] = [this._events[e], t] : this._events[e] = t, a(this._events[e]) && !this._events[e].warned && (i = s(this._maxListeners) ? n.defaultMaxListeners : this._maxListeners) && i > 0 && this._events[e].length > i && (this._events[e].warned = !0, console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[e].length), "function" == typeof console.trace && console.trace()), this
            }, n.prototype.on = n.prototype.addListener, n.prototype.once = function (e, t) {
                if (!r(t)) throw TypeError("listener must be a function");
                var i = !1;

                function n() {
                    this.removeListener(e, n), i || (i = !0, t.apply(this, arguments))
                }

                return n.listener = t, this.on(e, n), this
            }, n.prototype.removeListener = function (e, t) {
                var i, n, s, o;
                if (!r(t)) throw TypeError("listener must be a function");
                if (!this._events || !this._events[e]) return this;
                if (s = (i = this._events[e]).length, n = -1, i === t || r(i.listener) && i.listener === t) delete this._events[e], this._events.removeListener && this.emit("removeListener", e, t); else if (a(i)) {
                    for (o = s; o-- > 0;) if (i[o] === t || i[o].listener && i[o].listener === t) {
                        n = o;
                        break
                    }
                    if (n < 0) return this;
                    1 === i.length ? (i.length = 0, delete this._events[e]) : i.splice(n, 1), this._events.removeListener && this.emit("removeListener", e, t)
                }
                return this
            }, n.prototype.removeAllListeners = function (e) {
                var t, i;
                if (!this._events) return this;
                if (!this._events.removeListener) return 0 === arguments.length ? this._events = {} : this._events[e] && delete this._events[e], this;
                if (0 === arguments.length) {
                    for (t in this._events) "removeListener" !== t && this.removeAllListeners(t);
                    return this.removeAllListeners("removeListener"), this._events = {}, this
                }
                if (r(i = this._events[e])) this.removeListener(e, i); else if (i) for (; i.length;) this.removeListener(e, i[i.length - 1]);
                return delete this._events[e], this
            }, n.prototype.listeners = function (e) {
                return this._events && this._events[e] ? r(this._events[e]) ? [this._events[e]] : this._events[e].slice() : []
            }, n.prototype.listenerCount = function (e) {
                if (this._events) {
                    var t = this._events[e];
                    if (r(t)) return 1;
                    if (t) return t.length
                }
                return 0
            }, n.listenerCount = function (e, t) {
                return e.listenerCount(t)
            };

            function r(e) {
                return "function" == typeof e
            }

            function a(e) {
                return "object" == typeof e && null !== e
            }

            function s(e) {
                return void 0 === e
            }
        }, {}],
        3: [function (e, t, i) {
            var n, r, a = t.exports = {};

            function s() {
                throw new Error("setTimeout has not been defined")
            }

            function o() {
                throw new Error("clearTimeout has not been defined")
            }

            !function () {
                try {
                    n = "function" == typeof setTimeout ? setTimeout : s
                } catch (e) {
                    n = s
                }
                try {
                    r = "function" == typeof clearTimeout ? clearTimeout : o
                } catch (e) {
                    r = o
                }
            }();

            function u(e) {
                if (n === setTimeout) return setTimeout(e, 0);
                if ((n === s || !n) && setTimeout) return n = setTimeout, setTimeout(e, 0);
                try {
                    return n(e, 0)
                } catch (t) {
                    try {
                        return n.call(null, e, 0)
                    } catch (t) {
                        return n.call(this, e, 0)
                    }
                }
            }

            var l, d = [], c = !1, h = -1;

            function f() {
                c && l && (c = !1, l.length ? d = l.concat(d) : h = -1, d.length && p())
            }

            function p() {
                if (!c) {
                    var e = u(f);
                    c = !0;
                    for (var t = d.length; t;) {
                        for (l = d, d = []; ++h < t;) l && l[h].run();
                        h = -1, t = d.length
                    }
                    l = null, c = !1, function (e) {
                        if (r === clearTimeout) return clearTimeout(e);
                        if ((r === o || !r) && clearTimeout) return r = clearTimeout, clearTimeout(e);
                        try {
                            r(e)
                        } catch (t) {
                            try {
                                return r.call(null, e)
                            } catch (t) {
                                return r.call(this, e)
                            }
                        }
                    }(e)
                }
            }

            a.nextTick = function (e) {
                var t = new Array(arguments.length - 1);
                if (arguments.length > 1) for (var i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                d.push(new m(e, t)), 1 !== d.length || c || u(p)
            };

            function m(e, t) {
                this.fun = e, this.array = t
            }

            m.prototype.run = function () {
                this.fun.apply(null, this.array)
            }, a.title = "browser", a.browser = !0, a.env = {}, a.argv = [], a.version = "", a.versions = {};

            function g() {
            }

            a.on = g, a.addListener = g, a.once = g, a.off = g, a.removeListener = g, a.removeAllListeners = g, a.emit = g, a.prependListener = g, a.prependOnceListener = g, a.listeners = function (e) {
                return []
            }, a.binding = function (e) {
                throw new Error("process.binding is not supported")
            }, a.cwd = function () {
                return "/"
            }, a.chdir = function (e) {
                throw new Error("process.chdir is not supported")
            }, a.umask = function () {
                return 0
            }
        }, {}],
        4: [function (e, t, i) {
            var n = arguments[3], r = arguments[4], a = arguments[5], s = JSON.stringify;
            t.exports = function (e, t) {
                for (var i, o = Object.keys(a), u = 0, l = o.length; u < l; u++) {
                    var d = o[u], c = a[d].exports;
                    if (c === e || c && c.default === e) {
                        i = d;
                        break
                    }
                }
                if (!i) {
                    i = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);
                    var h = {};
                    for (u = 0, l = o.length; u < l; u++) {
                        h[d = o[u]] = d
                    }
                    r[i] = ["function(require,module,exports){" + e + "(self); }", h]
                }
                var f = Math.floor(Math.pow(16, 8) * Math.random()).toString(16), p = {};
                p[i] = i, r[f] = ["function(require,module,exports){var f = require(" + s(i) + ");(f.default ? f.default : f)(self);}", p];
                var m = {};
                !function e(t) {
                    m[t] = !0;
                    for (var i in r[t][1]) {
                        var n = r[t][1][i];
                        m[n] || e(n)
                    }
                }(f);
                var g = "(" + n + ")({" + Object.keys(m).map(function (e) {
                        return s(e) + ":[" + r[e][0] + "," + s(r[e][1]) + "]"
                    }).join(",") + "},{},[" + s(f) + "])",
                    y = window.URL || window.webkitURL || window.mozURL || window.msURL,
                    _ = new Blob([g], {type: "text/javascript"});
                if (t && t.bare) return _;
                var v = y.createObjectURL(_), b = new Worker(v);
                return b.objectURL = v, b
            }
        }, {}],
        5: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0}), i.createDefaultConfig = function () {
                return Object.assign({}, n)
            };
            var n = i.defaultConfig = {
                enableWorker: !1,
                enableStashBuffer: !0,
                stashInitialSize: void 0,
                isLive: !1,
                lazyLoad: !0,
                lazyLoadMaxDuration: 180,
                lazyLoadRecoverDuration: 30,
                deferLoadAfterSourceOpen: !0,
                autoCleanupMaxBackwardDuration: 180,
                autoCleanupMinBackwardDuration: 120,
                statisticsInfoReportInterval: 600,
                fixAudioTimestampGap: !0,
                accurateSeek: !1,
                seekType: "range",
                seekParamStart: "bstart",
                seekParamEnd: "bend",
                rangeLoadZeroStart: !1,
                customSeekHandler: void 0,
                reuseRedirectedURL: !1,
                headers: void 0,
                customLoader: void 0
            }
        }, {}],
        6: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n, r = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), a = e("../io/io-controller.js"), s = (n = a, n && n.__esModule ? n : {default: n}),
                o = e("../config.js");
            var u = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e)
                }

                return r(e, null, [{
                    key: "supportMSEH264Playback", value: function () {
                        return window.MediaSource && window.MediaSource.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"')
                    }
                }, {
                    key: "supportNetworkStreamIO", value: function () {
                        var e = new s.default({}, (0, o.createDefaultConfig)()), t = e.loaderType;
                        return e.destroy(), "fetch-stream-loader" == t || "xhr-moz-chunked-loader" == t
                    }
                }, {
                    key: "getNetworkLoaderTypeName", value: function () {
                        var e = new s.default({}, (0, o.createDefaultConfig)()), t = e.loaderType;
                        return e.destroy(), t
                    }
                }, {
                    key: "supportNativeMediaPlayback", value: function (t) {
                        void 0 == e.videoElement && (e.videoElement = window.document.createElement("video"));
                        var i = e.videoElement.canPlayType(t);
                        return "probably" === i || "maybe" == i
                    }
                }, {
                    key: "getFeatureList", value: function () {
                        var t = {
                            mseFlvPlayback: !1,
                            mseLiveFlvPlayback: !1,
                            networkStreamIO: !1,
                            networkLoaderName: "",
                            nativeMP4H264Playback: !1,
                            nativeWebmVP8Playback: !1,
                            nativeWebmVP9Playback: !1
                        };
                        return t.mseFlvPlayback = e.supportMSEH264Playback(), t.networkStreamIO = e.supportNetworkStreamIO(), t.networkLoaderName = e.getNetworkLoaderTypeName(), t.mseLiveFlvPlayback = t.mseFlvPlayback && t.networkStreamIO, t.nativeMP4H264Playback = e.supportNativeMediaPlayback('video/mp4; codecs="avc1.42001E, mp4a.40.2"'), t.nativeWebmVP8Playback = e.supportNativeMediaPlayback('video/webm; codecs="vp8.0, vorbis"'), t.nativeWebmVP9Playback = e.supportNativeMediaPlayback('video/webm; codecs="vp9"'), t
                    }
                }]), e
            }();
            i.default = u
        }, {"../config.js": 5, "../io/io-controller.js": 23}],
        7: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }();
            var r = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.mimeType = null, this.duration = null, this.hasAudio = null, this.hasVideo = null, this.audioCodec = null, this.videoCodec = null, this.audioDataRate = null, this.videoDataRate = null, this.audioSampleRate = null, this.audioChannelCount = null, this.width = null, this.height = null, this.fps = null, this.profile = null, this.level = null, this.refFrames = null, this.chromaFormat = null, this.sarNum = null, this.sarDen = null, this.metadata = null, this.segments = null, this.segmentCount = null, this.hasKeyframesIndex = null, this.keyframesIndex = null
                }

                return n(e, [{
                    key: "isComplete", value: function () {
                        var e = !1 === this.hasAudio || !0 === this.hasAudio && null != this.audioCodec && null != this.audioSampleRate && null != this.audioChannelCount,
                            t = !1 === this.hasVideo || !0 === this.hasVideo && null != this.videoCodec && null != this.width && null != this.height && null != this.fps && null != this.profile && null != this.level && null != this.refFrames && null != this.chromaFormat && null != this.sarNum && null != this.sarDen;
                        return null != this.mimeType && null != this.duration && null != this.metadata && null != this.hasKeyframesIndex && e && t
                    }
                }, {
                    key: "isSeekable", value: function () {
                        return !0 === this.hasKeyframesIndex
                    }
                }, {
                    key: "getNearestKeyframe", value: function (e) {
                        if (null == this.keyframesIndex) return null;
                        var t = this.keyframesIndex, i = this._search(t.times, e);
                        return {index: i, milliseconds: t.times[i], fileposition: t.filepositions[i]}
                    }
                }, {
                    key: "_search", value: function (e, t) {
                        var i = 0, n = e.length - 1, r = 0, a = 0, s = n;
                        for (t < e[0] && (i = 0, a = s + 1); a <= s;) {
                            if ((r = a + Math.floor((s - a) / 2)) === n || t >= e[r] && t < e[r + 1]) {
                                i = r;
                                break
                            }
                            e[r] < t ? a = r + 1 : s = r - 1
                        }
                        return i
                    }
                }]), e
            }();
            i.default = r
        }, {}],
        8: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }();

            function r(e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }

            i.SampleInfo = function e(t, i, n, a, s) {
                r(this, e), this.dts = t, this.pts = i, this.duration = n, this.originalDts = a, this.isSyncPoint = s, this.fileposition = null
            }, i.MediaSegmentInfo = function () {
                function e() {
                    r(this, e), this.beginDts = 0, this.endDts = 0, this.beginPts = 0, this.endPts = 0, this.originalBeginDts = 0, this.originalEndDts = 0, this.syncPoints = [], this.firstSample = null, this.lastSample = null
                }

                return n(e, [{
                    key: "appendSyncPoint", value: function (e) {
                        e.isSyncPoint = !0, this.syncPoints.push(e)
                    }
                }]), e
            }(), i.IDRSampleList = function () {
                function e() {
                    r(this, e), this._list = []
                }

                return n(e, [{
                    key: "clear", value: function () {
                        this._list = []
                    }
                }, {
                    key: "appendArray", value: function (e) {
                        var t = this._list;
                        0 !== e.length && (t.length > 0 && e[0].originalDts < t[t.length - 1].originalDts && this.clear(), Array.prototype.push.apply(t, e))
                    }
                }, {
                    key: "getLastSyncPointBeforeDts", value: function (e) {
                        if (0 == this._list.length) return null;
                        var t = this._list, i = 0, n = t.length - 1, r = 0, a = 0, s = n;
                        for (e < t[0].dts && (i = 0, a = s + 1); a <= s;) {
                            if ((r = a + Math.floor((s - a) / 2)) === n || e >= t[r].dts && e < t[r + 1].dts) {
                                i = r;
                                break
                            }
                            t[r].dts < e ? a = r + 1 : s = r - 1
                        }
                        return this._list[i]
                    }
                }]), e
            }(), i.MediaSegmentInfoList = function () {
                function e(t) {
                    r(this, e), this._type = t, this._list = [], this._lastAppendLocation = -1
                }

                return n(e, [{
                    key: "isEmpty", value: function () {
                        return 0 === this._list.length
                    }
                }, {
                    key: "clear", value: function () {
                        this._list = [], this._lastAppendLocation = -1
                    }
                }, {
                    key: "_searchNearestSegmentBefore", value: function (e) {
                        var t = this._list;
                        if (0 === t.length) return -2;
                        var i = t.length - 1, n = 0, r = 0, a = i, s = 0;
                        if (e < t[0].originalBeginDts) return s = -1;
                        for (; r <= a;) {
                            if ((n = r + Math.floor((a - r) / 2)) === i || e > t[n].lastSample.originalDts && e < t[n + 1].originalBeginDts) {
                                s = n;
                                break
                            }
                            t[n].originalBeginDts < e ? r = n + 1 : a = n - 1
                        }
                        return s
                    }
                }, {
                    key: "_searchNearestSegmentAfter", value: function (e) {
                        return this._searchNearestSegmentBefore(e) + 1
                    }
                }, {
                    key: "append", value: function (e) {
                        var t = this._list, i = e, n = this._lastAppendLocation, r = 0;
                        -1 !== n && n < t.length && i.originalBeginDts >= t[n].lastSample.originalDts && (n === t.length - 1 || n < t.length - 1 && i.originalBeginDts < t[n + 1].originalBeginDts) ? r = n + 1 : t.length > 0 && (r = this._searchNearestSegmentBefore(i.originalBeginDts) + 1), this._lastAppendLocation = r, this._list.splice(r, 0, i)
                    }
                }, {
                    key: "getLastSegmentBefore", value: function (e) {
                        var t = this._searchNearestSegmentBefore(e);
                        return t >= 0 ? this._list[t] : null
                    }
                }, {
                    key: "getLastSampleBefore", value: function (e) {
                        var t = this.getLastSegmentBefore(e);
                        return null != t ? t.lastSample : null
                    }
                }, {
                    key: "getLastSyncPointBefore", value: function (e) {
                        for (var t = this._searchNearestSegmentBefore(e), i = this._list[t].syncPoints; 0 === i.length && t > 0;) t--, i = this._list[t].syncPoints;
                        return i.length > 0 ? i[i.length - 1] : null
                    }
                }, {
                    key: "type", get: function () {
                        return this._type
                    }
                }, {
                    key: "length", get: function () {
                        return this._list.length
                    }
                }]), e
            }()
        }, {}],
        9: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), r = d(e("events")), a = d(e("../utils/logger.js")), s = d(e("../utils/browser.js")),
                o = d(e("./mse-events.js")), u = e("./media-segment-info.js"), l = e("../utils/exception.js");

            function d(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var c = function () {
                function e(t) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.TAG = "MSEController", this._config = t, this._emitter = new r.default, this._config.isLive && void 0 == this._config.autoCleanupSourceBuffer && (this._config.autoCleanupSourceBuffer = !0), this.e = {
                        onSourceOpen: this._onSourceOpen.bind(this),
                        onSourceEnded: this._onSourceEnded.bind(this),
                        onSourceClose: this._onSourceClose.bind(this),
                        onSourceBufferError: this._onSourceBufferError.bind(this),
                        onSourceBufferUpdateEnd: this._onSourceBufferUpdateEnd.bind(this)
                    }, this._mediaSource = null, this._mediaSourceObjectURL = null, this._mediaElement = null, this._isBufferFull = !1, this._hasPendingEos = !1, this._requireSetMediaDuration = !1, this._pendingMediaDuration = 0, this._pendingSourceBufferInit = [], this._mimeTypes = {
                        video: null,
                        audio: null
                    }, this._sourceBuffers = {video: null, audio: null}, this._lastInitSegments = {
                        video: null,
                        audio: null
                    }, this._pendingSegments = {video: [], audio: []}, this._pendingRemoveRanges = {
                        video: [],
                        audio: []
                    }, this._idrList = new u.IDRSampleList
                }

                return n(e, [{
                    key: "destroy", value: function () {
                        (this._mediaElement || this._mediaSource) && this.detachMediaElement(), this.e = null, this._emitter.removeAllListeners(), this._emitter = null
                    }
                }, {
                    key: "on", value: function (e, t) {
                        this._emitter.addListener(e, t)
                    }
                }, {
                    key: "off", value: function (e, t) {
                        this._emitter.removeListener(e, t)
                    }
                }, {
                    key: "attachMediaElement", value: function (e) {
                        if (this._mediaSource) throw new l.IllegalStateException("MediaSource has been attached to an HTMLMediaElement!");
                        var t = this._mediaSource = new window.MediaSource;
                        t.addEventListener("sourceopen", this.e.onSourceOpen), t.addEventListener("sourceended", this.e.onSourceEnded), t.addEventListener("sourceclose", this.e.onSourceClose), this._mediaElement = e, this._mediaSourceObjectURL = window.URL.createObjectURL(this._mediaSource), e.src = this._mediaSourceObjectURL
                    }
                }, {
                    key: "detachMediaElement", value: function () {
                        if (this._mediaSource) {
                            var e = this._mediaSource;
                            for (var t in this._sourceBuffers) {
                                var i = this._pendingSegments[t];
                                i.splice(0, i.length), this._pendingSegments[t] = null, this._pendingRemoveRanges[t] = null, this._lastInitSegments[t] = null;
                                var n = this._sourceBuffers[t];
                                if (n) {
                                    if ("closed" !== e.readyState) {
                                        try {
                                            e.removeSourceBuffer(n)
                                        } catch (e) {
                                            a.default.e(this.TAG, e.message)
                                        }
                                        n.removeEventListener("error", this.e.onSourceBufferError), n.removeEventListener("updateend", this.e.onSourceBufferUpdateEnd)
                                    }
                                    this._mimeTypes[t] = null, this._sourceBuffers[t] = null
                                }
                            }
                            if ("open" === e.readyState) try {
                                e.endOfStream()
                            } catch (e) {
                                a.default.e(this.TAG, e.message)
                            }
                            e.removeEventListener("sourceopen", this.e.onSourceOpen), e.removeEventListener("sourceended", this.e.onSourceEnded), e.removeEventListener("sourceclose", this.e.onSourceClose), this._pendingSourceBufferInit = [], this._isBufferFull = !1, this._idrList.clear(), this._mediaSource = null
                        }
                        this._mediaElement && (this._mediaElement.src = "", this._mediaElement.removeAttribute("src"), this._mediaElement = null), this._mediaSourceObjectURL && (window.URL.revokeObjectURL(this._mediaSourceObjectURL), this._mediaSourceObjectURL = null)
                    }
                }, {
                    key: "appendInitSegment", value: function (e, t) {
                        if (!this._mediaSource || "open" !== this._mediaSource.readyState) return this._pendingSourceBufferInit.push(e), void this._pendingSegments[e.type].push(e);
                        var i = e, n = "" + i.container;
                        i.codec && i.codec.length > 0 && (n += ";codecs=" + i.codec);
                        var r = !1;
                        if (a.default.v(this.TAG, "Received Initialization Segment, mimeType: " + n), this._lastInitSegments[i.type] = i, n !== this._mimeTypes[i.type]) {
                            if (this._mimeTypes[i.type]) a.default.v(this.TAG, "Notice: " + i.type + " mimeType changed, origin: " + this._mimeTypes[i.type] + ", target: " + n); else {
                                r = !0;
                                try {
                                    var u = this._sourceBuffers[i.type] = this._mediaSource.addSourceBuffer(n);
                                    u.addEventListener("error", this.e.onSourceBufferError), u.addEventListener("updateend", this.e.onSourceBufferUpdateEnd)
                                } catch (e) {
                                    return a.default.e(this.TAG, e.message), void this._emitter.emit(o.default.ERROR, {
                                        code: e.code,
                                        msg: e.message
                                    })
                                }
                            }
                            this._mimeTypes[i.type] = n
                        }
                        t || this._pendingSegments[i.type].push(i), r || this._sourceBuffers[i.type] && !this._sourceBuffers[i.type].updating && this._doAppendSegments(), s.default.safari && "audio/mpeg" === i.container && i.mediaDuration > 0 && (this._requireSetMediaDuration = !0, this._pendingMediaDuration = i.mediaDuration / 1e3, this._updateMediaSourceDuration())
                    }
                }, {
                    key: "appendMediaSegment", value: function (e) {
                        var t = e;
                        this._pendingSegments[t.type].push(t), this._config.autoCleanupSourceBuffer && this._needCleanupSourceBuffer() && this._doCleanupSourceBuffer();
                        var i = this._sourceBuffers[t.type];
                        !i || i.updating || this._hasPendingRemoveRanges() || this._doAppendSegments()
                    }
                }, {
                    key: "seek", value: function (e) {
                        for (var t in this._sourceBuffers) if (this._sourceBuffers[t]) {
                            var i = this._sourceBuffers[t];
                            if ("open" === this._mediaSource.readyState) try {
                                i.abort()
                            } catch (e) {
                                a.default.e(this.TAG, e.message)
                            }
                            this._idrList.clear();
                            var n = this._pendingSegments[t];
                            if (n.splice(0, n.length), "closed" !== this._mediaSource.readyState) {
                                for (var r = 0; r < i.buffered.length; r++) {
                                    var o = i.buffered.start(r), u = i.buffered.end(r);
                                    this._pendingRemoveRanges[t].push({start: o, end: u})
                                }
                                if (i.updating || this._doRemoveRanges(), s.default.safari) {
                                    var l = this._lastInitSegments[t];
                                    l && (this._pendingSegments[t].push(l), i.updating || this._doAppendSegments())
                                }
                            }
                        }
                    }
                }, {
                    key: "endOfStream", value: function () {
                        var e = this._mediaSource, t = this._sourceBuffers;
                        e && "open" === e.readyState ? t.video && t.video.updating || t.audio && t.audio.updating ? this._hasPendingEos = !0 : (this._hasPendingEos = !1, e.endOfStream()) : e && "closed" === e.readyState && this._hasPendingSegments() && (this._hasPendingEos = !0)
                    }
                }, {
                    key: "getNearestKeyframe", value: function (e) {
                        return this._idrList.getLastSyncPointBeforeDts(e)
                    }
                }, {
                    key: "_needCleanupSourceBuffer", value: function () {
                        if (!this._config.autoCleanupSourceBuffer) return !1;
                        var e = this._mediaElement.currentTime;
                        for (var t in this._sourceBuffers) {
                            var i = this._sourceBuffers[t];
                            if (i) {
                                var n = i.buffered;
                                if (n.length >= 1 && e - n.start(0) >= this._config.autoCleanupMaxBackwardDuration) return !0
                            }
                        }
                        return !1
                    }
                }, {
                    key: "_doCleanupSourceBuffer", value: function () {
                        var e = this._mediaElement.currentTime;
                        for (var t in this._sourceBuffers) {
                            var i = this._sourceBuffers[t];
                            if (i) {
                                for (var n = i.buffered, r = !1, a = 0; a < n.length; a++) {
                                    var s = n.start(a), o = n.end(a);
                                    if (s <= e && e < o + 3) {
                                        if (e - s >= this._config.autoCleanupMaxBackwardDuration) {
                                            r = !0;
                                            var u = e - this._config.autoCleanupMinBackwardDuration;
                                            this._pendingRemoveRanges[t].push({start: s, end: u})
                                        }
                                    } else o < e && (r = !0, this._pendingRemoveRanges[t].push({start: s, end: o}))
                                }
                                r && !i.updating && this._doRemoveRanges()
                            }
                        }
                    }
                }, {
                    key: "_updateMediaSourceDuration", value: function () {
                        var e = this._sourceBuffers;
                        if (0 !== this._mediaElement.readyState && "open" === this._mediaSource.readyState && !(e.video && e.video.updating || e.audio && e.audio.updating)) {
                            var t = this._mediaSource.duration, i = this._pendingMediaDuration;
                            i > 0 && (isNaN(t) || i > t) && (a.default.v(this.TAG, "Update MediaSource duration from " + t + " to " + i), this._mediaSource.duration = i), this._requireSetMediaDuration = !1, this._pendingMediaDuration = 0
                        }
                    }
                }, {
                    key: "_doRemoveRanges", value: function () {
                        for (var e in this._pendingRemoveRanges) if (this._sourceBuffers[e] && !this._sourceBuffers[e].updating) for (var t = this._sourceBuffers[e], i = this._pendingRemoveRanges[e]; i.length && !t.updating;) {
                            var n = i.shift();
                            t.remove(n.start, n.end)
                        }
                    }
                }, {
                    key: "_doAppendSegments", value: function () {
                        var e = this._pendingSegments;
                        for (var t in e) if (this._sourceBuffers[t] && !this._sourceBuffers[t].updating && e[t].length > 0) {
                            var i = e[t].shift();
                            if (i.timestampOffset) {
                                var n = this._sourceBuffers[t].timestampOffset, r = i.timestampOffset / 1e3;
                                Math.abs(n - r) > .1 && (a.default.v(this.TAG, "Update MPEG audio timestampOffset from " + n + " to " + r), this._sourceBuffers[t].timestampOffset = r), delete i.timestampOffset
                            }
                            if (!i.data || 0 === i.data.byteLength) continue;
                            try {
                                this._sourceBuffers[t].appendBuffer(i.data), this._isBufferFull = !1, "video" === t && i.hasOwnProperty("info") && this._idrList.appendArray(i.info.syncPoints)
                            } catch (e) {
                                this._pendingSegments[t].unshift(i), 22 === e.code ? (this._isBufferFull || this._emitter.emit(o.default.BUFFER_FULL), this._isBufferFull = !0) : (a.default.e(this.TAG, e.message), this._emitter.emit(o.default.ERROR, {
                                    code: e.code,
                                    msg: e.message
                                }))
                            }
                        }
                    }
                }, {
                    key: "_onSourceOpen", value: function () {
                        if (a.default.v(this.TAG, "MediaSource onSourceOpen"), this._mediaSource.removeEventListener("sourceopen", this.e.onSourceOpen), this._pendingSourceBufferInit.length > 0) for (var e = this._pendingSourceBufferInit; e.length;) {
                            var t = e.shift();
                            this.appendInitSegment(t, !0)
                        }
                        this._hasPendingSegments() && this._doAppendSegments(), this._emitter.emit(o.default.SOURCE_OPEN)
                    }
                }, {
                    key: "_onSourceEnded", value: function () {
                        a.default.v(this.TAG, "MediaSource onSourceEnded")
                    }
                }, {
                    key: "_onSourceClose", value: function () {
                        a.default.v(this.TAG, "MediaSource onSourceClose"), this._mediaSource && null != this.e && (this._mediaSource.removeEventListener("sourceopen", this.e.onSourceOpen), this._mediaSource.removeEventListener("sourceended", this.e.onSourceEnded), this._mediaSource.removeEventListener("sourceclose", this.e.onSourceClose))
                    }
                }, {
                    key: "_hasPendingSegments", value: function () {
                        var e = this._pendingSegments;
                        return e.video.length > 0 || e.audio.length > 0
                    }
                }, {
                    key: "_hasPendingRemoveRanges", value: function () {
                        var e = this._pendingRemoveRanges;
                        return e.video.length > 0 || e.audio.length > 0
                    }
                }, {
                    key: "_onSourceBufferUpdateEnd", value: function () {
                        this._requireSetMediaDuration ? this._updateMediaSourceDuration() : this._hasPendingRemoveRanges() ? this._doRemoveRanges() : this._hasPendingSegments() ? this._doAppendSegments() : this._hasPendingEos && this.endOfStream(), this._emitter.emit(o.default.UPDATE_END)
                    }
                }, {
                    key: "_onSourceBufferError", value: function (e) {
                        a.default.e(this.TAG, "SourceBuffer Error: " + e)
                    }
                }]), e
            }();
            i.default = c
        }, {
            "../utils/browser.js": 39,
            "../utils/exception.js": 40,
            "../utils/logger.js": 41,
            "./media-segment-info.js": 8,
            "./mse-events.js": 10,
            events: 2
        }],
        10: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            i.default = {
                ERROR: "error",
                SOURCE_OPEN: "source_open",
                UPDATE_END: "update_end",
                BUFFER_FULL: "buffer_full"
            }
        }, {}],
        11: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), r = c(e("events")), a = c(e("../utils/logger.js")), s = c(e("../utils/logging-control.js")),
                o = c(e("./transmuxing-controller.js")), u = c(e("./transmuxing-events.js")),
                l = c(e("./transmuxing-worker.js")), d = c(e("./media-info.js"));

            function c(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var h = function () {
                function t(i, n) {
                    if (function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t), this.TAG = "Transmuxer", this._emitter = new r.default, n.enableWorker && "undefined" != typeof Worker) try {
                        var d = e("webworkify");
                        this._worker = d(l.default), this._workerDestroying = !1, this._worker.addEventListener("message", this._onWorkerMessage.bind(this)), this._worker.postMessage({
                            cmd: "init",
                            param: [i, n]
                        }), this.e = {onLoggingConfigChanged: this._onLoggingConfigChanged.bind(this)}, s.default.registerListener(this.e.onLoggingConfigChanged), this._worker.postMessage({
                            cmd: "logging_config",
                            param: s.default.getConfig()
                        })
                    } catch (e) {
                        a.default.e(this.TAG, "Error while initialize transmuxing worker, fallback to inline transmuxing"), this._worker = null, this._controller = new o.default(i, n)
                    } else this._controller = new o.default(i, n);
                    if (this._controller) {
                        var c = this._controller;
                        c.on(u.default.IO_ERROR, this._onIOError.bind(this)), c.on(u.default.DEMUX_ERROR, this._onDemuxError.bind(this)), c.on(u.default.INIT_SEGMENT, this._onInitSegment.bind(this)), c.on(u.default.MEDIA_SEGMENT, this._onMediaSegment.bind(this)), c.on(u.default.LOADING_COMPLETE, this._onLoadingComplete.bind(this)), c.on(u.default.RECOVERED_EARLY_EOF, this._onRecoveredEarlyEof.bind(this)), c.on(u.default.MEDIA_INFO, this._onMediaInfo.bind(this)), c.on(u.default.METADATA_ARRIVED, this._onMetaDataArrived.bind(this)), c.on(u.default.SCRIPTDATA_ARRIVED, this._onScriptDataArrived.bind(this)), c.on(u.default.STATISTICS_INFO, this._onStatisticsInfo.bind(this)), c.on(u.default.RECOMMEND_SEEKPOINT, this._onRecommendSeekpoint.bind(this))
                    }
                }

                return n(t, [{
                    key: "destroy", value: function () {
                        this._worker ? this._workerDestroying || (this._workerDestroying = !0, this._worker.postMessage({cmd: "destroy"}), s.default.removeListener(this.e.onLoggingConfigChanged), this.e = null) : (this._controller.destroy(), this._controller = null), this._emitter.removeAllListeners(), this._emitter = null
                    }
                }, {
                    key: "on", value: function (e, t) {
                        this._emitter.addListener(e, t)
                    }
                }, {
                    key: "off", value: function (e, t) {
                        this._emitter.removeListener(e, t)
                    }
                }, {
                    key: "hasWorker", value: function () {
                        return null != this._worker
                    }
                }, {
                    key: "open", value: function () {
                        this._worker ? this._worker.postMessage({cmd: "start"}) : this._controller.start()
                    }
                }, {
                    key: "close", value: function () {
                        this._worker ? this._worker.postMessage({cmd: "stop"}) : this._controller.stop()
                    }
                }, {
                    key: "seek", value: function (e) {
                        this._worker ? this._worker.postMessage({cmd: "seek", param: e}) : this._controller.seek(e)
                    }
                }, {
                    key: "pause", value: function () {
                        this._worker ? this._worker.postMessage({cmd: "pause"}) : this._controller.pause()
                    }
                }, {
                    key: "resume", value: function () {
                        this._worker ? this._worker.postMessage({cmd: "resume"}) : this._controller.resume()
                    }
                }, {
                    key: "_onInitSegment", value: function (e, t) {
                        var i = this;
                        Promise.resolve().then(function () {
                            i._emitter.emit(u.default.INIT_SEGMENT, e, t)
                        })
                    }
                }, {
                    key: "_onMediaSegment", value: function (e, t) {
                        var i = this;
                        Promise.resolve().then(function () {
                            i._emitter.emit(u.default.MEDIA_SEGMENT, e, t)
                        })
                    }
                }, {
                    key: "_onLoadingComplete", value: function () {
                        var e = this;
                        Promise.resolve().then(function () {
                            e._emitter.emit(u.default.LOADING_COMPLETE)
                        })
                    }
                }, {
                    key: "_onRecoveredEarlyEof", value: function () {
                        var e = this;
                        Promise.resolve().then(function () {
                            e._emitter.emit(u.default.RECOVERED_EARLY_EOF)
                        })
                    }
                }, {
                    key: "_onMediaInfo", value: function (e) {
                        var t = this;
                        Promise.resolve().then(function () {
                            t._emitter.emit(u.default.MEDIA_INFO, e)
                        })
                    }
                }, {
                    key: "_onMetaDataArrived", value: function (e) {
                        var t = this;
                        Promise.resolve().then(function () {
                            t._emitter.emit(u.default.METADATA_ARRIVED, e)
                        })
                    }
                }, {
                    key: "_onScriptDataArrived", value: function (e) {
                        var t = this;
                        Promise.resolve().then(function () {
                            t._emitter.emit(u.default.SCRIPTDATA_ARRIVED, e)
                        })
                    }
                }, {
                    key: "_onStatisticsInfo", value: function (e) {
                        var t = this;
                        Promise.resolve().then(function () {
                            t._emitter.emit(u.default.STATISTICS_INFO, e)
                        })
                    }
                }, {
                    key: "_onIOError", value: function (e, t) {
                        var i = this;
                        Promise.resolve().then(function () {
                            i._emitter.emit(u.default.IO_ERROR, e, t)
                        })
                    }
                }, {
                    key: "_onDemuxError", value: function (e, t) {
                        var i = this;
                        Promise.resolve().then(function () {
                            i._emitter.emit(u.default.DEMUX_ERROR, e, t)
                        })
                    }
                }, {
                    key: "_onRecommendSeekpoint", value: function (e) {
                        var t = this;
                        Promise.resolve().then(function () {
                            t._emitter.emit(u.default.RECOMMEND_SEEKPOINT, e)
                        })
                    }
                }, {
                    key: "_onLoggingConfigChanged", value: function (e) {
                        this._worker && this._worker.postMessage({cmd: "logging_config", param: e})
                    }
                }, {
                    key: "_onWorkerMessage", value: function (e) {
                        var t = e.data, i = t.data;
                        if ("destroyed" === t.msg || this._workerDestroying) return this._workerDestroying = !1, this._worker.terminate(), void(this._worker = null);
                        switch (t.msg) {
                            case u.default.INIT_SEGMENT:
                            case u.default.MEDIA_SEGMENT:
                                this._emitter.emit(t.msg, i.type, i.data);
                                break;
                            case u.default.LOADING_COMPLETE:
                            case u.default.RECOVERED_EARLY_EOF:
                                this._emitter.emit(t.msg);
                                break;
                            case u.default.MEDIA_INFO:
                                Object.setPrototypeOf(i, d.default.prototype), this._emitter.emit(t.msg, i);
                                break;
                            case u.default.METADATA_ARRIVED:
                            case u.default.SCRIPTDATA_ARRIVED:
                            case u.default.STATISTICS_INFO:
                                this._emitter.emit(t.msg, i);
                                break;
                            case u.default.IO_ERROR:
                            case u.default.DEMUX_ERROR:
                                this._emitter.emit(t.msg, i.type, i.info);
                                break;
                            case u.default.RECOMMEND_SEEKPOINT:
                                this._emitter.emit(t.msg, i);
                                break;
                            case"logcat_callback":
                                a.default.emitter.emit("log", i.type, i.logcat)
                        }
                    }
                }]), t
            }();
            i.default = h
        }, {
            "../utils/logger.js": 41,
            "../utils/logging-control.js": 42,
            "./media-info.js": 7,
            "./transmuxing-controller.js": 12,
            "./transmuxing-events.js": 13,
            "./transmuxing-worker.js": 14,
            events: 2,
            webworkify: 4
        }],
        12: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), r = f(e("events")), a = f(e("../utils/logger.js")), s = f(e("../utils/browser.js")),
                o = f(e("./media-info.js")), u = f(e("../demux/flv-demuxer.js")), l = f(e("../remux/mp4-remuxer.js")),
                d = f(e("../demux/demux-errors.js")), c = f(e("../io/io-controller.js")),
                h = f(e("./transmuxing-events.js"));
            e("../io/loader.js");

            function f(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var p = function () {
                function e(t, i) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.TAG = "TransmuxingController", this._emitter = new r.default, this._config = i, t.segments || (t.segments = [{
                        duration: t.duration,
                        filesize: t.filesize,
                        url: t.url
                    }]), "boolean" != typeof t.cors && (t.cors = !0), "boolean" != typeof t.withCredentials && (t.withCredentials = !1), this._mediaDataSource = t, this._currentSegmentIndex = 0;
                    var n = 0;
                    this._mediaDataSource.segments.forEach(function (e) {
                        e.timestampBase = n, n += e.duration, e.cors = t.cors, e.withCredentials = t.withCredentials, i.referrerPolicy && (e.referrerPolicy = i.referrerPolicy)
                    }), isNaN(n) || this._mediaDataSource.duration === n || (this._mediaDataSource.duration = n), this._mediaInfo = null, this._demuxer = null, this._remuxer = null, this._ioctl = null, this._pendingSeekTime = null, this._pendingResolveSeekPoint = null, this._statisticsReporter = null
                }

                return n(e, [{
                    key: "destroy", value: function () {
                        this._mediaInfo = null, this._mediaDataSource = null, this._statisticsReporter && this._disableStatisticsReporter(), this._ioctl && (this._ioctl.destroy(), this._ioctl = null), this._demuxer && (this._demuxer.destroy(), this._demuxer = null), this._remuxer && (this._remuxer.destroy(), this._remuxer = null), this._emitter.removeAllListeners(), this._emitter = null
                    }
                }, {
                    key: "on", value: function (e, t) {
                        this._emitter.addListener(e, t)
                    }
                }, {
                    key: "off", value: function (e, t) {
                        this._emitter.removeListener(e, t)
                    }
                }, {
                    key: "start", value: function () {
                        this._loadSegment(0), this._enableStatisticsReporter()
                    }
                }, {
                    key: "_loadSegment", value: function (e, t) {
                        this._currentSegmentIndex = e;
                        var i = this._mediaDataSource.segments[e], n = this._ioctl = new c.default(i, this._config, e);
                        n.onError = this._onIOException.bind(this), n.onSeeked = this._onIOSeeked.bind(this), n.onComplete = this._onIOComplete.bind(this), n.onRedirect = this._onIORedirect.bind(this), n.onRecoveredEarlyEof = this._onIORecoveredEarlyEof.bind(this), t ? this._demuxer.bindDataSource(this._ioctl) : n.onDataArrival = this._onInitChunkArrival.bind(this), n.open(t)
                    }
                }, {
                    key: "stop", value: function () {
                        this._internalAbort(), this._disableStatisticsReporter()
                    }
                }, {
                    key: "_internalAbort", value: function () {
                        this._ioctl && (this._ioctl.destroy(), this._ioctl = null)
                    }
                }, {
                    key: "pause", value: function () {
                        this._ioctl && this._ioctl.isWorking() && (this._ioctl.pause(), this._disableStatisticsReporter())
                    }
                }, {
                    key: "resume", value: function () {
                        this._ioctl && this._ioctl.isPaused() && (this._ioctl.resume(), this._enableStatisticsReporter())
                    }
                }, {
                    key: "seek", value: function (e) {
                        if (null != this._mediaInfo && this._mediaInfo.isSeekable()) {
                            var t = this._searchSegmentIndexContains(e);
                            if (t === this._currentSegmentIndex) {
                                var i = this._mediaInfo.segments[t];
                                if (void 0 == i) this._pendingSeekTime = e; else {
                                    var n = i.getNearestKeyframe(e);
                                    this._remuxer.seek(n.milliseconds), this._ioctl.seek(n.fileposition), this._pendingResolveSeekPoint = n.milliseconds
                                }
                            } else {
                                var r = this._mediaInfo.segments[t];
                                if (void 0 == r) this._pendingSeekTime = e, this._internalAbort(), this._remuxer.seek(), this._remuxer.insertDiscontinuity(), this._loadSegment(t); else {
                                    var a = r.getNearestKeyframe(e);
                                    this._internalAbort(), this._remuxer.seek(e), this._remuxer.insertDiscontinuity(), this._demuxer.resetMediaInfo(), this._demuxer.timestampBase = this._mediaDataSource.segments[t].timestampBase, this._loadSegment(t, a.fileposition), this._pendingResolveSeekPoint = a.milliseconds, this._reportSegmentMediaInfo(t)
                                }
                            }
                            this._enableStatisticsReporter()
                        }
                    }
                }, {
                    key: "_searchSegmentIndexContains", value: function (e) {
                        for (var t = this._mediaDataSource.segments, i = t.length - 1, n = 0; n < t.length; n++) if (e < t[n].timestampBase) {
                            i = n - 1;
                            break
                        }
                        return i
                    }
                }, {
                    key: "_onInitChunkArrival", value: function (e, t) {
                        var i = this, n = null, r = 0;
                        if (t > 0) this._demuxer.bindDataSource(this._ioctl), this._demuxer.timestampBase = this._mediaDataSource.segments[this._currentSegmentIndex].timestampBase, r = this._demuxer.parseChunks(e, t); else if ((n = u.default.probe(e)).match) {
                            this._demuxer = new u.default(n, this._config), this._remuxer || (this._remuxer = new l.default(this._config));
                            var s = this._mediaDataSource;
                            void 0 == s.duration || isNaN(s.duration) || (this._demuxer.overridedDuration = s.duration), "boolean" == typeof s.hasAudio && (this._demuxer.overridedHasAudio = s.hasAudio), "boolean" == typeof s.hasVideo && (this._demuxer.overridedHasVideo = s.hasVideo), this._demuxer.timestampBase = s.segments[this._currentSegmentIndex].timestampBase, this._demuxer.onError = this._onDemuxException.bind(this), this._demuxer.onMediaInfo = this._onMediaInfo.bind(this), this._demuxer.onMetaDataArrived = this._onMetaDataArrived.bind(this), this._demuxer.onScriptDataArrived = this._onScriptDataArrived.bind(this), this._remuxer.bindDataSource(this._demuxer.bindDataSource(this._ioctl)), this._remuxer.onInitSegment = this._onRemuxerInitSegmentArrival.bind(this), this._remuxer.onMediaSegment = this._onRemuxerMediaSegmentArrival.bind(this), r = this._demuxer.parseChunks(e, t)
                        } else n = null, a.default.e(this.TAG, "Non-FLV, Unsupported media type!"), Promise.resolve().then(function () {
                            i._internalAbort()
                        }), this._emitter.emit(h.default.DEMUX_ERROR, d.default.FORMAT_UNSUPPORTED, "Non-FLV, Unsupported media type"), r = 0;
                        return r
                    }
                }, {
                    key: "_onMediaInfo", value: function (e) {
                        var t = this;
                        null == this._mediaInfo && (this._mediaInfo = Object.assign({}, e), this._mediaInfo.keyframesIndex = null, this._mediaInfo.segments = [], this._mediaInfo.segmentCount = this._mediaDataSource.segments.length, Object.setPrototypeOf(this._mediaInfo, o.default.prototype));
                        var i = Object.assign({}, e);
                        Object.setPrototypeOf(i, o.default.prototype), this._mediaInfo.segments[this._currentSegmentIndex] = i, this._reportSegmentMediaInfo(this._currentSegmentIndex), null != this._pendingSeekTime && Promise.resolve().then(function () {
                            var e = t._pendingSeekTime;
                            t._pendingSeekTime = null, t.seek(e)
                        })
                    }
                }, {
                    key: "_onMetaDataArrived", value: function (e) {
                        this._emitter.emit(h.default.METADATA_ARRIVED, e)
                    }
                }, {
                    key: "_onScriptDataArrived", value: function (e) {
                        this._emitter.emit(h.default.SCRIPTDATA_ARRIVED, e)
                    }
                }, {
                    key: "_onIOSeeked", value: function () {
                        this._remuxer.insertDiscontinuity()
                    }
                }, {
                    key: "_onIOComplete", value: function (e) {
                        var t = e + 1;
                        t < this._mediaDataSource.segments.length ? (this._internalAbort(), this._remuxer.flushStashedSamples(), this._loadSegment(t)) : (this._remuxer.flushStashedSamples(), this._emitter.emit(h.default.LOADING_COMPLETE), this._disableStatisticsReporter())
                    }
                }, {
                    key: "_onIORedirect", value: function (e) {
                        var t = this._ioctl.extraData;
                        this._mediaDataSource.segments[t].redirectedURL = e
                    }
                }, {
                    key: "_onIORecoveredEarlyEof", value: function () {
                        this._emitter.emit(h.default.RECOVERED_EARLY_EOF)
                    }
                }, {
                    key: "_onIOException", value: function (e, t) {
                        a.default.e(this.TAG, "IOException: type = " + e + ", code = " + t.code + ", msg = " + t.msg), this._emitter.emit(h.default.IO_ERROR, e, t), this._disableStatisticsReporter()
                    }
                }, {
                    key: "_onDemuxException", value: function (e, t) {
                        a.default.e(this.TAG, "DemuxException: type = " + e + ", info = " + t), this._emitter.emit(h.default.DEMUX_ERROR, e, t)
                    }
                }, {
                    key: "_onRemuxerInitSegmentArrival", value: function (e, t) {
                        this._emitter.emit(h.default.INIT_SEGMENT, e, t)
                    }
                }, {
                    key: "_onRemuxerMediaSegmentArrival", value: function (e, t) {
                        if (null == this._pendingSeekTime && (this._emitter.emit(h.default.MEDIA_SEGMENT, e, t), null != this._pendingResolveSeekPoint && "video" === e)) {
                            var i = t.info.syncPoints, n = this._pendingResolveSeekPoint;
                            this._pendingResolveSeekPoint = null, s.default.safari && i.length > 0 && i[0].originalDts === n && (n = i[0].pts), this._emitter.emit(h.default.RECOMMEND_SEEKPOINT, n)
                        }
                    }
                }, {
                    key: "_enableStatisticsReporter", value: function () {
                        null == this._statisticsReporter && (this._statisticsReporter = self.setInterval(this._reportStatisticsInfo.bind(this), this._config.statisticsInfoReportInterval))
                    }
                }, {
                    key: "_disableStatisticsReporter", value: function () {
                        this._statisticsReporter && (self.clearInterval(this._statisticsReporter), this._statisticsReporter = null)
                    }
                }, {
                    key: "_reportSegmentMediaInfo", value: function (e) {
                        var t = this._mediaInfo.segments[e], i = Object.assign({}, t);
                        i.duration = this._mediaInfo.duration, i.segmentCount = this._mediaInfo.segmentCount, delete i.segments, delete i.keyframesIndex, this._emitter.emit(h.default.MEDIA_INFO, i)
                    }
                }, {
                    key: "_reportStatisticsInfo", value: function () {
                        var e = {};
                        e.url = this._ioctl.currentURL, e.hasRedirect = this._ioctl.hasRedirect, e.hasRedirect && (e.redirectedURL = this._ioctl.currentRedirectedURL), e.speed = this._ioctl.currentSpeed, e.loaderType = this._ioctl.loaderType, e.currentSegmentIndex = this._currentSegmentIndex, e.totalSegmentCount = this._mediaDataSource.segments.length, this._emitter.emit(h.default.STATISTICS_INFO, e)
                    }
                }]), e
            }();
            i.default = p
        }, {
            "../demux/demux-errors.js": 16,
            "../demux/flv-demuxer.js": 18,
            "../io/io-controller.js": 23,
            "../io/loader.js": 24,
            "../remux/mp4-remuxer.js": 38,
            "../utils/browser.js": 39,
            "../utils/logger.js": 41,
            "./media-info.js": 7,
            "./transmuxing-events.js": 13,
            events: 2
        }],
        13: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            i.default = {
                IO_ERROR: "io_error",
                DEMUX_ERROR: "demux_error",
                INIT_SEGMENT: "init_segment",
                MEDIA_SEGMENT: "media_segment",
                LOADING_COMPLETE: "loading_complete",
                RECOVERED_EARLY_EOF: "recovered_early_eof",
                MEDIA_INFO: "media_info",
                METADATA_ARRIVED: "metadata_arrived",
                SCRIPTDATA_ARRIVED: "scriptdata_arrived",
                STATISTICS_INFO: "statistics_info",
                RECOMMEND_SEEKPOINT: "recommend_seekpoint"
            }
        }, {}],
        14: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            o(e("../utils/logger.js"));
            var n = o(e("../utils/logging-control.js")), r = o(e("../utils/polyfill.js")),
                a = o(e("./transmuxing-controller.js")), s = o(e("./transmuxing-events.js"));

            function o(e) {
                return e && e.__esModule ? e : {default: e}
            }

            i.default = function (e) {
                var t = null, i = function (t, i) {
                    e.postMessage({msg: "logcat_callback", data: {type: t, logcat: i}})
                }.bind(this);
                r.default.install(), e.addEventListener("message", function (r) {
                    switch (r.data.cmd) {
                        case"init":
                            (t = new a.default(r.data.param[0], r.data.param[1])).on(s.default.IO_ERROR, function (t, i) {
                                e.postMessage({msg: s.default.IO_ERROR, data: {type: t, info: i}})
                            }.bind(this)), t.on(s.default.DEMUX_ERROR, function (t, i) {
                                e.postMessage({msg: s.default.DEMUX_ERROR, data: {type: t, info: i}})
                            }.bind(this)), t.on(s.default.INIT_SEGMENT, function (t, i) {
                                var n = {msg: s.default.INIT_SEGMENT, data: {type: t, data: i}};
                                e.postMessage(n, [i.data])
                            }.bind(this)), t.on(s.default.MEDIA_SEGMENT, function (t, i) {
                                var n = {msg: s.default.MEDIA_SEGMENT, data: {type: t, data: i}};
                                e.postMessage(n, [i.data])
                            }.bind(this)), t.on(s.default.LOADING_COMPLETE, function () {
                                var t = {msg: s.default.LOADING_COMPLETE};
                                e.postMessage(t)
                            }.bind(this)), t.on(s.default.RECOVERED_EARLY_EOF, function () {
                                var t = {msg: s.default.RECOVERED_EARLY_EOF};
                                e.postMessage(t)
                            }.bind(this)), t.on(s.default.MEDIA_INFO, function (t) {
                                var i = {msg: s.default.MEDIA_INFO, data: t};
                                e.postMessage(i)
                            }.bind(this)), t.on(s.default.METADATA_ARRIVED, function (t) {
                                var i = {msg: s.default.METADATA_ARRIVED, data: t};
                                e.postMessage(i)
                            }.bind(this)), t.on(s.default.SCRIPTDATA_ARRIVED, function (t) {
                                var i = {msg: s.default.SCRIPTDATA_ARRIVED, data: t};
                                e.postMessage(i)
                            }.bind(this)), t.on(s.default.STATISTICS_INFO, function (t) {
                                var i = {msg: s.default.STATISTICS_INFO, data: t};
                                e.postMessage(i)
                            }.bind(this)), t.on(s.default.RECOMMEND_SEEKPOINT, function (t) {
                                e.postMessage({msg: s.default.RECOMMEND_SEEKPOINT, data: t})
                            }.bind(this));
                            break;
                        case"destroy":
                            t && (t.destroy(), t = null), e.postMessage({msg: "destroyed"});
                            break;
                        case"start":
                            t.start();
                            break;
                        case"stop":
                            t.stop();
                            break;
                        case"seek":
                            t.seek(r.data.param);
                            break;
                        case"pause":
                            t.pause();
                            break;
                        case"resume":
                            t.resume();
                            break;
                        case"logging_config":
                            var o = r.data.param;
                            n.default.applyConfig(o), !0 === o.enableCallback ? n.default.addLogListener(i) : n.default.removeLogListener(i)
                    }
                })
            }
        }, {
            "../utils/logger.js": 41,
            "../utils/logging-control.js": 42,
            "../utils/polyfill.js": 43,
            "./transmuxing-controller.js": 12,
            "./transmuxing-events.js": 13
        }],
        15: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }(), r = o(e("../utils/logger.js")), a = o(e("../utils/utf8-conv.js")), s = e("../utils/exception.js");

            function o(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var u = function () {
                var e = new ArrayBuffer(2);
                return new DataView(e).setInt16(0, 256, !0), 256 === new Int16Array(e)[0]
            }(), l = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e)
                }

                return n(e, null, [{
                    key: "parseScriptData", value: function (t, i, n) {
                        var a = {};
                        try {
                            var s = e.parseValue(t, i, n), o = e.parseValue(t, i + s.size, n - s.size);
                            a[s.data] = o.data
                        } catch (e) {
                            r.default.e("AMF", e.toString())
                        }
                        return a
                    }
                }, {
                    key: "parseObject", value: function (t, i, n) {
                        if (n < 3) throw new s.IllegalStateException("Data not enough when parse ScriptDataObject");
                        var r = e.parseString(t, i, n), a = e.parseValue(t, i + r.size, n - r.size), o = a.objectEnd;
                        return {data: {name: r.data, value: a.data}, size: r.size + a.size, objectEnd: o}
                    }
                }, {
                    key: "parseVariable", value: function (t, i, n) {
                        return e.parseObject(t, i, n)
                    }
                }, {
                    key: "parseString", value: function (e, t, i) {
                        if (i < 2) throw new s.IllegalStateException("Data not enough when parse String");
                        var n = new DataView(e, t, i).getUint16(0, !u);
                        return {data: n > 0 ? (0, a.default)(new Uint8Array(e, t + 2, n)) : "", size: 2 + n}
                    }
                }, {
                    key: "parseLongString", value: function (e, t, i) {
                        if (i < 4) throw new s.IllegalStateException("Data not enough when parse LongString");
                        var n = new DataView(e, t, i).getUint32(0, !u);
                        return {data: n > 0 ? (0, a.default)(new Uint8Array(e, t + 4, n)) : "", size: 4 + n}
                    }
                }, {
                    key: "parseDate", value: function (e, t, i) {
                        if (i < 10) throw new s.IllegalStateException("Data size invalid when parse Date");
                        var n = new DataView(e, t, i), r = n.getFloat64(0, !u), a = n.getInt16(8, !u);
                        return {data: new Date(r += 60 * a * 1e3), size: 10}
                    }
                }, {
                    key: "parseValue", value: function (t, i, n) {
                        if (n < 1) throw new s.IllegalStateException("Data not enough when parse Value");
                        var a = new DataView(t, i, n), o = 1, l = a.getUint8(0), d = void 0, c = !1;
                        try {
                            switch (l) {
                                case 0:
                                    d = a.getFloat64(1, !u), o += 8;
                                    break;
                                case 1:
                                    d = !!a.getUint8(1), o += 1;
                                    break;
                                case 2:
                                    var h = e.parseString(t, i + 1, n - 1);
                                    d = h.data, o += h.size;
                                    break;
                                case 3:
                                    d = {};
                                    var f = 0;
                                    for (9 == (16777215 & a.getUint32(n - 4, !u)) && (f = 3); o < n - 4;) {
                                        var p = e.parseObject(t, i + o, n - o - f);
                                        if (p.objectEnd) break;
                                        d[p.data.name] = p.data.value, o += p.size
                                    }
                                    if (o <= n - 3) {
                                        9 === (16777215 & a.getUint32(o - 1, !u)) && (o += 3)
                                    }
                                    break;
                                case 8:
                                    d = {}, o += 4;
                                    var m = 0;
                                    for (9 == (16777215 & a.getUint32(n - 4, !u)) && (m = 3); o < n - 8;) {
                                        var g = e.parseVariable(t, i + o, n - o - m);
                                        if (g.objectEnd) break;
                                        d[g.data.name] = g.data.value, o += g.size
                                    }
                                    if (o <= n - 3) {
                                        9 === (16777215 & a.getUint32(o - 1, !u)) && (o += 3)
                                    }
                                    break;
                                case 9:
                                    d = void 0, o = 1, c = !0;
                                    break;
                                case 10:
                                    d = [];
                                    var y = a.getUint32(1, !u);
                                    o += 4;
                                    for (var _ = 0; _ < y; _++) {
                                        var v = e.parseValue(t, i + o, n - o);
                                        d.push(v.data), o += v.size
                                    }
                                    break;
                                case 11:
                                    var b = e.parseDate(t, i + 1, n - 1);
                                    d = b.data, o += b.size;
                                    break;
                                case 12:
                                    var T = e.parseString(t, i + 1, n - 1);
                                    d = T.data, o += T.size;
                                    break;
                                default:
                                    o = n, r.default.w("AMF", "Unsupported AMF value type " + l)
                            }
                        } catch (e) {
                            r.default.e("AMF", e.toString())
                        }
                        return {data: d, size: o, objectEnd: c}
                    }
                }]), e
            }();
            i.default = l
        }, {"../utils/exception.js": 40, "../utils/logger.js": 41, "../utils/utf8-conv.js": 44}],
        16: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            i.default = {
                OK: "OK",
                FORMAT_ERROR: "FormatError",
                FORMAT_UNSUPPORTED: "FormatUnsupported",
                CODEC_UNSUPPORTED: "CodecUnsupported"
            }
        }, {}],
        17: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }(), r = e("../utils/exception.js");
            var a = function () {
                function e(t) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.TAG = "ExpGolomb", this._buffer = t, this._buffer_index = 0, this._total_bytes = t.byteLength, this._total_bits = 8 * t.byteLength, this._current_word = 0, this._current_word_bits_left = 0
                }

                return n(e, [{
                    key: "destroy", value: function () {
                        this._buffer = null
                    }
                }, {
                    key: "_fillCurrentWord", value: function () {
                        var e = this._total_bytes - this._buffer_index;
                        if (e <= 0) throw new r.IllegalStateException("ExpGolomb: _fillCurrentWord() but no bytes available");
                        var t = Math.min(4, e), i = new Uint8Array(4);
                        i.set(this._buffer.subarray(this._buffer_index, this._buffer_index + t)), this._current_word = new DataView(i.buffer).getUint32(0, !1), this._buffer_index += t, this._current_word_bits_left = 8 * t
                    }
                }, {
                    key: "readBits", value: function (e) {
                        if (e > 32) throw new r.InvalidArgumentException("ExpGolomb: readBits() bits exceeded max 32bits!");
                        if (e <= this._current_word_bits_left) {
                            var t = this._current_word >>> 32 - e;
                            return this._current_word <<= e, this._current_word_bits_left -= e, t
                        }
                        var i = this._current_word_bits_left ? this._current_word : 0;
                        i >>>= 32 - this._current_word_bits_left;
                        var n = e - this._current_word_bits_left;
                        this._fillCurrentWord();
                        var a = Math.min(n, this._current_word_bits_left), s = this._current_word >>> 32 - a;
                        return this._current_word <<= a, this._current_word_bits_left -= a, i = i << a | s
                    }
                }, {
                    key: "readBool", value: function () {
                        return 1 === this.readBits(1)
                    }
                }, {
                    key: "readByte", value: function () {
                        return this.readBits(8)
                    }
                }, {
                    key: "_skipLeadingZero", value: function () {
                        var e = void 0;
                        for (e = 0; e < this._current_word_bits_left; e++) if (0 != (this._current_word & 2147483648 >>> e)) return this._current_word <<= e, this._current_word_bits_left -= e, e;
                        return this._fillCurrentWord(), e + this._skipLeadingZero()
                    }
                }, {
                    key: "readUEG", value: function () {
                        var e = this._skipLeadingZero();
                        return this.readBits(e + 1) - 1
                    }
                }, {
                    key: "readSEG", value: function () {
                        var e = this.readUEG();
                        return 1 & e ? e + 1 >>> 1 : -1 * (e >>> 1)
                    }
                }]), e
            }();
            i.default = a
        }, {"../utils/exception.js": 40}],
        18: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
                    return typeof e
                } : function (e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }, r = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), a = c(e("../utils/logger.js")), s = c(e("./amf-parser.js")), o = c(e("./sps-parser.js")),
                u = c(e("./demux-errors.js")), l = c(e("../core/media-info.js")), d = e("../utils/exception.js");

            function c(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var h = function () {
                function e(t, i) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.TAG = "FLVDemuxer", this._config = i, this._onError = null, this._onMediaInfo = null, this._onMetaDataArrived = null, this._onScriptDataArrived = null, this._onTrackMetadata = null, this._onDataAvailable = null, this._dataOffset = t.dataOffset, this._firstParse = !0, this._dispatch = !1, this._hasAudio = t.hasAudioTrack, this._hasVideo = t.hasVideoTrack, this._hasAudioFlagOverrided = !1, this._hasVideoFlagOverrided = !1, this._audioInitialMetadataDispatched = !1, this._videoInitialMetadataDispatched = !1, this._mediaInfo = new l.default, this._mediaInfo.hasAudio = this._hasAudio, this._mediaInfo.hasVideo = this._hasVideo, this._metadata = null, this._audioMetadata = null, this._videoMetadata = null, this._naluLengthSize = 4, this._timestampBase = 0, this._timescale = 1e3, this._duration = 0, this._durationOverrided = !1, this._referenceFrameRate = {
                        fixed: !0,
                        fps: 23.976,
                        fps_num: 23976,
                        fps_den: 1e3
                    }, this._flvSoundRateTable = [5500, 11025, 22050, 44100, 48e3], this._mpegSamplingRates = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350], this._mpegAudioV10SampleRateTable = [44100, 48e3, 32e3, 0], this._mpegAudioV20SampleRateTable = [22050, 24e3, 16e3, 0], this._mpegAudioV25SampleRateTable = [11025, 12e3, 8e3, 0], this._mpegAudioL1BitRateTable = [0, 32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, -1], this._mpegAudioL2BitRateTable = [0, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, -1], this._mpegAudioL3BitRateTable = [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1], this._videoTrack = {
                        type: "video",
                        id: 1,
                        sequenceNumber: 0,
                        samples: [],
                        length: 0
                    }, this._audioTrack = {
                        type: "audio",
                        id: 2,
                        sequenceNumber: 0,
                        samples: [],
                        length: 0
                    }, this._littleEndian = function () {
                        var e = new ArrayBuffer(2);
                        return new DataView(e).setInt16(0, 256, !0), 256 === new Int16Array(e)[0]
                    }()
                }

                return r(e, [{
                    key: "destroy", value: function () {
                        this._mediaInfo = null, this._metadata = null, this._audioMetadata = null, this._videoMetadata = null, this._videoTrack = null, this._audioTrack = null, this._onError = null, this._onMediaInfo = null, this._onMetaDataArrived = null, this._onScriptDataArrived = null, this._onTrackMetadata = null, this._onDataAvailable = null
                    }
                }, {
                    key: "bindDataSource", value: function (e) {
                        return e.onDataArrival = this.parseChunks.bind(this), this
                    }
                }, {
                    key: "resetMediaInfo", value: function () {
                        this._mediaInfo = new l.default
                    }
                }, {
                    key: "_isInitialMetadataDispatched", value: function () {
                        return this._hasAudio && this._hasVideo ? this._audioInitialMetadataDispatched && this._videoInitialMetadataDispatched : this._hasAudio && !this._hasVideo ? this._audioInitialMetadataDispatched : !(this._hasAudio || !this._hasVideo) && this._videoInitialMetadataDispatched
                    }
                }, {
                    key: "parseChunks", value: function (t, i) {
                        if (!(this._onError && this._onMediaInfo && this._onTrackMetadata && this._onDataAvailable)) throw new d.IllegalStateException("Flv: onError & onMediaInfo & onTrackMetadata & onDataAvailable callback must be specified");
                        var n = 0, r = this._littleEndian;
                        if (0 === i) {
                            if (!(t.byteLength > 13)) return 0;
                            n = e.probe(t).dataOffset
                        }
                        if (this._firstParse) {
                            this._firstParse = !1, i + n !== this._dataOffset && a.default.w(this.TAG, "First time parsing but chunk byteStart invalid!");
                            0 !== new DataView(t, n).getUint32(0, !r) && a.default.w(this.TAG, "PrevTagSize0 !== 0 !!!"), n += 4
                        }
                        for (; n < t.byteLength;) {
                            this._dispatch = !0;
                            var s = new DataView(t, n);
                            if (n + 11 + 4 > t.byteLength) break;
                            var o = s.getUint8(0), u = 16777215 & s.getUint32(0, !r);
                            if (n + 11 + u + 4 > t.byteLength) break;
                            if (8 === o || 9 === o || 18 === o) {
                                var l = s.getUint8(4), c = s.getUint8(5),
                                    h = s.getUint8(6) | c << 8 | l << 16 | s.getUint8(7) << 24;
                                0 !== (16777215 & s.getUint32(7, !r)) && a.default.w(this.TAG, "Meet tag which has StreamID != 0!");
                                var f = n + 11;
                                switch (o) {
                                    case 8:
                                        this._parseAudioData(t, f, u, h);
                                        break;
                                    case 9:
                                        this._parseVideoData(t, f, u, h, i + n);
                                        break;
                                    case 18:
                                        this._parseScriptData(t, f, u)
                                }
                                var p = s.getUint32(11 + u, !r);
                                p !== 11 + u && a.default.w(this.TAG, "Invalid PrevTagSize " + p), n += 11 + u + 4
                            } else a.default.w(this.TAG, "Unsupported tag type " + o + ", skipped"), n += 11 + u + 4
                        }
                        return this._isInitialMetadataDispatched() && this._dispatch && (this._audioTrack.length || this._videoTrack.length) && this._onDataAvailable(this._audioTrack, this._videoTrack), n
                    }
                }, {
                    key: "_parseScriptData", value: function (e, t, i) {
                        var r = s.default.parseScriptData(e, t, i);
                        if (r.hasOwnProperty("onMetaData")) {
                            if (null == r.onMetaData || "object" !== n(r.onMetaData)) return void a.default.w(this.TAG, "Invalid onMetaData structure!");
                            this._metadata && a.default.w(this.TAG, "Found another onMetaData tag!"), this._metadata = r;
                            var o = this._metadata.onMetaData;
                            if (this._onMetaDataArrived && this._onMetaDataArrived(Object.assign({}, o)), "boolean" == typeof o.hasAudio && !1 === this._hasAudioFlagOverrided && (this._hasAudio = o.hasAudio, this._mediaInfo.hasAudio = this._hasAudio), "boolean" == typeof o.hasVideo && !1 === this._hasVideoFlagOverrided && (this._hasVideo = o.hasVideo, this._mediaInfo.hasVideo = this._hasVideo), "number" == typeof o.audiodatarate && (this._mediaInfo.audioDataRate = o.audiodatarate), "number" == typeof o.videodatarate && (this._mediaInfo.videoDataRate = o.videodatarate), "number" == typeof o.width && (this._mediaInfo.width = o.width), "number" == typeof o.height && (this._mediaInfo.height = o.height), "number" == typeof o.duration) {
                                if (!this._durationOverrided) {
                                    var u = Math.floor(o.duration * this._timescale);
                                    this._duration = u, this._mediaInfo.duration = u
                                }
                            } else this._mediaInfo.duration = 0;
                            if ("number" == typeof o.framerate) {
                                var l = Math.floor(1e3 * o.framerate);
                                if (l > 0) {
                                    var d = l / 1e3;
                                    this._referenceFrameRate.fixed = !0, this._referenceFrameRate.fps = d, this._referenceFrameRate.fps_num = l, this._referenceFrameRate.fps_den = 1e3, this._mediaInfo.fps = d
                                }
                            }
                            if ("object" === n(o.keyframes)) {
                                this._mediaInfo.hasKeyframesIndex = !0;
                                var c = o.keyframes;
                                this._mediaInfo.keyframesIndex = this._parseKeyframesIndex(c), o.keyframes = null
                            } else this._mediaInfo.hasKeyframesIndex = !1;
                            this._dispatch = !1, this._mediaInfo.metadata = o, a.default.v(this.TAG, "Parsed onMetaData"), this._mediaInfo.isComplete() && this._onMediaInfo(this._mediaInfo)
                        }
                        Object.keys(r).length > 0 && this._onScriptDataArrived && this._onScriptDataArrived(Object.assign({}, r))
                    }
                }, {
                    key: "_parseKeyframesIndex", value: function (e) {
                        for (var t = [], i = [], n = 1; n < e.times.length; n++) {
                            var r = this._timestampBase + Math.floor(1e3 * e.times[n]);
                            t.push(r), i.push(e.filepositions[n])
                        }
                        return {times: t, filepositions: i}
                    }
                }, {
                    key: "_parseAudioData", value: function (e, t, i, n) {
                        if (i <= 1) a.default.w(this.TAG, "Flv: Invalid audio packet, missing SoundData payload!"); else if (!0 !== this._hasAudioFlagOverrided || !1 !== this._hasAudio) {
                            this._littleEndian;
                            var r = new DataView(e, t, i).getUint8(0), s = r >>> 4;
                            if (2 === s || 10 === s) {
                                var o = 0, l = (12 & r) >>> 2;
                                if (l >= 0 && l <= 4) {
                                    o = this._flvSoundRateTable[l];
                                    var d = 1 & r, c = this._audioMetadata, h = this._audioTrack;
                                    if (c || (!1 === this._hasAudio && !1 === this._hasAudioFlagOverrided && (this._hasAudio = !0, this._mediaInfo.hasAudio = !0), (c = this._audioMetadata = {}).type = "audio", c.id = h.id, c.timescale = this._timescale, c.duration = this._duration, c.audioSampleRate = o, c.channelCount = 0 === d ? 1 : 2), 10 === s) {
                                        var f = this._parseAACAudioData(e, t + 1, i - 1);
                                        if (void 0 == f) return;
                                        if (0 === f.packetType) {
                                            c.config && a.default.w(this.TAG, "Found another AudioSpecificConfig!");
                                            var p = f.data;
                                            c.audioSampleRate = p.samplingRate, c.channelCount = p.channelCount, c.codec = p.codec, c.originalCodec = p.originalCodec, c.config = p.config, c.refSampleDuration = 1024 / c.audioSampleRate * c.timescale, a.default.v(this.TAG, "Parsed AudioSpecificConfig"), this._isInitialMetadataDispatched() ? this._dispatch && (this._audioTrack.length || this._videoTrack.length) && this._onDataAvailable(this._audioTrack, this._videoTrack) : this._audioInitialMetadataDispatched = !0, this._dispatch = !1, this._onTrackMetadata("audio", c);
                                            var m = this._mediaInfo;
                                            m.audioCodec = c.originalCodec, m.audioSampleRate = c.audioSampleRate, m.audioChannelCount = c.channelCount, m.hasVideo ? null != m.videoCodec && (m.mimeType = 'video/x-flv; codecs="' + m.videoCodec + "," + m.audioCodec + '"') : m.mimeType = 'video/x-flv; codecs="' + m.audioCodec + '"', m.isComplete() && this._onMediaInfo(m)
                                        } else if (1 === f.packetType) {
                                            var g = this._timestampBase + n,
                                                y = {unit: f.data, length: f.data.byteLength, dts: g, pts: g};
                                            h.samples.push(y), h.length += f.data.length
                                        } else a.default.e(this.TAG, "Flv: Unsupported AAC data type " + f.packetType)
                                    } else if (2 === s) {
                                        if (!c.codec) {
                                            var _ = this._parseMP3AudioData(e, t + 1, i - 1, !0);
                                            if (void 0 == _) return;
                                            c.audioSampleRate = _.samplingRate, c.channelCount = _.channelCount, c.codec = _.codec, c.originalCodec = _.originalCodec, c.refSampleDuration = 1152 / c.audioSampleRate * c.timescale, a.default.v(this.TAG, "Parsed MPEG Audio Frame Header"), this._audioInitialMetadataDispatched = !0, this._onTrackMetadata("audio", c);
                                            var v = this._mediaInfo;
                                            v.audioCodec = c.codec, v.audioSampleRate = c.audioSampleRate, v.audioChannelCount = c.channelCount, v.audioDataRate = _.bitRate, v.hasVideo ? null != v.videoCodec && (v.mimeType = 'video/x-flv; codecs="' + v.videoCodec + "," + v.audioCodec + '"') : v.mimeType = 'video/x-flv; codecs="' + v.audioCodec + '"', v.isComplete() && this._onMediaInfo(v)
                                        }
                                        var b = this._parseMP3AudioData(e, t + 1, i - 1, !1);
                                        if (void 0 == b) return;
                                        var T = this._timestampBase + n,
                                            S = {unit: b, length: b.byteLength, dts: T, pts: T};
                                        h.samples.push(S), h.length += b.length
                                    }
                                } else this._onError(u.default.FORMAT_ERROR, "Flv: Invalid audio sample rate idx: " + l)
                            } else this._onError(u.default.CODEC_UNSUPPORTED, "Flv: Unsupported audio codec idx: " + s)
                        }
                    }
                }, {
                    key: "_parseAACAudioData", value: function (e, t, i) {
                        if (!(i <= 1)) {
                            var n = {}, r = new Uint8Array(e, t, i);
                            return n.packetType = r[0], 0 === r[0] ? n.data = this._parseAACAudioSpecificConfig(e, t + 1, i - 1) : n.data = r.subarray(1), n
                        }
                        a.default.w(this.TAG, "Flv: Invalid AAC packet, missing AACPacketType or/and Data!")
                    }
                }, {
                    key: "_parseAACAudioSpecificConfig", value: function (e, t, i) {
                        var n = new Uint8Array(e, t, i), r = null, a = 0, s = 0, o = 0, l = null;
                        if (a = s = n[0] >>> 3, (o = (7 & n[0]) << 1 | n[1] >>> 7) < 0 || o >= this._mpegSamplingRates.length) this._onError(u.default.FORMAT_ERROR, "Flv: AAC invalid sampling frequency index!"); else {
                            var d = this._mpegSamplingRates[o], c = (120 & n[1]) >>> 3;
                            if (!(c < 0 || c >= 8)) {
                                5 === a && (l = (7 & n[1]) << 1 | n[2] >>> 7, (124 & n[2]) >>> 2);
                                var h = self.navigator.userAgent.toLowerCase();
                                return -1 !== h.indexOf("firefox") ? o >= 6 ? (a = 5, r = new Array(4), l = o - 3) : (a = 2, r = new Array(2), l = o) : -1 !== h.indexOf("android") ? (a = 2, r = new Array(2), l = o) : (a = 5, l = o, r = new Array(4), o >= 6 ? l = o - 3 : 1 === c && (a = 2, r = new Array(2), l = o)), r[0] = a << 3, r[0] |= (15 & o) >>> 1, r[1] = (15 & o) << 7, r[1] |= (15 & c) << 3, 5 === a && (r[1] |= (15 & l) >>> 1, r[2] = (1 & l) << 7, r[2] |= 8, r[3] = 0), {
                                    config: r,
                                    samplingRate: d,
                                    channelCount: c,
                                    codec: "mp4a.40." + a,
                                    originalCodec: "mp4a.40." + s
                                }
                            }
                            this._onError(u.default.FORMAT_ERROR, "Flv: AAC invalid channel configuration")
                        }
                    }
                }, {
                    key: "_parseMP3AudioData", value: function (e, t, i, n) {
                        if (!(i < 4)) {
                            this._littleEndian;
                            var r = new Uint8Array(e, t, i), s = null;
                            if (n) {
                                if (255 !== r[0]) return;
                                var o = r[1] >>> 3 & 3, u = (6 & r[1]) >> 1, l = (240 & r[2]) >>> 4,
                                    d = (12 & r[2]) >>> 2, c = 3 !== (r[3] >>> 6 & 3) ? 2 : 1, h = 0, f = 0;
                                switch (o) {
                                    case 0:
                                        h = this._mpegAudioV25SampleRateTable[d];
                                        break;
                                    case 2:
                                        h = this._mpegAudioV20SampleRateTable[d];
                                        break;
                                    case 3:
                                        h = this._mpegAudioV10SampleRateTable[d]
                                }
                                switch (u) {
                                    case 1:
                                        34, l < this._mpegAudioL3BitRateTable.length && (f = this._mpegAudioL3BitRateTable[l]);
                                        break;
                                    case 2:
                                        33, l < this._mpegAudioL2BitRateTable.length && (f = this._mpegAudioL2BitRateTable[l]);
                                        break;
                                    case 3:
                                        32, l < this._mpegAudioL1BitRateTable.length && (f = this._mpegAudioL1BitRateTable[l])
                                }
                                s = {bitRate: f, samplingRate: h, channelCount: c, codec: "mp3", originalCodec: "mp3"}
                            } else s = r;
                            return s
                        }
                        a.default.w(this.TAG, "Flv: Invalid MP3 packet, header missing!")
                    }
                }, {
                    key: "_parseVideoData", value: function (e, t, i, n, r) {
                        if (i <= 1) a.default.w(this.TAG, "Flv: Invalid video packet, missing VideoData payload!"); else if (!0 !== this._hasVideoFlagOverrided || !1 !== this._hasVideo) {
                            var s = new Uint8Array(e, t, i)[0], o = (240 & s) >>> 4, l = 15 & s;
                            7 === l ? this._parseAVCVideoPacket(e, t + 1, i - 1, n, r, o) : this._onError(u.default.CODEC_UNSUPPORTED, "Flv: Unsupported codec in video frame: " + l)
                        }
                    }
                }, {
                    key: "_parseAVCVideoPacket", value: function (e, t, i, n, r, s) {
                        if (i < 4) a.default.w(this.TAG, "Flv: Invalid AVC packet, missing AVCPacketType or/and CompositionTime"); else {
                            var o = this._littleEndian, l = new DataView(e, t, i), d = l.getUint8(0),
                                c = (16777215 & l.getUint32(0, !o)) << 8 >> 8;
                            if (0 === d) this._parseAVCDecoderConfigurationRecord(e, t + 4, i - 4); else if (1 === d) this._parseAVCVideoData(e, t + 4, i - 4, n, r, s, c); else if (2 !== d) return void this._onError(u.default.FORMAT_ERROR, "Flv: Invalid video packet type " + d)
                        }
                    }
                }, {
                    key: "_parseAVCDecoderConfigurationRecord", value: function (e, t, i) {
                        if (i < 7) a.default.w(this.TAG, "Flv: Invalid AVCDecoderConfigurationRecord, lack of data!"); else {
                            var n = this._videoMetadata, r = this._videoTrack, s = this._littleEndian,
                                l = new DataView(e, t, i);
                            n ? void 0 !== n.avcc && a.default.w(this.TAG, "Found another AVCDecoderConfigurationRecord!") : (!1 === this._hasVideo && !1 === this._hasVideoFlagOverrided && (this._hasVideo = !0, this._mediaInfo.hasVideo = !0), (n = this._videoMetadata = {}).type = "video", n.id = r.id, n.timescale = this._timescale, n.duration = this._duration);
                            var d = l.getUint8(0), c = l.getUint8(1);
                            l.getUint8(2), l.getUint8(3);
                            if (1 === d && 0 !== c) if (this._naluLengthSize = 1 + (3 & l.getUint8(4)), 3 === this._naluLengthSize || 4 === this._naluLengthSize) {
                                var h = 31 & l.getUint8(5);
                                if (0 !== h) {
                                    h > 1 && a.default.w(this.TAG, "Flv: Strange AVCDecoderConfigurationRecord: SPS Count = " + h);
                                    for (var f = 6, p = 0; p < h; p++) {
                                        var m = l.getUint16(f, !s);
                                        if (f += 2, 0 !== m) {
                                            var g = new Uint8Array(e, t + f, m);
                                            f += m;
                                            var y = o.default.parseSPS(g);
                                            if (0 === p) {
                                                n.codecWidth = y.codec_size.width, n.codecHeight = y.codec_size.height, n.presentWidth = y.present_size.width, n.presentHeight = y.present_size.height, n.profile = y.profile_string, n.level = y.level_string, n.bitDepth = y.bit_depth, n.chromaFormat = y.chroma_format, n.sarRatio = y.sar_ratio, n.frameRate = y.frame_rate, !1 !== y.frame_rate.fixed && 0 !== y.frame_rate.fps_num && 0 !== y.frame_rate.fps_den || (n.frameRate = this._referenceFrameRate);
                                                var _ = n.frameRate.fps_den, v = n.frameRate.fps_num;
                                                n.refSampleDuration = n.timescale * (_ / v);
                                                for (var b = g.subarray(1, 4), T = "avc1.", S = 0; S < 3; S++) {
                                                    var k = b[S].toString(16);
                                                    k.length < 2 && (k = "0" + k), T += k
                                                }
                                                n.codec = T;
                                                var w = this._mediaInfo;
                                                w.width = n.codecWidth, w.height = n.codecHeight, w.fps = n.frameRate.fps, w.profile = n.profile, w.level = n.level, w.refFrames = y.ref_frames, w.chromaFormat = y.chroma_format_string, w.sarNum = n.sarRatio.width, w.sarDen = n.sarRatio.height, w.videoCodec = T, w.hasAudio ? null != w.audioCodec && (w.mimeType = 'video/x-flv; codecs="' + w.videoCodec + "," + w.audioCodec + '"') : w.mimeType = 'video/x-flv; codecs="' + w.videoCodec + '"', w.isComplete() && this._onMediaInfo(w)
                                            }
                                        }
                                    }
                                    var E = l.getUint8(f);
                                    if (0 !== E) {
                                        E > 1 && a.default.w(this.TAG, "Flv: Strange AVCDecoderConfigurationRecord: PPS Count = " + E), f++;
                                        for (var C = 0; C < E; C++) {
                                            var A = l.getUint16(f, !s);
                                            f += 2, 0 !== A && (f += A)
                                        }
                                        n.avcc = new Uint8Array(i), n.avcc.set(new Uint8Array(e, t, i), 0), a.default.v(this.TAG, "Parsed AVCDecoderConfigurationRecord"), this._isInitialMetadataDispatched() ? this._dispatch && (this._audioTrack.length || this._videoTrack.length) && this._onDataAvailable(this._audioTrack, this._videoTrack) : this._videoInitialMetadataDispatched = !0, this._dispatch = !1, this._onTrackMetadata("video", n)
                                    } else this._onError(u.default.FORMAT_ERROR, "Flv: Invalid AVCDecoderConfigurationRecord: No PPS")
                                } else this._onError(u.default.FORMAT_ERROR, "Flv: Invalid AVCDecoderConfigurationRecord: No SPS")
                            } else this._onError(u.default.FORMAT_ERROR, "Flv: Strange NaluLengthSizeMinusOne: " + (this._naluLengthSize - 1)); else this._onError(u.default.FORMAT_ERROR, "Flv: Invalid AVCDecoderConfigurationRecord")
                        }
                    }
                }, {
                    key: "_parseAVCVideoData", value: function (e, t, i, n, r, s, o) {
                        for (var u = this._littleEndian, l = new DataView(e, t, i), d = [], c = 0, h = 0, f = this._naluLengthSize, p = this._timestampBase + n, m = 1 === s; h < i;) {
                            if (h + 4 >= i) {
                                a.default.w(this.TAG, "Malformed Nalu near timestamp " + p + ", offset = " + h + ", dataSize = " + i);
                                break
                            }
                            var g = l.getUint32(h, !u);
                            if (3 === f && (g >>>= 8), g > i - f) return void a.default.w(this.TAG, "Malformed Nalus near timestamp " + p + ", NaluSize > DataSize!");
                            var y = 31 & l.getUint8(h + f);
                            5 === y && (m = !0);
                            var _ = new Uint8Array(e, t + h, f + g), v = {type: y, data: _};
                            d.push(v), c += _.byteLength, h += f + g
                        }
                        if (d.length) {
                            var b = this._videoTrack,
                                T = {units: d, length: c, isKeyframe: m, dts: p, cts: o, pts: p + o};
                            m && (T.fileposition = r), b.samples.push(T), b.length += c
                        }
                    }
                }, {
                    key: "onTrackMetadata", get: function () {
                        return this._onTrackMetadata
                    }, set: function (e) {
                        this._onTrackMetadata = e
                    }
                }, {
                    key: "onMediaInfo", get: function () {
                        return this._onMediaInfo
                    }, set: function (e) {
                        this._onMediaInfo = e
                    }
                }, {
                    key: "onMetaDataArrived", get: function () {
                        return this._onMetaDataArrived
                    }, set: function (e) {
                        this._onMetaDataArrived = e
                    }
                }, {
                    key: "onScriptDataArrived", get: function () {
                        return this._onScriptDataArrived
                    }, set: function (e) {
                        this._onScriptDataArrived = e
                    }
                }, {
                    key: "onError", get: function () {
                        return this._onError
                    }, set: function (e) {
                        this._onError = e
                    }
                }, {
                    key: "onDataAvailable", get: function () {
                        return this._onDataAvailable
                    }, set: function (e) {
                        this._onDataAvailable = e
                    }
                }, {
                    key: "timestampBase", get: function () {
                        return this._timestampBase
                    }, set: function (e) {
                        this._timestampBase = e
                    }
                }, {
                    key: "overridedDuration", get: function () {
                        return this._duration
                    }, set: function (e) {
                        this._durationOverrided = !0, this._duration = e, this._mediaInfo.duration = e
                    }
                }, {
                    key: "overridedHasAudio", set: function (e) {
                        this._hasAudioFlagOverrided = !0, this._hasAudio = e, this._mediaInfo.hasAudio = e
                    }
                }, {
                    key: "overridedHasVideo", set: function (e) {
                        this._hasVideoFlagOverrided = !0, this._hasVideo = e, this._mediaInfo.hasVideo = e
                    }
                }], [{
                    key: "probe", value: function (e) {
                        var t = new Uint8Array(e), i = {match: !1};
                        if (70 !== t[0] || 76 !== t[1] || 86 !== t[2] || 1 !== t[3]) return i;
                        var n, r, a = (4 & t[4]) >>> 2 != 0, s = 0 != (1 & t[4]),
                            o = (n = t, r = 5, n[r] << 24 | n[r + 1] << 16 | n[r + 2] << 8 | n[r + 3]);
                        return o < 9 ? i : {match: !0, consumed: o, dataOffset: o, hasAudioTrack: a, hasVideoTrack: s}
                    }
                }]), e
            }();
            i.default = h
        }, {
            "../core/media-info.js": 7,
            "../utils/exception.js": 40,
            "../utils/logger.js": 41,
            "./amf-parser.js": 15,
            "./demux-errors.js": 16,
            "./sps-parser.js": 19
        }],
        19: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n, r = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }(), a = e("./exp-golomb.js"), s = (n = a, n && n.__esModule ? n : {default: n});
            var o = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e)
                }

                return r(e, null, [{
                    key: "_ebsp2rbsp", value: function (e) {
                        for (var t = e, i = t.byteLength, n = new Uint8Array(i), r = 0, a = 0; a < i; a++) a >= 2 && 3 === t[a] && 0 === t[a - 1] && 0 === t[a - 2] || (n[r] = t[a], r++);
                        return new Uint8Array(n.buffer, 0, r)
                    }
                }, {
                    key: "parseSPS", value: function (t) {
                        var i = e._ebsp2rbsp(t), n = new s.default(i);
                        n.readByte();
                        var r = n.readByte();
                        n.readByte();
                        var a = n.readByte();
                        n.readUEG();
                        var o = e.getProfileString(r), u = e.getLevelString(a), l = 1, d = 420, c = [0, 420, 422, 444],
                            h = 8;
                        if ((100 === r || 110 === r || 122 === r || 244 === r || 44 === r || 83 === r || 86 === r || 118 === r || 128 === r || 138 === r || 144 === r) && (3 === (l = n.readUEG()) && n.readBits(1), l <= 3 && (d = c[l]), h = n.readUEG() + 8, n.readUEG(), n.readBits(1), n.readBool())) for (var f = 3 !== l ? 8 : 12, p = 0; p < f; p++) n.readBool() && (p < 6 ? e._skipScalingList(n, 16) : e._skipScalingList(n, 64));
                        n.readUEG();
                        var m = n.readUEG();
                        if (0 === m) n.readUEG(); else if (1 === m) {
                            n.readBits(1), n.readSEG(), n.readSEG();
                            for (var g = n.readUEG(), y = 0; y < g; y++) n.readSEG()
                        }
                        var _ = n.readUEG();
                        n.readBits(1);
                        var v = n.readUEG(), b = n.readUEG(), T = n.readBits(1);
                        0 === T && n.readBits(1), n.readBits(1);
                        var S = 0, k = 0, w = 0, E = 0;
                        n.readBool() && (S = n.readUEG(), k = n.readUEG(), w = n.readUEG(), E = n.readUEG());
                        var C = 1, A = 1, L = 0, O = !0, I = 0, P = 0;
                        if (n.readBool()) {
                            if (n.readBool()) {
                                var R = n.readByte();
                                R > 0 && R < 16 ? (C = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2][R - 1], A = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1][R - 1]) : 255 === R && (C = n.readByte() << 8 | n.readByte(), A = n.readByte() << 8 | n.readByte())
                            }
                            if (n.readBool() && n.readBool(), n.readBool() && (n.readBits(4), n.readBool() && n.readBits(24)), n.readBool() && (n.readUEG(), n.readUEG()), n.readBool()) {
                                var x = n.readBits(32), D = n.readBits(32);
                                O = n.readBool(), L = (I = D) / (P = 2 * x)
                            }
                        }
                        var U = 1;
                        1 === C && 1 === A || (U = C / A);
                        var M = 0, B = 0;
                        if (0 === l) M = 1, B = 2 - T; else {
                            M = 3 === l ? 1 : 2, B = (1 === l ? 2 : 1) * (2 - T)
                        }
                        var j = 16 * (v + 1), N = 16 * (b + 1) * (2 - T);
                        j -= (S + k) * M, N -= (w + E) * B;
                        var F = Math.ceil(j * U);
                        return n.destroy(), n = null, {
                            profile_string: o,
                            level_string: u,
                            bit_depth: h,
                            ref_frames: _,
                            chroma_format: d,
                            chroma_format_string: e.getChromaFormatString(d),
                            frame_rate: {fixed: O, fps: L, fps_den: P, fps_num: I},
                            sar_ratio: {width: C, height: A},
                            codec_size: {width: j, height: N},
                            present_size: {width: F, height: N}
                        }
                    }
                }, {
                    key: "_skipScalingList", value: function (e, t) {
                        for (var i = 8, n = 8, r = 0; r < t; r++) 0 !== n && (n = (i + e.readSEG() + 256) % 256), i = 0 === n ? i : n
                    }
                }, {
                    key: "getProfileString", value: function (e) {
                        switch (e) {
                            case 66:
                                return "Baseline";
                            case 77:
                                return "Main";
                            case 88:
                                return "Extended";
                            case 100:
                                return "High";
                            case 110:
                                return "High10";
                            case 122:
                                return "High422";
                            case 244:
                                return "High444";
                            default:
                                return "Unknown"
                        }
                    }
                }, {
                    key: "getLevelString", value: function (e) {
                        return (e / 10).toFixed(1)
                    }
                }, {
                    key: "getChromaFormatString", value: function (e) {
                        switch (e) {
                            case 420:
                                return "4:2:0";
                            case 422:
                                return "4:2:2";
                            case 444:
                                return "4:4:4";
                            default:
                                return "Unknown"
                        }
                    }
                }]), e
            }();
            i.default = o
        }, {"./exp-golomb.js": 17}],
        20: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
                    return typeof e
                } : function (e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }, r = f(e("./utils/polyfill.js")), a = f(e("./core/features.js")), s = e("./io/loader.js"),
                o = f(e("./player/flv-player.js")), u = f(e("./player/native-player.js")),
                l = f(e("./player/player-events.js")), d = e("./player/player-errors.js"),
                c = f(e("./utils/logging-control.js")), h = e("./utils/exception.js");

            function f(e) {
                return e && e.__esModule ? e : {default: e}
            }

            r.default.install();
            var p = {};
            p.createPlayer = function (e, t) {
                var i = e;
                if (null == i || "object" !== (void 0 === i ? "undefined" : n(i))) throw new h.InvalidArgumentException("MediaDataSource must be an javascript object!");
                if (!i.hasOwnProperty("type")) throw new h.InvalidArgumentException("MediaDataSource must has type field to indicate video file type!");
                switch (i.type) {
                    case"flv":
                        return new o.default(i, t);
                    default:
                        return new u.default(i, t)
                }
            }, p.isSupported = function () {
                return a.default.supportMSEH264Playback()
            }, p.getFeatureList = function () {
                return a.default.getFeatureList()
            }, p.BaseLoader = s.BaseLoader, p.LoaderStatus = s.LoaderStatus, p.LoaderErrors = s.LoaderErrors, p.Events = l.default, p.ErrorTypes = d.ErrorTypes, p.ErrorDetails = d.ErrorDetails, p.FlvPlayer = o.default, p.NativePlayer = u.default, p.LoggingControl = c.default, Object.defineProperty(p, "version", {
                enumerable: !0,
                get: function () {
                    return "1.4.2"
                }
            }), i.default = p
        }, {
            "./core/features.js": 6,
            "./io/loader.js": 24,
            "./player/flv-player.js": 32,
            "./player/native-player.js": 33,
            "./player/player-errors.js": 34,
            "./player/player-events.js": 35,
            "./utils/exception.js": 40,
            "./utils/logging-control.js": 42,
            "./utils/polyfill.js": 43
        }],
        21: [function (e, t, i) {
            "use strict";
            t.exports = e("./flv.js").default
        }, {"./flv.js": 20}],
        22: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
                    return typeof e
                } : function (e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }, r = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), a = (u(e("../utils/logger.js")), u(e("../utils/browser.js"))), s = e("./loader.js"),
                o = e("../utils/exception.js");

            function u(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var l = function (e) {
                !function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, s.BaseLoader), r(t, null, [{
                    key: "isSupported", value: function () {
                        try {
                            var e = a.default.msedge && a.default.version.minor >= 15048, t = !a.default.msedge || e;
                            return self.fetch && self.ReadableStream && t
                        } catch (e) {
                            return !1
                        }
                    }
                }]);

                function t(e, i) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    var n = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, "fetch-stream-loader"));
                    return n.TAG = "FetchStreamLoader", n._seekHandler = e, n._config = i, n._needStash = !0, n._requestAbort = !1, n._contentLength = null, n._receivedLength = 0, n
                }

                return r(t, [{
                    key: "destroy", value: function () {
                        this.isWorking() && this.abort(), function e(t, i, n) {
                            null === t && (t = Function.prototype);
                            var r = Object.getOwnPropertyDescriptor(t, i);
                            if (void 0 === r) {
                                var a = Object.getPrototypeOf(t);
                                return null === a ? void 0 : e(a, i, n)
                            }
                            if ("value" in r) return r.value;
                            var s = r.get;
                            if (void 0 !== s) return s.call(n)
                        }(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "destroy", this).call(this)
                    }
                }, {
                    key: "open", value: function (e, t) {
                        var i = this;
                        this._dataSource = e, this._range = t;
                        var r = e.url;
                        this._config.reuseRedirectedURL && void 0 != e.redirectedURL && (r = e.redirectedURL);
                        var a = this._seekHandler.getConfig(r, t), u = new self.Headers;
                        if ("object" === n(a.headers)) {
                            var l = a.headers;
                            for (var d in l) l.hasOwnProperty(d) && u.append(d, l[d])
                        }
                        var c = {
                            method: "GET",
                            headers: u,
                            mode: "cors",
                            cache: "default",
                            referrerPolicy: "no-referrer-when-downgrade"
                        };
                        if ("object" === n(this._config.headers)) for (var h in this._config.headers) u.append(h, this._config.headers[h]);
                        !1 === e.cors && (c.mode = "same-origin"), e.withCredentials && (c.credentials = "include"), e.referrerPolicy && (c.referrerPolicy = e.referrerPolicy), this._status = s.LoaderStatus.kConnecting, self.fetch(a.url, c).then(function (e) {
                            if (i._requestAbort) return i._requestAbort = !1, void(i._status = s.LoaderStatus.kIdle);
                            if (e.ok && e.status >= 200 && e.status <= 299) {
                                if (e.url !== a.url && i._onURLRedirect) {
                                    var t = i._seekHandler.removeURLParameters(e.url);
                                    i._onURLRedirect(t)
                                }
                                var n = e.headers.get("Content-Length");
                                return null != n && (i._contentLength = parseInt(n), 0 !== i._contentLength && i._onContentLengthKnown && i._onContentLengthKnown(i._contentLength)), i._pump.call(i, e.body.getReader())
                            }
                            if (i._status = s.LoaderStatus.kError, !i._onError) throw new o.RuntimeException("FetchStreamLoader: Http code invalid, " + e.status + " " + e.statusText);
                            i._onError(s.LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: e.status, msg: e.statusText})
                        }).catch(function (e) {
                            if (i._status = s.LoaderStatus.kError, !i._onError) throw e;
                            i._onError(s.LoaderErrors.EXCEPTION, {code: -1, msg: e.message})
                        })
                    }
                }, {
                    key: "abort", value: function () {
                        this._requestAbort = !0
                    }
                }, {
                    key: "_pump", value: function (e) {
                        var t = this;
                        return e.read().then(function (i) {
                            if (i.done) if (null !== t._contentLength && t._receivedLength < t._contentLength) {
                                t._status = s.LoaderStatus.kError;
                                var n = s.LoaderErrors.EARLY_EOF, r = {code: -1, msg: "Fetch stream meet Early-EOF"};
                                if (!t._onError) throw new o.RuntimeException(r.msg);
                                t._onError(n, r)
                            } else t._status = s.LoaderStatus.kComplete, t._onComplete && t._onComplete(t._range.from, t._range.from + t._receivedLength - 1); else {
                                if (!0 === t._requestAbort) return t._requestAbort = !1, t._status = s.LoaderStatus.kComplete, e.cancel();
                                t._status = s.LoaderStatus.kBuffering;
                                var a = i.value.buffer, u = t._range.from + t._receivedLength;
                                t._receivedLength += a.byteLength, t._onDataArrival && t._onDataArrival(a, u, t._receivedLength), t._pump(e)
                            }
                        }).catch(function (e) {
                            if (11 !== e.code || !a.default.msedge) {
                                t._status = s.LoaderStatus.kError;
                                var i = 0, n = null;
                                if (19 !== e.code && "network error" !== e.message || !(null === t._contentLength || null !== t._contentLength && t._receivedLength < t._contentLength) ? (i = s.LoaderErrors.EXCEPTION, n = {
                                    code: e.code,
                                    msg: e.message
                                }) : (i = s.LoaderErrors.EARLY_EOF, n = {
                                    code: e.code,
                                    msg: "Fetch stream meet Early-EOF"
                                }), !t._onError) throw new o.RuntimeException(n.msg);
                                t._onError(i, n)
                            }
                        })
                    }
                }]), t
            }();
            i.default = l
        }, {"../utils/browser.js": 39, "../utils/exception.js": 40, "../utils/logger.js": 41, "./loader.js": 24}],
        23: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), r = p(e("../utils/logger.js")), a = p(e("./speed-sampler.js")), s = e("./loader.js"),
                o = p(e("./fetch-stream-loader.js")), u = p(e("./xhr-moz-chunked-loader.js")),
                l = (p(e("./xhr-msstream-loader.js")), p(e("./xhr-range-loader.js"))),
                d = p(e("./websocket-loader.js")), c = p(e("./range-seek-handler.js")),
                h = p(e("./param-seek-handler.js")), f = e("../utils/exception.js");

            function p(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var m = function () {
                function e(t, i, n) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.TAG = "IOController", this._config = i, this._extraData = n, this._stashInitialSize = 393216, void 0 != i.stashInitialSize && i.stashInitialSize > 0 && (this._stashInitialSize = i.stashInitialSize), this._stashUsed = 0, this._stashSize = this._stashInitialSize, this._bufferSize = 3145728, this._stashBuffer = new ArrayBuffer(this._bufferSize), this._stashByteStart = 0, this._enableStash = !0, !1 === i.enableStashBuffer && (this._enableStash = !1), this._loader = null, this._loaderClass = null, this._seekHandler = null, this._dataSource = t, this._isWebSocketURL = /wss?:\/\/(.+?)/.test(t.url), this._refTotalLength = t.filesize ? t.filesize : null, this._totalLength = this._refTotalLength, this._fullRequestFlag = !1, this._currentRange = null, this._redirectedURL = null, this._speedNormalized = 0, this._speedSampler = new a.default, this._speedNormalizeList = [64, 128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096], this._isEarlyEofReconnecting = !1, this._paused = !1, this._resumeFrom = 0, this._onDataArrival = null, this._onSeeked = null, this._onError = null, this._onComplete = null, this._onRedirect = null, this._onRecoveredEarlyEof = null, this._selectSeekHandler(), this._selectLoader(), this._createLoader()
                }

                return n(e, [{
                    key: "destroy", value: function () {
                        this._loader.isWorking() && this._loader.abort(), this._loader.destroy(), this._loader = null, this._loaderClass = null, this._dataSource = null, this._stashBuffer = null, this._stashUsed = this._stashSize = this._bufferSize = this._stashByteStart = 0, this._currentRange = null, this._speedSampler = null, this._isEarlyEofReconnecting = !1, this._onDataArrival = null, this._onSeeked = null, this._onError = null, this._onComplete = null, this._onRedirect = null, this._onRecoveredEarlyEof = null, this._extraData = null
                    }
                }, {
                    key: "isWorking", value: function () {
                        return this._loader && this._loader.isWorking() && !this._paused
                    }
                }, {
                    key: "isPaused", value: function () {
                        return this._paused
                    }
                }, {
                    key: "_selectSeekHandler", value: function () {
                        var e = this._config;
                        if ("range" === e.seekType) this._seekHandler = new c.default(this._config.rangeLoadZeroStart); else if ("param" === e.seekType) {
                            var t = e.seekParamStart || "bstart", i = e.seekParamEnd || "bend";
                            this._seekHandler = new h.default(t, i)
                        } else {
                            if ("custom" !== e.seekType) throw new f.InvalidArgumentException("Invalid seekType in config: " + e.seekType);
                            if ("function" != typeof e.customSeekHandler) throw new f.InvalidArgumentException("Custom seekType specified in config but invalid customSeekHandler!");
                            this._seekHandler = new e.customSeekHandler
                        }
                    }
                }, {
                    key: "_selectLoader", value: function () {
                        if (null != this._config.customLoader) this._loaderClass = this._config.customLoader; else if (this._isWebSocketURL) this._loaderClass = d.default; else if (o.default.isSupported()) this._loaderClass = o.default; else if (u.default.isSupported()) this._loaderClass = u.default; else {
                            if (!l.default.isSupported()) throw new f.RuntimeException("Your browser doesn't support xhr with arraybuffer responseType!");
                            this._loaderClass = l.default
                        }
                    }
                }, {
                    key: "_createLoader", value: function () {
                        this._loader = new this._loaderClass(this._seekHandler, this._config), !1 === this._loader.needStashBuffer && (this._enableStash = !1), this._loader.onContentLengthKnown = this._onContentLengthKnown.bind(this), this._loader.onURLRedirect = this._onURLRedirect.bind(this), this._loader.onDataArrival = this._onLoaderChunkArrival.bind(this), this._loader.onComplete = this._onLoaderComplete.bind(this), this._loader.onError = this._onLoaderError.bind(this)
                    }
                }, {
                    key: "open", value: function (e) {
                        this._currentRange = {
                            from: 0,
                            to: -1
                        }, e && (this._currentRange.from = e), this._speedSampler.reset(), e || (this._fullRequestFlag = !0), this._loader.open(this._dataSource, Object.assign({}, this._currentRange))
                    }
                }, {
                    key: "abort", value: function () {
                        this._loader.abort(), this._paused && (this._paused = !1, this._resumeFrom = 0)
                    }
                }, {
                    key: "pause", value: function () {
                        this.isWorking() && (this._loader.abort(), 0 !== this._stashUsed ? (this._resumeFrom = this._stashByteStart, this._currentRange.to = this._stashByteStart - 1) : this._resumeFrom = this._currentRange.to + 1, this._stashUsed = 0, this._stashByteStart = 0, this._paused = !0)
                    }
                }, {
                    key: "resume", value: function () {
                        if (this._paused) {
                            this._paused = !1;
                            var e = this._resumeFrom;
                            this._resumeFrom = 0, this._internalSeek(e, !0)
                        }
                    }
                }, {
                    key: "seek", value: function (e) {
                        this._paused = !1, this._stashUsed = 0, this._stashByteStart = 0, this._internalSeek(e, !0)
                    }
                }, {
                    key: "_internalSeek", value: function (e, t) {
                        this._loader.isWorking() && this._loader.abort(), this._flushStashBuffer(t), this._loader.destroy(), this._loader = null;
                        var i = {from: e, to: -1};
                        this._currentRange = {
                            from: i.from,
                            to: -1
                        }, this._speedSampler.reset(), this._stashSize = this._stashInitialSize, this._createLoader(), this._loader.open(this._dataSource, i), this._onSeeked && this._onSeeked()
                    }
                }, {
                    key: "updateUrl", value: function (e) {
                        if (!e || "string" != typeof e || 0 === e.length) throw new f.InvalidArgumentException("Url must be a non-empty string!");
                        this._dataSource.url = e
                    }
                }, {
                    key: "_expandBuffer", value: function (e) {
                        for (var t = this._stashSize; t + 1048576 < e;) t *= 2;
                        if ((t += 1048576) !== this._bufferSize) {
                            var i = new ArrayBuffer(t);
                            if (this._stashUsed > 0) {
                                var n = new Uint8Array(this._stashBuffer, 0, this._stashUsed);
                                new Uint8Array(i, 0, t).set(n, 0)
                            }
                            this._stashBuffer = i, this._bufferSize = t
                        }
                    }
                }, {
                    key: "_normalizeSpeed", value: function (e) {
                        var t = this._speedNormalizeList, i = t.length - 1, n = 0, r = 0, a = i;
                        if (e < t[0]) return t[0];
                        for (; r <= a;) {
                            if ((n = r + Math.floor((a - r) / 2)) === i || e >= t[n] && e < t[n + 1]) return t[n];
                            t[n] < e ? r = n + 1 : a = n - 1
                        }
                    }
                }, {
                    key: "_adjustStashSize", value: function (e) {
                        var t = 0;
                        (t = this._config.isLive ? e : e < 512 ? e : e >= 512 && e <= 1024 ? Math.floor(1.5 * e) : 2 * e) > 8192 && (t = 8192);
                        var i = 1024 * t + 1048576;
                        this._bufferSize < i && this._expandBuffer(i), this._stashSize = 1024 * t
                    }
                }, {
                    key: "_dispatchChunks", value: function (e, t) {
                        return this._currentRange.to = t + e.byteLength - 1, this._onDataArrival(e, t)
                    }
                }, {
                    key: "_onURLRedirect", value: function (e) {
                        this._redirectedURL = e, this._onRedirect && this._onRedirect(e)
                    }
                }, {
                    key: "_onContentLengthKnown", value: function (e) {
                        e && this._fullRequestFlag && (this._totalLength = e, this._fullRequestFlag = !1)
                    }
                }, {
                    key: "_onLoaderChunkArrival", value: function (e, t, i) {
                        if (!this._onDataArrival) throw new f.IllegalStateException("IOController: No existing consumer (onDataArrival) callback!");
                        if (!this._paused) {
                            this._isEarlyEofReconnecting && (this._isEarlyEofReconnecting = !1, this._onRecoveredEarlyEof && this._onRecoveredEarlyEof()), this._speedSampler.addBytes(e.byteLength);
                            var n = this._speedSampler.lastSecondKBps;
                            if (0 !== n) {
                                var r = this._normalizeSpeed(n);
                                this._speedNormalized !== r && (this._speedNormalized = r, this._adjustStashSize(r))
                            }
                            if (this._enableStash) if (0 === this._stashUsed && 0 === this._stashByteStart && (this._stashByteStart = t), this._stashUsed + e.byteLength <= this._stashSize) {
                                new Uint8Array(this._stashBuffer, 0, this._stashSize).set(new Uint8Array(e), this._stashUsed), this._stashUsed += e.byteLength
                            } else {
                                var a = new Uint8Array(this._stashBuffer, 0, this._bufferSize);
                                if (this._stashUsed > 0) {
                                    var s = this._stashBuffer.slice(0, this._stashUsed),
                                        o = this._dispatchChunks(s, this._stashByteStart);
                                    if (o < s.byteLength) {
                                        if (o > 0) {
                                            var u = new Uint8Array(s, o);
                                            a.set(u, 0), this._stashUsed = u.byteLength, this._stashByteStart += o
                                        }
                                    } else this._stashUsed = 0, this._stashByteStart += o;
                                    this._stashUsed + e.byteLength > this._bufferSize && (this._expandBuffer(this._stashUsed + e.byteLength), a = new Uint8Array(this._stashBuffer, 0, this._bufferSize)), a.set(new Uint8Array(e), this._stashUsed), this._stashUsed += e.byteLength
                                } else {
                                    var l = this._dispatchChunks(e, t);
                                    if (l < e.byteLength) {
                                        var d = e.byteLength - l;
                                        d > this._bufferSize && (this._expandBuffer(d), a = new Uint8Array(this._stashBuffer, 0, this._bufferSize)), a.set(new Uint8Array(e, l), 0), this._stashUsed += d, this._stashByteStart = t + l
                                    }
                                }
                            } else if (0 === this._stashUsed) {
                                var c = this._dispatchChunks(e, t);
                                if (c < e.byteLength) {
                                    var h = e.byteLength - c;
                                    h > this._bufferSize && this._expandBuffer(h);
                                    new Uint8Array(this._stashBuffer, 0, this._bufferSize).set(new Uint8Array(e, c), 0), this._stashUsed += h, this._stashByteStart = t + c
                                }
                            } else {
                                this._stashUsed + e.byteLength > this._bufferSize && this._expandBuffer(this._stashUsed + e.byteLength);
                                var p = new Uint8Array(this._stashBuffer, 0, this._bufferSize);
                                p.set(new Uint8Array(e), this._stashUsed), this._stashUsed += e.byteLength;
                                var m = this._dispatchChunks(this._stashBuffer.slice(0, this._stashUsed), this._stashByteStart);
                                if (m < this._stashUsed && m > 0) {
                                    var g = new Uint8Array(this._stashBuffer, m);
                                    p.set(g, 0)
                                }
                                this._stashUsed -= m, this._stashByteStart += m
                            }
                        }
                    }
                }, {
                    key: "_flushStashBuffer", value: function (e) {
                        if (this._stashUsed > 0) {
                            var t = this._stashBuffer.slice(0, this._stashUsed),
                                i = this._dispatchChunks(t, this._stashByteStart), n = t.byteLength - i;
                            if (i < t.byteLength) {
                                if (!e) {
                                    if (i > 0) {
                                        var a = new Uint8Array(this._stashBuffer, 0, this._bufferSize),
                                            s = new Uint8Array(t, i);
                                        a.set(s, 0), this._stashUsed = s.byteLength, this._stashByteStart += i
                                    }
                                    return 0
                                }
                                r.default.w(this.TAG, n + " bytes unconsumed data remain when flush buffer, dropped")
                            }
                            return this._stashUsed = 0, this._stashByteStart = 0, n
                        }
                        return 0
                    }
                }, {
                    key: "_onLoaderComplete", value: function (e, t) {
                        this._flushStashBuffer(!0), this._onComplete && this._onComplete(this._extraData)
                    }
                }, {
                    key: "_onLoaderError", value: function (e, t) {
                        switch (r.default.e(this.TAG, "Loader error, code = " + t.code + ", msg = " + t.msg), this._flushStashBuffer(!1), this._isEarlyEofReconnecting && (this._isEarlyEofReconnecting = !1, e = s.LoaderErrors.UNRECOVERABLE_EARLY_EOF), e) {
                            case s.LoaderErrors.EARLY_EOF:
                                if (!this._config.isLive && this._totalLength) {
                                    var i = this._currentRange.to + 1;
                                    return void(i < this._totalLength && (r.default.w(this.TAG, "Connection lost, trying reconnect..."), this._isEarlyEofReconnecting = !0, this._internalSeek(i, !1)))
                                }
                                e = s.LoaderErrors.UNRECOVERABLE_EARLY_EOF;
                                break;
                            case s.LoaderErrors.UNRECOVERABLE_EARLY_EOF:
                            case s.LoaderErrors.CONNECTING_TIMEOUT:
                            case s.LoaderErrors.HTTP_STATUS_CODE_INVALID:
                            case s.LoaderErrors.EXCEPTION:
                        }
                        if (!this._onError) throw new f.RuntimeException("IOException: " + t.msg);
                        this._onError(e, t)
                    }
                }, {
                    key: "status", get: function () {
                        return this._loader.status
                    }
                }, {
                    key: "extraData", get: function () {
                        return this._extraData
                    }, set: function (e) {
                        this._extraData = e
                    }
                }, {
                    key: "onDataArrival", get: function () {
                        return this._onDataArrival
                    }, set: function (e) {
                        this._onDataArrival = e
                    }
                }, {
                    key: "onSeeked", get: function () {
                        return this._onSeeked
                    }, set: function (e) {
                        this._onSeeked = e
                    }
                }, {
                    key: "onError", get: function () {
                        return this._onError
                    }, set: function (e) {
                        this._onError = e
                    }
                }, {
                    key: "onComplete", get: function () {
                        return this._onComplete
                    }, set: function (e) {
                        this._onComplete = e
                    }
                }, {
                    key: "onRedirect", get: function () {
                        return this._onRedirect
                    }, set: function (e) {
                        this._onRedirect = e
                    }
                }, {
                    key: "onRecoveredEarlyEof", get: function () {
                        return this._onRecoveredEarlyEof
                    }, set: function (e) {
                        this._onRecoveredEarlyEof = e
                    }
                }, {
                    key: "currentURL", get: function () {
                        return this._dataSource.url
                    }
                }, {
                    key: "hasRedirect", get: function () {
                        return null != this._redirectedURL || void 0 != this._dataSource.redirectedURL
                    }
                }, {
                    key: "currentRedirectedURL", get: function () {
                        return this._redirectedURL || this._dataSource.redirectedURL
                    }
                }, {
                    key: "currentSpeed", get: function () {
                        return this._loaderClass === l.default ? this._loader.currentSpeed : this._speedSampler.lastSecondKBps
                    }
                }, {
                    key: "loaderType", get: function () {
                        return this._loader.type
                    }
                }]), e
            }();
            i.default = m
        }, {
            "../utils/exception.js": 40,
            "../utils/logger.js": 41,
            "./fetch-stream-loader.js": 22,
            "./loader.js": 24,
            "./param-seek-handler.js": 25,
            "./range-seek-handler.js": 26,
            "./speed-sampler.js": 27,
            "./websocket-loader.js": 28,
            "./xhr-moz-chunked-loader.js": 29,
            "./xhr-msstream-loader.js": 30,
            "./xhr-range-loader.js": 31
        }],
        24: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0}), i.BaseLoader = i.LoaderErrors = i.LoaderStatus = void 0;
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }(), r = e("../utils/exception.js");
            var a = i.LoaderStatus = {kIdle: 0, kConnecting: 1, kBuffering: 2, kError: 3, kComplete: 4};
            i.LoaderErrors = {
                OK: "OK",
                EXCEPTION: "Exception",
                HTTP_STATUS_CODE_INVALID: "HttpStatusCodeInvalid",
                CONNECTING_TIMEOUT: "ConnectingTimeout",
                EARLY_EOF: "EarlyEof",
                UNRECOVERABLE_EARLY_EOF: "UnrecoverableEarlyEof"
            }, i.BaseLoader = function () {
                function e(t) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this._type = t || "undefined", this._status = a.kIdle, this._needStash = !1, this._onContentLengthKnown = null, this._onURLRedirect = null, this._onDataArrival = null, this._onError = null, this._onComplete = null
                }

                return n(e, [{
                    key: "destroy", value: function () {
                        this._status = a.kIdle, this._onContentLengthKnown = null, this._onURLRedirect = null, this._onDataArrival = null, this._onError = null, this._onComplete = null
                    }
                }, {
                    key: "isWorking", value: function () {
                        return this._status === a.kConnecting || this._status === a.kBuffering
                    }
                }, {
                    key: "open", value: function (e, t) {
                        throw new r.NotImplementedException("Unimplemented abstract function!")
                    }
                }, {
                    key: "abort", value: function () {
                        throw new r.NotImplementedException("Unimplemented abstract function!")
                    }
                }, {
                    key: "type", get: function () {
                        return this._type
                    }
                }, {
                    key: "status", get: function () {
                        return this._status
                    }
                }, {
                    key: "needStashBuffer", get: function () {
                        return this._needStash
                    }
                }, {
                    key: "onContentLengthKnown", get: function () {
                        return this._onContentLengthKnown
                    }, set: function (e) {
                        this._onContentLengthKnown = e
                    }
                }, {
                    key: "onURLRedirect", get: function () {
                        return this._onURLRedirect
                    }, set: function (e) {
                        this._onURLRedirect = e
                    }
                }, {
                    key: "onDataArrival", get: function () {
                        return this._onDataArrival
                    }, set: function (e) {
                        this._onDataArrival = e
                    }
                }, {
                    key: "onError", get: function () {
                        return this._onError
                    }, set: function (e) {
                        this._onError = e
                    }
                }, {
                    key: "onComplete", get: function () {
                        return this._onComplete
                    }, set: function (e) {
                        this._onComplete = e
                    }
                }]), e
            }()
        }, {"../utils/exception.js": 40}],
        25: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }();
            var r = function () {
                function e(t, i) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this._startName = t, this._endName = i
                }

                return n(e, [{
                    key: "getConfig", value: function (e, t) {
                        var i = e;
                        if (0 !== t.from || -1 !== t.to) {
                            var n = !0;
                            -1 === i.indexOf("?") && (i += "?", n = !1), n && (i += "&"), i += this._startName + "=" + t.from.toString(), -1 !== t.to && (i += "&" + this._endName + "=" + t.to.toString())
                        }
                        return {url: i, headers: {}}
                    }
                }, {
                    key: "removeURLParameters", value: function (e) {
                        var t = e.split("?")[0], i = void 0, n = e.indexOf("?");
                        -1 !== n && (i = e.substring(n + 1));
                        var r = "";
                        if (void 0 != i && i.length > 0) for (var a = i.split("&"), s = 0; s < a.length; s++) {
                            var o = a[s].split("="), u = s > 0;
                            o[0] !== this._startName && o[0] !== this._endName && (u && (r += "&"), r += a[s])
                        }
                        return 0 === r.length ? t : t + "?" + r
                    }
                }]), e
            }();
            i.default = r
        }, {}],
        26: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }();
            var r = function () {
                function e(t) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this._zeroStart = t || !1
                }

                return n(e, [{
                    key: "getConfig", value: function (e, t) {
                        var i = {};
                        if (0 !== t.from || -1 !== t.to) {
                            var n = void 0;
                            n = -1 !== t.to ? "bytes=" + t.from.toString() + "-" + t.to.toString() : "bytes=" + t.from.toString() + "-", i.Range = n
                        } else this._zeroStart && (i.Range = "bytes=0-");
                        return {url: e, headers: i}
                    }
                }, {
                    key: "removeURLParameters", value: function (e) {
                        return e
                    }
                }]), e
            }();
            i.default = r
        }, {}],
        27: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }();
            var r = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this._firstCheckpoint = 0, this._lastCheckpoint = 0, this._intervalBytes = 0, this._totalBytes = 0, this._lastSecondBytes = 0, self.performance && self.performance.now ? this._now = self.performance.now.bind(self.performance) : this._now = Date.now
                }

                return n(e, [{
                    key: "reset", value: function () {
                        this._firstCheckpoint = this._lastCheckpoint = 0, this._totalBytes = this._intervalBytes = 0, this._lastSecondBytes = 0
                    }
                }, {
                    key: "addBytes", value: function (e) {
                        0 === this._firstCheckpoint ? (this._firstCheckpoint = this._now(), this._lastCheckpoint = this._firstCheckpoint, this._intervalBytes += e, this._totalBytes += e) : this._now() - this._lastCheckpoint < 1e3 ? (this._intervalBytes += e, this._totalBytes += e) : (this._lastSecondBytes = this._intervalBytes, this._intervalBytes = e, this._totalBytes += e, this._lastCheckpoint = this._now())
                    }
                }, {
                    key: "currentKBps", get: function () {
                        this.addBytes(0);
                        var e = (this._now() - this._lastCheckpoint) / 1e3;
                        return 0 == e && (e = 1), this._intervalBytes / e / 1024
                    }
                }, {
                    key: "lastSecondKBps", get: function () {
                        return this.addBytes(0), 0 !== this._lastSecondBytes ? this._lastSecondBytes / 1024 : this._now() - this._lastCheckpoint >= 500 ? this.currentKBps : 0
                    }
                }, {
                    key: "averageKBps", get: function () {
                        var e = (this._now() - this._firstCheckpoint) / 1e3;
                        return this._totalBytes / e / 1024
                    }
                }]), e
            }();
            i.default = r
        }, {}],
        28: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n, r = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), a = e("../utils/logger.js"), s = (n = a, n && n.__esModule, e("./loader.js")),
                o = e("../utils/exception.js");
            var u = function (e) {
                !function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, s.BaseLoader), r(t, null, [{
                    key: "isSupported", value: function () {
                        try {
                            return void 0 !== self.WebSocket
                        } catch (e) {
                            return !1
                        }
                    }
                }]);

                function t() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    var e = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, "websocket-loader"));
                    return e.TAG = "WebSocketLoader", e._needStash = !0, e._ws = null, e._requestAbort = !1, e._receivedLength = 0, e
                }

                return r(t, [{
                    key: "destroy", value: function () {
                        this._ws && this.abort(), function e(t, i, n) {
                            null === t && (t = Function.prototype);
                            var r = Object.getOwnPropertyDescriptor(t, i);
                            if (void 0 === r) {
                                var a = Object.getPrototypeOf(t);
                                return null === a ? void 0 : e(a, i, n)
                            }
                            if ("value" in r) return r.value;
                            var s = r.get;
                            if (void 0 !== s) return s.call(n)
                        }(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "destroy", this).call(this)
                    }
                }, {
                    key: "open", value: function (e) {
                        try {
                            var t = this._ws = new self.WebSocket(e.url);
                            t.binaryType = "arraybuffer", t.onopen = this._onWebSocketOpen.bind(this), t.onclose = this._onWebSocketClose.bind(this), t.onmessage = this._onWebSocketMessage.bind(this), t.onerror = this._onWebSocketError.bind(this), this._status = s.LoaderStatus.kConnecting
                        } catch (e) {
                            this._status = s.LoaderStatus.kError;
                            var i = {code: e.code, msg: e.message};
                            if (!this._onError) throw new o.RuntimeException(i.msg);
                            this._onError(s.LoaderErrors.EXCEPTION, i)
                        }
                    }
                }, {
                    key: "abort", value: function () {
                        var e = this._ws;
                        !e || 0 !== e.readyState && 1 !== e.readyState || (this._requestAbort = !0, e.close()), this._ws = null, this._status = s.LoaderStatus.kComplete
                    }
                }, {
                    key: "_onWebSocketOpen", value: function (e) {
                        this._status = s.LoaderStatus.kBuffering
                    }
                }, {
                    key: "_onWebSocketClose", value: function (e) {
                        !0 !== this._requestAbort ? (this._status = s.LoaderStatus.kComplete, this._onComplete && this._onComplete(0, this._receivedLength - 1)) : this._requestAbort = !1
                    }
                }, {
                    key: "_onWebSocketMessage", value: function (e) {
                        var t = this;
                        if (e.data instanceof ArrayBuffer) this._dispatchArrayBuffer(e.data); else if (e.data instanceof Blob) {
                            var i = new FileReader;
                            i.onload = function () {
                                t._dispatchArrayBuffer(i.result)
                            }, i.readAsArrayBuffer(e.data)
                        } else {
                            this._status = s.LoaderStatus.kError;
                            var n = {code: -1, msg: "Unsupported WebSocket message type: " + e.data.constructor.name};
                            if (!this._onError) throw new o.RuntimeException(n.msg);
                            this._onError(s.LoaderErrors.EXCEPTION, n)
                        }
                    }
                }, {
                    key: "_dispatchArrayBuffer", value: function (e) {
                        var t = e, i = this._receivedLength;
                        this._receivedLength += t.byteLength, this._onDataArrival && this._onDataArrival(t, i, this._receivedLength)
                    }
                }, {
                    key: "_onWebSocketError", value: function (e) {
                        this._status = s.LoaderStatus.kError;
                        var t = {code: e.code, msg: e.message};
                        if (!this._onError) throw new o.RuntimeException(t.msg);
                        this._onError(s.LoaderErrors.EXCEPTION, t)
                    }
                }]), t
            }();
            i.default = u
        }, {"../utils/exception.js": 40, "../utils/logger.js": 41, "./loader.js": 24}],
        29: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n, r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
                    return typeof e
                } : function (e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }, a = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), s = e("../utils/logger.js"), o = (n = s, n && n.__esModule ? n : {default: n}), u = e("./loader.js"),
                l = e("../utils/exception.js");
            var d = function (e) {
                !function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, u.BaseLoader), a(t, null, [{
                    key: "isSupported", value: function () {
                        try {
                            var e = new XMLHttpRequest;
                            return e.open("GET", "https://example.com", !0), e.responseType = "moz-chunked-arraybuffer", "moz-chunked-arraybuffer" === e.responseType
                        } catch (e) {
                            return o.default.w("MozChunkedLoader", e.message), !1
                        }
                    }
                }]);

                function t(e, i) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    var n = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, "xhr-moz-chunked-loader"));
                    return n.TAG = "MozChunkedLoader", n._seekHandler = e, n._config = i, n._needStash = !0, n._xhr = null, n._requestAbort = !1, n._contentLength = null, n._receivedLength = 0, n
                }

                return a(t, [{
                    key: "destroy", value: function () {
                        this.isWorking() && this.abort(), this._xhr && (this._xhr.onreadystatechange = null, this._xhr.onprogress = null, this._xhr.onloadend = null, this._xhr.onerror = null, this._xhr = null), function e(t, i, n) {
                            null === t && (t = Function.prototype);
                            var r = Object.getOwnPropertyDescriptor(t, i);
                            if (void 0 === r) {
                                var a = Object.getPrototypeOf(t);
                                return null === a ? void 0 : e(a, i, n)
                            }
                            if ("value" in r) return r.value;
                            var s = r.get;
                            if (void 0 !== s) return s.call(n)
                        }(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "destroy", this).call(this)
                    }
                }, {
                    key: "open", value: function (e, t) {
                        this._dataSource = e, this._range = t;
                        var i = e.url;
                        this._config.reuseRedirectedURL && void 0 != e.redirectedURL && (i = e.redirectedURL);
                        var n = this._seekHandler.getConfig(i, t);
                        this._requestURL = n.url;
                        var a = this._xhr = new XMLHttpRequest;
                        if (a.open("GET", n.url, !0), a.responseType = "moz-chunked-arraybuffer", a.onreadystatechange = this._onReadyStateChange.bind(this), a.onprogress = this._onProgress.bind(this), a.onloadend = this._onLoadEnd.bind(this), a.onerror = this._onXhrError.bind(this), e.withCredentials && (a.withCredentials = !0), "object" === r(n.headers)) {
                            var s = n.headers;
                            for (var o in s) s.hasOwnProperty(o) && a.setRequestHeader(o, s[o])
                        }
                        if ("object" === r(this._config.headers)) {
                            var l = this._config.headers;
                            for (var d in l) l.hasOwnProperty(d) && a.setRequestHeader(d, l[d])
                        }
                        this._status = u.LoaderStatus.kConnecting, a.send()
                    }
                }, {
                    key: "abort", value: function () {
                        this._requestAbort = !0, this._xhr && this._xhr.abort(), this._status = u.LoaderStatus.kComplete
                    }
                }, {
                    key: "_onReadyStateChange", value: function (e) {
                        var t = e.target;
                        if (2 === t.readyState) {
                            if (void 0 != t.responseURL && t.responseURL !== this._requestURL && this._onURLRedirect) {
                                var i = this._seekHandler.removeURLParameters(t.responseURL);
                                this._onURLRedirect(i)
                            }
                            if (0 !== t.status && (t.status < 200 || t.status > 299)) {
                                if (this._status = u.LoaderStatus.kError, !this._onError) throw new l.RuntimeException("MozChunkedLoader: Http code invalid, " + t.status + " " + t.statusText);
                                this._onError(u.LoaderErrors.HTTP_STATUS_CODE_INVALID, {
                                    code: t.status,
                                    msg: t.statusText
                                })
                            } else this._status = u.LoaderStatus.kBuffering
                        }
                    }
                }, {
                    key: "_onProgress", value: function (e) {
                        if (this._status !== u.LoaderStatus.kError) {
                            null === this._contentLength && null !== e.total && 0 !== e.total && (this._contentLength = e.total, this._onContentLengthKnown && this._onContentLengthKnown(this._contentLength));
                            var t = e.target.response, i = this._range.from + this._receivedLength;
                            this._receivedLength += t.byteLength, this._onDataArrival && this._onDataArrival(t, i, this._receivedLength)
                        }
                    }
                }, {
                    key: "_onLoadEnd", value: function (e) {
                        !0 !== this._requestAbort ? this._status !== u.LoaderStatus.kError && (this._status = u.LoaderStatus.kComplete, this._onComplete && this._onComplete(this._range.from, this._range.from + this._receivedLength - 1)) : this._requestAbort = !1
                    }
                }, {
                    key: "_onXhrError", value: function (e) {
                        this._status = u.LoaderStatus.kError;
                        var t = 0, i = null;
                        if (this._contentLength && e.loaded < this._contentLength ? (t = u.LoaderErrors.EARLY_EOF, i = {
                            code: -1,
                            msg: "Moz-Chunked stream meet Early-Eof"
                        }) : (t = u.LoaderErrors.EXCEPTION, i = {
                            code: -1,
                            msg: e.constructor.name + " " + e.type
                        }), !this._onError) throw new l.RuntimeException(i.msg);
                        this._onError(t, i)
                    }
                }]), t
            }();
            i.default = d
        }, {"../utils/exception.js": 40, "../utils/logger.js": 41, "./loader.js": 24}],
        30: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n, r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
                    return typeof e
                } : function (e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }, a = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), s = e("../utils/logger.js"), o = (n = s, n && n.__esModule ? n : {default: n}), u = e("./loader.js"),
                l = e("../utils/exception.js");
            var d = function (e) {
                !function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, u.BaseLoader), a(t, null, [{
                    key: "isSupported", value: function () {
                        try {
                            if (void 0 === self.MSStream || void 0 === self.MSStreamReader) return !1;
                            var e = new XMLHttpRequest;
                            return e.open("GET", "https://example.com", !0), e.responseType = "ms-stream", "ms-stream" === e.responseType
                        } catch (e) {
                            return o.default.w("MSStreamLoader", e.message), !1
                        }
                    }
                }]);

                function t(e, i) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    var n = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, "xhr-msstream-loader"));
                    return n.TAG = "MSStreamLoader", n._seekHandler = e, n._config = i, n._needStash = !0, n._xhr = null, n._reader = null, n._totalRange = null, n._currentRange = null, n._currentRequestURL = null, n._currentRedirectedURL = null, n._contentLength = null, n._receivedLength = 0, n._bufferLimit = 16777216, n._lastTimeBufferSize = 0, n._isReconnecting = !1, n
                }

                return a(t, [{
                    key: "destroy", value: function () {
                        this.isWorking() && this.abort(), this._reader && (this._reader.onprogress = null, this._reader.onload = null, this._reader.onerror = null, this._reader = null), this._xhr && (this._xhr.onreadystatechange = null, this._xhr = null), function e(t, i, n) {
                            null === t && (t = Function.prototype);
                            var r = Object.getOwnPropertyDescriptor(t, i);
                            if (void 0 === r) {
                                var a = Object.getPrototypeOf(t);
                                return null === a ? void 0 : e(a, i, n)
                            }
                            if ("value" in r) return r.value;
                            var s = r.get;
                            if (void 0 !== s) return s.call(n)
                        }(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "destroy", this).call(this)
                    }
                }, {
                    key: "open", value: function (e, t) {
                        this._internalOpen(e, t, !1)
                    }
                }, {
                    key: "_internalOpen", value: function (e, t, i) {
                        this._dataSource = e, i ? this._currentRange = t : this._totalRange = t;
                        var n = e.url;
                        this._config.reuseRedirectedURL && (void 0 != this._currentRedirectedURL ? n = this._currentRedirectedURL : void 0 != e.redirectedURL && (n = e.redirectedURL));
                        var a = this._seekHandler.getConfig(n, t);
                        this._currentRequestURL = a.url;
                        var s = this._reader = new self.MSStreamReader;
                        s.onprogress = this._msrOnProgress.bind(this), s.onload = this._msrOnLoad.bind(this), s.onerror = this._msrOnError.bind(this);
                        var o = this._xhr = new XMLHttpRequest;
                        if (o.open("GET", a.url, !0), o.responseType = "ms-stream", o.onreadystatechange = this._xhrOnReadyStateChange.bind(this), o.onerror = this._xhrOnError.bind(this), e.withCredentials && (o.withCredentials = !0), "object" === r(a.headers)) {
                            var l = a.headers;
                            for (var d in l) l.hasOwnProperty(d) && o.setRequestHeader(d, l[d])
                        }
                        if ("object" === r(this._config.headers)) {
                            var c = this._config.headers;
                            for (var h in c) c.hasOwnProperty(h) && o.setRequestHeader(h, c[h])
                        }
                        this._isReconnecting ? this._isReconnecting = !1 : this._status = u.LoaderStatus.kConnecting, o.send()
                    }
                }, {
                    key: "abort", value: function () {
                        this._internalAbort(), this._status = u.LoaderStatus.kComplete
                    }
                }, {
                    key: "_internalAbort", value: function () {
                        this._reader && (1 === this._reader.readyState && this._reader.abort(), this._reader.onprogress = null, this._reader.onload = null, this._reader.onerror = null, this._reader = null), this._xhr && (this._xhr.abort(), this._xhr.onreadystatechange = null, this._xhr = null)
                    }
                }, {
                    key: "_xhrOnReadyStateChange", value: function (e) {
                        var t = e.target;
                        if (2 === t.readyState) if (t.status >= 200 && t.status <= 299) {
                            if (this._status = u.LoaderStatus.kBuffering, void 0 != t.responseURL) {
                                var i = this._seekHandler.removeURLParameters(t.responseURL);
                                t.responseURL !== this._currentRequestURL && i !== this._currentRedirectedURL && (this._currentRedirectedURL = i, this._onURLRedirect && this._onURLRedirect(i))
                            }
                            var n = t.getResponseHeader("Content-Length");
                            if (null != n && null == this._contentLength) {
                                var r = parseInt(n);
                                r > 0 && (this._contentLength = r, this._onContentLengthKnown && this._onContentLengthKnown(this._contentLength))
                            }
                        } else {
                            if (this._status = u.LoaderStatus.kError, !this._onError) throw new l.RuntimeException("MSStreamLoader: Http code invalid, " + t.status + " " + t.statusText);
                            this._onError(u.LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: t.status, msg: t.statusText})
                        } else if (3 === t.readyState && t.status >= 200 && t.status <= 299) {
                            this._status = u.LoaderStatus.kBuffering;
                            var a = t.response;
                            this._reader.readAsArrayBuffer(a)
                        }
                    }
                }, {
                    key: "_xhrOnError", value: function (e) {
                        this._status = u.LoaderStatus.kError;
                        var t = u.LoaderErrors.EXCEPTION, i = {code: -1, msg: e.constructor.name + " " + e.type};
                        if (!this._onError) throw new l.RuntimeException(i.msg);
                        this._onError(t, i)
                    }
                }, {
                    key: "_msrOnProgress", value: function (e) {
                        var t = e.target.result;
                        if (null != t) {
                            var i = t.slice(this._lastTimeBufferSize);
                            this._lastTimeBufferSize = t.byteLength;
                            var n = this._totalRange.from + this._receivedLength;
                            this._receivedLength += i.byteLength, this._onDataArrival && this._onDataArrival(i, n, this._receivedLength), t.byteLength >= this._bufferLimit && (o.default.v(this.TAG, "MSStream buffer exceeded max size near " + (n + i.byteLength) + ", reconnecting..."), this._doReconnectIfNeeded())
                        } else this._doReconnectIfNeeded()
                    }
                }, {
                    key: "_doReconnectIfNeeded", value: function () {
                        if (null == this._contentLength || this._receivedLength < this._contentLength) {
                            this._isReconnecting = !0, this._lastTimeBufferSize = 0, this._internalAbort();
                            var e = {from: this._totalRange.from + this._receivedLength, to: -1};
                            this._internalOpen(this._dataSource, e, !0)
                        }
                    }
                }, {
                    key: "_msrOnLoad", value: function (e) {
                        this._status = u.LoaderStatus.kComplete, this._onComplete && this._onComplete(this._totalRange.from, this._totalRange.from + this._receivedLength - 1)
                    }
                }, {
                    key: "_msrOnError", value: function (e) {
                        this._status = u.LoaderStatus.kError;
                        var t = 0, i = null;
                        if (this._contentLength && this._receivedLength < this._contentLength ? (t = u.LoaderErrors.EARLY_EOF, i = {
                            code: -1,
                            msg: "MSStream meet Early-Eof"
                        }) : (t = u.LoaderErrors.EARLY_EOF, i = {
                            code: -1,
                            msg: e.constructor.name + " " + e.type
                        }), !this._onError) throw new l.RuntimeException(i.msg);
                        this._onError(t, i)
                    }
                }]), t
            }();
            i.default = d
        }, {"../utils/exception.js": 40, "../utils/logger.js": 41, "./loader.js": 24}],
        31: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
                    return typeof e
                } : function (e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }, r = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), a = l(e("../utils/logger.js")), s = l(e("./speed-sampler.js")), o = e("./loader.js"),
                u = e("../utils/exception.js");

            function l(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var d = function (e) {
                !function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, o.BaseLoader), r(t, null, [{
                    key: "isSupported", value: function () {
                        try {
                            var e = new XMLHttpRequest;
                            return e.open("GET", "https://example.com", !0), e.responseType = "arraybuffer", "arraybuffer" === e.responseType
                        } catch (e) {
                            return a.default.w("RangeLoader", e.message), !1
                        }
                    }
                }]);

                function t(e, i) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    var n = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, "xhr-range-loader"));
                    return n.TAG = "RangeLoader", n._seekHandler = e, n._config = i, n._needStash = !1, n._chunkSizeKBList = [128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 5120, 6144, 7168, 8192], n._currentChunkSizeKB = 384, n._currentSpeedNormalized = 0, n._zeroSpeedChunkCount = 0, n._xhr = null, n._speedSampler = new s.default, n._requestAbort = !1, n._waitForTotalLength = !1, n._totalLengthReceived = !1, n._currentRequestURL = null, n._currentRedirectedURL = null, n._currentRequestRange = null, n._totalLength = null, n._contentLength = null, n._receivedLength = 0, n._lastTimeLoaded = 0, n
                }

                return r(t, [{
                    key: "destroy", value: function () {
                        this.isWorking() && this.abort(), this._xhr && (this._xhr.onreadystatechange = null, this._xhr.onprogress = null, this._xhr.onload = null, this._xhr.onerror = null, this._xhr = null), function e(t, i, n) {
                            null === t && (t = Function.prototype);
                            var r = Object.getOwnPropertyDescriptor(t, i);
                            if (void 0 === r) {
                                var a = Object.getPrototypeOf(t);
                                return null === a ? void 0 : e(a, i, n)
                            }
                            if ("value" in r) return r.value;
                            var s = r.get;
                            if (void 0 !== s) return s.call(n)
                        }(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "destroy", this).call(this)
                    }
                }, {
                    key: "open", value: function (e, t) {
                        this._dataSource = e, this._range = t, this._status = o.LoaderStatus.kConnecting;
                        var i = !1;
                        void 0 != this._dataSource.filesize && 0 !== this._dataSource.filesize && (i = !0, this._totalLength = this._dataSource.filesize), this._totalLengthReceived || i ? this._openSubRange() : (this._waitForTotalLength = !0, this._internalOpen(this._dataSource, {
                            from: 0,
                            to: -1
                        }))
                    }
                }, {
                    key: "_openSubRange", value: function () {
                        var e = 1024 * this._currentChunkSizeKB, t = this._range.from + this._receivedLength, i = t + e;
                        null != this._contentLength && i - this._range.from >= this._contentLength && (i = this._range.from + this._contentLength - 1), this._currentRequestRange = {
                            from: t,
                            to: i
                        }, this._internalOpen(this._dataSource, this._currentRequestRange)
                    }
                }, {
                    key: "_internalOpen", value: function (e, t) {
                        this._lastTimeLoaded = 0;
                        var i = e.url;
                        this._config.reuseRedirectedURL && (void 0 != this._currentRedirectedURL ? i = this._currentRedirectedURL : void 0 != e.redirectedURL && (i = e.redirectedURL));
                        var r = this._seekHandler.getConfig(i, t);
                        this._currentRequestURL = r.url;
                        var a = this._xhr = new XMLHttpRequest;
                        if (a.open("GET", r.url, !0), a.responseType = "arraybuffer", a.onreadystatechange = this._onReadyStateChange.bind(this), a.onprogress = this._onProgress.bind(this), a.onload = this._onLoad.bind(this), a.onerror = this._onXhrError.bind(this), e.withCredentials && (a.withCredentials = !0), "object" === n(r.headers)) {
                            var s = r.headers;
                            for (var o in s) s.hasOwnProperty(o) && a.setRequestHeader(o, s[o])
                        }
                        if ("object" === n(this._config.headers)) {
                            var u = this._config.headers;
                            for (var l in u) u.hasOwnProperty(l) && a.setRequestHeader(l, u[l])
                        }
                        a.send()
                    }
                }, {
                    key: "abort", value: function () {
                        this._requestAbort = !0, this._internalAbort(), this._status = o.LoaderStatus.kComplete
                    }
                }, {
                    key: "_internalAbort", value: function () {
                        this._xhr && (this._xhr.onreadystatechange = null, this._xhr.onprogress = null, this._xhr.onload = null, this._xhr.onerror = null, this._xhr.abort(), this._xhr = null)
                    }
                }, {
                    key: "_onReadyStateChange", value: function (e) {
                        var t = e.target;
                        if (2 === t.readyState) {
                            if (void 0 != t.responseURL) {
                                var i = this._seekHandler.removeURLParameters(t.responseURL);
                                t.responseURL !== this._currentRequestURL && i !== this._currentRedirectedURL && (this._currentRedirectedURL = i, this._onURLRedirect && this._onURLRedirect(i))
                            }
                            if (t.status >= 200 && t.status <= 299) {
                                if (this._waitForTotalLength) return;
                                this._status = o.LoaderStatus.kBuffering
                            } else {
                                if (this._status = o.LoaderStatus.kError, !this._onError) throw new u.RuntimeException("RangeLoader: Http code invalid, " + t.status + " " + t.statusText);
                                this._onError(o.LoaderErrors.HTTP_STATUS_CODE_INVALID, {
                                    code: t.status,
                                    msg: t.statusText
                                })
                            }
                        }
                    }
                }, {
                    key: "_onProgress", value: function (e) {
                        if (this._status !== o.LoaderStatus.kError) {
                            if (null === this._contentLength) {
                                var t = !1;
                                if (this._waitForTotalLength) {
                                    this._waitForTotalLength = !1, this._totalLengthReceived = !0, t = !0;
                                    var i = e.total;
                                    this._internalAbort(), null != i & 0 !== i && (this._totalLength = i)
                                }
                                if (-1 === this._range.to ? this._contentLength = this._totalLength - this._range.from : this._contentLength = this._range.to - this._range.from + 1, t) return void this._openSubRange();
                                this._onContentLengthKnown && this._onContentLengthKnown(this._contentLength)
                            }
                            var n = e.loaded - this._lastTimeLoaded;
                            this._lastTimeLoaded = e.loaded, this._speedSampler.addBytes(n)
                        }
                    }
                }, {
                    key: "_normalizeSpeed", value: function (e) {
                        var t = this._chunkSizeKBList, i = t.length - 1, n = 0, r = 0, a = i;
                        if (e < t[0]) return t[0];
                        for (; r <= a;) {
                            if ((n = r + Math.floor((a - r) / 2)) === i || e >= t[n] && e < t[n + 1]) return t[n];
                            t[n] < e ? r = n + 1 : a = n - 1
                        }
                    }
                }, {
                    key: "_onLoad", value: function (e) {
                        if (this._status !== o.LoaderStatus.kError) if (this._waitForTotalLength) this._waitForTotalLength = !1; else {
                            this._lastTimeLoaded = 0;
                            var t = this._speedSampler.lastSecondKBps;
                            if (0 === t && (this._zeroSpeedChunkCount++, this._zeroSpeedChunkCount >= 3 && (t = this._speedSampler.currentKBps)), 0 !== t) {
                                var i = this._normalizeSpeed(t);
                                this._currentSpeedNormalized !== i && (this._currentSpeedNormalized = i, this._currentChunkSizeKB = i)
                            }
                            var n = e.target.response, r = this._range.from + this._receivedLength;
                            this._receivedLength += n.byteLength;
                            var a = !1;
                            null != this._contentLength && this._receivedLength < this._contentLength ? this._openSubRange() : a = !0, this._onDataArrival && this._onDataArrival(n, r, this._receivedLength), a && (this._status = o.LoaderStatus.kComplete, this._onComplete && this._onComplete(this._range.from, this._range.from + this._receivedLength - 1))
                        }
                    }
                }, {
                    key: "_onXhrError", value: function (e) {
                        this._status = o.LoaderStatus.kError;
                        var t = 0, i = null;
                        if (this._contentLength && this._receivedLength > 0 && this._receivedLength < this._contentLength ? (t = o.LoaderErrors.EARLY_EOF, i = {
                            code: -1,
                            msg: "RangeLoader meet Early-Eof"
                        }) : (t = o.LoaderErrors.EXCEPTION, i = {
                            code: -1,
                            msg: e.constructor.name + " " + e.type
                        }), !this._onError) throw new u.RuntimeException(i.msg);
                        this._onError(t, i)
                    }
                }, {
                    key: "currentSpeed", get: function () {
                        return this._speedSampler.lastSecondKBps
                    }
                }]), t
            }();
            i.default = d
        }, {"../utils/exception.js": 40, "../utils/logger.js": 41, "./loader.js": 24, "./speed-sampler.js": 27}],
        32: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
                    return typeof e
                } : function (e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }, r = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), a = g(e("events")), s = g(e("../utils/logger.js")), o = g(e("../utils/browser.js")),
                u = g(e("./player-events.js")), l = g(e("../core/transmuxer.js")),
                d = g(e("../core/transmuxing-events.js")), c = g(e("../core/mse-controller.js")),
                h = g(e("../core/mse-events.js")), f = e("./player-errors.js"), p = e("../config.js"),
                m = e("../utils/exception.js");

            function g(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var y = function () {
                function e(t, i) {
                    if (function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.TAG = "FlvPlayer", this._type = "FlvPlayer", this._emitter = new a.default, this._config = (0, p.createDefaultConfig)(), "object" === (void 0 === i ? "undefined" : n(i)) && Object.assign(this._config, i), "flv" !== t.type.toLowerCase()) throw new m.InvalidArgumentException("FlvPlayer requires an flv MediaDataSource input!");
                    !0 === t.isLive && (this._config.isLive = !0), this.e = {
                        onvLoadedMetadata: this._onvLoadedMetadata.bind(this),
                        onvSeeking: this._onvSeeking.bind(this),
                        onvCanPlay: this._onvCanPlay.bind(this),
                        onvStalled: this._onvStalled.bind(this),
                        onvProgress: this._onvProgress.bind(this)
                    }, self.performance && self.performance.now ? this._now = self.performance.now.bind(self.performance) : this._now = Date.now, this._pendingSeekTime = null, this._requestSetTime = !1, this._seekpointRecord = null, this._progressChecker = null, this._mediaDataSource = t, this._mediaElement = null, this._msectl = null, this._transmuxer = null, this._mseSourceOpened = !1, this._hasPendingLoad = !1, this._receivedCanPlay = !1, this._mediaInfo = null, this._statisticsInfo = null;
                    var r = o.default.chrome && (o.default.version.major < 50 || 50 === o.default.version.major && o.default.version.build < 2661);
                    this._alwaysSeekKeyframe = !!(r || o.default.msedge || o.default.msie), this._alwaysSeekKeyframe && (this._config.accurateSeek = !1)
                }

                return r(e, [{
                    key: "destroy", value: function () {
                        null != this._progressChecker && (window.clearInterval(this._progressChecker), this._progressChecker = null), this._transmuxer && this.unload(), this._mediaElement && this.detachMediaElement(), this.e = null, this._mediaDataSource = null, this._emitter.removeAllListeners(), this._emitter = null
                    }
                }, {
                    key: "on", value: function (e, t) {
                        var i = this;
                        e === u.default.MEDIA_INFO ? null != this._mediaInfo && Promise.resolve().then(function () {
                            i._emitter.emit(u.default.MEDIA_INFO, i.mediaInfo)
                        }) : e === u.default.STATISTICS_INFO && null != this._statisticsInfo && Promise.resolve().then(function () {
                            i._emitter.emit(u.default.STATISTICS_INFO, i.statisticsInfo)
                        }), this._emitter.addListener(e, t)
                    }
                }, {
                    key: "off", value: function (e, t) {
                        this._emitter.removeListener(e, t)
                    }
                }, {
                    key: "attachMediaElement", value: function (e) {
                        var t = this;
                        if (this._mediaElement = e, e.addEventListener("loadedmetadata", this.e.onvLoadedMetadata), e.addEventListener("seeking", this.e.onvSeeking), e.addEventListener("canplay", this.e.onvCanPlay), e.addEventListener("stalled", this.e.onvStalled), e.addEventListener("progress", this.e.onvProgress), this._msectl = new c.default(this._config), this._msectl.on(h.default.UPDATE_END, this._onmseUpdateEnd.bind(this)), this._msectl.on(h.default.BUFFER_FULL, this._onmseBufferFull.bind(this)), this._msectl.on(h.default.SOURCE_OPEN, function () {
                            t._mseSourceOpened = !0, t._hasPendingLoad && (t._hasPendingLoad = !1, t.load())
                        }), this._msectl.on(h.default.ERROR, function (e) {
                            t._emitter.emit(u.default.ERROR, f.ErrorTypes.MEDIA_ERROR, f.ErrorDetails.MEDIA_MSE_ERROR, e)
                        }), this._msectl.attachMediaElement(e), null != this._pendingSeekTime) try {
                            e.currentTime = this._pendingSeekTime, this._pendingSeekTime = null
                        } catch (e) {
                        }
                    }
                }, {
                    key: "detachMediaElement", value: function () {
                        this._mediaElement && (this._msectl.detachMediaElement(), this._mediaElement.removeEventListener("loadedmetadata", this.e.onvLoadedMetadata), this._mediaElement.removeEventListener("seeking", this.e.onvSeeking), this._mediaElement.removeEventListener("canplay", this.e.onvCanPlay), this._mediaElement.removeEventListener("stalled", this.e.onvStalled), this._mediaElement.removeEventListener("progress", this.e.onvProgress), this._mediaElement = null), this._msectl && (this._msectl.destroy(), this._msectl = null)
                    }
                }, {
                    key: "load", value: function () {
                        var e = this;
                        if (!this._mediaElement) throw new m.IllegalStateException("HTMLMediaElement must be attached before load()!");
                        if (this._transmuxer) throw new m.IllegalStateException("FlvPlayer.load() has been called, please call unload() first!");
                        this._hasPendingLoad || (this._config.deferLoadAfterSourceOpen && !1 === this._mseSourceOpened ? this._hasPendingLoad = !0 : (this._mediaElement.readyState > 0 && (this._requestSetTime = !0, this._mediaElement.currentTime = 0), this._transmuxer = new l.default(this._mediaDataSource, this._config), this._transmuxer.on(d.default.INIT_SEGMENT, function (t, i) {
                            e._msectl.appendInitSegment(i)
                        }), this._transmuxer.on(d.default.MEDIA_SEGMENT, function (t, i) {
                            if (e._msectl.appendMediaSegment(i), e._config.lazyLoad && !e._config.isLive) {
                                var n = e._mediaElement.currentTime;
                                i.info.endDts >= 1e3 * (n + e._config.lazyLoadMaxDuration) && null == e._progressChecker && (s.default.v(e.TAG, "Maximum buffering duration exceeded, suspend transmuxing task"), e._suspendTransmuxer())
                            }
                        }), this._transmuxer.on(d.default.LOADING_COMPLETE, function () {
                            e._msectl.endOfStream(), e._emitter.emit(u.default.LOADING_COMPLETE)
                        }), this._transmuxer.on(d.default.RECOVERED_EARLY_EOF, function () {
                            e._emitter.emit(u.default.RECOVERED_EARLY_EOF)
                        }), this._transmuxer.on(d.default.IO_ERROR, function (t, i) {
                            e._emitter.emit(u.default.ERROR, f.ErrorTypes.NETWORK_ERROR, t, i)
                        }), this._transmuxer.on(d.default.DEMUX_ERROR, function (t, i) {
                            e._emitter.emit(u.default.ERROR, f.ErrorTypes.MEDIA_ERROR, t, {code: -1, msg: i})
                        }), this._transmuxer.on(d.default.MEDIA_INFO, function (t) {
                            e._mediaInfo = t, e._emitter.emit(u.default.MEDIA_INFO, Object.assign({}, t))
                        }), this._transmuxer.on(d.default.METADATA_ARRIVED, function (t) {
                            e._emitter.emit(u.default.METADATA_ARRIVED, t)
                        }), this._transmuxer.on(d.default.SCRIPTDATA_ARRIVED, function (t) {
                            e._emitter.emit(u.default.SCRIPTDATA_ARRIVED, t)
                        }), this._transmuxer.on(d.default.STATISTICS_INFO, function (t) {
                            e._statisticsInfo = e._fillStatisticsInfo(t), e._emitter.emit(u.default.STATISTICS_INFO, Object.assign({}, e._statisticsInfo))
                        }), this._transmuxer.on(d.default.RECOMMEND_SEEKPOINT, function (t) {
                            e._mediaElement && !e._config.accurateSeek && (e._requestSetTime = !0, e._mediaElement.currentTime = t / 1e3)
                        }), this._transmuxer.open()))
                    }
                }, {
                    key: "unload", value: function () {
                        this._mediaElement && this._mediaElement.pause(), this._msectl && this._msectl.seek(0), this._transmuxer && (this._transmuxer.close(), this._transmuxer.destroy(), this._transmuxer = null)
                    }
                }, {
                    key: "play", value: function () {
                        return this._mediaElement.play()
                    }
                }, {
                    key: "pause", value: function () {
                        this._mediaElement.pause()
                    }
                }, {
                    key: "_fillStatisticsInfo", value: function (e) {
                        if (e.playerType = this._type, !(this._mediaElement instanceof HTMLVideoElement)) return e;
                        var t = !0, i = 0, n = 0;
                        if (this._mediaElement.getVideoPlaybackQuality) {
                            var r = this._mediaElement.getVideoPlaybackQuality();
                            i = r.totalVideoFrames, n = r.droppedVideoFrames
                        } else void 0 != this._mediaElement.webkitDecodedFrameCount ? (i = this._mediaElement.webkitDecodedFrameCount, n = this._mediaElement.webkitDroppedFrameCount) : t = !1;
                        return t && (e.decodedFrames = i, e.droppedFrames = n), e
                    }
                }, {
                    key: "_onmseUpdateEnd", value: function () {
                        if (this._config.lazyLoad && !this._config.isLive) {
                            for (var e = this._mediaElement.buffered, t = this._mediaElement.currentTime, i = 0, n = 0; n < e.length; n++) {
                                var r = e.start(n), a = e.end(n);
                                if (r <= t && t < a) {
                                    r, i = a;
                                    break
                                }
                            }
                            i >= t + this._config.lazyLoadMaxDuration && null == this._progressChecker && (s.default.v(this.TAG, "Maximum buffering duration exceeded, suspend transmuxing task"), this._suspendTransmuxer())
                        }
                    }
                }, {
                    key: "_onmseBufferFull", value: function () {
                        s.default.v(this.TAG, "MSE SourceBuffer is full, suspend transmuxing task"), null == this._progressChecker && this._suspendTransmuxer()
                    }
                }, {
                    key: "_suspendTransmuxer", value: function () {
                        this._transmuxer && (this._transmuxer.pause(), null == this._progressChecker && (this._progressChecker = window.setInterval(this._checkProgressAndResume.bind(this), 1e3)))
                    }
                }, {
                    key: "_checkProgressAndResume", value: function () {
                        for (var e = this._mediaElement.currentTime, t = this._mediaElement.buffered, i = !1, n = 0; n < t.length; n++) {
                            var r = t.start(n), a = t.end(n);
                            if (e >= r && e < a) {
                                e >= a - this._config.lazyLoadRecoverDuration && (i = !0);
                                break
                            }
                        }
                        i && (window.clearInterval(this._progressChecker), this._progressChecker = null, i && (s.default.v(this.TAG, "Continue loading from paused position"), this._transmuxer.resume()))
                    }
                }, {
                    key: "_isTimepointBuffered", value: function (e) {
                        for (var t = this._mediaElement.buffered, i = 0; i < t.length; i++) {
                            var n = t.start(i), r = t.end(i);
                            if (e >= n && e < r) return !0
                        }
                        return !1
                    }
                }, {
                    key: "_internalSeek", value: function (e) {
                        var t = this._isTimepointBuffered(e), i = !1, n = 0;
                        if (e < 1 && this._mediaElement.buffered.length > 0) {
                            var r = this._mediaElement.buffered.start(0);
                            (r < 1 && e < r || o.default.safari) && (i = !0, n = o.default.safari ? .1 : r)
                        }
                        if (i) this._requestSetTime = !0, this._mediaElement.currentTime = n; else if (t) {
                            if (this._alwaysSeekKeyframe) {
                                var a = this._msectl.getNearestKeyframe(Math.floor(1e3 * e));
                                this._requestSetTime = !0, this._mediaElement.currentTime = null != a ? a.dts / 1e3 : e
                            } else this._requestSetTime = !0, this._mediaElement.currentTime = e;
                            null != this._progressChecker && this._checkProgressAndResume()
                        } else null != this._progressChecker && (window.clearInterval(this._progressChecker), this._progressChecker = null), this._msectl.seek(e), this._transmuxer.seek(Math.floor(1e3 * e)), this._config.accurateSeek && (this._requestSetTime = !0, this._mediaElement.currentTime = e)
                    }
                }, {
                    key: "_checkAndApplyUnbufferedSeekpoint", value: function () {
                        if (this._seekpointRecord) if (this._seekpointRecord.recordTime <= this._now() - 100) {
                            var e = this._mediaElement.currentTime;
                            this._seekpointRecord = null, this._isTimepointBuffered(e) || (null != this._progressChecker && (window.clearTimeout(this._progressChecker), this._progressChecker = null), this._msectl.seek(e), this._transmuxer.seek(Math.floor(1e3 * e)), this._config.accurateSeek && (this._requestSetTime = !0, this._mediaElement.currentTime = e))
                        } else window.setTimeout(this._checkAndApplyUnbufferedSeekpoint.bind(this), 50)
                    }
                }, {
                    key: "_checkAndResumeStuckPlayback", value: function (e) {
                        var t = this._mediaElement;
                        if (e || !this._receivedCanPlay || t.readyState < 2) {
                            var i = t.buffered;
                            i.length > 0 && t.currentTime < i.start(0) && (s.default.w(this.TAG, "Playback seems stuck at " + t.currentTime + ", seek to " + i.start(0)), this._requestSetTime = !0, this._mediaElement.currentTime = i.start(0), this._mediaElement.removeEventListener("progress", this.e.onvProgress))
                        } else this._mediaElement.removeEventListener("progress", this.e.onvProgress)
                    }
                }, {
                    key: "_onvLoadedMetadata", value: function (e) {
                        null != this._pendingSeekTime && (this._mediaElement.currentTime = this._pendingSeekTime, this._pendingSeekTime = null)
                    }
                }, {
                    key: "_onvSeeking", value: function (e) {
                        var t = this._mediaElement.currentTime, i = this._mediaElement.buffered;
                        if (this._requestSetTime) this._requestSetTime = !1; else {
                            if (t < 1 && i.length > 0) {
                                var n = i.start(0);
                                if (n < 1 && t < n || o.default.safari) return this._requestSetTime = !0, void(this._mediaElement.currentTime = o.default.safari ? .1 : n)
                            }
                            if (this._isTimepointBuffered(t)) {
                                if (this._alwaysSeekKeyframe) {
                                    var r = this._msectl.getNearestKeyframe(Math.floor(1e3 * t));
                                    null != r && (this._requestSetTime = !0, this._mediaElement.currentTime = r.dts / 1e3)
                                }
                                null != this._progressChecker && this._checkProgressAndResume()
                            } else this._seekpointRecord = {
                                seekPoint: t,
                                recordTime: this._now()
                            }, window.setTimeout(this._checkAndApplyUnbufferedSeekpoint.bind(this), 50)
                        }
                    }
                }, {
                    key: "_onvCanPlay", value: function (e) {
                        this._receivedCanPlay = !0, this._mediaElement.removeEventListener("canplay", this.e.onvCanPlay)
                    }
                }, {
                    key: "_onvStalled", value: function (e) {
                        this._checkAndResumeStuckPlayback(!0)
                    }
                }, {
                    key: "_onvProgress", value: function (e) {
                        this._checkAndResumeStuckPlayback()
                    }
                }, {
                    key: "type", get: function () {
                        return this._type
                    }
                }, {
                    key: "buffered", get: function () {
                        return this._mediaElement.buffered
                    }
                }, {
                    key: "duration", get: function () {
                        return this._mediaElement.duration
                    }
                }, {
                    key: "volume", get: function () {
                        return this._mediaElement.volume
                    }, set: function (e) {
                        this._mediaElement.volume = e
                    }
                }, {
                    key: "muted", get: function () {
                        return this._mediaElement.muted
                    }, set: function (e) {
                        this._mediaElement.muted = e
                    }
                }, {
                    key: "currentTime", get: function () {
                        return this._mediaElement ? this._mediaElement.currentTime : 0
                    }, set: function (e) {
                        this._mediaElement ? this._internalSeek(e) : this._pendingSeekTime = e
                    }
                }, {
                    key: "mediaInfo", get: function () {
                        return Object.assign({}, this._mediaInfo)
                    }
                }, {
                    key: "statisticsInfo", get: function () {
                        return null == this._statisticsInfo && (this._statisticsInfo = {}), this._statisticsInfo = this._fillStatisticsInfo(this._statisticsInfo), Object.assign({}, this._statisticsInfo)
                    }
                }]), e
            }();
            i.default = y
        }, {
            "../config.js": 5,
            "../core/mse-controller.js": 9,
            "../core/mse-events.js": 10,
            "../core/transmuxer.js": 11,
            "../core/transmuxing-events.js": 13,
            "../utils/browser.js": 39,
            "../utils/exception.js": 40,
            "../utils/logger.js": 41,
            "./player-errors.js": 34,
            "./player-events.js": 35,
            events: 2
        }],
        33: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
                    return typeof e
                } : function (e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }, r = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), a = l(e("events")), s = l(e("./player-events.js")), o = e("../config.js"),
                u = e("../utils/exception.js");

            function l(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var d = function () {
                function e(t, i) {
                    if (function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.TAG = "NativePlayer", this._type = "NativePlayer", this._emitter = new a.default, this._config = (0, o.createDefaultConfig)(), "object" === (void 0 === i ? "undefined" : n(i)) && Object.assign(this._config, i), "flv" === t.type.toLowerCase()) throw new u.InvalidArgumentException("NativePlayer does't support flv MediaDataSource input!");
                    if (t.hasOwnProperty("segments")) throw new u.InvalidArgumentException("NativePlayer(" + t.type + ") doesn't support multipart playback!");
                    this.e = {onvLoadedMetadata: this._onvLoadedMetadata.bind(this)}, this._pendingSeekTime = null, this._statisticsReporter = null, this._mediaDataSource = t, this._mediaElement = null
                }

                return r(e, [{
                    key: "destroy", value: function () {
                        this._mediaElement && (this.unload(), this.detachMediaElement()), this.e = null, this._mediaDataSource = null, this._emitter.removeAllListeners(), this._emitter = null
                    }
                }, {
                    key: "on", value: function (e, t) {
                        var i = this;
                        e === s.default.MEDIA_INFO ? null != this._mediaElement && 0 !== this._mediaElement.readyState && Promise.resolve().then(function () {
                            i._emitter.emit(s.default.MEDIA_INFO, i.mediaInfo)
                        }) : e === s.default.STATISTICS_INFO && null != this._mediaElement && 0 !== this._mediaElement.readyState && Promise.resolve().then(function () {
                            i._emitter.emit(s.default.STATISTICS_INFO, i.statisticsInfo)
                        }), this._emitter.addListener(e, t)
                    }
                }, {
                    key: "off", value: function (e, t) {
                        this._emitter.removeListener(e, t)
                    }
                }, {
                    key: "attachMediaElement", value: function (e) {
                        if (this._mediaElement = e, e.addEventListener("loadedmetadata", this.e.onvLoadedMetadata), null != this._pendingSeekTime) try {
                            e.currentTime = this._pendingSeekTime, this._pendingSeekTime = null
                        } catch (e) {
                        }
                    }
                }, {
                    key: "detachMediaElement", value: function () {
                        this._mediaElement && (this._mediaElement.src = "", this._mediaElement.removeAttribute("src"), this._mediaElement.removeEventListener("loadedmetadata", this.e.onvLoadedMetadata), this._mediaElement = null), null != this._statisticsReporter && (window.clearInterval(this._statisticsReporter), this._statisticsReporter = null)
                    }
                }, {
                    key: "load", value: function () {
                        if (!this._mediaElement) throw new u.IllegalStateException("HTMLMediaElement must be attached before load()!");
                        this._mediaElement.src = this._mediaDataSource.url, this._mediaElement.readyState > 0 && (this._mediaElement.currentTime = 0), this._mediaElement.preload = "auto", this._mediaElement.load(), this._statisticsReporter = window.setInterval(this._reportStatisticsInfo.bind(this), this._config.statisticsInfoReportInterval)
                    }
                }, {
                    key: "unload", value: function () {
                        this._mediaElement && (this._mediaElement.src = "", this._mediaElement.removeAttribute("src")), null != this._statisticsReporter && (window.clearInterval(this._statisticsReporter), this._statisticsReporter = null)
                    }
                }, {
                    key: "play", value: function () {
                        return this._mediaElement.play()
                    }
                }, {
                    key: "pause", value: function () {
                        this._mediaElement.pause()
                    }
                }, {
                    key: "_onvLoadedMetadata", value: function (e) {
                        null != this._pendingSeekTime && (this._mediaElement.currentTime = this._pendingSeekTime, this._pendingSeekTime = null), this._emitter.emit(s.default.MEDIA_INFO, this.mediaInfo)
                    }
                }, {
                    key: "_reportStatisticsInfo", value: function () {
                        this._emitter.emit(s.default.STATISTICS_INFO, this.statisticsInfo)
                    }
                }, {
                    key: "type", get: function () {
                        return this._type
                    }
                }, {
                    key: "buffered", get: function () {
                        return this._mediaElement.buffered
                    }
                }, {
                    key: "duration", get: function () {
                        return this._mediaElement.duration
                    }
                }, {
                    key: "volume", get: function () {
                        return this._mediaElement.volume
                    }, set: function (e) {
                        this._mediaElement.volume = e
                    }
                }, {
                    key: "muted", get: function () {
                        return this._mediaElement.muted
                    }, set: function (e) {
                        this._mediaElement.muted = e
                    }
                }, {
                    key: "currentTime", get: function () {
                        return this._mediaElement ? this._mediaElement.currentTime : 0
                    }, set: function (e) {
                        this._mediaElement ? this._mediaElement.currentTime = e : this._pendingSeekTime = e
                    }
                }, {
                    key: "mediaInfo", get: function () {
                        var e = {mimeType: (this._mediaElement instanceof HTMLAudioElement ? "audio/" : "video/") + this._mediaDataSource.type};
                        return this._mediaElement && (e.duration = Math.floor(1e3 * this._mediaElement.duration), this._mediaElement instanceof HTMLVideoElement && (e.width = this._mediaElement.videoWidth, e.height = this._mediaElement.videoHeight)), e
                    }
                }, {
                    key: "statisticsInfo", get: function () {
                        var e = {playerType: this._type, url: this._mediaDataSource.url};
                        if (!(this._mediaElement instanceof HTMLVideoElement)) return e;
                        var t = !0, i = 0, n = 0;
                        if (this._mediaElement.getVideoPlaybackQuality) {
                            var r = this._mediaElement.getVideoPlaybackQuality();
                            i = r.totalVideoFrames, n = r.droppedVideoFrames
                        } else void 0 != this._mediaElement.webkitDecodedFrameCount ? (i = this._mediaElement.webkitDecodedFrameCount, n = this._mediaElement.webkitDroppedFrameCount) : t = !1;
                        return t && (e.decodedFrames = i, e.droppedFrames = n), e
                    }
                }]), e
            }();
            i.default = d
        }, {"../config.js": 5, "../utils/exception.js": 40, "./player-events.js": 35, events: 2}],
        34: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0}), i.ErrorDetails = i.ErrorTypes = void 0;
            var n, r = e("../io/loader.js"), a = e("../demux/demux-errors.js"),
                s = (n = a, n && n.__esModule ? n : {default: n});
            i.ErrorTypes = {
                NETWORK_ERROR: "NetworkError",
                MEDIA_ERROR: "MediaError",
                OTHER_ERROR: "OtherError"
            }, i.ErrorDetails = {
                NETWORK_EXCEPTION: r.LoaderErrors.EXCEPTION,
                NETWORK_STATUS_CODE_INVALID: r.LoaderErrors.HTTP_STATUS_CODE_INVALID,
                NETWORK_TIMEOUT: r.LoaderErrors.CONNECTING_TIMEOUT,
                NETWORK_UNRECOVERABLE_EARLY_EOF: r.LoaderErrors.UNRECOVERABLE_EARLY_EOF,
                MEDIA_MSE_ERROR: "MediaMSEError",
                MEDIA_FORMAT_ERROR: s.default.FORMAT_ERROR,
                MEDIA_FORMAT_UNSUPPORTED: s.default.FORMAT_UNSUPPORTED,
                MEDIA_CODEC_UNSUPPORTED: s.default.CODEC_UNSUPPORTED
            }
        }, {"../demux/demux-errors.js": 16, "../io/loader.js": 24}],
        35: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            i.default = {
                ERROR: "error",
                LOADING_COMPLETE: "loading_complete",
                RECOVERED_EARLY_EOF: "recovered_early_eof",
                MEDIA_INFO: "media_info",
                METADATA_ARRIVED: "metadata_arrived",
                SCRIPTDATA_ARRIVED: "scriptdata_arrived",
                STATISTICS_INFO: "statistics_info"
            }
        }, {}],
        36: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }();
            var r = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e)
                }

                return n(e, null, [{
                    key: "getSilentFrame", value: function (e, t) {
                        if ("mp4a.40.2" === e) {
                            if (1 === t) return new Uint8Array([0, 200, 0, 128, 35, 128]);
                            if (2 === t) return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                            if (3 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]);
                            if (4 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]);
                            if (5 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]);
                            if (6 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224])
                        } else {
                            if (1 === t) return new Uint8Array([1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                            if (2 === t) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                            if (3 === t) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94])
                        }
                        return null
                    }
                }]), e
            }();
            i.default = r
        }, {}],
        37: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }();
            var r = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e)
                }

                return n(e, null, [{
                    key: "init", value: function () {
                        e.types = {
                            avc1: [],
                            avcC: [],
                            btrt: [],
                            dinf: [],
                            dref: [],
                            esds: [],
                            ftyp: [],
                            hdlr: [],
                            mdat: [],
                            mdhd: [],
                            mdia: [],
                            mfhd: [],
                            minf: [],
                            moof: [],
                            moov: [],
                            mp4a: [],
                            mvex: [],
                            mvhd: [],
                            sdtp: [],
                            stbl: [],
                            stco: [],
                            stsc: [],
                            stsd: [],
                            stsz: [],
                            stts: [],
                            tfdt: [],
                            tfhd: [],
                            traf: [],
                            trak: [],
                            trun: [],
                            trex: [],
                            tkhd: [],
                            vmhd: [],
                            smhd: [],
                            ".mp3": []
                        };
                        for (var t in e.types) e.types.hasOwnProperty(t) && (e.types[t] = [t.charCodeAt(0), t.charCodeAt(1), t.charCodeAt(2), t.charCodeAt(3)]);
                        var i = e.constants = {};
                        i.FTYP = new Uint8Array([105, 115, 111, 109, 0, 0, 0, 1, 105, 115, 111, 109, 97, 118, 99, 49]), i.STSD_PREFIX = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]), i.STTS = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), i.STSC = i.STCO = i.STTS, i.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), i.HDLR_VIDEO = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]), i.HDLR_AUDIO = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]), i.DREF = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]), i.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), i.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])
                    }
                }, {
                    key: "box", value: function (e) {
                        for (var t = 8, i = null, n = Array.prototype.slice.call(arguments, 1), r = n.length, a = 0; a < r; a++) t += n[a].byteLength;
                        (i = new Uint8Array(t))[0] = t >>> 24 & 255, i[1] = t >>> 16 & 255, i[2] = t >>> 8 & 255, i[3] = 255 & t, i.set(e, 4);
                        for (var s = 8, o = 0; o < r; o++) i.set(n[o], s), s += n[o].byteLength;
                        return i
                    }
                }, {
                    key: "generateInitSegment", value: function (t) {
                        var i = e.box(e.types.ftyp, e.constants.FTYP), n = e.moov(t),
                            r = new Uint8Array(i.byteLength + n.byteLength);
                        return r.set(i, 0), r.set(n, i.byteLength), r
                    }
                }, {
                    key: "moov", value: function (t) {
                        var i = e.mvhd(t.timescale, t.duration), n = e.trak(t), r = e.mvex(t);
                        return e.box(e.types.moov, i, n, r)
                    }
                }, {
                    key: "mvhd", value: function (t, i) {
                        return e.box(e.types.mvhd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]))
                    }
                }, {
                    key: "trak", value: function (t) {
                        return e.box(e.types.trak, e.tkhd(t), e.mdia(t))
                    }
                }, {
                    key: "tkhd", value: function (t) {
                        var i = t.id, n = t.duration, r = t.presentWidth, a = t.presentHeight;
                        return e.box(e.types.tkhd, new Uint8Array([0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i, 0, 0, 0, 0, n >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, 255 & n, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, r >>> 8 & 255, 255 & r, 0, 0, a >>> 8 & 255, 255 & a, 0, 0]))
                    }
                }, {
                    key: "mdia", value: function (t) {
                        return e.box(e.types.mdia, e.mdhd(t), e.hdlr(t), e.minf(t))
                    }
                }, {
                    key: "mdhd", value: function (t) {
                        var i = t.timescale, n = t.duration;
                        return e.box(e.types.mdhd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i, n >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, 255 & n, 85, 196, 0, 0]))
                    }
                }, {
                    key: "hdlr", value: function (t) {
                        var i = null;
                        return i = "audio" === t.type ? e.constants.HDLR_AUDIO : e.constants.HDLR_VIDEO, e.box(e.types.hdlr, i)
                    }
                }, {
                    key: "minf", value: function (t) {
                        var i = null;
                        return i = "audio" === t.type ? e.box(e.types.smhd, e.constants.SMHD) : e.box(e.types.vmhd, e.constants.VMHD), e.box(e.types.minf, i, e.dinf(), e.stbl(t))
                    }
                }, {
                    key: "dinf", value: function () {
                        return e.box(e.types.dinf, e.box(e.types.dref, e.constants.DREF))
                    }
                }, {
                    key: "stbl", value: function (t) {
                        return e.box(e.types.stbl, e.stsd(t), e.box(e.types.stts, e.constants.STTS), e.box(e.types.stsc, e.constants.STSC), e.box(e.types.stsz, e.constants.STSZ), e.box(e.types.stco, e.constants.STCO))
                    }
                }, {
                    key: "stsd", value: function (t) {
                        return "audio" === t.type ? "mp3" === t.codec ? e.box(e.types.stsd, e.constants.STSD_PREFIX, e.mp3(t)) : e.box(e.types.stsd, e.constants.STSD_PREFIX, e.mp4a(t)) : e.box(e.types.stsd, e.constants.STSD_PREFIX, e.avc1(t))
                    }
                }, {
                    key: "mp3", value: function (t) {
                        var i = t.channelCount, n = t.audioSampleRate,
                            r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, i, 0, 16, 0, 0, 0, 0, n >>> 8 & 255, 255 & n, 0, 0]);
                        return e.box(e.types[".mp3"], r)
                    }
                }, {
                    key: "mp4a", value: function (t) {
                        var i = t.channelCount, n = t.audioSampleRate,
                            r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, i, 0, 16, 0, 0, 0, 0, n >>> 8 & 255, 255 & n, 0, 0]);
                        return e.box(e.types.mp4a, r, e.esds(t))
                    }
                }, {
                    key: "esds", value: function (t) {
                        var i = t.config || [], n = i.length,
                            r = new Uint8Array([0, 0, 0, 0, 3, 23 + n, 0, 1, 0, 4, 15 + n, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([n]).concat(i).concat([6, 1, 2]));
                        return e.box(e.types.esds, r)
                    }
                }, {
                    key: "avc1", value: function (t) {
                        var i = t.avcc, n = t.codecWidth, r = t.codecHeight,
                            a = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, n >>> 8 & 255, 255 & n, r >>> 8 & 255, 255 & r, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 10, 120, 113, 113, 47, 102, 108, 118, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 255, 255]);
                        return e.box(e.types.avc1, a, e.box(e.types.avcC, i))
                    }
                }, {
                    key: "mvex", value: function (t) {
                        return e.box(e.types.mvex, e.trex(t))
                    }
                }, {
                    key: "trex", value: function (t) {
                        var i = t.id,
                            n = new Uint8Array([0, 0, 0, 0, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]);
                        return e.box(e.types.trex, n)
                    }
                }, {
                    key: "moof", value: function (t, i) {
                        return e.box(e.types.moof, e.mfhd(t.sequenceNumber), e.traf(t, i))
                    }
                }, {
                    key: "mfhd", value: function (t) {
                        var i = new Uint8Array([0, 0, 0, 0, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t]);
                        return e.box(e.types.mfhd, i)
                    }
                }, {
                    key: "traf", value: function (t, i) {
                        var n = t.id,
                            r = e.box(e.types.tfhd, new Uint8Array([0, 0, 0, 0, n >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, 255 & n])),
                            a = e.box(e.types.tfdt, new Uint8Array([0, 0, 0, 0, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i])),
                            s = e.sdtp(t), o = e.trun(t, s.byteLength + 16 + 16 + 8 + 16 + 8 + 8);
                        return e.box(e.types.traf, r, a, o, s)
                    }
                }, {
                    key: "sdtp", value: function (t) {
                        for (var i = t.samples || [], n = i.length, r = new Uint8Array(4 + n), a = 0; a < n; a++) {
                            var s = i[a].flags;
                            r[a + 4] = s.isLeading << 6 | s.dependsOn << 4 | s.isDependedOn << 2 | s.hasRedundancy
                        }
                        return e.box(e.types.sdtp, r)
                    }
                }, {
                    key: "trun", value: function (t, i) {
                        var n = t.samples || [], r = n.length, a = 12 + 16 * r, s = new Uint8Array(a);
                        i += 8 + a, s.set([0, 0, 15, 1, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i], 0);
                        for (var o = 0; o < r; o++) {
                            var u = n[o].duration, l = n[o].size, d = n[o].flags, c = n[o].cts;
                            s.set([u >>> 24 & 255, u >>> 16 & 255, u >>> 8 & 255, 255 & u, l >>> 24 & 255, l >>> 16 & 255, l >>> 8 & 255, 255 & l, d.isLeading << 2 | d.dependsOn, d.isDependedOn << 6 | d.hasRedundancy << 4 | d.isNonSync, 0, 0, c >>> 24 & 255, c >>> 16 & 255, c >>> 8 & 255, 255 & c], 12 + 16 * o)
                        }
                        return e.box(e.types.trun, s)
                    }
                }, {
                    key: "mdat", value: function (t) {
                        return e.box(e.types.mdat, t)
                    }
                }]), e
            }();
            r.init(), i.default = r
        }, {}],
        38: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), r = d(e("../utils/logger.js")), a = d(e("./mp4-generator.js")), s = d(e("./aac-silent.js")),
                o = d(e("../utils/browser.js")), u = e("../core/media-segment-info.js"), l = e("../utils/exception.js");

            function d(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var c = function () {
                function e(t) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.TAG = "MP4Remuxer", this._config = t, this._isLive = !0 === t.isLive, this._dtsBase = -1, this._dtsBaseInited = !1, this._audioDtsBase = 1 / 0, this._videoDtsBase = 1 / 0, this._audioNextDts = void 0, this._videoNextDts = void 0, this._audioStashedLastSample = null, this._videoStashedLastSample = null, this._audioMeta = null, this._videoMeta = null, this._audioSegmentInfoList = new u.MediaSegmentInfoList("audio"), this._videoSegmentInfoList = new u.MediaSegmentInfoList("video"), this._onInitSegment = null, this._onMediaSegment = null, this._forceFirstIDR = !(!o.default.chrome || !(o.default.version.major < 50 || 50 === o.default.version.major && o.default.version.build < 2661)), this._fillSilentAfterSeek = o.default.msedge || o.default.msie, this._mp3UseMpegAudio = !o.default.firefox, this._fillAudioTimestampGap = this._config.fixAudioTimestampGap
                }

                return n(e, [{
                    key: "destroy", value: function () {
                        this._dtsBase = -1, this._dtsBaseInited = !1, this._audioMeta = null, this._videoMeta = null, this._audioSegmentInfoList.clear(), this._audioSegmentInfoList = null, this._videoSegmentInfoList.clear(), this._videoSegmentInfoList = null, this._onInitSegment = null, this._onMediaSegment = null
                    }
                }, {
                    key: "bindDataSource", value: function (e) {
                        return e.onDataAvailable = this.remux.bind(this), e.onTrackMetadata = this._onTrackMetadataReceived.bind(this), this
                    }
                }, {
                    key: "insertDiscontinuity", value: function () {
                        this._audioNextDts = this._videoNextDts = void 0
                    }
                }, {
                    key: "seek", value: function (e) {
                        this._audioStashedLastSample = null, this._videoStashedLastSample = null, this._videoSegmentInfoList.clear(), this._audioSegmentInfoList.clear()
                    }
                }, {
                    key: "remux", value: function (e, t) {
                        if (!this._onMediaSegment) throw new l.IllegalStateException("MP4Remuxer: onMediaSegment callback must be specificed!");
                        this._dtsBaseInited || this._calculateDtsBase(e, t), this._remuxVideo(t), this._remuxAudio(e)
                    }
                }, {
                    key: "_onTrackMetadataReceived", value: function (e, t) {
                        var i = null, n = "mp4", r = t.codec;
                        if ("audio" === e) this._audioMeta = t, "mp3" === t.codec && this._mp3UseMpegAudio ? (n = "mpeg", r = "", i = new Uint8Array) : i = a.default.generateInitSegment(t); else {
                            if ("video" !== e) return;
                            this._videoMeta = t, i = a.default.generateInitSegment(t)
                        }
                        if (!this._onInitSegment) throw new l.IllegalStateException("MP4Remuxer: onInitSegment callback must be specified!");
                        this._onInitSegment(e, {
                            type: e,
                            data: i.buffer,
                            codec: r,
                            container: e + "/" + n,
                            mediaDuration: t.duration
                        })
                    }
                }, {
                    key: "_calculateDtsBase", value: function (e, t) {
                        this._dtsBaseInited || (e.samples && e.samples.length && (this._audioDtsBase = e.samples[0].dts), t.samples && t.samples.length && (this._videoDtsBase = t.samples[0].dts), this._dtsBase = Math.min(this._audioDtsBase, this._videoDtsBase), this._dtsBaseInited = !0)
                    }
                }, {
                    key: "flushStashedSamples", value: function () {
                        var e = this._videoStashedLastSample, t = this._audioStashedLastSample,
                            i = {type: "video", id: 1, sequenceNumber: 0, samples: [], length: 0};
                        null != e && (i.samples.push(e), i.length = e.length);
                        var n = {type: "audio", id: 2, sequenceNumber: 0, samples: [], length: 0};
                        null != t && (n.samples.push(t), n.length = t.length), this._videoStashedLastSample = null, this._audioStashedLastSample = null, this._remuxVideo(i, !0), this._remuxAudio(n, !0)
                    }
                }, {
                    key: "_remuxAudio", value: function (e, t) {
                        if (null != this._audioMeta) {
                            var i = e, n = i.samples, l = void 0, d = -1, c = -1, h = this._audioMeta.refSampleDuration,
                                f = "mp3" === this._audioMeta.codec && this._mp3UseMpegAudio,
                                p = this._dtsBaseInited && void 0 === this._audioNextDts, m = !1;
                            if (n && 0 !== n.length && (1 !== n.length || t)) {
                                var g = 0, y = null, _ = 0;
                                f ? (g = 0, _ = i.length) : (g = 8, _ = 8 + i.length);
                                var v = null;
                                if (n.length > 1 && (_ -= (v = n.pop()).length), null != this._audioStashedLastSample) {
                                    var b = this._audioStashedLastSample;
                                    this._audioStashedLastSample = null, n.unshift(b), _ += b.length
                                }
                                null != v && (this._audioStashedLastSample = v);
                                var T = n[0].dts - this._dtsBase;
                                if (this._audioNextDts) l = T - this._audioNextDts; else if (this._audioSegmentInfoList.isEmpty()) l = 0, this._fillSilentAfterSeek && !this._videoSegmentInfoList.isEmpty() && "mp3" !== this._audioMeta.originalCodec && (m = !0); else {
                                    var S = this._audioSegmentInfoList.getLastSampleBefore(T);
                                    if (null != S) {
                                        var k = T - (S.originalDts + S.duration);
                                        k <= 3 && (k = 0);
                                        l = T - (S.dts + S.duration + k)
                                    } else l = 0
                                }
                                if (m) {
                                    var w = T - l, E = this._videoSegmentInfoList.getLastSegmentBefore(T);
                                    if (null != E && E.beginDts < w) {
                                        var C = s.default.getSilentFrame(this._audioMeta.originalCodec, this._audioMeta.channelCount);
                                        if (C) {
                                            var A = E.beginDts, L = w - E.beginDts;
                                            r.default.v(this.TAG, "InsertPrefixSilentAudio: dts: " + A + ", duration: " + L), n.unshift({
                                                unit: C,
                                                dts: A,
                                                pts: A
                                            }), _ += C.byteLength
                                        }
                                    } else m = !1
                                }
                                for (var O = [], I = 0; I < n.length; I++) {
                                    var P = n[I], R = P.unit, x = P.dts - this._dtsBase, D = x - l;
                                    -1 === d && (d = D);
                                    var U = 0;
                                    if (I !== n.length - 1) {
                                        U = n[I + 1].dts - this._dtsBase - l - D
                                    } else if (null != v) {
                                        U = v.dts - this._dtsBase - l - D
                                    } else U = O.length >= 1 ? O[O.length - 1].duration : Math.floor(h);
                                    var M = !1, B = null;
                                    if (U > 1.5 * h && "mp3" !== this._audioMeta.codec && this._fillAudioTimestampGap && !o.default.safari) {
                                        M = !0;
                                        var j = Math.abs(U - h), N = Math.ceil(j / h), F = D + h;
                                        r.default.w(this.TAG, "Large audio timestamp gap detected, may cause AV sync to drift. Silent frames will be generated to avoid unsync.\ndts: " + (D + U) + " ms, expected: " + (D + Math.round(h)) + " ms, delta: " + Math.round(j) + " ms, generate: " + N + " frames");
                                        var V = s.default.getSilentFrame(this._audioMeta.originalCodec, this._audioMeta.channelCount);
                                        null == V && (r.default.w(this.TAG, "Unable to generate silent frame for " + this._audioMeta.originalCodec + " with " + this._audioMeta.channelCount + " channels, repeat last frame"), V = R), B = [];
                                        for (var G = 0; G < N; G++) {
                                            var H = Math.round(F);
                                            if (B.length > 0) {
                                                var q = B[B.length - 1];
                                                q.duration = H - q.dts
                                            }
                                            var z = {
                                                dts: H,
                                                pts: H,
                                                cts: 0,
                                                unit: V,
                                                size: V.byteLength,
                                                duration: 0,
                                                originalDts: x,
                                                flags: {isLeading: 0, dependsOn: 1, isDependedOn: 0, hasRedundancy: 0}
                                            };
                                            B.push(z), _ += z.size, F += h
                                        }
                                        var W = B[B.length - 1];
                                        W.duration = D + U - W.dts, U = Math.round(h)
                                    }
                                    O.push({
                                        dts: D,
                                        pts: D,
                                        cts: 0,
                                        unit: P.unit,
                                        size: P.unit.byteLength,
                                        duration: U,
                                        originalDts: x,
                                        flags: {isLeading: 0, dependsOn: 1, isDependedOn: 0, hasRedundancy: 0}
                                    }), M && O.push.apply(O, B)
                                }
                                f ? y = new Uint8Array(_) : ((y = new Uint8Array(_))[0] = _ >>> 24 & 255, y[1] = _ >>> 16 & 255, y[2] = _ >>> 8 & 255, y[3] = 255 & _, y.set(a.default.types.mdat, 4));
                                for (var X = 0; X < O.length; X++) {
                                    var Y = O[X].unit;
                                    y.set(Y, g), g += Y.byteLength
                                }
                                var K = O[O.length - 1];
                                c = K.dts + K.duration, this._audioNextDts = c;
                                var $ = new u.MediaSegmentInfo;
                                $.beginDts = d, $.endDts = c, $.beginPts = d, $.endPts = c, $.originalBeginDts = O[0].originalDts, $.originalEndDts = K.originalDts + K.duration, $.firstSample = new u.SampleInfo(O[0].dts, O[0].pts, O[0].duration, O[0].originalDts, !1), $.lastSample = new u.SampleInfo(K.dts, K.pts, K.duration, K.originalDts, !1), this._isLive || this._audioSegmentInfoList.append($), i.samples = O, i.sequenceNumber++;
                                var Q = null;
                                Q = f ? new Uint8Array : a.default.moof(i, d), i.samples = [], i.length = 0;
                                var J = {
                                    type: "audio",
                                    data: this._mergeBoxes(Q, y).buffer,
                                    sampleCount: O.length,
                                    info: $
                                };
                                f && p && (J.timestampOffset = d), this._onMediaSegment("audio", J)
                            }
                        }
                    }
                }, {
                    key: "_remuxVideo", value: function (e, t) {
                        if (null != this._videoMeta) {
                            var i = e, n = i.samples, r = void 0, s = -1, o = -1, l = -1, d = -1;
                            if (n && 0 !== n.length && (1 !== n.length || t)) {
                                var c = 8, h = null, f = 8 + e.length, p = null;
                                if (n.length > 1 && (f -= (p = n.pop()).length), null != this._videoStashedLastSample) {
                                    var m = this._videoStashedLastSample;
                                    this._videoStashedLastSample = null, n.unshift(m), f += m.length
                                }
                                null != p && (this._videoStashedLastSample = p);
                                var g = n[0].dts - this._dtsBase;
                                if (this._videoNextDts) r = g - this._videoNextDts; else if (this._videoSegmentInfoList.isEmpty()) r = 0; else {
                                    var y = this._videoSegmentInfoList.getLastSampleBefore(g);
                                    if (null != y) {
                                        var _ = g - (y.originalDts + y.duration);
                                        _ <= 3 && (_ = 0);
                                        r = g - (y.dts + y.duration + _)
                                    } else r = 0
                                }
                                for (var v = new u.MediaSegmentInfo, b = [], T = 0; T < n.length; T++) {
                                    var S = n[T], k = S.dts - this._dtsBase, w = S.isKeyframe, E = k - r, C = S.cts,
                                        A = E + C;
                                    -1 === s && (s = E, l = A);
                                    var L = 0;
                                    if (T !== n.length - 1) {
                                        L = n[T + 1].dts - this._dtsBase - r - E
                                    } else if (null != p) {
                                        L = p.dts - this._dtsBase - r - E
                                    } else L = b.length >= 1 ? b[b.length - 1].duration : Math.floor(this._videoMeta.refSampleDuration);
                                    if (w) {
                                        var O = new u.SampleInfo(E, A, L, S.dts, !0);
                                        O.fileposition = S.fileposition, v.appendSyncPoint(O)
                                    }
                                    b.push({
                                        dts: E,
                                        pts: A,
                                        cts: C,
                                        units: S.units,
                                        size: S.length,
                                        isKeyframe: w,
                                        duration: L,
                                        originalDts: k,
                                        flags: {
                                            isLeading: 0,
                                            dependsOn: w ? 2 : 1,
                                            isDependedOn: w ? 1 : 0,
                                            hasRedundancy: 0,
                                            isNonSync: w ? 0 : 1
                                        }
                                    })
                                }
                                (h = new Uint8Array(f))[0] = f >>> 24 & 255, h[1] = f >>> 16 & 255, h[2] = f >>> 8 & 255, h[3] = 255 & f, h.set(a.default.types.mdat, 4);
                                for (var I = 0; I < b.length; I++) for (var P = b[I].units; P.length;) {
                                    var R = P.shift().data;
                                    h.set(R, c), c += R.byteLength
                                }
                                var x = b[b.length - 1];
                                if (o = x.dts + x.duration, d = x.pts + x.duration, this._videoNextDts = o, v.beginDts = s, v.endDts = o, v.beginPts = l, v.endPts = d, v.originalBeginDts = b[0].originalDts, v.originalEndDts = x.originalDts + x.duration, v.firstSample = new u.SampleInfo(b[0].dts, b[0].pts, b[0].duration, b[0].originalDts, b[0].isKeyframe), v.lastSample = new u.SampleInfo(x.dts, x.pts, x.duration, x.originalDts, x.isKeyframe), this._isLive || this._videoSegmentInfoList.append(v), i.samples = b, i.sequenceNumber++, this._forceFirstIDR) {
                                    var D = b[0].flags;
                                    D.dependsOn = 2, D.isNonSync = 0
                                }
                                var U = a.default.moof(i, s);
                                i.samples = [], i.length = 0, this._onMediaSegment("video", {
                                    type: "video",
                                    data: this._mergeBoxes(U, h).buffer,
                                    sampleCount: b.length,
                                    info: v
                                })
                            }
                        }
                    }
                }, {
                    key: "_mergeBoxes", value: function (e, t) {
                        var i = new Uint8Array(e.byteLength + t.byteLength);
                        return i.set(e, 0), i.set(t, e.byteLength), i
                    }
                }, {
                    key: "onInitSegment", get: function () {
                        return this._onInitSegment
                    }, set: function (e) {
                        this._onInitSegment = e
                    }
                }, {
                    key: "onMediaSegment", get: function () {
                        return this._onMediaSegment
                    }, set: function (e) {
                        this._onMediaSegment = e
                    }
                }]), e
            }();
            i.default = c
        }, {
            "../core/media-segment-info.js": 8,
            "../utils/browser.js": 39,
            "../utils/exception.js": 40,
            "../utils/logger.js": 41,
            "./aac-silent.js": 36,
            "./mp4-generator.js": 37
        }],
        39: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = {};
            !function () {
                var e = self.navigator.userAgent.toLowerCase(),
                    t = /(edge)\/([\w.]+)/.exec(e) || /(opr)[\/]([\w.]+)/.exec(e) || /(chrome)[ \/]([\w.]+)/.exec(e) || /(iemobile)[\/]([\w.]+)/.exec(e) || /(version)(applewebkit)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+).*(version)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || e.indexOf("trident") >= 0 && /(rv)(?::| )([\w.]+)/.exec(e) || e.indexOf("compatible") < 0 && /(firefox)[ \/]([\w.]+)/.exec(e) || [],
                    i = /(ipad)/.exec(e) || /(ipod)/.exec(e) || /(windows phone)/.exec(e) || /(iphone)/.exec(e) || /(kindle)/.exec(e) || /(android)/.exec(e) || /(windows)/.exec(e) || /(mac)/.exec(e) || /(linux)/.exec(e) || /(cros)/.exec(e) || [],
                    r = {
                        browser: t[5] || t[3] || t[1] || "",
                        version: t[2] || t[4] || "0",
                        majorVersion: t[4] || t[2] || "0",
                        platform: i[0] || ""
                    }, a = {};
                if (r.browser) {
                    a[r.browser] = !0;
                    var s = r.majorVersion.split(".");
                    a.version = {
                        major: parseInt(r.majorVersion, 10),
                        string: r.version
                    }, s.length > 1 && (a.version.minor = parseInt(s[1], 10)), s.length > 2 && (a.version.build = parseInt(s[2], 10))
                }
                r.platform && (a[r.platform] = !0), (a.chrome || a.opr || a.safari) && (a.webkit = !0), (a.rv || a.iemobile) && (a.rv && delete a.rv, r.browser = "msie", a.msie = !0);
                a.edge && (delete a.edge, r.browser = "msedge", a.msedge = !0);
                a.opr && (r.browser = "opera", a.opera = !0);
                a.safari && a.android && (r.browser = "android", a.android = !0);
                a.name = r.browser, a.platform = r.platform;
                for (var o in n) n.hasOwnProperty(o) && delete n[o];
                Object.assign(n, a)
            }(), i.default = n
        }, {}],
        40: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }();

            function r(e, t) {
                if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t
            }

            function a(e, t) {
                if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }

            function s(e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }

            var o = i.RuntimeException = function () {
                function e(t) {
                    s(this, e), this._message = t
                }

                return n(e, [{
                    key: "toString", value: function () {
                        return this.name + ": " + this.message
                    }
                }, {
                    key: "name", get: function () {
                        return "RuntimeException"
                    }
                }, {
                    key: "message", get: function () {
                        return this._message
                    }
                }]), e
            }();
            i.IllegalStateException = function (e) {
                a(t, o);

                function t(e) {
                    return s(this, t), r(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e))
                }

                return n(t, [{
                    key: "name", get: function () {
                        return "IllegalStateException"
                    }
                }]), t
            }(), i.InvalidArgumentException = function (e) {
                a(t, o);

                function t(e) {
                    return s(this, t), r(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e))
                }

                return n(t, [{
                    key: "name", get: function () {
                        return "InvalidArgumentException"
                    }
                }]), t
            }(), i.NotImplementedException = function (e) {
                a(t, o);

                function t(e) {
                    return s(this, t), r(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e))
                }

                return n(t, [{
                    key: "name", get: function () {
                        return "NotImplementedException"
                    }
                }]), t
            }()
        }, {}],
        41: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n, r = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }(), a = e("events"), s = (n = a, n && n.__esModule ? n : {default: n});
            var o = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e)
                }

                return r(e, null, [{
                    key: "e", value: function (t, i) {
                        t && !e.FORCE_GLOBAL_TAG || (t = e.GLOBAL_TAG);
                        var n = "[" + t + "] > " + i;
                        e.ENABLE_CALLBACK && e.emitter.emit("log", "error", n), e.ENABLE_ERROR && (console.error ? console.error(n) : console.warn ? console.warn(n) : console.log(n))
                    }
                }, {
                    key: "i", value: function (t, i) {
                        t && !e.FORCE_GLOBAL_TAG || (t = e.GLOBAL_TAG);
                        var n = "[" + t + "] > " + i;
                        e.ENABLE_CALLBACK && e.emitter.emit("log", "info", n), e.ENABLE_INFO && (console.info ? console.info(n) : console.log(n))
                    }
                }, {
                    key: "w", value: function (t, i) {
                        t && !e.FORCE_GLOBAL_TAG || (t = e.GLOBAL_TAG);
                        var n = "[" + t + "] > " + i;
                        e.ENABLE_CALLBACK && e.emitter.emit("log", "warn", n), e.ENABLE_WARN && (console.warn ? console.warn(n) : console.log(n))
                    }
                }, {
                    key: "d", value: function (t, i) {
                        t && !e.FORCE_GLOBAL_TAG || (t = e.GLOBAL_TAG);
                        var n = "[" + t + "] > " + i;
                        e.ENABLE_CALLBACK && e.emitter.emit("log", "debug", n), e.ENABLE_DEBUG && (console.debug ? console.debug(n) : console.log(n))
                    }
                }, {
                    key: "v", value: function (t, i) {
                        t && !e.FORCE_GLOBAL_TAG || (t = e.GLOBAL_TAG);
                        var n = "[" + t + "] > " + i;
                        e.ENABLE_CALLBACK && e.emitter.emit("log", "verbose", n), e.ENABLE_VERBOSE && console.log(n)
                    }
                }]), e
            }();
            o.GLOBAL_TAG = "flv.js", o.FORCE_GLOBAL_TAG = !1, o.ENABLE_ERROR = !0, o.ENABLE_INFO = !0, o.ENABLE_WARN = !0, o.ENABLE_DEBUG = !0, o.ENABLE_VERBOSE = !0, o.ENABLE_CALLBACK = !1, o.emitter = new s.default, i.default = o
        }, {events: 2}],
        42: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }(), r = s(e("events")), a = s(e("./logger.js"));

            function s(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var o = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e)
                }

                return n(e, null, [{
                    key: "getConfig", value: function () {
                        return {
                            globalTag: a.default.GLOBAL_TAG,
                            forceGlobalTag: a.default.FORCE_GLOBAL_TAG,
                            enableVerbose: a.default.ENABLE_VERBOSE,
                            enableDebug: a.default.ENABLE_DEBUG,
                            enableInfo: a.default.ENABLE_INFO,
                            enableWarn: a.default.ENABLE_WARN,
                            enableError: a.default.ENABLE_ERROR,
                            enableCallback: a.default.ENABLE_CALLBACK
                        }
                    }
                }, {
                    key: "applyConfig", value: function (e) {
                        a.default.GLOBAL_TAG = e.globalTag, a.default.FORCE_GLOBAL_TAG = e.forceGlobalTag, a.default.ENABLE_VERBOSE = e.enableVerbose, a.default.ENABLE_DEBUG = e.enableDebug, a.default.ENABLE_INFO = e.enableInfo, a.default.ENABLE_WARN = e.enableWarn, a.default.ENABLE_ERROR = e.enableError, a.default.ENABLE_CALLBACK = e.enableCallback
                    }
                }, {
                    key: "_notifyChange", value: function () {
                        var t = e.emitter;
                        if (t.listenerCount("change") > 0) {
                            var i = e.getConfig();
                            t.emit("change", i)
                        }
                    }
                }, {
                    key: "registerListener", value: function (t) {
                        e.emitter.addListener("change", t)
                    }
                }, {
                    key: "removeListener", value: function (t) {
                        e.emitter.removeListener("change", t)
                    }
                }, {
                    key: "addLogListener", value: function (t) {
                        a.default.emitter.addListener("log", t), a.default.emitter.listenerCount("log") > 0 && (a.default.ENABLE_CALLBACK = !0, e._notifyChange())
                    }
                }, {
                    key: "removeLogListener", value: function (t) {
                        a.default.emitter.removeListener("log", t), 0 === a.default.emitter.listenerCount("log") && (a.default.ENABLE_CALLBACK = !1, e._notifyChange())
                    }
                }, {
                    key: "forceGlobalTag", get: function () {
                        return a.default.FORCE_GLOBAL_TAG
                    }, set: function (t) {
                        a.default.FORCE_GLOBAL_TAG = t, e._notifyChange()
                    }
                }, {
                    key: "globalTag", get: function () {
                        return a.default.GLOBAL_TAG
                    }, set: function (t) {
                        a.default.GLOBAL_TAG = t, e._notifyChange()
                    }
                }, {
                    key: "enableAll", get: function () {
                        return a.default.ENABLE_VERBOSE && a.default.ENABLE_DEBUG && a.default.ENABLE_INFO && a.default.ENABLE_WARN && a.default.ENABLE_ERROR
                    }, set: function (t) {
                        a.default.ENABLE_VERBOSE = t, a.default.ENABLE_DEBUG = t, a.default.ENABLE_INFO = t, a.default.ENABLE_WARN = t, a.default.ENABLE_ERROR = t, e._notifyChange()
                    }
                }, {
                    key: "enableDebug", get: function () {
                        return a.default.ENABLE_DEBUG
                    }, set: function (t) {
                        a.default.ENABLE_DEBUG = t, e._notifyChange()
                    }
                }, {
                    key: "enableVerbose", get: function () {
                        return a.default.ENABLE_VERBOSE
                    }, set: function (t) {
                        a.default.ENABLE_VERBOSE = t, e._notifyChange()
                    }
                }, {
                    key: "enableInfo", get: function () {
                        return a.default.ENABLE_INFO
                    }, set: function (t) {
                        a.default.ENABLE_INFO = t, e._notifyChange()
                    }
                }, {
                    key: "enableWarn", get: function () {
                        return a.default.ENABLE_WARN
                    }, set: function (t) {
                        a.default.ENABLE_WARN = t, e._notifyChange()
                    }
                }, {
                    key: "enableError", get: function () {
                        return a.default.ENABLE_ERROR
                    }, set: function (t) {
                        a.default.ENABLE_ERROR = t, e._notifyChange()
                    }
                }]), e
            }();
            o.emitter = new r.default, i.default = o
        }, {"./logger.js": 41, events: 2}],
        43: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }();
            var r = function () {
                function t() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t)
                }

                return n(t, null, [{
                    key: "install", value: function () {
                        Object.setPrototypeOf = Object.setPrototypeOf || function (e, t) {
                            return e.__proto__ = t, e
                        }, Object.assign = Object.assign || function (e) {
                            if (void 0 === e || null === e) throw new TypeError("Cannot convert undefined or null to object");
                            for (var t = Object(e), i = 1; i < arguments.length; i++) {
                                var n = arguments[i];
                                if (void 0 !== n && null !== n) for (var r in n) n.hasOwnProperty(r) && (t[r] = n[r])
                            }
                            return t
                        }, "function" != typeof self.Promise && e("es6-promise").polyfill()
                    }
                }]), t
            }();
            r.install(), i.default = r
        }, {"es6-promise": 1}],
        44: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});

            function n(e, t, i) {
                var n = e;
                if (t + i < n.length) {
                    for (; i--;) if (128 != (192 & n[++t])) return !1;
                    return !0
                }
                return !1
            }

            i.default = function (e) {
                for (var t = [], i = e, r = 0, a = e.length; r < a;) if (i[r] < 128) t.push(String.fromCharCode(i[r])), ++r; else {
                    if (i[r] < 192) ; else if (i[r] < 224) {
                        if (n(i, r, 1)) {
                            var s = (31 & i[r]) << 6 | 63 & i[r + 1];
                            if (s >= 128) {
                                t.push(String.fromCharCode(65535 & s)), r += 2;
                                continue
                            }
                        }
                    } else if (i[r] < 240) {
                        if (n(i, r, 2)) {
                            var o = (15 & i[r]) << 12 | (63 & i[r + 1]) << 6 | 63 & i[r + 2];
                            if (o >= 2048 && 55296 != (63488 & o)) {
                                t.push(String.fromCharCode(65535 & o)), r += 3;
                                continue
                            }
                        }
                    } else if (i[r] < 248 && n(i, r, 3)) {
                        var u = (7 & i[r]) << 18 | (63 & i[r + 1]) << 12 | (63 & i[r + 2]) << 6 | 63 & i[r + 3];
                        if (u > 65536 && u < 1114112) {
                            u -= 65536, t.push(String.fromCharCode(u >>> 10 | 55296)), t.push(String.fromCharCode(1023 & u | 56320)), r += 4;
                            continue
                        }
                    }
                    t.push(String.fromCharCode(65533)), ++r
                }
                return t.join("")
            }
        }, {}]
    }, {}, [21])(21)
}), function (e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t(require("video.js")) : "function" == typeof define && define.amd ? define(["video.js"], t) : e.videojsFlash = t(e.videojs)
}(this, function (e) {
    "use strict";
    e = e && e.hasOwnProperty("default") ? e.default : e;
    var t = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {},
        i = "undefined" != typeof window ? window : void 0 !== t ? t : "undefined" != typeof self ? self : {},
        n = function (e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }, r = function (e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }, a = e.getComponent("Tech"), s = e.dom, o = e.url, u = e.createTimeRange, l = e.mergeOptions,
        d = i && i.navigator || {}, c = function (e) {
            !function (e, t) {
                if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }(t, e);

            function t(a, s) {
                n(this, t);
                var o = r(this, e.call(this, a, s));
                return a.source && o.ready(function () {
                    this.setSource(a.source)
                }, !0), a.startTime && o.ready(function () {
                    this.load(), this.play(), this.currentTime(a.startTime)
                }, !0), i.videojs = i.videojs || {}, i.videojs.Flash = i.videojs.Flash || {}, i.videojs.Flash.onReady = t.onReady, i.videojs.Flash.onEvent = t.onEvent, i.videojs.Flash.onError = t.onError, o.on("seeked", function () {
                    this.lastSeekTarget_ = void 0
                }), o
            }

            return t.prototype.createEl = function () {
                var e = this.options_;
                e.swf || (e.swf = "https://vjs.zencdn.net/swf/5.4.2/video-js.swf");
                var i = e.techId, n = l({
                        readyFunction: "videojs.Flash.onReady",
                        eventProxyFunction: "videojs.Flash.onEvent",
                        errorEventProxyFunction: "videojs.Flash.onError",
                        autoplay: e.autoplay,
                        stretch: e.stretch || !1,
                        fluent: e.fluent || !1,
                        preload: e.preload,
                        loop: e.loop,
                        muted: e.muted
                    }, e.flashVars), r = l({wmode: "opaque", bgcolor: "#000000"}, e.params),
                    a = l({id: i, name: i, class: "vjs-tech"}, e.attributes);
                return this.el_ = t.embed(e.swf, n, r, a), this.el_.tech = this, this.el_
            }, t.prototype.play = function () {
                this.ended() && this.setCurrentTime(0), this.el_.vjs_play()
            }, t.prototype.pause = function () {
                this.el_.vjs_pause()
            }, t.prototype.src = function (e) {
                return void 0 === e ? this.currentSrc() : this.setSrc(e)
            }, t.prototype.setSrc = function (e) {
                var t = this;
                e = o.getAbsoluteURL(e), this.el_.vjs_src(e), this.autoplay() && this.setTimeout(function () {
                    return t.play()
                }, 0)
            }, t.prototype.seeking = function () {
                return void 0 !== this.lastSeekTarget_
            }, t.prototype.setCurrentTime = function (t) {
                var i = this.seekable();
                i.length && (t = (t = t > i.start(0) ? t : i.start(0)) < i.end(i.length - 1) ? t : i.end(i.length - 1), this.lastSeekTarget_ = t, this.trigger("seeking"), this.el_.vjs_setProperty("currentTime", t), e.prototype.setCurrentTime.call(this))
            }, t.prototype.currentTime = function () {
                return this.seeking() ? this.lastSeekTarget_ || 0 : this.el_.vjs_getProperty("currentTime")
            }, t.prototype.currentSrc = function () {
                return this.currentSource_ ? this.currentSource_.src : this.el_.vjs_getProperty("currentSrc")
            }, t.prototype.duration = function () {
                if (0 === this.readyState()) return NaN;
                var e = this.el_.vjs_getProperty("duration");
                return e >= 0 ? e : 1 / 0
            }, t.prototype.load = function () {
                this.el_.vjs_load()
            }, t.prototype.poster = function () {
                this.el_.vjs_getProperty("poster")
            }, t.prototype.setPoster = function () {
            }, t.prototype.seekable = function () {
                var e = this.duration();
                return 0 === e ? u() : u(0, e)
            }, t.prototype.buffered = function () {
                var e = this.el_.vjs_getProperty("buffered");
                return 0 === e.length ? u() : u(e[0][0], e[0][1])
            }, t.prototype.supportsFullScreen = function () {
                return !1
            }, t.prototype.enterFullScreen = function () {
                return !1
            }, t.prototype.getVideoPlaybackQuality = function () {
                var e = this.el_.vjs_getProperty("getVideoPlaybackQuality");
                return i.performance && "function" == typeof i.performance.now ? e.creationTime = i.performance.now() : i.performance && i.performance.timing && "number" == typeof i.performance.timing.navigationStart && (e.creationTime = i.Date.now() - i.performance.timing.navigationStart), e
            }, t
        }(a),
        h = ["rtmpConnection", "rtmpStream", "preload", "defaultPlaybackRate", "playbackRate", "autoplay", "stretch", "fluent", "loop", "controls", "volume", "muted", "defaultMuted"],
        f = ["networkState", "readyState", "initialTime", "startOffsetTime", "paused", "ended", "videoWidth", "videoHeight"],
        p = c.prototype;

    function m(e) {
        var t = e.charAt(0).toUpperCase() + e.slice(1);
        p["set" + t] = function (t) {
            return this.el_.vjs_setProperty(e, t)
        }
    }

    function g(e) {
        p[e] = function () {
            return this.el_.vjs_getProperty(e)
        }
    }

    for (var y = 0; y < h.length; y++) g(h[y]), m(h[y]);
    for (var _ = 0; _ < f.length; _++) g(f[_]);
    c.isSupported = function () {
        return !!(e.browser.IS_CHROME && !e.browser.IS_ANDROID || e.browser.IS_SAFARI && !e.browser.IS_IOS) || c.version()[0] >= 10
    }, a.withSourceHandlers(c), c.nativeSourceHandler = {}, c.nativeSourceHandler.canPlayType = function (e) {
        return e in c.formats ? "maybe" : ""
    }, c.nativeSourceHandler.canHandleSource = function (e, t) {
        var i = void 0;
        return i = e.type ? e.type.replace(/;.*/, "").toLowerCase() : function (e) {
            var t = o.getFileExtension(e);
            return t ? "video/" + t : ""
        }(e.src), c.nativeSourceHandler.canPlayType(i)
    }, c.nativeSourceHandler.handleSource = function (e, t, i) {
        t.setSrc(e.src)
    }, c.nativeSourceHandler.dispose = function () {
    }, c.registerSourceHandler(c.nativeSourceHandler), c.formats = {
        "video/flv": "FLV",
        "video/x-flv": "FLV",
        "video/mp4": "MP4",
        "video/m4v": "MP4"
    }, c.onReady = function (e) {
        var t = s.$("#" + e), i = t && t.tech;
        i && i.el() && c.checkReady(i)
    }, c.checkReady = function (e) {
        e.el() && (e.el().vjs_getProperty ? e.triggerReady() : this.setTimeout(function () {
            c.checkReady(e)
        }, 50))
    }, c.onEvent = function (e, t) {
        var i = s.$("#" + e).tech, n = Array.prototype.slice.call(arguments, 2);
        i.setTimeout(function () {
            i.trigger(t, n)
        }, 1)
    }, c.onError = function (e, t) {
        var i = s.$("#" + e).tech;
        if ("srcnotfound" === t) return i.error(4);
        "string" == typeof t ? i.error("FLASH: " + t) : (t.origin = "flash", i.error(t))
    }, c.version = function () {
        var e = "0,0,0";
        try {
            e = new i.ActiveXObject("ShockwaveFlash.ShockwaveFlash").GetVariable("$version").replace(/\D+/g, ",").match(/^,?(.+),?$/)[1]
        } catch (t) {
            try {
                d.mimeTypes["application/x-shockwave-flash"].enabledPlugin && (e = (d.plugins["Shockwave Flash 2.0"] || d.plugins["Shockwave Flash"]).description.replace(/\D+/g, ",").match(/^,?(.+),?$/)[1])
            } catch (e) {
            }
        }
        return e.split(",")
    }, c.embed = function (e, t, i, n) {
        var r = c.getEmbedCode(e, t, i, n);
        return s.createEl("div", {innerHTML: r}).childNodes[0]
    }, c.getEmbedCode = function (e, t, i, n) {
        var r = "", a = "", s = "";
        return t && Object.getOwnPropertyNames(t).forEach(function (e) {
            r += e + "=" + t[e] + "&amp;"
        }), i = l({
            movie: e,
            flashvars: r,
            allowScriptAccess: "always",
            allowNetworking: "all"
        }, i), Object.getOwnPropertyNames(i).forEach(function (e) {
            a += '<param name="' + e + '" value="' + i[e] + '" />'
        }), n = l({data: e, width: "100%", height: "100%"}, n), Object.getOwnPropertyNames(n).forEach(function (e) {
            s += e + '="' + n[e] + '" '
        }), '<object type="application/x-shockwave-flash" ' + s + ">" + a + "</object>"
    }, (v = c).streamingFormats = {"rtmp/mp4": "MP4", "rtmp/flv": "FLV"}, v.streamFromParts = function (e, t) {
        return e + "&" + t
    }, v.streamToParts = function (e) {
        var t = {connection: "", stream: ""};
        if (!e) return t;
        var i = e.search(/&(?![\w-]+=)/), n = void 0;
        return -1 !== i ? n = i + 1 : 0 === (i = n = e.lastIndexOf("/") + 1) && (i = n = e.length), t.connection = e.substring(0, i), t.stream = e.substring(n, e.length), t
    }, v.isStreamingType = function (e) {
        return e in v.streamingFormats
    }, v.RTMP_RE = /^rtmp[set]?:\/\//i, v.isStreamingSrc = function (e) {
        return v.RTMP_RE.test(e)
    }, v.rtmpSourceHandler = {}, v.rtmpSourceHandler.canPlayType = function (e) {
        return v.isStreamingType(e) ? "maybe" : ""
    }, v.rtmpSourceHandler.canHandleSource = function (e, t) {
        var i = v.rtmpSourceHandler.canPlayType(e.type);
        return i || (v.isStreamingSrc(e.src) ? "maybe" : "")
    }, v.rtmpSourceHandler.handleSource = function (e, t, i) {
        var n = v.streamToParts(e.src);
        t.setRtmpConnection(n.connection), t.setRtmpStream(n.stream)
    }, v.registerSourceHandler(v.rtmpSourceHandler);
    var v;
    return a.getTech("Flash") ? (e.log.warn("Not using videojs-flash as it appears to already be registered"), e.log.warn("videojs-flash should only be used with video.js@6 and above")) : e.registerTech("Flash", c), c.VERSION = "2.1.2", c
}), function (e) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define([], e); else {
        ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).videojsContribHls = e()
    }
}(function () {
    return function e(t, i, n) {
        function r(s, o) {
            if (!i[s]) {
                if (!t[s]) {
                    var u = "function" == typeof require && require;
                    if (!o && u) return u(s, !0);
                    if (a) return a(s, !0);
                    var l = new Error("Cannot find module '" + s + "'");
                    throw l.code = "MODULE_NOT_FOUND", l
                }
                var d = i[s] = {exports: {}};
                t[s][0].call(d.exports, function (e) {
                    var i = t[s][1][e];
                    return r(i || e)
                }, d, d.exports, e, t, i, n)
            }
            return i[s].exports
        }

        for (var a = "function" == typeof require && require, s = 0; s < n.length; s++) r(n[s]);
        return r
    }({
        1: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                return function (e, t) {
                    if (Array.isArray(e)) return e;
                    if (Symbol.iterator in Object(e)) return function (e, t) {
                        var i = [], n = !0, r = !1, a = void 0;
                        try {
                            for (var s, o = e[Symbol.iterator](); !(n = (s = o.next()).done) && (i.push(s.value), !t || i.length !== t); n = !0) ;
                        } catch (e) {
                            r = !0, a = e
                        } finally {
                            try {
                                !n && o.return && o.return()
                            } finally {
                                if (r) throw a
                            }
                        }
                        return i
                    }(e, t);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                }
            }();
            var r, a = e("global/window"), s = (r = a, r && r.__esModule ? r : {default: r}), o = function (e, t) {
                for (var i = e.cues, n = 0; n < i.length; n++) {
                    var r = i[n];
                    if (t >= r.adStartTime && t <= r.adEndTime) return r
                }
                return null
            };
            i.default = {
                updateAdCues: function (e, t) {
                    var i = arguments.length <= 2 || void 0 === arguments[2] ? 0 : arguments[2];
                    if (e.segments) for (var r = i, a = void 0, u = 0; u < e.segments.length; u++) {
                        var l = e.segments[u];
                        if (a || (a = o(t, r + l.duration / 2)), a) {
                            if ("cueIn" in l) {
                                a.endTime = r, a.adEndTime = r, r += l.duration, a = null;
                                continue
                            }
                            if (r < a.endTime) {
                                r += l.duration;
                                continue
                            }
                            a.endTime += l.duration
                        } else if ("cueOut" in l && ((a = new s.default.VTTCue(r, r + l.duration, l.cueOut)).adStartTime = r, a.adEndTime = r + parseFloat(l.cueOut), t.addCue(a)), "cueOutCont" in l) {
                            var d = void 0, c = void 0, h = l.cueOutCont.split("/").map(parseFloat), f = n(h, 2);
                            d = f[0], c = f[1], (a = new s.default.VTTCue(r, r + l.duration, "")).adStartTime = r - d, a.adEndTime = a.adStartTime + c, t.addCue(a)
                        }
                        r += l.duration
                    }
                }, findAdCue: o
            }, t.exports = i.default
        }, {"global/window": 32}],
        2: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function (e, t) {
                var i = e.toString(16);
                return "00".substring(0, 2 - i.length) + i + (t % 2 ? " " : "")
            }, r = function (e) {
                return e >= 32 && e < 126 ? String.fromCharCode(e) : "."
            }, a = {
                hexDump: function (e) {
                    for (var t = Array.prototype.slice.call(e), i = "", a = 0; a < t.length / 16; a++) i += t.slice(16 * a, 16 * a + 16).map(n).join("") + " " + t.slice(16 * a, 16 * a + 16).map(r).join("") + "\n";
                    return i
                }, tagDump: function (e) {
                    return a.hexDump(e.bytes)
                }, textRanges: function (e) {
                    var t = "", i = void 0;
                    for (i = 0; i < e.length; i++) t += (n = e, r = i, n.start(r) + "-" + n.end(r) + " ");
                    var n, r;
                    return t
                }, createTransferableMessage: function (e) {
                    var t = {};
                    return Object.keys(e).forEach(function (i) {
                        var n = e[i];
                        ArrayBuffer.isView(n) ? t[i] = {
                            bytes: n.buffer,
                            byteOffset: n.byteOffset,
                            byteLength: n.byteLength
                        } : t[i] = n
                    }), t
                }, initSegmentId: function (e) {
                    var t = e.byterange || {length: 1 / 0, offset: 0};
                    return [t.length, t.offset, e.resolvedUri].join(",")
                }
            };
            i.default = a, t.exports = i.default
        }, {}],
        3: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0}), i.default = {
                GOAL_BUFFER_LENGTH: 30,
                MAX_GOAL_BUFFER_LENGTH: 60,
                GOAL_BUFFER_LENGTH_RATE: 1,
                BANDWIDTH_VARIANCE: 1.2,
                BUFFER_LOW_WATER_LINE: 0,
                MAX_BUFFER_LOW_WATER_LINE: 30,
                BUFFER_LOW_WATER_LINE_RATE: 1
            }, t.exports = i.default
        }, {}],
        4: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n, r = e("global/window"), a = (n = r, n && n.__esModule ? n : {default: n}), s = e("aes-decrypter"),
                o = e("./bin-utils");
            i.default = function (e) {
                return new function (e) {
                    e.onmessage = function (e) {
                        var t = e.data,
                            i = new Uint8Array(t.encrypted.bytes, t.encrypted.byteOffset, t.encrypted.byteLength),
                            n = new Uint32Array(t.key.bytes, t.key.byteOffset, t.key.byteLength / 4),
                            r = new Uint32Array(t.iv.bytes, t.iv.byteOffset, t.iv.byteLength / 4);
                        new s.Decrypter(i, n, r, function (e, i) {
                            a.default.postMessage((0, o.createTransferableMessage)({
                                source: t.source,
                                decrypted: i
                            }), [i.buffer])
                        })
                    }
                }(e)
            }, t.exports = i.default
        }, {"./bin-utils": 2, "aes-decrypter": 25, "global/window": 32}],
        5: [function (e, t, i) {
            (function (t) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var n = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), r = function (e, t, i) {
                    for (var n = !0; n;) {
                        var r = e, a = t, s = i;
                        n = !1, null === r && (r = Function.prototype);
                        var o = Object.getOwnPropertyDescriptor(r, a);
                        if (void 0 !== o) {
                            if ("value" in o) return o.value;
                            var u = o.get;
                            if (void 0 === u) return;
                            return u.call(s)
                        }
                        var l = Object.getPrototypeOf(r);
                        if (null === l) return;
                        e = l, t = a, i = s, n = !0, o = l = void 0
                    }
                };

                function a(e) {
                    return e && e.__esModule ? e : {default: e}
                }

                var s = a(e("./playlist-loader")), o = e("./playlist.js"), u = a(e("./segment-loader")),
                    l = a(e("./vtt-segment-loader")), d = a(e("./ranges")),
                    c = a("undefined" != typeof window ? window.videojs : void 0 !== t ? t.videojs : null),
                    h = a(e("./ad-cue-tags")), f = a(e("./sync-controller")),
                    p = e("videojs-contrib-media-sources/es5/codec-utils"), m = a(e("webwackify")),
                    g = a(e("./decrypter-worker")), y = a(e("./config")), _ = e("./util/codecs.js"),
                    v = e("./media-groups"), b = void 0,
                    T = {videoCodec: "avc1", videoObjectTypeIndicator: ".4d400d", audioProfile: "2"},
                    S = ["mediaRequests", "mediaRequestsAborted", "mediaRequestsTimedout", "mediaRequestsErrored", "mediaTransferDuration", "mediaBytesTransferred"],
                    k = function (e) {
                        return this.audioSegmentLoader_[e] + this.mainSegmentLoader_[e]
                    }, w = function () {
                        var t = void 0;
                        try {
                            t = e.resolve("./decrypter-worker")
                        } catch (e) {
                        }
                        return t
                    }, E = function (e) {
                        return e.replace(/avc1\.(\d+)\.(\d+)/i, function (e) {
                            return (0, p.translateLegacyCodecs)([e])[0]
                        })
                    };
                i.mapLegacyAvcCodecs_ = E;
                var C = function (e, t, i) {
                    return e + "/" + t + '; codecs="' + i.filter(function (e) {
                        return !!e
                    }).join(", ") + '"'
                }, A = function (e, t) {
                    var i, n = (i = t, i.segments && i.segments.length && i.segments[0].map ? "mp4" : "mp2t"),
                        r = function (e) {
                            var t = e.attributes || {};
                            return t.CODECS ? (0, _.parseCodecs)(t.CODECS) : T
                        }(t), a = t.attributes || {}, s = !0, o = !1;
                    if (!t) return [];
                    if (e.mediaGroups.AUDIO && a.AUDIO) {
                        var u = e.mediaGroups.AUDIO[a.AUDIO];
                        if (u) {
                            o = !0, s = !1;
                            for (var l in u) if (!u[l].uri) {
                                s = !0;
                                break
                            }
                        }
                    }
                    o && !r.audioProfile && (c.default.log.warn("Multiple audio tracks present but no audio codec string is specified. Attempting to use the default audio codec (mp4a.40.2)"), r.audioProfile = T.audioProfile);
                    var d = {};
                    r.videoCodec && (d.video = "" + r.videoCodec + r.videoObjectTypeIndicator), r.audioProfile && (d.audio = "mp4a.40." + r.audioProfile);
                    var h = C("audio", n, [d.audio]), f = C("video", n, [d.video]),
                        p = C("video", n, [d.video, d.audio]);
                    return o ? !s && d.video ? [f, h] : [p, h] : d.video ? [p] : [h]
                };
                i.mimeTypesForPlaylist_ = A;
                var L = function (e) {
                    !function (e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                        e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                    }(t, c["default"].EventTarget);

                    function t(e) {
                        var i = this;
                        !function (e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), r(Object.getPrototypeOf(t.prototype), "constructor", this).call(this);
                        var n = e.url, a = e.withCredentials, o = e.mode, d = e.tech, h = e.bandwidth, p = e.externHls,
                            y = e.useCueTags, _ = e.blacklistDuration, T = e.enableLowInitialPlaylist;
                        if (!n) throw new Error("A non-empty playlist URL is required");
                        b = p, this.withCredentials = a, this.tech_ = d, this.hls_ = d.hls, this.mode_ = o, this.useCueTags_ = y, this.blacklistDuration = _, this.enableLowInitialPlaylist = T, this.useCueTags_ && (this.cueTagsTrack_ = this.tech_.addTextTrack("metadata", "ad-cues"), this.cueTagsTrack_.inBandMetadataTrackDispatchType = ""), this.requestOptions_ = {
                            withCredentials: this.withCredentials,
                            timeout: null
                        }, this.mediaTypes_ = (0, v.createMediaTypes)(), this.mediaSource = new c.default.MediaSource({mode: o}), this.mediaSource.addEventListener("sourceopen", this.handleSourceOpen_.bind(this)), this.seekable_ = c.default.createTimeRanges(), this.hasPlayed_ = function () {
                            return !1
                        }, this.syncController_ = new f.default(e), this.segmentMetadataTrack_ = d.addRemoteTextTrack({
                            kind: "metadata",
                            label: "segment-metadata"
                        }, !1).track, this.decrypter_ = (0, m.default)(g.default, w());
                        var E = {
                            hls: this.hls_,
                            mediaSource: this.mediaSource,
                            currentTime: this.tech_.currentTime.bind(this.tech_),
                            seekable: function () {
                                return i.seekable()
                            },
                            seeking: function () {
                                return i.tech_.seeking()
                            },
                            duration: function () {
                                return i.mediaSource.duration
                            },
                            hasPlayed: function () {
                                return i.hasPlayed_()
                            },
                            goalBufferLength: function () {
                                return i.goalBufferLength()
                            },
                            bandwidth: h,
                            syncController: this.syncController_,
                            decrypter: this.decrypter_
                        };
                        this.masterPlaylistLoader_ = new s.default(n, this.hls_, this.withCredentials), this.setupMasterPlaylistLoaderListeners_(), this.mainSegmentLoader_ = new u.default(c.default.mergeOptions(E, {
                            segmentMetadataTrack: this.segmentMetadataTrack_,
                            loaderType: "main"
                        }), e), this.audioSegmentLoader_ = new u.default(c.default.mergeOptions(E, {loaderType: "audio"}), e), this.subtitleSegmentLoader_ = new l.default(c.default.mergeOptions(E, {loaderType: "vtt"}), e), this.setupSegmentLoaderListeners_(), S.forEach(function (e) {
                            i[e + "_"] = k.bind(i, e)
                        }), this.masterPlaylistLoader_.load()
                    }

                    return n(t, [{
                        key: "setupMasterPlaylistLoaderListeners_", value: function () {
                            var e = this;
                            this.masterPlaylistLoader_.on("loadedmetadata", function () {
                                var t = e.masterPlaylistLoader_.media(),
                                    i = 1.5 * e.masterPlaylistLoader_.targetDuration * 1e3;
                                (0, o.isLowestEnabledRendition)(e.masterPlaylistLoader_.master, e.masterPlaylistLoader_.media()) ? e.requestOptions_.timeout = 0 : e.requestOptions_.timeout = i, t.endList && "none" !== e.tech_.preload() && (e.mainSegmentLoader_.playlist(t, e.requestOptions_), e.mainSegmentLoader_.load()), (0, v.setupMediaGroups)({
                                    segmentLoaders: {
                                        AUDIO: e.audioSegmentLoader_,
                                        SUBTITLES: e.subtitleSegmentLoader_,
                                        main: e.mainSegmentLoader_
                                    },
                                    tech: e.tech_,
                                    requestOptions: e.requestOptions_,
                                    masterPlaylistLoader: e.masterPlaylistLoader_,
                                    mode: e.mode_,
                                    hls: e.hls_,
                                    master: e.master(),
                                    mediaTypes: e.mediaTypes_,
                                    blacklistCurrentPlaylist: e.blacklistCurrentPlaylist.bind(e)
                                }), e.triggerPresenceUsage_(e.master(), t);
                                try {
                                    e.setupSourceBuffers_()
                                } catch (t) {
                                    return c.default.log.warn("Failed to create SourceBuffers", t), e.mediaSource.endOfStream("decode")
                                }
                                e.setupFirstPlay(), e.trigger("selectedinitialmedia")
                            }), this.masterPlaylistLoader_.on("loadedplaylist", function () {
                                var t = e.masterPlaylistLoader_.media();
                                if (!t) {
                                    var i = void 0;
                                    return e.enableLowInitialPlaylist && (i = e.selectInitialPlaylist()), i || (i = e.selectPlaylist()), e.initialMedia_ = i, void e.masterPlaylistLoader_.media(e.initialMedia_)
                                }
                                e.useCueTags_ && e.updateAdCues_(t), e.mainSegmentLoader_.playlist(t, e.requestOptions_), e.updateDuration(), e.tech_.paused() || e.mainSegmentLoader_.load(), t.endList || function () {
                                    var t = function () {
                                        var t = e.seekable();
                                        0 !== t.length && e.mediaSource.addSeekableRange_(t.start(0), t.end(0))
                                    };
                                    e.duration() !== 1 / 0 ? e.tech_.one("durationchange", function i() {
                                        e.duration() === 1 / 0 ? t() : e.tech_.one("durationchange", i)
                                    }) : t()
                                }()
                            }), this.masterPlaylistLoader_.on("error", function () {
                                e.blacklistCurrentPlaylist(e.masterPlaylistLoader_.error)
                            }), this.masterPlaylistLoader_.on("mediachanging", function () {
                                e.mainSegmentLoader_.abort(), e.mainSegmentLoader_.pause()
                            }), this.masterPlaylistLoader_.on("mediachange", function () {
                                var t = e.masterPlaylistLoader_.media(),
                                    i = 1.5 * e.masterPlaylistLoader_.targetDuration * 1e3;
                                (0, o.isLowestEnabledRendition)(e.masterPlaylistLoader_.master, e.masterPlaylistLoader_.media()) ? e.requestOptions_.timeout = 0 : e.requestOptions_.timeout = i, e.mainSegmentLoader_.playlist(t, e.requestOptions_), e.mainSegmentLoader_.load(), e.tech_.trigger({
                                    type: "mediachange",
                                    bubbles: !0
                                })
                            }), this.masterPlaylistLoader_.on("playlistunchanged", function () {
                                var t = e.masterPlaylistLoader_.media();
                                e.stuckAtPlaylistEnd_(t) && (e.blacklistCurrentPlaylist({message: "Playlist no longer updating."}), e.tech_.trigger("playliststuck"))
                            }), this.masterPlaylistLoader_.on("renditiondisabled", function () {
                                e.tech_.trigger({type: "usage", name: "hls-rendition-disabled"})
                            }), this.masterPlaylistLoader_.on("renditionenabled", function () {
                                e.tech_.trigger({type: "usage", name: "hls-rendition-enabled"})
                            })
                        }
                    }, {
                        key: "triggerPresenceUsage_", value: function (e, t) {
                            var i = e.mediaGroups || {}, n = !0, r = Object.keys(i.AUDIO);
                            for (var a in i.AUDIO) for (var s in i.AUDIO[a]) {
                                i.AUDIO[a][s].uri || (n = !1)
                            }
                            n && this.tech_.trigger({
                                type: "usage",
                                name: "hls-demuxed"
                            }), Object.keys(i.SUBTITLES).length && this.tech_.trigger({
                                type: "usage",
                                name: "hls-webvtt"
                            }), b.Playlist.isAes(t) && this.tech_.trigger({
                                type: "usage",
                                name: "hls-aes"
                            }), b.Playlist.isFmp4(t) && this.tech_.trigger({
                                type: "usage",
                                name: "hls-fmp4"
                            }), r.length && Object.keys(i.AUDIO[r[0]]).length > 1 && this.tech_.trigger({
                                type: "usage",
                                name: "hls-alternate-audio"
                            }), this.useCueTags_ && this.tech_.trigger({type: "usage", name: "hls-playlist-cue-tags"})
                        }
                    }, {
                        key: "setupSegmentLoaderListeners_", value: function () {
                            var e = this;
                            this.mainSegmentLoader_.on("bandwidthupdate", function () {
                                var t = e.selectPlaylist(), i = e.masterPlaylistLoader_.media(), n = e.tech_.buffered(),
                                    r = n.length ? n.end(n.length - 1) - e.tech_.currentTime() : 0,
                                    a = e.bufferLowWaterLine();
                                (!i.endList || e.duration() < y.default.MAX_BUFFER_LOW_WATER_LINE || t.attributes.BANDWIDTH < i.attributes.BANDWIDTH || r >= a) && e.masterPlaylistLoader_.media(t), e.tech_.trigger("bandwidthupdate")
                            }), this.mainSegmentLoader_.on("progress", function () {
                                e.trigger("progress")
                            }), this.mainSegmentLoader_.on("error", function () {
                                e.blacklistCurrentPlaylist(e.mainSegmentLoader_.error())
                            }), this.mainSegmentLoader_.on("syncinfoupdate", function () {
                                e.onSyncInfoUpdate_()
                            }), this.mainSegmentLoader_.on("timestampoffset", function () {
                                e.tech_.trigger({type: "usage", name: "hls-timestamp-offset"})
                            }), this.audioSegmentLoader_.on("syncinfoupdate", function () {
                                e.onSyncInfoUpdate_()
                            }), this.mainSegmentLoader_.on("ended", function () {
                                e.onEndOfStream()
                            }), this.mainSegmentLoader_.on("earlyabort", function () {
                                e.blacklistCurrentPlaylist({message: "Aborted early because there isn't enough bandwidth to complete the request without rebuffering."}, 120)
                            }), this.mainSegmentLoader_.on("reseteverything", function () {
                                e.tech_.trigger("hls-reset")
                            }), this.mainSegmentLoader_.on("segmenttimemapping", function (t) {
                                e.tech_.trigger({type: "hls-segment-time-mapping", mapping: t.mapping})
                            }), this.audioSegmentLoader_.on("ended", function () {
                                e.onEndOfStream()
                            })
                        }
                    }, {
                        key: "mediaSecondsLoaded_", value: function () {
                            return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded)
                        }
                    }, {
                        key: "load", value: function () {
                            this.mainSegmentLoader_.load(), this.mediaTypes_.AUDIO.activePlaylistLoader && this.audioSegmentLoader_.load(), this.mediaTypes_.SUBTITLES.activePlaylistLoader && this.subtitleSegmentLoader_.load()
                        }
                    }, {
                        key: "fastQualityChange_", value: function () {
                            var e = this.selectPlaylist();
                            e !== this.masterPlaylistLoader_.media() && (this.masterPlaylistLoader_.media(e), this.mainSegmentLoader_.resetLoader())
                        }
                    }, {
                        key: "play", value: function () {
                            if (!this.setupFirstPlay()) {
                                this.tech_.ended() && this.tech_.setCurrentTime(0), this.hasPlayed_() && this.load();
                                var e = this.tech_.seekable();
                                return this.tech_.duration() === 1 / 0 && this.tech_.currentTime() < e.start(0) ? this.tech_.setCurrentTime(e.end(e.length - 1)) : void 0
                            }
                        }
                    }, {
                        key: "setupFirstPlay", value: function () {
                            var e = this, t = this.masterPlaylistLoader_.media();
                            if (!t || this.tech_.paused() || this.hasPlayed_()) return !1;
                            if (!t.endList) {
                                var i = function () {
                                    var t = e.seekable();
                                    return t.length ? c.default.browser.IE_VERSION && "html5" === e.mode_ && 0 === e.tech_.readyState() ? (e.tech_.one("loadedmetadata", function () {
                                        e.trigger("firstplay"), e.tech_.setCurrentTime(t.end(0)), e.hasPlayed_ = function () {
                                            return !0
                                        }
                                    }), {v: !1}) : (e.trigger("firstplay"), void e.tech_.setCurrentTime(t.end(0))) : {v: !1}
                                }();
                                if ("object" == typeof i) return i.v
                            }
                            return this.hasPlayed_ = function () {
                                return !0
                            }, this.load(), !0
                        }
                    }, {
                        key: "handleSourceOpen_", value: function () {
                            try {
                                this.setupSourceBuffers_()
                            } catch (e) {
                                return c.default.log.warn("Failed to create Source Buffers", e), this.mediaSource.endOfStream("decode")
                            }
                            if (this.tech_.autoplay()) {
                                var e = this.tech_.play();
                                void 0 !== e && "function" == typeof e.then && e.then(null, function (e) {
                                })
                            }
                            this.trigger("sourceopen")
                        }
                    }, {
                        key: "onEndOfStream", value: function () {
                            var e = this.mainSegmentLoader_.ended_;
                            this.mediaTypes_.AUDIO.activePlaylistLoader && (e = e && this.audioSegmentLoader_.ended_), e && this.mediaSource.endOfStream()
                        }
                    }, {
                        key: "stuckAtPlaylistEnd_", value: function (e) {
                            if (!this.seekable().length) return !1;
                            var t = this.syncController_.getExpiredTime(e, this.mediaSource.duration);
                            if (null === t) return !1;
                            var i = b.Playlist.playlistEnd(e, t), n = this.tech_.currentTime(),
                                r = this.tech_.buffered();
                            if (!r.length) return i - n <= d.default.SAFE_TIME_DELTA;
                            var a = r.end(r.length - 1);
                            return a - n <= d.default.SAFE_TIME_DELTA && i - a <= d.default.SAFE_TIME_DELTA
                        }
                    }, {
                        key: "blacklistCurrentPlaylist", value: function (e, t) {
                            void 0 === e && (e = {});
                            var i = void 0, n = void 0;
                            if (i = e.playlist || this.masterPlaylistLoader_.media(), t = t || e.blacklistDuration || this.blacklistDuration, !i) {
                                this.error = e;
                                try {
                                    return this.mediaSource.endOfStream("network")
                                } catch (e) {
                                    return this.trigger("error")
                                }
                            }
                            var r = 1 === this.masterPlaylistLoader_.master.playlists.filter(o.isEnabled).length;
                            return r ? (c.default.log.warn("Problem encountered with the current HLS playlist. Trying again since it is the final playlist."), this.tech_.trigger("retryplaylist"), this.masterPlaylistLoader_.load(r)) : (i.excludeUntil = Date.now() + 1e3 * t, this.tech_.trigger("blacklistplaylist"), this.tech_.trigger({
                                type: "usage",
                                name: "hls-rendition-blacklisted"
                            }), n = this.selectPlaylist(), c.default.log.warn("Problem encountered with the current HLS playlist." + (e.message ? " " + e.message : "") + " Switching to another playlist."), this.masterPlaylistLoader_.media(n))
                        }
                    }, {
                        key: "pauseLoading", value: function () {
                            this.mainSegmentLoader_.pause(), this.mediaTypes_.AUDIO.activePlaylistLoader && this.audioSegmentLoader_.pause(), this.mediaTypes_.SUBTITLES.activePlaylistLoader && this.subtitleSegmentLoader_.pause()
                        }
                    }, {
                        key: "setCurrentTime", value: function (e) {
                            var t = d.default.findRange(this.tech_.buffered(), e);
                            return this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media() && this.masterPlaylistLoader_.media().segments ? t && t.length && "flash" !== this.mode_ ? e : (this.mainSegmentLoader_.resetEverything(), this.mainSegmentLoader_.abort(), this.mediaTypes_.AUDIO.activePlaylistLoader && (this.audioSegmentLoader_.resetEverything(), this.audioSegmentLoader_.abort()), this.mediaTypes_.SUBTITLES.activePlaylistLoader && (this.subtitleSegmentLoader_.resetEverything(), this.subtitleSegmentLoader_.abort()), void this.load()) : 0
                        }
                    }, {
                        key: "duration", value: function () {
                            return this.masterPlaylistLoader_ ? this.mediaSource ? this.mediaSource.duration : b.Playlist.duration(this.masterPlaylistLoader_.media()) : 0
                        }
                    }, {
                        key: "seekable", value: function () {
                            return this.seekable_
                        }
                    }, {
                        key: "onSyncInfoUpdate_", value: function () {
                            var e = void 0, t = void 0;
                            if (this.masterPlaylistLoader_) {
                                var i = this.masterPlaylistLoader_.media();
                                if (i) {
                                    var n = this.syncController_.getExpiredTime(i, this.mediaSource.duration);
                                    if (null !== n && 0 !== (e = b.Playlist.seekable(i, n)).length) {
                                        if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                                            if (i = this.mediaTypes_.AUDIO.activePlaylistLoader.media(), null === (n = this.syncController_.getExpiredTime(i, this.mediaSource.duration))) return;
                                            if (0 === (t = b.Playlist.seekable(i, n)).length) return
                                        }
                                        t ? t.start(0) > e.end(0) || e.start(0) > t.end(0) ? this.seekable_ = e : this.seekable_ = c.default.createTimeRanges([[t.start(0) > e.start(0) ? t.start(0) : e.start(0), t.end(0) < e.end(0) ? t.end(0) : e.end(0)]]) : this.seekable_ = e, this.tech_.trigger("seekablechanged")
                                    }
                                }
                            }
                        }
                    }, {
                        key: "updateDuration", value: function () {
                            var e = this, t = this.mediaSource.duration,
                                i = b.Playlist.duration(this.masterPlaylistLoader_.media()), n = this.tech_.buffered(),
                                r = function t() {
                                    e.mediaSource.duration = i, e.tech_.trigger("durationchange"), e.mediaSource.removeEventListener("sourceopen", t)
                                };
                            n.length > 0 && (i = Math.max(i, n.end(n.length - 1))), t !== i && ("open" !== this.mediaSource.readyState ? this.mediaSource.addEventListener("sourceopen", r) : r())
                        }
                    }, {
                        key: "dispose", value: function () {
                            var e = this;
                            this.decrypter_.terminate(), this.masterPlaylistLoader_.dispose(), this.mainSegmentLoader_.dispose(), ["AUDIO", "SUBTITLES"].forEach(function (t) {
                                var i = e.mediaTypes_[t].groups;
                                for (var n in i) i[n].forEach(function (e) {
                                    e.playlistLoader && e.playlistLoader.dispose()
                                })
                            }), this.audioSegmentLoader_.dispose(), this.subtitleSegmentLoader_.dispose()
                        }
                    }, {
                        key: "master", value: function () {
                            return this.masterPlaylistLoader_.master
                        }
                    }, {
                        key: "media", value: function () {
                            return this.masterPlaylistLoader_.media() || this.initialMedia_
                        }
                    }, {
                        key: "setupSourceBuffers_", value: function () {
                            var e = this.masterPlaylistLoader_.media(), t = void 0;
                            if (e && "open" === this.mediaSource.readyState) {
                                if ((t = A(this.masterPlaylistLoader_.master, e)).length < 1) return this.error = "No compatible SourceBuffer configuration for the variant stream:" + e.resolvedUri, this.mediaSource.endOfStream("decode");
                                this.mainSegmentLoader_.mimeType(t[0]), t[1] && this.audioSegmentLoader_.mimeType(t[1]), this.excludeIncompatibleVariants_(e)
                            }
                        }
                    }, {
                        key: "excludeIncompatibleVariants_", value: function (e) {
                            var t = this.masterPlaylistLoader_.master, i = 2, n = null, r = void 0;
                            e.attributes.CODECS && (r = (0, _.parseCodecs)(e.attributes.CODECS), n = r.videoCodec, i = r.codecCount), t.playlists.forEach(function (e) {
                                var t = {codecCount: 2, videoCodec: null};
                                if (e.attributes.CODECS) {
                                    var r = e.attributes.CODECS;
                                    t = (0, _.parseCodecs)(r), window.MediaSource && window.MediaSource.isTypeSupported && !window.MediaSource.isTypeSupported('video/mp4; codecs="' + E(r) + '"') && (e.excludeUntil = 1 / 0)
                                }
                                t.codecCount !== i && (e.excludeUntil = 1 / 0), t.videoCodec !== n && (e.excludeUntil = 1 / 0)
                            })
                        }
                    }, {
                        key: "updateAdCues_", value: function (e) {
                            var t = 0, i = this.seekable();
                            i.length && (t = i.start(0)), h.default.updateAdCues(e, this.cueTagsTrack_, t)
                        }
                    }, {
                        key: "goalBufferLength", value: function () {
                            var e = this.tech_.currentTime(), t = y.default.GOAL_BUFFER_LENGTH,
                                i = y.default.GOAL_BUFFER_LENGTH_RATE,
                                n = Math.max(t, y.default.MAX_GOAL_BUFFER_LENGTH);
                            return Math.min(t + e * i, n)
                        }
                    }, {
                        key: "bufferLowWaterLine", value: function () {
                            var e = this.tech_.currentTime(), t = y.default.BUFFER_LOW_WATER_LINE,
                                i = y.default.BUFFER_LOW_WATER_LINE_RATE,
                                n = Math.max(t, y.default.MAX_BUFFER_LOW_WATER_LINE);
                            return Math.min(t + e * i, n)
                        }
                    }]), t
                }();
                i.MasterPlaylistController = L
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "./ad-cue-tags": 1,
            "./config": 3,
            "./decrypter-worker": 4,
            "./media-groups": 6,
            "./playlist-loader": 9,
            "./playlist.js": 11,
            "./ranges": 12,
            "./segment-loader": 16,
            "./sync-controller": 18,
            "./util/codecs.js": 19,
            "./vtt-segment-loader": 20,
            "videojs-contrib-media-sources/es5/codec-utils": 65,
            webwackify: 76
        }],
        6: [function (e, t, i) {
            (function (t) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});

                function n(e) {
                    return e && e.__esModule ? e : {default: e}
                }

                var r = n("undefined" != typeof window ? window.videojs : void 0 !== t ? t.videojs : null),
                    a = n(e("./playlist-loader")), s = function () {
                    }, o = function (e) {
                        var t = e.default ? "main" : "alternative";
                        return e.characteristics && e.characteristics.indexOf("public.accessibility.describes-video") >= 0 && (t = "main-desc"), t
                    }, u = function (e, t) {
                        e.abort(), e.pause(), t && t.activePlaylistLoader && (t.activePlaylistLoader.pause(), t.activePlaylistLoader = null)
                    };
                i.stopLoaders = u;
                var l = function (e, t) {
                    t.activePlaylistLoader = e, e.load()
                };
                i.startLoaders = l;
                var d = function (e, t) {
                    return function () {
                        var i = t.segmentLoaders, n = i[e], r = i.main, a = t.mediaTypes[e], s = a.activeTrack(),
                            o = a.activeGroup(s), d = a.activePlaylistLoader;
                        u(n, a), o && (o.playlistLoader ? (n.resyncLoader(), l(o.playlistLoader, a)) : d && r.resetEverything())
                    }
                };
                i.onGroupChanged = d;
                var c = function (e, t) {
                    return function () {
                        var i = t.segmentLoaders, n = i[e], r = i.main, a = t.mediaTypes[e], s = a.activeTrack(),
                            o = a.activeGroup(s), d = a.activePlaylistLoader;
                        u(n, a), o && (o.playlistLoader ? d !== o.playlistLoader ? (n.track && n.track(s), n.resetEverything(), l(o.playlistLoader, a)) : l(o.playlistLoader, a) : r.resetEverything())
                    }
                };
                i.onTrackChanged = c;
                var h = {
                    AUDIO: function (e, t) {
                        return function () {
                            var i = t.segmentLoaders[e], n = t.mediaTypes[e], a = t.blacklistCurrentPlaylist;
                            u(i, n);
                            var s = n.activeTrack(), o = n.activeGroup(), l = (o.filter(function (e) {
                                return e.default
                            })[0] || o[0]).id, d = n.tracks[l];
                            if (s !== d) {
                                r.default.log.warn("Problem encountered loading the alternate audio track.Switching back to default.");
                                for (var c in n.tracks) n.tracks[c].enabled = n.tracks[c] === d;
                                n.onTrackChanged()
                            } else a({message: "Problem encountered loading the default audio track."})
                        }
                    }, SUBTITLES: function (e, t) {
                        return function () {
                            var i = t.segmentLoaders[e], n = t.mediaTypes[e];
                            r.default.log.warn("Problem encountered loading the subtitle track.Disabling subtitle track."), u(i, n);
                            var a = n.activeTrack();
                            a && (a.mode = "disabled"), n.onTrackChanged()
                        }
                    }
                };
                i.onError = h;
                var f = {
                    AUDIO: function (e, t, i) {
                        if (t) {
                            var n = i.tech, r = i.requestOptions, a = i.segmentLoaders[e];
                            t.on("loadedmetadata", function () {
                                var e = t.media();
                                a.playlist(e, r), (!n.paused() || e.endList && "none" !== n.preload()) && a.load()
                            }), t.on("loadedplaylist", function () {
                                a.playlist(t.media(), r), n.paused() || a.load()
                            }), t.on("error", h[e](e, i))
                        }
                    }, SUBTITLES: function (e, t, i) {
                        var n = i.tech, r = i.requestOptions, a = i.segmentLoaders[e], s = i.mediaTypes[e];
                        t.on("loadedmetadata", function () {
                            var e = t.media();
                            a.playlist(e, r), a.track(s.activeTrack()), (!n.paused() || e.endList && "none" !== n.preload()) && a.load()
                        }), t.on("loadedplaylist", function () {
                            a.playlist(t.media(), r), n.paused() || a.load()
                        }), t.on("error", h[e](e, i))
                    }
                };
                i.setupListeners = f;
                var p = {
                    AUDIO: function (e, t) {
                        var i = t.mode, n = t.hls, s = t.segmentLoaders[e], u = t.requestOptions.withCredentials,
                            l = t.master.mediaGroups, d = t.mediaTypes[e], c = d.groups, p = d.tracks;
                        l[e] && 0 !== Object.keys(l[e]).length && "html5" === i || (l[e] = {main: {default: {default: !0}}});
                        for (var m in l[e]) {
                            c[m] || (c[m] = []);
                            for (var g in l[e][m]) {
                                var y = l[e][m][g], _ = void 0;
                                if (_ = y.resolvedUri ? new a.default(y.resolvedUri, n, u) : null, y = r.default.mergeOptions({
                                    id: g,
                                    playlistLoader: _
                                }, y), f[e](e, y.playlistLoader, t), c[m].push(y), void 0 === p[g]) {
                                    var v = new r.default.AudioTrack({
                                        id: g,
                                        kind: o(y),
                                        enabled: !1,
                                        language: y.language,
                                        default: y.default,
                                        label: g
                                    });
                                    p[g] = v
                                }
                            }
                        }
                        s.on("error", h[e](e, t))
                    }, SUBTITLES: function (e, t) {
                        var i = t.tech, n = t.hls, s = t.segmentLoaders[e], o = t.requestOptions.withCredentials,
                            u = t.master.mediaGroups, l = t.mediaTypes[e], d = l.groups, c = l.tracks;
                        for (var p in u[e]) {
                            d[p] || (d[p] = []);
                            for (var m in u[e][p]) if (!u[e][p][m].forced) {
                                var g = u[e][p][m];
                                if (g = r.default.mergeOptions({
                                    id: m,
                                    playlistLoader: new a.default(g.resolvedUri, n, o)
                                }, g), f[e](e, g.playlistLoader, t), d[p].push(g), void 0 === c[m]) {
                                    var y = i.addRemoteTextTrack({
                                        id: m,
                                        kind: "subtitles",
                                        enabled: !1,
                                        language: g.language,
                                        label: m
                                    }, !1).track;
                                    c[m] = y
                                }
                            }
                        }
                        s.on("error", h[e](e, t))
                    }, "CLOSED-CAPTIONS": function (e, t) {
                        var i = t.tech, n = t.master.mediaGroups, a = t.mediaTypes[e], s = a.groups, o = a.tracks;
                        for (var u in n[e]) {
                            s[u] || (s[u] = []);
                            for (var l in n[e][u]) {
                                var d = n[e][u][l];
                                if (d.instreamId.match(/CC\d/) && (s[u].push(r.default.mergeOptions({id: l}, d)), void 0 === o[l])) {
                                    var c = i.addRemoteTextTrack({
                                        id: d.instreamId,
                                        kind: "captions",
                                        enabled: !1,
                                        language: d.language,
                                        label: l
                                    }, !1).track;
                                    o[l] = c
                                }
                            }
                        }
                    }
                };
                i.initialize = p;
                var m = function (e, t) {
                    return function (i) {
                        var n = t.masterPlaylistLoader, r = t.mediaTypes[e].groups, a = n.media();
                        if (!a) return null;
                        var s = null;
                        return a.attributes[e] && (s = r[a.attributes[e]]), s = s || r.main, void 0 === i ? s : null === i ? null : s.filter(function (e) {
                            return e.id === i.id
                        })[0] || null
                    }
                };
                i.activeGroup = m;
                var g = {
                    AUDIO: function (e, t) {
                        return function () {
                            var i = t.mediaTypes[e].tracks;
                            for (var n in i) if (i[n].enabled) return i[n];
                            return null
                        }
                    }, SUBTITLES: function (e, t) {
                        return function () {
                            var i = t.mediaTypes[e].tracks;
                            for (var n in i) if ("showing" === i[n].mode) return i[n];
                            return null
                        }
                    }
                };
                i.activeTrack = g;
                i.setupMediaGroups = function (e) {
                    ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach(function (t) {
                        p[t](t, e)
                    });
                    var t = e.mediaTypes, i = e.masterPlaylistLoader, n = e.tech, r = e.hls;
                    ["AUDIO", "SUBTITLES"].forEach(function (i) {
                        t[i].activeGroup = m(i, e), t[i].activeTrack = g[i](i, e), t[i].onGroupChanged = d(i, e), t[i].onTrackChanged = c(i, e)
                    });
                    var a = t.AUDIO.activeGroup(), s = (a.filter(function (e) {
                        return e.default
                    })[0] || a[0]).id;
                    t.AUDIO.tracks[s].enabled = !0, t.AUDIO.onTrackChanged(), i.on("mediachange", function () {
                        ["AUDIO", "SUBTITLES"].forEach(function (e) {
                            return t[e].onGroupChanged()
                        })
                    });
                    var o = function () {
                        t.AUDIO.onTrackChanged(), n.trigger({type: "usage", name: "hls-audio-change"})
                    };
                    n.audioTracks().addEventListener("change", o), n.remoteTextTracks().addEventListener("change", t.SUBTITLES.onTrackChanged), r.on("dispose", function () {
                        n.audioTracks().removeEventListener("change", o), n.remoteTextTracks().removeEventListener("change", t.SUBTITLES.onTrackChanged)
                    }), n.clearTracks("audio");
                    for (var u in t.AUDIO.tracks) n.audioTracks().addTrack(t.AUDIO.tracks[u])
                };
                i.createMediaTypes = function () {
                    var e = {};
                    return ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach(function (t) {
                        e[t] = {
                            groups: {},
                            tracks: {},
                            activePlaylistLoader: null,
                            activeGroup: s,
                            activeTrack: s,
                            onGroupChanged: s,
                            onTrackChanged: s
                        }
                    }), e
                }
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {"./playlist-loader": 9}],
        7: [function (e, t, i) {
            (function (t) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var n, r = "undefined" != typeof window ? window.videojs : void 0 !== t ? t.videojs : null,
                    a = (n = r, n && n.__esModule ? n : {default: n}), s = e("./bin-utils"),
                    o = {FAILURE: 2, TIMEOUT: -101, ABORTED: -102};
                i.REQUEST_ERRORS = o;
                var u = function (e) {
                    var t = {};
                    return e.byterange && (t.Range = function (e) {
                        var t = void 0;
                        return t = e.offset + e.length - 1, "bytes=" + e.offset + "-" + t
                    }(e.byterange)), t
                }, l = function (e) {
                    e.forEach(function (e) {
                        e.abort()
                    })
                }, d = function (e, t) {
                    return t.timedout ? {
                        status: t.status,
                        message: "HLS request timed-out at URL: " + t.uri,
                        code: o.TIMEOUT,
                        xhr: t
                    } : t.aborted ? {
                        status: t.status,
                        message: "HLS request aborted at URL: " + t.uri,
                        code: o.ABORTED,
                        xhr: t
                    } : e ? {
                        status: t.status,
                        message: "HLS request errored at URL: " + t.uri,
                        code: o.FAILURE,
                        xhr: t
                    } : null
                }, c = function (e, t, i) {
                    var n = [], r = 0;
                    return function (a, o) {
                        if (a && (l(e), n.push(a)), (r += 1) === e.length) {
                            if (o.endOfAllRequests = Date.now(), n.length > 0) {
                                var u = (f = n, f.reduce(function (e, t) {
                                    return t.code > e.code ? t : e
                                }));
                                return i(u, o)
                            }
                            return o.encryptedBytes ? (c = o, h = i, (d = t).addEventListener("message", function e(t) {
                                if (t.data.source === c.requestId) {
                                    d.removeEventListener("message", e);
                                    var i = t.data.decrypted;
                                    return c.bytes = new Uint8Array(i.bytes, i.byteOffset, i.byteLength), h(null, c)
                                }
                            }), void d.postMessage((0, s.createTransferableMessage)({
                                source: c.requestId,
                                encrypted: c.encryptedBytes,
                                key: c.key.bytes,
                                iv: c.key.iv
                            }), [c.encryptedBytes.buffer, c.key.bytes.buffer])) : i(null, o)
                        }
                        var d, c, h, f
                    }
                }, h = function (e, t) {
                    return function (i) {
                        return e.stats = a.default.mergeOptions(e.stats, function (e) {
                            var t = e.target, i = {
                                bandwidth: 1 / 0,
                                bytesReceived: 0,
                                roundTripTime: Date.now() - t.requestTime || 0
                            };
                            return i.bytesReceived = e.loaded, i.bandwidth = Math.floor(i.bytesReceived / i.roundTripTime * 8 * 1e3), i
                        }(i)), !e.stats.firstBytesReceivedAt && e.stats.bytesReceived && (e.stats.firstBytesReceivedAt = Date.now()), t(i, e)
                    }
                };
                i.mediaSegmentRequest = function (e, t, i, n, r, s) {
                    var f = [], p = c(f, i, s);
                    if (n.key) {
                        var m = e(a.default.mergeOptions(t, {
                            uri: n.key.resolvedUri,
                            responseType: "arraybuffer"
                        }), (g = n, y = p, function (e, t) {
                            var i = t.response, n = d(e, t);
                            if (n) return y(n, g);
                            if (16 !== i.byteLength) return y({
                                status: t.status,
                                message: "Invalid HLS key at URL: " + t.uri,
                                code: o.FAILURE,
                                xhr: t
                            }, g);
                            var r = new DataView(i);
                            return g.key.bytes = new Uint32Array([r.getUint32(0), r.getUint32(4), r.getUint32(8), r.getUint32(12)]), y(null, g)
                        }));
                        f.push(m)
                    }
                    var g, y;
                    if (n.map && !n.map.bytes) {
                        var _ = e(a.default.mergeOptions(t, {
                            uri: n.map.resolvedUri,
                            responseType: "arraybuffer",
                            headers: u(n.map)
                        }), (v = n, b = p, function (e, t) {
                            var i = t.response, n = d(e, t);
                            return n ? b(n, v) : 0 === i.byteLength ? b({
                                status: t.status,
                                message: "Empty HLS segment content at URL: " + t.uri,
                                code: o.FAILURE,
                                xhr: t
                            }, v) : (v.map.bytes = new Uint8Array(t.response), b(null, v))
                        }));
                        f.push(_)
                    }
                    var v, b, T, S, k = e(a.default.mergeOptions(t, {
                        uri: n.resolvedUri,
                        responseType: "arraybuffer",
                        headers: u(n)
                    }), (T = n, S = p, function (e, t) {
                        var i = t.response, n = d(e, t);
                        if (n) return S(n, T);
                        if (0 === i.byteLength) return S({
                            status: t.status,
                            message: "Empty HLS segment content at URL: " + t.uri,
                            code: o.FAILURE,
                            xhr: t
                        }, T);
                        T.stats = (r = t, {
                            bandwidth: r.bandwidth,
                            bytesReceived: r.bytesReceived || 0,
                            roundTripTime: r.roundTripTime || 0
                        });
                        var r;
                        return T.key ? T.encryptedBytes = new Uint8Array(t.response) : T.bytes = new Uint8Array(t.response), S(null, T)
                    }));
                    return k.addEventListener("progress", h(n, r)), f.push(k), function () {
                        return l(f)
                    }
                }
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {"./bin-utils": 2}],
        8: [function (e, t, i) {
            (function (n) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var r = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }();

                function a(e) {
                    return e && e.__esModule ? e : {default: e}
                }

                var s = a(e("global/window")), o = a(e("./ranges")),
                    u = a("undefined" != typeof window ? window.videojs : void 0 !== n ? n.videojs : null),
                    l = ["seeking", "seeked", "pause", "playing", "error"], d = function () {
                        function e(t) {
                            var i = this;
                            !function (e, t) {
                                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                            }(this, e), this.tech_ = t.tech, this.seekable = t.seekable, this.consecutiveUpdates = 0, this.lastRecordedTime = null, this.timer_ = null, this.checkCurrentTimeTimeout_ = null, t.debug && (this.logger_ = u.default.log.bind(u.default, "playback-watcher ->")), this.logger_("initialize");
                            var n = function () {
                                return i.monitorCurrentTime_()
                            }, r = function () {
                                return i.techWaiting_()
                            }, a = function () {
                                return i.cancelTimer_()
                            }, o = function () {
                                return i.fixesBadSeeks_()
                            };
                            this.tech_.on("seekablechanged", o), this.tech_.on("waiting", r), this.tech_.on(l, a), this.tech_.on("canplay", n), this.dispose = function () {
                                i.logger_("dispose"), i.tech_.off("seekablechanged", o), i.tech_.off("waiting", r), i.tech_.off(l, a), i.tech_.off("canplay", n), i.checkCurrentTimeTimeout_ && s.default.clearTimeout(i.checkCurrentTimeTimeout_), i.cancelTimer_()
                            }
                        }

                        return r(e, [{
                            key: "monitorCurrentTime_", value: function () {
                                this.checkCurrentTime_(), this.checkCurrentTimeTimeout_ && s.default.clearTimeout(this.checkCurrentTimeTimeout_), this.checkCurrentTimeTimeout_ = s.default.setTimeout(this.monitorCurrentTime_.bind(this), 250)
                            }
                        }, {
                            key: "checkCurrentTime_", value: function () {
                                if (this.tech_.seeking() && this.fixesBadSeeks_()) return this.consecutiveUpdates = 0, void(this.lastRecordedTime = this.tech_.currentTime());
                                if (!this.tech_.paused() && !this.tech_.seeking()) {
                                    var e = this.tech_.currentTime(), t = this.tech_.buffered();
                                    if (this.lastRecordedTime === e && (!t.length || e + o.default.SAFE_TIME_DELTA >= t.end(t.length - 1))) return this.techWaiting_();
                                    this.consecutiveUpdates >= 5 && e === this.lastRecordedTime ? (this.consecutiveUpdates++, this.waiting_()) : e === this.lastRecordedTime ? this.consecutiveUpdates++ : (this.consecutiveUpdates = 0, this.lastRecordedTime = e)
                                }
                            }
                        }, {
                            key: "cancelTimer_", value: function () {
                                this.consecutiveUpdates = 0, this.timer_ && (this.logger_("cancelTimer_"), clearTimeout(this.timer_)), this.timer_ = null
                            }
                        }, {
                            key: "fixesBadSeeks_", value: function () {
                                var e = this.tech_.seeking(), t = this.seekable(), i = this.tech_.currentTime(), n = void 0;
                                if (e && this.afterSeekableWindow_(t, i)) {
                                    n = t.end(t.length - 1)
                                }
                                if (e && this.beforeSeekableWindow_(t, i)) {
                                    n = t.start(0) + o.default.SAFE_TIME_DELTA
                                }
                                return void 0 !== n && (this.logger_("Trying to seek outside of seekable at time " + i + " with seekable range " + o.default.printableRange(t) + ". Seeking to " + n + "."), this.tech_.setCurrentTime(n), !0)
                            }
                        }, {
                            key: "waiting_", value: function () {
                                if (!this.techWaiting_()) {
                                    var e = this.tech_.currentTime(), t = this.tech_.buffered(),
                                        i = o.default.findRange(t, e);
                                    return i.length && e + 3 <= i.end(0) ? (this.cancelTimer_(), this.tech_.setCurrentTime(e), this.logger_("Stopped at " + e + " while inside a buffered region [" + i.start(0) + " -> " + i.end(0) + "]. Attempting to resume playback by seeking to the current time."), void this.tech_.trigger({
                                        type: "usage",
                                        name: "hls-unknown-waiting"
                                    })) : void 0
                                }
                            }
                        }, {
                            key: "techWaiting_", value: function () {
                                var e = this.seekable(), t = this.tech_.currentTime();
                                if (this.tech_.seeking() && this.fixesBadSeeks_()) return !0;
                                if (this.tech_.seeking() || null !== this.timer_) return !0;
                                if (this.beforeSeekableWindow_(e, t)) {
                                    var i = e.end(e.length - 1);
                                    return this.logger_("Fell out of live window at time " + t + ". Seeking to live point (seekable end) " + i), this.cancelTimer_(), this.tech_.setCurrentTime(i), this.tech_.trigger({
                                        type: "usage",
                                        name: "hls-live-resync"
                                    }), !0
                                }
                                var n = this.tech_.buffered(), r = o.default.findNextRange(n, t);
                                if (this.videoUnderflow_(r, n, t)) return this.cancelTimer_(), this.tech_.setCurrentTime(t), this.tech_.trigger({
                                    type: "usage",
                                    name: "hls-video-underflow"
                                }), !0;
                                if (r.length > 0) {
                                    var a = r.start(0) - t;
                                    return this.logger_("Stopped at " + t + ", setting timer for " + a + ", seeking to " + r.start(0)), this.timer_ = setTimeout(this.skipTheGap_.bind(this), 1e3 * a, t), !0
                                }
                                return !1
                            }
                        }, {
                            key: "afterSeekableWindow_", value: function (e, t) {
                                return !!e.length && t > e.end(e.length - 1) + o.default.SAFE_TIME_DELTA
                            }
                        }, {
                            key: "beforeSeekableWindow_", value: function (e, t) {
                                return !!(e.length && e.start(0) > 0 && t < e.start(0) - o.default.SAFE_TIME_DELTA)
                            }
                        }, {
                            key: "videoUnderflow_", value: function (e, t, i) {
                                if (0 === e.length) {
                                    var n = this.gapFromVideoUnderflow_(t, i);
                                    if (n) return this.logger_("Encountered a gap in video from " + n.start + " to " + n.end + ". Seeking to current time " + i), !0
                                }
                                return !1
                            }
                        }, {
                            key: "skipTheGap_", value: function (e) {
                                var t = this.tech_.buffered(), i = this.tech_.currentTime(),
                                    n = o.default.findNextRange(t, i);
                                this.cancelTimer_(), 0 !== n.length && i === e && (this.logger_("skipTheGap_:", "currentTime:", i, "scheduled currentTime:", e, "nextRange start:", n.start(0)), this.tech_.setCurrentTime(n.start(0) + o.default.TIME_FUDGE_FACTOR), this.tech_.trigger({
                                    type: "usage",
                                    name: "hls-gap-skip"
                                }))
                            }
                        }, {
                            key: "gapFromVideoUnderflow_", value: function (e, t) {
                                for (var i = o.default.findGaps(e), n = 0; n < i.length; n++) {
                                    var r = i.start(n), a = i.end(n);
                                    if (t - r < 4 && t - r > 2) return {start: r, end: a}
                                }
                                return null
                            }
                        }, {
                            key: "logger_", value: function () {
                            }
                        }]), e
                    }();
                i.default = d, t.exports = i.default
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {"./ranges": 12, "global/window": 32}],
        9: [function (e, t, i) {
            (function (t) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var n = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), r = function (e, t, i) {
                    for (var n = !0; n;) {
                        var r = e, a = t, s = i;
                        n = !1, null === r && (r = Function.prototype);
                        var o = Object.getOwnPropertyDescriptor(r, a);
                        if (void 0 !== o) {
                            if ("value" in o) return o.value;
                            var u = o.get;
                            if (void 0 === u) return;
                            return u.call(s)
                        }
                        var l = Object.getPrototypeOf(r);
                        if (null === l) return;
                        e = l, t = a, i = s, n = !0, o = l = void 0
                    }
                };

                function a(e) {
                    return e && e.__esModule ? e : {default: e}
                }

                var s = a(e("./resolve-url")),
                    o = "undefined" != typeof window ? window.videojs : void 0 !== t ? t.videojs : null,
                    u = a(e("m3u8-parser")), l = a(e("global/window")), d = function (e, t, i) {
                        var n = t.slice();
                        i = i || 0;
                        for (var r = Math.min(e.length, t.length + i), a = i; a < r; a++) n[a - i] = (0, o.mergeOptions)(e[a], n[a - i]);
                        return n
                    };
                i.updateSegments = d;
                var c = function (e, t) {
                    e.resolvedUri || (e.resolvedUri = (0, s.default)(t, e.uri)), e.key && !e.key.resolvedUri && (e.key.resolvedUri = (0, s.default)(t, e.key.uri)), e.map && !e.map.resolvedUri && (e.map.resolvedUri = (0, s.default)(t, e.map.uri))
                };
                i.resolveSegmentUris = c;
                var h = function (e, t) {
                    var i = (0, o.mergeOptions)(e, {}), n = i.playlists.filter(function (e) {
                        return e.uri === t.uri
                    })[0];
                    if (!n) return null;
                    if (n.segments && t.segments && n.segments.length === t.segments.length && n.mediaSequence === t.mediaSequence) return null;
                    var r = (0, o.mergeOptions)(n, t);
                    n.segments && (r.segments = d(n.segments, t.segments, t.mediaSequence - n.mediaSequence)), r.segments.forEach(function (e) {
                        c(e, r.resolvedUri)
                    });
                    for (var a = 0; a < i.playlists.length; a++) i.playlists[a].uri === t.uri && (i.playlists[a] = r);
                    return i.playlists[t.uri] = r, i
                };
                i.updateMaster = h;
                var f = function (e) {
                    for (var t = e.playlists.length; t--;) {
                        var i = e.playlists[t];
                        e.playlists[i.uri] = i, i.resolvedUri = (0, s.default)(e.uri, i.uri), i.attributes || (i.attributes = {}, o.log.warn("Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute."))
                    }
                };
                i.setupMediaPlaylists = f;
                var p = function (e) {
                    ["AUDIO", "SUBTITLES"].forEach(function (t) {
                        for (var i in e.mediaGroups[t]) for (var n in e.mediaGroups[t][i]) {
                            var r = e.mediaGroups[t][i][n];
                            r.uri && (r.resolvedUri = (0, s.default)(e.uri, r.uri))
                        }
                    })
                };
                i.resolveMediaGroupUris = p;
                var m = function (e, t) {
                    var i = e.segments[e.segments.length - 1];
                    return t && i && i.duration ? 1e3 * i.duration : 500 * (e.targetDuration || 10)
                };
                i.refreshDelay = m;
                var g = function (e) {
                    !function (e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                        e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                    }(t, o.EventTarget);

                    function t(e, i, n) {
                        var a = this;
                        if (function (e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), r(Object.getPrototypeOf(t.prototype), "constructor", this).call(this), this.srcUrl = e, this.hls_ = i, this.withCredentials = n, !this.srcUrl) throw new Error("A non-empty playlist URL is required");
                        this.state = "HAVE_NOTHING", this.on("mediaupdatetimeout", function () {
                            "HAVE_METADATA" === a.state && (a.state = "HAVE_CURRENT_METADATA", a.request = a.hls_.xhr({
                                uri: (0, s.default)(a.master.uri, a.media().uri),
                                withCredentials: a.withCredentials
                            }, function (e, t) {
                                if (a.request) return e ? a.playlistRequestError(a.request, a.media().uri, "HAVE_METADATA") : void a.haveMetadata(a.request, a.media().uri)
                            }))
                        })
                    }

                    return n(t, [{
                        key: "playlistRequestError", value: function (e, t, i) {
                            this.request = null, i && (this.state = i), this.error = {
                                playlist: this.master.playlists[t],
                                status: e.status,
                                message: "HLS playlist request error at URL: " + t,
                                responseText: e.responseText,
                                code: e.status >= 500 ? 4 : 2
                            }, this.trigger("error")
                        }
                    }, {
                        key: "haveMetadata", value: function (e, t) {
                            var i = this;
                            this.request = null, this.state = "HAVE_METADATA";
                            var n = new u.default.Parser;
                            n.push(e.responseText), n.end(), n.manifest.uri = t, n.manifest.attributes = n.manifest.attributes || {};
                            var r = h(this.master, n.manifest);
                            this.targetDuration = n.manifest.targetDuration, r ? (this.master = r, this.media_ = this.master.playlists[n.manifest.uri]) : this.trigger("playlistunchanged"), this.media().endList || (l.default.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = l.default.setTimeout(function () {
                                i.trigger("mediaupdatetimeout")
                            }, m(this.media(), !!r))), this.trigger("loadedplaylist")
                        }
                    }, {
                        key: "dispose", value: function () {
                            this.stopRequest(), l.default.clearTimeout(this.mediaUpdateTimeout)
                        }
                    }, {
                        key: "stopRequest", value: function () {
                            if (this.request) {
                                var e = this.request;
                                this.request = null, e.onreadystatechange = null, e.abort()
                            }
                        }
                    }, {
                        key: "media", value: function (e) {
                            var t = this;
                            if (!e) return this.media_;
                            if ("HAVE_NOTHING" === this.state) throw new Error("Cannot switch media playlist from " + this.state);
                            var i = this.state;
                            if ("string" == typeof e) {
                                if (!this.master.playlists[e]) throw new Error("Unknown playlist URI: " + e);
                                e = this.master.playlists[e]
                            }
                            var n = !this.media_ || e.uri !== this.media_.uri;
                            if (this.master.playlists[e.uri].endList) return this.request && (this.request.onreadystatechange = null, this.request.abort(), this.request = null), this.state = "HAVE_METADATA", this.media_ = e, void(n && (this.trigger("mediachanging"), this.trigger("mediachange")));
                            if (n) {
                                if (this.state = "SWITCHING_MEDIA", this.request) {
                                    if ((0, s.default)(this.master.uri, e.uri) === this.request.url) return;
                                    this.request.onreadystatechange = null, this.request.abort(), this.request = null
                                }
                                this.media_ && this.trigger("mediachanging"), this.request = this.hls_.xhr({
                                    uri: (0, s.default)(this.master.uri, e.uri),
                                    withCredentials: this.withCredentials
                                }, function (n, r) {
                                    if (t.request) {
                                        if (n) return t.playlistRequestError(t.request, e.uri, i);
                                        t.haveMetadata(r, e.uri), "HAVE_MASTER" === i ? t.trigger("loadedmetadata") : t.trigger("mediachange")
                                    }
                                })
                            }
                        }
                    }, {
                        key: "pause", value: function () {
                            this.stopRequest(), l.default.clearTimeout(this.mediaUpdateTimeout), "HAVE_NOTHING" === this.state && (this.started = !1), "SWITCHING_MEDIA" === this.state ? this.media_ ? this.state = "HAVE_METADATA" : this.state = "HAVE_MASTER" : "HAVE_CURRENT_METADATA" === this.state && (this.state = "HAVE_METADATA")
                        }
                    }, {
                        key: "load", value: function (e) {
                            var t = this;
                            l.default.clearTimeout(this.mediaUpdateTimeout);
                            var i = this.media();
                            if (e) {
                                var n = i ? i.targetDuration / 2 * 1e3 : 5e3;
                                this.mediaUpdateTimeout = l.default.setTimeout(function () {
                                    return t.load()
                                }, n)
                            } else this.started ? i && !i.endList ? this.trigger("mediaupdatetimeout") : this.trigger("loadedplaylist") : this.start()
                        }
                    }, {
                        key: "start", value: function () {
                            var e = this;
                            this.started = !0, this.request = this.hls_.xhr({
                                uri: this.srcUrl,
                                withCredentials: this.withCredentials
                            }, function (t, i) {
                                if (e.request) {
                                    if (e.request = null, t) return e.error = {
                                        status: i.status,
                                        message: "HLS playlist request error at URL: " + e.srcUrl,
                                        responseText: i.responseText,
                                        code: 2
                                    }, "HAVE_NOTHING" === e.state && (e.started = !1), e.trigger("error");
                                    var n = new u.default.Parser;
                                    return n.push(i.responseText), n.end(), e.state = "HAVE_MASTER", n.manifest.uri = e.srcUrl, n.manifest.playlists ? (e.master = n.manifest, f(e.master), p(e.master), e.trigger("loadedplaylist"), void(e.request || e.media(n.manifest.playlists[0]))) : (e.master = {
                                        mediaGroups: {
                                            AUDIO: {},
                                            VIDEO: {},
                                            "CLOSED-CAPTIONS": {},
                                            SUBTITLES: {}
                                        }, uri: l.default.location.href, playlists: [{uri: e.srcUrl}]
                                    }, e.master.playlists[e.srcUrl] = e.master.playlists[0], e.master.playlists[0].resolvedUri = e.srcUrl, e.master.playlists[0].attributes = e.master.playlists[0].attributes || {}, e.haveMetadata(i, e.srcUrl), e.trigger("loadedmetadata"))
                                }
                            })
                        }
                    }]), t
                }();
                i.default = g
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {"./resolve-url": 15, "global/window": 32, "m3u8-parser": 33}],
        10: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});

            function n(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var r = n(e("./config")), a = n(e("./playlist")), s = e("./util/codecs.js"), o = function (e, t) {
                var i = void 0;
                return e && (i = window.getComputedStyle(e)) ? i[t] : ""
            }, u = function (e, t) {
                var i = e.slice();
                e.sort(function (e, n) {
                    var r = t(e, n);
                    return 0 === r ? i.indexOf(e) - i.indexOf(n) : r
                })
            }, l = function (e, t) {
                var i = void 0, n = void 0;
                return e.attributes.BANDWIDTH && (i = e.attributes.BANDWIDTH), i = i || window.Number.MAX_VALUE, t.attributes.BANDWIDTH && (n = t.attributes.BANDWIDTH), i - (n = n || window.Number.MAX_VALUE)
            };
            i.comparePlaylistBandwidth = l;
            i.comparePlaylistResolution = function (e, t) {
                var i = void 0, n = void 0;
                return e.attributes.RESOLUTION && e.attributes.RESOLUTION.width && (i = e.attributes.RESOLUTION.width), i = i || window.Number.MAX_VALUE, t.attributes.RESOLUTION && t.attributes.RESOLUTION.width && (n = t.attributes.RESOLUTION.width), i === (n = n || window.Number.MAX_VALUE) && e.attributes.BANDWIDTH && t.attributes.BANDWIDTH ? e.attributes.BANDWIDTH - t.attributes.BANDWIDTH : i - n
            };
            var d = function (e, t, i, n) {
                var s = e.playlists.map(function (e) {
                    var t = void 0, i = void 0;
                    return t = e.attributes.RESOLUTION && e.attributes.RESOLUTION.width, i = e.attributes.RESOLUTION && e.attributes.RESOLUTION.height, {
                        bandwidth: e.attributes.BANDWIDTH || window.Number.MAX_VALUE,
                        width: t,
                        height: i,
                        playlist: e
                    }
                });
                u(s, function (e, t) {
                    return e.bandwidth - t.bandwidth
                });
                var o = (s = s.filter(function (e) {
                    return !a.default.isIncompatible(e.playlist)
                })).filter(function (e) {
                    return a.default.isEnabled(e.playlist)
                });
                o.length || (o = s.filter(function (e) {
                    return !a.default.isDisabled(e.playlist)
                }));
                var l = o.filter(function (e) {
                    return e.bandwidth * r.default.BANDWIDTH_VARIANCE < t
                }), d = l[l.length - 1], c = l.filter(function (e) {
                    return e.bandwidth === d.bandwidth
                })[0], h = l.filter(function (e) {
                    return e.width && e.height
                });
                u(h, function (e, t) {
                    return e.width - t.width
                });
                var f = h.filter(function (e) {
                    return e.width === i && e.height === n
                });
                d = f[f.length - 1];
                var p = f.filter(function (e) {
                    return e.bandwidth === d.bandwidth
                })[0], m = void 0, g = void 0, y = void 0;
                p || (g = (m = h.filter(function (e) {
                    return e.width > i || e.height > n
                })).filter(function (e) {
                    return e.width === m[0].width && e.height === m[0].height
                }), d = g[g.length - 1], y = g.filter(function (e) {
                    return e.bandwidth === d.bandwidth
                })[0]);
                var _ = y || p || c || o[0] || s[0];
                return _ ? _.playlist : null
            };
            i.simpleSelector = d;
            i.lastBandwidthSelector = function () {
                return d(this.playlists.master, this.systemBandwidth, parseInt(o(this.tech_.el(), "width"), 10), parseInt(o(this.tech_.el(), "height"), 10))
            };
            i.movingAverageBandwidthSelector = function (e) {
                var t = -1;
                if (e < 0 || e > 1) throw new Error("Moving average bandwidth decay must be between 0 and 1.");
                return function () {
                    return t < 0 && (t = this.systemBandwidth), t = e * this.systemBandwidth + (1 - e) * t, d(this.playlists.master, t, parseInt(o(this.tech_.el(), "width"), 10), parseInt(o(this.tech_.el(), "height"), 10))
                }
            };
            i.minRebufferMaxBandwidthSelector = function (e) {
                var t = e.master, i = e.currentTime, n = e.bandwidth, r = e.duration, s = e.segmentDuration,
                    o = e.timeUntilRebuffer, d = e.currentTimeline, c = e.syncController,
                    h = t.playlists.filter(function (e) {
                        return !a.default.isIncompatible(e)
                    }), f = h.filter(a.default.isEnabled);
                f.length || (f = h.filter(function (e) {
                    return !a.default.isDisabled(e)
                }));
                var p = f.filter(a.default.hasAttribute.bind(null, "BANDWIDTH")).map(function (e) {
                    var t = c.getSyncPoint(e, r, d, i) ? 1 : 2;
                    return {playlist: e, rebufferingImpact: a.default.estimateSegmentRequestTime(s, n, e) * t - o}
                }), m = p.filter(function (e) {
                    return e.rebufferingImpact <= 0
                });
                return u(m, function (e, t) {
                    return l(t.playlist, e.playlist)
                }), m.length ? m[0] : (u(p, function (e, t) {
                    return e.rebufferingImpact - t.rebufferingImpact
                }), p[0] || null)
            };
            i.lowestBitrateCompatibleVariantSelector = function () {
                var e = this.playlists.master.playlists.filter(a.default.isEnabled);
                u(e, function (e, t) {
                    return l(e, t)
                });
                return e.filter(function (e) {
                    return (0, s.parseCodecs)(e.attributes.CODECS).videoCodec
                })[0] || null
            }
        }, {"./config": 3, "./playlist": 11, "./util/codecs.js": 19}],
        11: [function (e, t, i) {
            (function (t) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var n, r = "undefined" != typeof window ? window.videojs : void 0 !== t ? t.videojs : null,
                    a = e("global/window"), s = (n = a, n && n.__esModule ? n : {default: n}), o = function (e, t, i) {
                        var n = void 0, r = void 0;
                        return void 0 === t && (t = e.mediaSequence + e.segments.length), t < e.mediaSequence ? 0 : (n = function (e, t) {
                            var i = 0, n = t - e.mediaSequence, r = e.segments[n];
                            if (r) {
                                if (void 0 !== r.start) return {result: r.start, precise: !0};
                                if (void 0 !== r.end) return {result: r.end - r.duration, precise: !0}
                            }
                            for (; n--;) {
                                if (void 0 !== (r = e.segments[n]).end) return {result: i + r.end, precise: !0};
                                if (i += r.duration, void 0 !== r.start) return {result: i + r.start, precise: !0}
                            }
                            return {result: i, precise: !1}
                        }(e, t)).precise ? n.result : (r = function (e, t) {
                            for (var i = 0, n = void 0, r = t - e.mediaSequence; r < e.segments.length; r++) {
                                if (void 0 !== (n = e.segments[r]).start) return {result: n.start - i, precise: !0};
                                if (i += n.duration, void 0 !== n.end) return {result: n.end - i, precise: !0}
                            }
                            return {result: -1, precise: !1}
                        }(e, t)).precise ? r.result : n.result + i
                    }, u = function (e, t, i) {
                        if (!e) return 0;
                        if ("number" != typeof i && (i = 0), void 0 === t) {
                            if (e.totalDuration) return e.totalDuration;
                            if (!e.endList) return s.default.Infinity
                        }
                        return o(e, t, i)
                    };
                i.duration = u;
                var l = function (e, t, i) {
                    var n = 0;
                    if (t > i) {
                        var r = [i, t];
                        t = r[0], i = r[1]
                    }
                    if (t < 0) {
                        for (var a = t; a < Math.min(0, i); a++) n += e.targetDuration;
                        t = 0
                    }
                    for (a = t; a < i; a++) e.segments[a] && (n += e.segments[a].duration);
                    return n
                };
                i.sumDurations = l;
                var d = function (e) {
                    if (!e.segments.length) return 0;
                    for (var t = e.segments.length - 1, i = e.segments[t].duration || e.targetDuration, n = i + 2 * e.targetDuration; t-- && !((i += e.segments[t].duration) >= n);) ;
                    return Math.max(0, t)
                };
                i.safeLiveIndex = d;
                var c = function (e, t, i) {
                    if (!e || !e.segments) return null;
                    if (e.endList) return u(e);
                    if (null === t) return null;
                    t = t || 0;
                    var n = i ? d(e) : e.segments.length;
                    return o(e, e.mediaSequence + n, t)
                };
                i.playlistEnd = c;
                var h = function (e, t) {
                    var i = t || 0, n = c(e, t, !0);
                    return null === n ? (0, r.createTimeRange)() : (0, r.createTimeRange)(i, n)
                };
                i.seekable = h;
                var f = function (e) {
                    return e - Math.floor(e) == 0
                }, p = function (e, t) {
                    if (f(t)) return t + .1 * e;
                    for (var i = t.toString().split(".")[1].length, n = 1; n <= i; n++) {
                        var r = Math.pow(10, n), a = t * r;
                        if (f(a) || n === i) return (a + e) / r
                    }
                }, m = p.bind(null, 1), g = p.bind(null, -1), y = function (e, t, i, n) {
                    var r = void 0, a = void 0, s = e.segments.length, o = t - n;
                    if (o < 0) {
                        if (i > 0) for (r = i - 1; r >= 0; r--) if (a = e.segments[r], (o += g(a.duration)) > 0) return {
                            mediaIndex: r,
                            startTime: n - l(e, i, r)
                        };
                        return {mediaIndex: 0, startTime: t}
                    }
                    if (i < 0) {
                        for (r = i; r < 0; r++) if ((o -= e.targetDuration) < 0) return {mediaIndex: 0, startTime: t};
                        i = 0
                    }
                    for (r = i; r < s; r++) if (a = e.segments[r], (o -= m(a.duration)) < 0) return {
                        mediaIndex: r,
                        startTime: n + l(e, i, r)
                    };
                    return {mediaIndex: s - 1, startTime: t}
                };
                i.getMediaInfoForTime = y;
                var _ = function (e) {
                    return e.excludeUntil && e.excludeUntil > Date.now()
                };
                i.isBlacklisted = _;
                var v = function (e) {
                    return e.excludeUntil && e.excludeUntil === 1 / 0
                };
                i.isIncompatible = v;
                var b = function (e) {
                    var t = _(e);
                    return !e.disabled && !t
                };
                i.isEnabled = b;
                var T = function (e) {
                    return e.disabled
                };
                i.isDisabled = T;
                var S = function (e) {
                    for (var t = 0; t < e.segments.length; t++) if (e.segments[t].key) return !0;
                    return !1
                };
                i.isAes = S;
                var k = function (e) {
                    for (var t = 0; t < e.segments.length; t++) if (e.segments[t].map) return !0;
                    return !1
                };
                i.isFmp4 = k;
                var w = function (e, t) {
                    return t.attributes && t.attributes[e]
                };
                i.hasAttribute = w;
                var E = function (e, t, i) {
                    var n = arguments.length <= 3 || void 0 === arguments[3] ? 0 : arguments[3];
                    if (!w("BANDWIDTH", i)) return NaN;
                    return (e * i.attributes.BANDWIDTH - 8 * n) / t
                };
                i.estimateSegmentRequestTime = E;
                var C = function (e, t) {
                    if (1 === e.playlists.length) return !0;
                    var i = t.attributes.BANDWIDTH || Number.MAX_VALUE;
                    return 0 === e.playlists.filter(function (e) {
                        return !!b(e) && (e.attributes.BANDWIDTH || 0) < i
                    }).length
                };
                i.isLowestEnabledRendition = C, i.default = {
                    duration: u,
                    seekable: h,
                    safeLiveIndex: d,
                    getMediaInfoForTime: y,
                    isEnabled: b,
                    isDisabled: T,
                    isBlacklisted: _,
                    isIncompatible: v,
                    playlistEnd: c,
                    isAes: S,
                    isFmp4: k,
                    hasAttribute: w,
                    estimateSegmentRequestTime: E,
                    isLowestEnabledRendition: C
                }
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {"global/window": 32}],
        12: [function (e, t, i) {
            (function (e) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var n = function () {
                    return function (e, t) {
                        if (Array.isArray(e)) return e;
                        if (Symbol.iterator in Object(e)) return function (e, t) {
                            var i = [], n = !0, r = !1, a = void 0;
                            try {
                                for (var s, o = e[Symbol.iterator](); !(n = (s = o.next()).done) && (i.push(s.value), !t || i.length !== t); n = !0) ;
                            } catch (e) {
                                r = !0, a = e
                            } finally {
                                try {
                                    !n && o.return && o.return()
                                } finally {
                                    if (r) throw a
                                }
                            }
                            return i
                        }(e, t);
                        throw new TypeError("Invalid attempt to destructure non-iterable instance")
                    }
                }();
                var r, a = "undefined" != typeof window ? window.videojs : void 0 !== e ? e.videojs : null,
                    s = (r = a, r && r.__esModule ? r : {default: r}), o = function (e, t) {
                        var i = [], n = void 0;
                        if (e && e.length) for (n = 0; n < e.length; n++) t(e.start(n), e.end(n)) && i.push([e.start(n), e.end(n)]);
                        return s.default.createTimeRanges(i)
                    }, u = function (e, t) {
                        var i = null, n = null, r = 0, a = [], o = [];
                        if (!(e && e.length && t && t.length)) return s.default.createTimeRange();
                        for (var u = e.length; u--;) a.push({time: e.start(u), type: "start"}), a.push({
                            time: e.end(u),
                            type: "end"
                        });
                        for (u = t.length; u--;) a.push({time: t.start(u), type: "start"}), a.push({
                            time: t.end(u),
                            type: "end"
                        });
                        for (a.sort(function (e, t) {
                            return e.time - t.time
                        }), u = 0; u < a.length; u++) "start" === a[u].type ? 2 === ++r && (i = a[u].time) : "end" === a[u].type && 1 === --r && (n = a[u].time), null !== i && null !== n && (o.push([i, n]), i = null, n = null);
                        return s.default.createTimeRanges(o)
                    };
                i.default = {
                    findRange: function (e, t) {
                        return o(e, function (e, i) {
                            return e - 1 / 30 <= t && i + 1 / 30 >= t
                        })
                    }, findNextRange: function (e, t) {
                        return o(e, function (e) {
                            return e - 1 / 30 >= t
                        })
                    }, findGaps: function (e) {
                        if (e.length < 2) return s.default.createTimeRanges();
                        for (var t = [], i = 1; i < e.length; i++) {
                            var n = e.end(i - 1), r = e.start(i);
                            t.push([n, r])
                        }
                        return s.default.createTimeRanges(t)
                    }, findSoleUncommonTimeRangesEnd: function (e, t) {
                        var i = void 0, n = void 0, r = void 0, a = [], s = [], o = function (e) {
                            return e[0] <= r && e[1] >= r
                        };
                        if (e) for (i = 0; i < e.length; i++) n = e.start(i), r = e.end(i), s.push([n, r]);
                        if (t) for (i = 0; i < t.length; i++) n = t.start(i), r = t.end(i), s.some(o) || a.push(r);
                        return 1 !== a.length ? null : a[0]
                    }, getSegmentBufferedPercent: function (e, t, i, r) {
                        var a = e + t, o = s.default.createTimeRanges([[e, a]]),
                            l = s.default.createTimeRanges([[function (e, t) {
                                var i = n(t, 2), r = i[0], a = i[1];
                                return Math.min(Math.max(r, e), a)
                            }(e, [i, a]), a]]);
                        if (l.start(0) === l.end(0)) return 0;
                        var d = function (e, t, i, n) {
                            for (var r = t.end(0) - t.start(0), a = r - (e.end(0) - e.start(0)), s = u(e, n), o = u(t, n), l = 0, d = 0, c = s.length; c--;) l += s.end(c) - s.start(c), s.start(c) === i && (l += a);
                            for (c = o.length; c--;) d += o.end(c) - o.start(c);
                            return Math.max(l, d) / r * 100
                        }(l, o, i, r);
                        return isNaN(d) || d === 1 / 0 || d === -1 / 0 ? 0 : d
                    }, TIME_FUDGE_FACTOR: 1 / 30, SAFE_TIME_DELTA: .1, printableRange: function (e) {
                        var t = [];
                        if (!e || !e.length) return "";
                        for (var i = 0; i < e.length; i++) t.push(e.start(i) + " => " + e.end(i));
                        return t.join(", ")
                    }, timeUntilRebuffer: function (e, t) {
                        var i = arguments.length <= 2 || void 0 === arguments[2] ? 1 : arguments[2];
                        return ((e.length ? e.end(e.length - 1) : 0) - t) / i
                    }
                }, t.exports = i.default
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {}],
        13: [function (e, t, i) {
            (function (e) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var n, r = "undefined" != typeof window ? window.videojs : void 0 !== e ? e.videojs : null,
                    a = (n = r, n && n.__esModule ? n : {default: n}), s = {
                        errorInterval: 30, getSource: function (e) {
                            return e(this.tech({IWillNotUseThisInPlugins: !0}).currentSource_)
                        }
                    };
                i.default = function (e) {
                    !function e(t, i) {
                        var n = 0, r = 0, o = a.default.mergeOptions(s, i);
                        t.ready(function () {
                            t.trigger({type: "usage", name: "hls-error-reload-initialized"})
                        });
                        var u = function () {
                            r && t.currentTime(r)
                        }, l = function (e) {
                            null !== e && void 0 !== e && (r = t.duration() !== 1 / 0 && t.currentTime() || 0, t.one("loadedmetadata", u), t.src(e), t.trigger({
                                type: "usage",
                                name: "hls-error-reload"
                            }), t.play())
                        }, d = function () {
                            if (Date.now() - n < 1e3 * o.errorInterval) t.trigger({
                                type: "usage",
                                name: "hls-error-reload-canceled"
                            }); else {
                                if (o.getSource && "function" == typeof o.getSource) return n = Date.now(), o.getSource.call(t, l);
                                a.default.log.error("ERROR: reloadSourceOnError - The option getSource must be a function!")
                            }
                        }, c = function e() {
                            t.off("loadedmetadata", u), t.off("error", d), t.off("dispose", e)
                        };
                        t.on("error", d), t.on("dispose", c), t.reloadSourceOnError = function (i) {
                            c(), e(t, i)
                        }
                    }(this, e)
                }, t.exports = i.default
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {}],
        14: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = e("./playlist.js"), r = function e(t, i, r) {
                !function (e, t) {
                    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                }(this, e);
                var a = t.masterPlaylistController_.fastQualityChange_.bind(t.masterPlaylistController_);
                if (i.attributes.RESOLUTION) {
                    var s = i.attributes.RESOLUTION;
                    this.width = s.width, this.height = s.height
                }
                this.bandwidth = i.attributes.BANDWIDTH, this.id = r, this.enabled = (o = t.playlists, u = i.uri, l = a, function (e) {
                    var t = o.master.playlists[u], i = (0, n.isIncompatible)(t), r = (0, n.isEnabled)(t);
                    return void 0 === e ? r : (e ? delete t.disabled : t.disabled = !0, e === r || i || (l(), e ? o.trigger("renditionenabled") : o.trigger("renditiondisabled")), e)
                });
                var o, u, l
            };
            i.default = function (e) {
                var t = e.playlists;
                e.representations = function () {
                    return t.master.playlists.filter(function (e) {
                        return !(0, n.isIncompatible)(e)
                    }).map(function (t, i) {
                        return new r(e, t, t.uri)
                    })
                }
            }, t.exports = i.default
        }, {"./playlist.js": 11}],
        15: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});

            function n(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var r = n(e("url-toolkit")), a = n(e("global/window"));
            i.default = function (e, t) {
                return /^[a-z]+:/i.test(t) ? t : (/\/\//i.test(e) || (e = r.default.buildAbsoluteURL(a.default.location.href, e)), r.default.buildAbsoluteURL(e, t))
            }, t.exports = i.default
        }, {"global/window": 32, "url-toolkit": 63}],
        16: [function (e, t, i) {
            (function (t) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var n = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), r = function (e, t, i) {
                    for (var n = !0; n;) {
                        var r = e, a = t, s = i;
                        n = !1, null === r && (r = Function.prototype);
                        var o = Object.getOwnPropertyDescriptor(r, a);
                        if (void 0 !== o) {
                            if ("value" in o) return o.value;
                            var u = o.get;
                            if (void 0 === u) return;
                            return u.call(s)
                        }
                        var l = Object.getPrototypeOf(r);
                        if (null === l) return;
                        e = l, t = a, i = s, n = !0, o = l = void 0
                    }
                };

                function a(e) {
                    return e && e.__esModule ? e : {default: e}
                }

                var s = a(e("./playlist")),
                    o = a("undefined" != typeof window ? window.videojs : void 0 !== t ? t.videojs : null),
                    u = a(e("./source-updater")), l = a(e("./config")), d = a(e("global/window")),
                    c = a(e("videojs-contrib-media-sources/es5/remove-cues-from-track.js")), h = e("./bin-utils"),
                    f = e("./media-segment-request"), p = e("./ranges"), m = e("./playlist-selectors"),
                    g = function (e, t, i) {
                        if (!e || !t) return !1;
                        var n = i === e.segments.length;
                        return e.endList && "open" === t.readyState && n
                    }, y = function (e) {
                        return "number" == typeof e && isFinite(e)
                    }, _ = function (e, t, i) {
                        return "main" === e && t && i ? i.containsAudio || i.containsVideo ? t.containsVideo && !i.containsVideo ? "Only audio found in segment when we expected video. We can't switch to audio only from a stream that had video. To get rid of this message, please add codec information to the manifest." : !t.containsVideo && i.containsVideo ? "Video found in segment when we expected only audio. We can't switch to a stream with video from an audio only stream. To get rid of this message, please add codec information to the manifest." : null : "Neither audio nor video found in segment." : null
                    };
                i.illegalMediaSwitch = _;
                var v = function (e, t, i) {
                    var n = void 0;
                    return n = e.length && e.start(0) > 0 && e.start(0) < t ? e.start(0) : t - 30, Math.min(n, t - i)
                };
                i.safeBackBufferTrimTime = v;
                var b = function (e) {
                    !function (e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                        e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                    }(t, o["default"].EventTarget);

                    function t(e) {
                        var i = this, n = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
                        if (function (e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), r(Object.getPrototypeOf(t.prototype), "constructor", this).call(this), !e) throw new TypeError("Initialization settings are required");
                        if ("function" != typeof e.currentTime) throw new TypeError("No currentTime getter specified");
                        if (!e.mediaSource) throw new TypeError("No MediaSource specified");
                        this.state = "INIT", this.bandwidth = e.bandwidth, this.throughput = {
                            rate: 0,
                            count: 0
                        }, this.roundTrip = NaN, this.resetStats_(), this.mediaIndex = null, this.hasPlayed_ = e.hasPlayed, this.currentTime_ = e.currentTime, this.seekable_ = e.seekable, this.seeking_ = e.seeking, this.duration_ = e.duration, this.mediaSource_ = e.mediaSource, this.hls_ = e.hls, this.loaderType_ = e.loaderType, this.startingMedia_ = void 0, this.segmentMetadataTrack_ = e.segmentMetadataTrack, this.goalBufferLength_ = e.goalBufferLength, this.checkBufferTimeout_ = null, this.error_ = void 0, this.currentTimeline_ = -1, this.pendingSegment_ = null, this.mimeType_ = null, this.sourceUpdater_ = null, this.xhrOptions_ = null, this.activeInitSegmentId_ = null, this.initSegments_ = {}, this.decrypter_ = e.decrypter, this.syncController_ = e.syncController, this.syncPoint_ = {
                            segmentIndex: 0,
                            time: 0
                        }, this.syncController_.on("syncinfoupdate", function () {
                            return i.trigger("syncinfoupdate")
                        }), this.mediaSource_.addEventListener("sourceopen", function () {
                            return i.ended_ = !1
                        }), this.fetchAtBuffer_ = !1, n.debug && (this.logger_ = o.default.log.bind(o.default, "segment-loader", this.loaderType_, "->"))
                    }

                    return n(t, [{
                        key: "resetStats_", value: function () {
                            this.mediaBytesTransferred = 0, this.mediaRequests = 0, this.mediaRequestsAborted = 0, this.mediaRequestsTimedout = 0, this.mediaRequestsErrored = 0, this.mediaTransferDuration = 0, this.mediaSecondsLoaded = 0
                        }
                    }, {
                        key: "dispose", value: function () {
                            this.state = "DISPOSED", this.pause(), this.abort_(), this.sourceUpdater_ && this.sourceUpdater_.dispose(), this.resetStats_()
                        }
                    }, {
                        key: "abort", value: function () {
                            "WAITING" === this.state ? (this.abort_(), this.state = "READY", this.paused() || this.monitorBuffer_()) : this.pendingSegment_ && (this.pendingSegment_ = null)
                        }
                    }, {
                        key: "abort_", value: function () {
                            this.pendingSegment_ && this.pendingSegment_.abortRequests(), this.pendingSegment_ = null
                        }
                    }, {
                        key: "error", value: function (e) {
                            return void 0 !== e && (this.error_ = e), this.pendingSegment_ = null, this.error_
                        }
                    }, {
                        key: "endOfStream", value: function () {
                            this.ended_ = !0, this.pause(), this.trigger("ended")
                        }
                    }, {
                        key: "buffered_", value: function () {
                            return this.sourceUpdater_ ? this.sourceUpdater_.buffered() : o.default.createTimeRanges()
                        }
                    }, {
                        key: "initSegment", value: function (e) {
                            var t = !(arguments.length <= 1 || void 0 === arguments[1]) && arguments[1];
                            if (!e) return null;
                            var i = (0, h.initSegmentId)(e), n = this.initSegments_[i];
                            return t && !n && e.bytes && (this.initSegments_[i] = n = {
                                resolvedUri: e.resolvedUri,
                                byterange: e.byterange,
                                bytes: e.bytes
                            }), n || e
                        }
                    }, {
                        key: "couldBeginLoading_", value: function () {
                            return this.playlist_ && (this.sourceUpdater_ || this.mimeType_ && "INIT" === this.state) && !this.paused()
                        }
                    }, {
                        key: "load", value: function () {
                            if (this.monitorBuffer_(), this.playlist_) {
                                if (this.syncController_.setDateTimeMapping(this.playlist_), "INIT" === this.state && this.couldBeginLoading_()) return this.init_();
                                !this.couldBeginLoading_() || "READY" !== this.state && "INIT" !== this.state || (this.state = "READY")
                            }
                        }
                    }, {
                        key: "init_", value: function () {
                            return this.state = "READY", this.sourceUpdater_ = new u.default(this.mediaSource_, this.mimeType_), this.resetEverything(), this.monitorBuffer_()
                        }
                    }, {
                        key: "playlist", value: function (e) {
                            var t = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
                            if (e) {
                                var i = this.playlist_, n = this.pendingSegment_;
                                if (this.playlist_ = e, this.xhrOptions_ = t, this.hasPlayed_() || (e.syncInfo = {
                                    mediaSequence: e.mediaSequence,
                                    time: 0
                                }), this.trigger("syncinfoupdate"), "INIT" === this.state && this.couldBeginLoading_()) return this.init_();
                                if (i && i.uri === e.uri) {
                                    var r = e.mediaSequence - i.mediaSequence;
                                    this.logger_("mediaSequenceDiff", r), null !== this.mediaIndex && (this.mediaIndex -= r), n && (n.mediaIndex -= r, n.mediaIndex >= 0 && (n.segment = e.segments[n.mediaIndex])), this.syncController_.saveExpiredSegmentInfo(i, e)
                                } else null !== this.mediaIndex && this.resyncLoader()
                            }
                        }
                    }, {
                        key: "pause", value: function () {
                            this.checkBufferTimeout_ && (d.default.clearTimeout(this.checkBufferTimeout_), this.checkBufferTimeout_ = null)
                        }
                    }, {
                        key: "paused", value: function () {
                            return null === this.checkBufferTimeout_
                        }
                    }, {
                        key: "mimeType", value: function (e) {
                            this.mimeType_ || (this.mimeType_ = e, "INIT" === this.state && this.couldBeginLoading_() && this.init_())
                        }
                    }, {
                        key: "resetEverything", value: function () {
                            this.ended_ = !1, this.resetLoader(), this.remove(0, this.duration_()), this.trigger("reseteverything")
                        }
                    }, {
                        key: "resetLoader", value: function () {
                            this.fetchAtBuffer_ = !1, this.resyncLoader()
                        }
                    }, {
                        key: "resyncLoader", value: function () {
                            this.mediaIndex = null, this.syncPoint_ = null, this.abort()
                        }
                    }, {
                        key: "remove", value: function (e, t) {
                            this.sourceUpdater_ && this.sourceUpdater_.remove(e, t), (0, c.default)(e, t, this.segmentMetadataTrack_)
                        }
                    }, {
                        key: "monitorBuffer_", value: function () {
                            this.checkBufferTimeout_ && d.default.clearTimeout(this.checkBufferTimeout_), this.checkBufferTimeout_ = d.default.setTimeout(this.monitorBufferTick_.bind(this), 1)
                        }
                    }, {
                        key: "monitorBufferTick_", value: function () {
                            "READY" === this.state && this.fillBuffer_(), this.checkBufferTimeout_ && d.default.clearTimeout(this.checkBufferTimeout_), this.checkBufferTimeout_ = d.default.setTimeout(this.monitorBufferTick_.bind(this), 500)
                        }
                    }, {
                        key: "fillBuffer_", value: function () {
                            if (!this.sourceUpdater_.updating()) {
                                this.syncPoint_ || (this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_()));
                                var e = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);
                                if (e) {
                                    g(this.playlist_, this.mediaSource_, e.mediaIndex) ? this.endOfStream() : (e.mediaIndex !== this.playlist_.segments.length - 1 || "ended" !== this.mediaSource_.readyState || this.seeking_()) && ((e.timeline !== this.currentTimeline_ || null !== e.startOfSegment && e.startOfSegment < this.sourceUpdater_.timestampOffset()) && (this.syncController_.reset(), e.timestampOffset = e.startOfSegment), this.loadSegment_(e))
                                }
                            }
                        }
                    }, {
                        key: "checkBuffer_", value: function (e, t, i, n, r, a) {
                            var o = 0, u = void 0;
                            e.length && (o = e.end(e.length - 1));
                            var l = Math.max(0, o - r);
                            if (!t.segments.length) return null;
                            if (l >= this.goalBufferLength_()) return null;
                            if (!n && l >= 1) return null;
                            if (this.logger_("checkBuffer_", "mediaIndex:", i, "hasPlayed:", n, "currentTime:", r, "syncPoint:", a, "fetchAtBuffer:", this.fetchAtBuffer_, "bufferedTime:", l), null === a) return i = this.getSyncSegmentCandidate_(t), this.logger_("getSync", "mediaIndex:", i), this.generateSegmentInfo_(t, i, null, !0);
                            if (null !== i) {
                                this.logger_("walkForward", "mediaIndex:", i + 1);
                                var d = t.segments[i];
                                return u = d && d.end ? d.end : o, this.generateSegmentInfo_(t, i + 1, u, !1)
                            }
                            if (this.fetchAtBuffer_) {
                                i = (c = s.default.getMediaInfoForTime(t, o, a.segmentIndex, a.time)).mediaIndex, u = c.startTime
                            } else {
                                var c;
                                i = (c = s.default.getMediaInfoForTime(t, r, a.segmentIndex, a.time)).mediaIndex, u = c.startTime
                            }
                            return this.logger_("getMediaIndexForTime", "mediaIndex:", i, "startOfSegment:", u), this.generateSegmentInfo_(t, i, u, !1)
                        }
                    }, {
                        key: "getSyncSegmentCandidate_", value: function (e) {
                            var t = this;
                            if (-1 === this.currentTimeline_) return 0;
                            var i = e.segments.map(function (e, t) {
                                return {timeline: e.timeline, segmentIndex: t}
                            }).filter(function (e) {
                                return e.timeline === t.currentTimeline_
                            });
                            return i.length ? i[Math.min(i.length - 1, 1)].segmentIndex : Math.max(e.segments.length - 1, 0)
                        }
                    }, {
                        key: "generateSegmentInfo_", value: function (e, t, i, n) {
                            if (t < 0 || t >= e.segments.length) return null;
                            var r = e.segments[t];
                            return {
                                requestId: "segment-loader-" + Math.random(),
                                uri: r.resolvedUri,
                                mediaIndex: t,
                                isSyncRequest: n,
                                startOfSegment: i,
                                playlist: e,
                                bytes: null,
                                encryptedBytes: null,
                                timestampOffset: null,
                                timeline: r.timeline,
                                duration: r.duration,
                                segment: r
                            }
                        }
                    }, {
                        key: "abortRequestEarly_", value: function (e) {
                            if (this.hls_.tech_.paused() || !this.xhrOptions_.timeout || !this.playlist_.attributes.BANDWIDTH) return !1;
                            if (Date.now() - (e.firstBytesReceivedAt || Date.now()) < 1e3) return !1;
                            var t = this.currentTime_(), i = e.bandwidth, n = this.pendingSegment_.duration,
                                r = s.default.estimateSegmentRequestTime(n, i, this.playlist_, e.bytesReceived),
                                a = (0, p.timeUntilRebuffer)(this.buffered_(), t, this.hls_.tech_.playbackRate()) - 1;
                            if (r <= a) return !1;
                            var o = (0, m.minRebufferMaxBandwidthSelector)({
                                master: this.hls_.playlists.master,
                                currentTime: t,
                                bandwidth: i,
                                duration: this.duration_(),
                                segmentDuration: n,
                                timeUntilRebuffer: a,
                                currentTimeline: this.currentTimeline_,
                                syncController: this.syncController_
                            });
                            if (o) {
                                var u = r - a - o.rebufferingImpact, d = .5;
                                return a <= p.TIME_FUDGE_FACTOR && (d = 1), !o.playlist || o.playlist.uri === this.playlist_.uri || u < d ? !1 : (this.bandwidth = o.playlist.attributes.BANDWIDTH * l.default.BANDWIDTH_VARIANCE + 1, this.abort(), this.trigger("earlyabort"), !0)
                            }
                        }
                    }, {
                        key: "handleProgress_", value: function (e, t) {
                            this.pendingSegment_ && t.requestId === this.pendingSegment_.requestId && !this.abortRequestEarly_(t.stats) && this.trigger("progress")
                        }
                    }, {
                        key: "loadSegment_", value: function (e) {
                            this.state = "WAITING", this.pendingSegment_ = e, this.trimBackBuffer_(e), e.abortRequests = (0, f.mediaSegmentRequest)(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.createSimplifiedSegmentObj_(e), this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this))
                        }
                    }, {
                        key: "trimBackBuffer_", value: function (e) {
                            var t = v(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);
                            t > 0 && this.remove(0, t)
                        }
                    }, {
                        key: "createSimplifiedSegmentObj_", value: function (e) {
                            var t = e.segment,
                                i = {resolvedUri: t.resolvedUri, byterange: t.byterange, requestId: e.requestId};
                            if (t.key) {
                                var n = t.key.iv || new Uint32Array([0, 0, 0, e.mediaIndex + e.playlist.mediaSequence]);
                                i.key = {resolvedUri: t.key.resolvedUri, iv: n}
                            }
                            return t.map && (i.map = this.initSegment(t.map)), i
                        }
                    }, {
                        key: "segmentRequestFinished_", value: function (e, t) {
                            if (this.mediaRequests += 1, t.stats && (this.mediaBytesTransferred += t.stats.bytesReceived, this.mediaTransferDuration += t.stats.roundTripTime), this.pendingSegment_) {
                                if (t.requestId === this.pendingSegment_.requestId) {
                                    if (e) return this.pendingSegment_ = null, this.state = "READY", e.code === f.REQUEST_ERRORS.ABORTED ? void(this.mediaRequestsAborted += 1) : (this.pause(), e.code === f.REQUEST_ERRORS.TIMEOUT ? (this.mediaRequestsTimedout += 1, this.bandwidth = 1, this.roundTrip = NaN, void this.trigger("bandwidthupdate")) : (this.mediaRequestsErrored += 1, this.error(e), void this.trigger("error")));
                                    this.bandwidth = t.stats.bandwidth, this.roundTrip = t.stats.roundTripTime, t.map && (t.map = this.initSegment(t.map, !0)), this.processSegmentResponse_(t)
                                }
                            } else this.mediaRequestsAborted += 1
                        }
                    }, {
                        key: "processSegmentResponse_", value: function (e) {
                            var t = this.pendingSegment_;
                            t.bytes = e.bytes, e.map && (t.segment.map.bytes = e.map.bytes), t.endOfAllRequests = e.endOfAllRequests, this.handleSegment_()
                        }
                    }, {
                        key: "handleSegment_", value: function () {
                            var e = this;
                            if (this.pendingSegment_) {
                                var t = this.pendingSegment_, i = t.segment,
                                    n = this.syncController_.probeSegmentInfo(t);
                                void 0 === this.startingMedia_ && n && (n.containsAudio || n.containsVideo) && (this.startingMedia_ = {
                                    containsAudio: n.containsAudio,
                                    containsVideo: n.containsVideo
                                });
                                var r = _(this.loaderType_, this.startingMedia_, n);
                                if (r) return this.error({
                                    message: r,
                                    blacklistDuration: 1 / 0
                                }), void this.trigger("error");
                                if (t.isSyncRequest) return this.trigger("syncinfoupdate"), this.pendingSegment_ = null, void(this.state = "READY");
                                null !== t.timestampOffset && t.timestampOffset !== this.sourceUpdater_.timestampOffset() && (this.sourceUpdater_.timestampOffset(t.timestampOffset), this.trigger("timestampoffset"));
                                var a = this.syncController_.mappingForTimeline(t.timeline);
                                null !== a && this.trigger({
                                    type: "segmenttimemapping",
                                    mapping: a
                                }), this.state = "APPENDING", i.map && function () {
                                    var t = (0, h.initSegmentId)(i.map);
                                    if (!e.activeInitSegmentId_ || e.activeInitSegmentId_ !== t) {
                                        var n = e.initSegment(i.map);
                                        e.sourceUpdater_.appendBuffer(n.bytes, function () {
                                            e.activeInitSegmentId_ = t
                                        })
                                    }
                                }(), t.byteLength = t.bytes.byteLength, "number" == typeof i.start && "number" == typeof i.end ? this.mediaSecondsLoaded += i.end - i.start : this.mediaSecondsLoaded += i.duration, this.sourceUpdater_.appendBuffer(t.bytes, this.handleUpdateEnd_.bind(this))
                            } else this.state = "READY"
                        }
                    }, {
                        key: "handleUpdateEnd_", value: function () {
                            if (this.logger_("handleUpdateEnd_", "segmentInfo:", this.pendingSegment_), !this.pendingSegment_) return this.state = "READY", void(this.paused() || this.monitorBuffer_());
                            var e = this.pendingSegment_, t = e.segment, i = null !== this.mediaIndex;
                            if (this.pendingSegment_ = null, this.recordThroughput_(e), this.addSegmentMetadataCue_(e), this.state = "READY", this.mediaIndex = e.mediaIndex, this.fetchAtBuffer_ = !0, this.currentTimeline_ = e.timeline, this.trigger("syncinfoupdate"), t.end && this.currentTime_() - t.end > 3 * e.playlist.targetDuration) this.resetEverything(); else {
                                i && this.trigger("bandwidthupdate"), this.trigger("progress");
                                g(e.playlist, this.mediaSource_, e.mediaIndex + 1) && this.endOfStream(), this.paused() || this.monitorBuffer_()
                            }
                        }
                    }, {
                        key: "recordThroughput_", value: function (e) {
                            var t = this.throughput.rate, i = Date.now() - e.endOfAllRequests + 1,
                                n = Math.floor(e.byteLength / i * 8 * 1e3);
                            this.throughput.rate += (n - t) / ++this.throughput.count
                        }
                    }, {
                        key: "logger_", value: function () {
                        }
                    }, {
                        key: "addSegmentMetadataCue_", value: function (e) {
                            if (this.segmentMetadataTrack_) {
                                var t = e.segment, i = t.start, n = t.end;
                                if (y(i) && y(n)) {
                                    (0, c.default)(i, n, this.segmentMetadataTrack_);
                                    var r = d.default.WebKitDataCue || d.default.VTTCue, a = {
                                        bandwidth: e.playlist.attributes.BANDWIDTH,
                                        resolution: e.playlist.attributes.RESOLUTION,
                                        codecs: e.playlist.attributes.CODECS,
                                        byteLength: e.byteLength,
                                        uri: e.uri,
                                        timeline: e.timeline,
                                        playlist: e.playlist.uri,
                                        start: i,
                                        end: n
                                    }, s = new r(i, n, JSON.stringify(a));
                                    s.value = a, this.segmentMetadataTrack_.addCue(s)
                                }
                            }
                        }
                    }]), t
                }();
                i.default = b
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "./bin-utils": 2,
            "./config": 3,
            "./media-segment-request": 7,
            "./playlist": 11,
            "./playlist-selectors": 10,
            "./ranges": 12,
            "./source-updater": 17,
            "global/window": 32,
            "videojs-contrib-media-sources/es5/remove-cues-from-track.js": 72
        }],
        17: [function (e, t, i) {
            (function (e) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var n = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }();
                var r, a = "undefined" != typeof window ? window.videojs : void 0 !== e ? e.videojs : null,
                    s = (r = a, r && r.__esModule ? r : {default: r}), o = function () {
                    }, u = function () {
                        function e(t, i) {
                            var n = this;
                            !function (e, t) {
                                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                            }(this, e);
                            var r = function () {
                                n.sourceBuffer_ = t.addSourceBuffer(i), n.onUpdateendCallback_ = function () {
                                    var e = n.pendingCallback_;
                                    n.pendingCallback_ = null, e && e(), n.runCallback_()
                                }, n.sourceBuffer_.addEventListener("updateend", n.onUpdateendCallback_), n.runCallback_()
                            };
                            this.callbacks_ = [], this.pendingCallback_ = null, this.timestampOffset_ = 0, this.mediaSource = t, this.processedAppend_ = !1, "closed" === t.readyState ? t.addEventListener("sourceopen", r) : r()
                        }

                        return n(e, [{
                            key: "abort", value: function (e) {
                                var t = this;
                                this.processedAppend_ && this.queueCallback_(function () {
                                    t.sourceBuffer_.abort()
                                }, e)
                            }
                        }, {
                            key: "appendBuffer", value: function (e, t) {
                                var i = this;
                                this.processedAppend_ = !0, this.queueCallback_(function () {
                                    i.sourceBuffer_.appendBuffer(e)
                                }, t)
                            }
                        }, {
                            key: "buffered", value: function () {
                                return this.sourceBuffer_ ? this.sourceBuffer_.buffered : s.default.createTimeRanges()
                            }
                        }, {
                            key: "remove", value: function (e, t) {
                                var i = this;
                                this.processedAppend_ && this.queueCallback_(function () {
                                    i.sourceBuffer_.remove(e, t)
                                }, o)
                            }
                        }, {
                            key: "updating", value: function () {
                                return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_
                            }
                        }, {
                            key: "timestampOffset", value: function (e) {
                                var t = this;
                                return void 0 !== e && (this.queueCallback_(function () {
                                    t.sourceBuffer_.timestampOffset = e
                                }), this.timestampOffset_ = e), this.timestampOffset_
                            }
                        }, {
                            key: "queueCallback_", value: function (e, t) {
                                this.callbacks_.push([e.bind(this), t]), this.runCallback_()
                            }
                        }, {
                            key: "runCallback_", value: function () {
                                var e = void 0;
                                !this.updating() && this.callbacks_.length && (e = this.callbacks_.shift(), this.pendingCallback_ = e[1], e[0]())
                            }
                        }, {
                            key: "dispose", value: function () {
                                this.sourceBuffer_.removeEventListener("updateend", this.onUpdateendCallback_), this.sourceBuffer_ && "open" === this.mediaSource.readyState && this.sourceBuffer_.abort()
                            }
                        }]), e
                    }();
                i.default = u, t.exports = i.default
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {}],
        18: [function (e, t, i) {
            (function (t) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var n = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), r = function (e, t, i) {
                    for (var n = !0; n;) {
                        var r = e, a = t, s = i;
                        n = !1, null === r && (r = Function.prototype);
                        var o = Object.getOwnPropertyDescriptor(r, a);
                        if (void 0 !== o) {
                            if ("value" in o) return o.value;
                            var u = o.get;
                            if (void 0 === u) return;
                            return u.call(s)
                        }
                        var l = Object.getPrototypeOf(r);
                        if (null === l) return;
                        e = l, t = a, i = s, n = !0, o = l = void 0
                    }
                };

                function a(e) {
                    return e && e.__esModule ? e : {default: e}
                }

                var s = a(e("mux.js/lib/mp4/probe")), o = e("mux.js/lib/tools/ts-inspector.js"), u = e("./playlist"),
                    l = a("undefined" != typeof window ? window.videojs : void 0 !== t ? t.videojs : null), d = [{
                        name: "VOD", run: function (e, t, i, n, r) {
                            if (i !== 1 / 0) {
                                return {time: 0, segmentIndex: 0}
                            }
                            return null
                        }
                    }, {
                        name: "ProgramDateTime", run: function (e, t, i, n, r) {
                            if (e.datetimeToDisplayTime && t.dateTimeObject) {
                                return {
                                    time: t.dateTimeObject.getTime() / 1e3 + e.datetimeToDisplayTime,
                                    segmentIndex: 0
                                }
                            }
                            return null
                        }
                    }, {
                        name: "Segment", run: function (e, t, i, n, r) {
                            var a = t.segments || [], s = null, o = null;
                            r = r || 0;
                            for (var u = 0; u < a.length; u++) {
                                var l = a[u];
                                if (l.timeline === n && void 0 !== l.start) {
                                    var d = Math.abs(r - l.start);
                                    if (null !== o && o < d) break;
                                    (!s || null === o || o >= d) && (o = d, s = {time: l.start, segmentIndex: u})
                                }
                            }
                            return s
                        }
                    }, {
                        name: "Discontinuity", run: function (e, t, i, n, r) {
                            var a = null;
                            if (r = r || 0, t.discontinuityStarts && t.discontinuityStarts.length) for (var s = null, o = 0; o < t.discontinuityStarts.length; o++) {
                                var u = t.discontinuityStarts[o], l = t.discontinuitySequence + o + 1,
                                    d = e.discontinuities[l];
                                if (d) {
                                    var c = Math.abs(r - d.time);
                                    if (null !== s && s < c) break;
                                    (!a || null === s || s >= c) && (s = c, a = {time: d.time, segmentIndex: u})
                                }
                            }
                            return a
                        }
                    }, {
                        name: "Playlist", run: function (e, t, i, n, r) {
                            if (t.syncInfo) {
                                return {time: t.syncInfo.time, segmentIndex: t.syncInfo.mediaSequence - t.mediaSequence}
                            }
                            return null
                        }
                    }];
                i.syncPointStrategies = d;
                var c = function (e) {
                    !function (e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                        e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                    }(t, l["default"].EventTarget);

                    function t() {
                        var e = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0];
                        !function (e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), r(Object.getPrototypeOf(t.prototype), "constructor", this).call(this), this.inspectCache_ = void 0, this.timelines = [], this.discontinuities = [], this.datetimeToDisplayTime = null, e.debug && (this.logger_ = l.default.log.bind(l.default, "sync-controller ->"))
                    }

                    return n(t, [{
                        key: "getSyncPoint", value: function (e, t, i, n) {
                            var r = this.runStrategies_(e, t, i, n);
                            return r.length ? this.selectSyncPoint_(r, {key: "time", value: n}) : null
                        }
                    }, {
                        key: "getExpiredTime", value: function (e, t) {
                            if (!e || !e.segments) return null;
                            var i = this.runStrategies_(e, t, e.discontinuitySequence, 0);
                            if (!i.length) return null;
                            var n = this.selectSyncPoint_(i, {key: "segmentIndex", value: 0});
                            return n.segmentIndex > 0 && (n.time *= -1), Math.abs(n.time + (0, u.sumDurations)(e, n.segmentIndex, 0))
                        }
                    }, {
                        key: "runStrategies_", value: function (e, t, i, n) {
                            for (var r = [], a = 0; a < d.length; a++) {
                                var s = d[a], o = s.run(this, e, t, i, n);
                                o && (o.strategy = s.name, r.push({
                                    strategy: s.name,
                                    syncPoint: o
                                }), this.logger_("syncPoint found via <" + s.name + ">:", o))
                            }
                            return r
                        }
                    }, {
                        key: "selectSyncPoint_", value: function (e, t) {
                            for (var i = e[0].syncPoint, n = Math.abs(e[0].syncPoint[t.key] - t.value), r = e[0].strategy, a = 1; a < e.length; a++) {
                                var s = Math.abs(e[a].syncPoint[t.key] - t.value);
                                s < n && (n = s, i = e[a].syncPoint, r = e[a].strategy)
                            }
                            return this.logger_("syncPoint with strategy <" + r + "> chosen: ", i), i
                        }
                    }, {
                        key: "saveExpiredSegmentInfo", value: function (e, t) {
                            for (var i = t.mediaSequence - e.mediaSequence - 1; i >= 0; i--) {
                                var n = e.segments[i];
                                if (n && void 0 !== n.start) {
                                    t.syncInfo = {
                                        mediaSequence: e.mediaSequence + i,
                                        time: n.start
                                    }, this.logger_("playlist sync:", t.syncInfo), this.trigger("syncinfoupdate");
                                    break
                                }
                            }
                        }
                    }, {
                        key: "setDateTimeMapping", value: function (e) {
                            if (!this.datetimeToDisplayTime && e.dateTimeObject) {
                                var t = e.dateTimeObject.getTime() / 1e3;
                                this.datetimeToDisplayTime = -t
                            }
                        }
                    }, {
                        key: "reset", value: function () {
                            this.inspectCache_ = void 0
                        }
                    }, {
                        key: "probeSegmentInfo", value: function (e) {
                            var t = e.segment, i = e.playlist, n = void 0;
                            return (n = t.map ? this.probeMp4Segment_(e) : this.probeTsSegment_(e)) && this.calculateSegmentTimeMapping_(e, n) && (this.saveDiscontinuitySyncInfo_(e), i.syncInfo || (i.syncInfo = {
                                mediaSequence: i.mediaSequence + e.mediaIndex,
                                time: t.start
                            })), n
                        }
                    }, {
                        key: "probeMp4Segment_", value: function (e) {
                            var t = e.segment, i = s.default.timescale(t.map.bytes),
                                n = s.default.startTime(i, e.bytes);
                            return null !== e.timestampOffset && (e.timestampOffset -= n), {
                                start: n,
                                end: n + t.duration
                            }
                        }
                    }, {
                        key: "probeTsSegment_", value: function (e) {
                            var t = (0, o.inspect)(e.bytes, this.inspectCache_), i = void 0, n = void 0;
                            return t ? (t.video && 2 === t.video.length ? (this.inspectCache_ = t.video[1].dts, i = t.video[0].dtsTime, n = t.video[1].dtsTime) : t.audio && 2 === t.audio.length && (this.inspectCache_ = t.audio[1].dts, i = t.audio[0].dtsTime, n = t.audio[1].dtsTime), {
                                start: i,
                                end: n,
                                containsVideo: t.video && 2 === t.video.length,
                                containsAudio: t.audio && 2 === t.audio.length
                            }) : null
                        }
                    }, {
                        key: "timestampOffsetForTimeline", value: function (e) {
                            return void 0 === this.timelines[e] ? null : this.timelines[e].time
                        }
                    }, {
                        key: "mappingForTimeline", value: function (e) {
                            return void 0 === this.timelines[e] ? null : this.timelines[e].mapping
                        }
                    }, {
                        key: "calculateSegmentTimeMapping_", value: function (e, t) {
                            var i = e.segment, n = this.timelines[e.timeline];
                            if (null !== e.timestampOffset) this.logger_("tsO:", e.timestampOffset), n = {
                                time: e.startOfSegment,
                                mapping: e.startOfSegment - t.start
                            }, this.timelines[e.timeline] = n, this.trigger("timestampoffset"), i.start = e.startOfSegment, i.end = t.end + n.mapping; else {
                                if (!n) return !1;
                                i.start = t.start + n.mapping, i.end = t.end + n.mapping
                            }
                            return !0
                        }
                    }, {
                        key: "saveDiscontinuitySyncInfo_", value: function (e) {
                            var t = e.playlist, i = e.segment;
                            if (i.discontinuity) this.discontinuities[i.timeline] = {
                                time: i.start,
                                accuracy: 0
                            }; else if (t.discontinuityStarts.length) for (var n = 0; n < t.discontinuityStarts.length; n++) {
                                var r = t.discontinuityStarts[n], a = t.discontinuitySequence + n + 1,
                                    s = r - e.mediaIndex, o = Math.abs(s);
                                if (!this.discontinuities[a] || this.discontinuities[a].accuracy > o) {
                                    var l = void 0;
                                    l = s < 0 ? i.start - (0, u.sumDurations)(t, e.mediaIndex, r) : i.end + (0, u.sumDurations)(t, e.mediaIndex + 1, r), this.discontinuities[a] = {
                                        time: l,
                                        accuracy: o
                                    }
                                }
                            }
                        }
                    }, {
                        key: "logger_", value: function () {
                        }
                    }]), t
                }();
                i.default = c
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {"./playlist": 11, "mux.js/lib/mp4/probe": 57, "mux.js/lib/tools/ts-inspector.js": 59}],
        19: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            i.parseCodecs = function () {
                var e = arguments.length <= 0 || void 0 === arguments[0] ? "" : arguments[0], t = {codecCount: 0},
                    i = void 0;
                return t.codecCount = e.split(",").length, t.codecCount = t.codecCount || 2, (i = /(^|\s|,)+(avc1)([^ ,]*)/i.exec(e)) && (t.videoCodec = i[2], t.videoObjectTypeIndicator = i[3]), t.audioProfile = /(^|\s|,)+mp4a.[0-9A-Fa-f]+\.([0-9A-Fa-f]+)/i.exec(e), t.audioProfile = t.audioProfile && t.audioProfile[2], t
            }
        }, {}],
        20: [function (e, t, i) {
            (function (n) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var r = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), a = function (e, t, i) {
                    for (var n = !0; n;) {
                        var r = e, a = t, s = i;
                        n = !1, null === r && (r = Function.prototype);
                        var o = Object.getOwnPropertyDescriptor(r, a);
                        if (void 0 !== o) {
                            if ("value" in o) return o.value;
                            var u = o.get;
                            if (void 0 === u) return;
                            return u.call(s)
                        }
                        var l = Object.getPrototypeOf(r);
                        if (null === l) return;
                        e = l, t = a, i = s, n = !0, o = l = void 0
                    }
                };

                function s(e) {
                    return e && e.__esModule ? e : {default: e}
                }

                var o = s(e("./segment-loader")),
                    u = s("undefined" != typeof window ? window.videojs : void 0 !== n ? n.videojs : null),
                    l = s(e("global/window")), d = s(e("videojs-contrib-media-sources/es5/remove-cues-from-track.js")),
                    c = e("./bin-utils"), h = new Uint8Array("\n\n".split("").map(function (e) {
                        return e.charCodeAt(0)
                    })), f = function (e) {
                        return String.fromCharCode.apply(null, e)
                    }, p = function (e) {
                        !function (e, t) {
                            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                            e.prototype = Object.create(t && t.prototype, {
                                constructor: {
                                    value: e,
                                    enumerable: !1,
                                    writable: !0,
                                    configurable: !0
                                }
                            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                        }(t, o["default"]);

                        function t(e) {
                            var i = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
                            !function (e, t) {
                                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                            }(this, t), a(Object.getPrototypeOf(t.prototype), "constructor", this).call(this, e, i), this.mediaSource_ = null, this.subtitlesTrack_ = null
                        }

                        return r(t, [{
                            key: "buffered_", value: function () {
                                if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) return u.default.createTimeRanges();
                                var e = this.subtitlesTrack_.cues, t = e[0].startTime, i = e[e.length - 1].startTime;
                                return u.default.createTimeRanges([[t, i]])
                            }
                        }, {
                            key: "initSegment", value: function (e) {
                                var t = !(arguments.length <= 1 || void 0 === arguments[1]) && arguments[1];
                                if (!e) return null;
                                var i = (0, c.initSegmentId)(e), n = this.initSegments_[i];
                                if (t && !n && e.bytes) {
                                    var r = h.byteLength + e.bytes.byteLength, a = new Uint8Array(r);
                                    a.set(e.bytes), a.set(h, e.bytes.byteLength), this.initSegments_[i] = n = {
                                        resolvedUri: e.resolvedUri,
                                        byterange: e.byterange,
                                        bytes: a
                                    }
                                }
                                return n || e
                            }
                        }, {
                            key: "couldBeginLoading_", value: function () {
                                return this.playlist_ && this.subtitlesTrack_ && !this.paused()
                            }
                        }, {
                            key: "init_", value: function () {
                                return this.state = "READY", this.resetEverything(), this.monitorBuffer_()
                            }
                        }, {
                            key: "track", value: function (e) {
                                return void 0 === e ? this.subtitlesTrack_ : (this.subtitlesTrack_ = e, "INIT" === this.state && this.couldBeginLoading_() && this.init_(), this.subtitlesTrack_)
                            }
                        }, {
                            key: "remove", value: function (e, t) {
                                (0, d.default)(e, t, this.subtitlesTrack_)
                            }
                        }, {
                            key: "fillBuffer_", value: function () {
                                var e = this;
                                this.syncPoint_ || (this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_()));
                                var t = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);
                                if (t = this.skipEmptySegments_(t)) {
                                    if (null === this.syncController_.timestampOffsetForTimeline(t.timeline)) {
                                        var i = function () {
                                            e.state = "READY", e.paused() || e.monitorBuffer_()
                                        };
                                        return this.syncController_.one("timestampoffset", i), void(this.state = "WAITING_ON_TIMELINE")
                                    }
                                    this.loadSegment_(t)
                                }
                            }
                        }, {
                            key: "skipEmptySegments_", value: function (e) {
                                for (; e && e.segment.empty;) e = this.generateSegmentInfo_(e.playlist, e.mediaIndex + 1, e.startOfSegment + e.duration, e.isSyncRequest);
                                return e
                            }
                        }, {
                            key: "handleSegment_", value: function () {
                                var e = this;
                                if (this.pendingSegment_ && this.subtitlesTrack_) {
                                    this.state = "APPENDING";
                                    var t = this.pendingSegment_, i = t.segment;
                                    if ("function" != typeof l.default.WebVTT && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {
                                        var n = function () {
                                            var t = function () {
                                                e.handleSegment_()
                                            };
                                            return e.state = "WAITING_ON_VTTJS", e.subtitlesTrack_.tech_.one("vttjsloaded", t), e.subtitlesTrack_.tech_.one("vttjserror", function () {
                                                e.subtitlesTrack_.tech_.off("vttjsloaded", t), e.error({message: "Error loading vtt.js"}), e.state = "READY", e.pause(), e.trigger("error")
                                            }), {v: void 0}
                                        }();
                                        if ("object" == typeof n) return n.v
                                    }
                                    i.requested = !0;
                                    try {
                                        this.parseVTTCues_(t)
                                    } catch (e) {
                                        return this.error({message: e.message}), this.state = "READY", this.pause(), this.trigger("error")
                                    }
                                    if (this.updateTimeMapping_(t, this.syncController_.timelines[t.timeline], this.playlist_), t.isSyncRequest) return this.trigger("syncinfoupdate"), this.pendingSegment_ = null, void(this.state = "READY");
                                    t.byteLength = t.bytes.byteLength, this.mediaSecondsLoaded += i.duration, t.cues.length && this.remove(t.cues[0].endTime, t.cues[t.cues.length - 1].endTime), t.cues.forEach(function (t) {
                                        e.subtitlesTrack_.addCue(t)
                                    }), this.handleUpdateEnd_()
                                } else this.state = "READY"
                            }
                        }, {
                            key: "parseVTTCues_", value: function (e) {
                                var t = void 0, i = !1;
                                "function" == typeof l.default.TextDecoder ? t = new l.default.TextDecoder("utf8") : (t = l.default.WebVTT.StringDecoder(), i = !0);
                                var n = new l.default.WebVTT.Parser(l.default, l.default.vttjs, t);
                                if (e.cues = [], e.timestampmap = {
                                    MPEGTS: 0,
                                    LOCAL: 0
                                }, n.oncue = e.cues.push.bind(e.cues), n.ontimestampmap = function (t) {
                                    return e.timestampmap = t
                                }, n.onparsingerror = function (e) {
                                    u.default.log.warn("Error encountered when parsing cues: " + e.message)
                                }, e.segment.map) {
                                    var r = e.segment.map.bytes;
                                    i && (r = f(r)), n.parse(r)
                                }
                                var a = e.bytes;
                                i && (a = f(a)), n.parse(a), n.flush()
                            }
                        }, {
                            key: "updateTimeMapping_", value: function (e, t, i) {
                                var n = e.segment;
                                if (t) if (e.cues.length) {
                                    var r = e.timestampmap, a = r.MPEGTS / 9e4 - r.LOCAL + t.mapping;
                                    if (e.cues.forEach(function (e) {
                                        e.startTime += a, e.endTime += a
                                    }), !i.syncInfo) {
                                        var s = e.cues[0].startTime, o = e.cues[e.cues.length - 1].startTime;
                                        i.syncInfo = {
                                            mediaSequence: i.mediaSequence + e.mediaIndex,
                                            time: Math.min(s, o - n.duration)
                                        }
                                    }
                                } else n.empty = !0
                            }
                        }]), t
                    }();
                i.default = p, t.exports = i.default
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "./bin-utils": 2,
            "./segment-loader": 16,
            "global/window": 32,
            "videojs-contrib-media-sources/es5/remove-cues-from-track.js": 72
        }],
        21: [function (e, t, i) {
            (function (e) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var n, r = "undefined" != typeof window ? window.videojs : void 0 !== e ? e.videojs : null,
                    a = (n = r, n && n.__esModule ? n : {default: n});
                i.default = function () {
                    return function e(t, i) {
                        t = (0, r.mergeOptions)({timeout: 45e3}, t);
                        var n = e.beforeRequest || a.default.Hls.xhr.beforeRequest;
                        if (n && "function" == typeof n) {
                            var s = n(t);
                            s && (t = s)
                        }
                        var o = (0, r.xhr)(t, function (e, t) {
                            var n = o.response;
                            !e && n && (o.responseTime = Date.now(), o.roundTripTime = o.responseTime - o.requestTime, o.bytesReceived = n.byteLength || n.length, o.bandwidth || (o.bandwidth = Math.floor(o.bytesReceived / o.roundTripTime * 8 * 1e3))), e && "ETIMEDOUT" === e.code && (o.timedout = !0), e || o.aborted || 200 === t.statusCode || 206 === t.statusCode || 0 === t.statusCode || (e = new Error("XHR Failed with a response of: " + (o && (n || o.responseText)))), i(e, o)
                        }), u = o.abort;
                        return o.abort = function () {
                            return o.aborted = !0, u.apply(o, arguments)
                        }, o.uri = t.uri, o.requestTime = Date.now(), o
                    }
                }, t.exports = i.default
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {}],
        22: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }();
            var r = function () {
                var e = [[[], [], [], [], []], [[], [], [], [], []]], t = e[0], i = e[1], n = t[4], r = i[4],
                    a = void 0, s = void 0, o = void 0, u = [], l = [], d = void 0, c = void 0, h = void 0, f = void 0,
                    p = void 0;
                for (a = 0; a < 256; a++) l[(u[a] = a << 1 ^ 283 * (a >> 7)) ^ a] = a;
                for (s = o = 0; !n[s]; s ^= d || 1, o = l[o] || 1) for (h = (h = o ^ o << 1 ^ o << 2 ^ o << 3 ^ o << 4) >> 8 ^ 255 & h ^ 99, n[s] = h, r[h] = s, p = 16843009 * u[c = u[d = u[s]]] ^ 65537 * c ^ 257 * d ^ 16843008 * s, f = 257 * u[h] ^ 16843008 * h, a = 0; a < 4; a++) t[a][s] = f = f << 24 ^ f >>> 8, i[a][h] = p = p << 24 ^ p >>> 8;
                for (a = 0; a < 5; a++) t[a] = t[a].slice(0), i[a] = i[a].slice(0);
                return e
            }, a = null, s = function () {
                function e(t) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), a || (a = r()), this._tables = [[a[0][0].slice(), a[0][1].slice(), a[0][2].slice(), a[0][3].slice(), a[0][4].slice()], [a[1][0].slice(), a[1][1].slice(), a[1][2].slice(), a[1][3].slice(), a[1][4].slice()]];
                    var i = void 0, n = void 0, s = void 0, o = void 0, u = void 0, l = this._tables[0][4],
                        d = this._tables[1], c = t.length, h = 1;
                    if (4 !== c && 6 !== c && 8 !== c) throw new Error("Invalid aes key size");
                    for (o = t.slice(0), u = [], this._key = [o, u], i = c; i < 4 * c + 28; i++) s = o[i - 1], (i % c == 0 || 8 === c && i % c == 4) && (s = l[s >>> 24] << 24 ^ l[s >> 16 & 255] << 16 ^ l[s >> 8 & 255] << 8 ^ l[255 & s], i % c == 0 && (s = s << 8 ^ s >>> 24 ^ h << 24, h = h << 1 ^ 283 * (h >> 7))), o[i] = o[i - c] ^ s;
                    for (n = 0; i; n++, i--) s = o[3 & n ? i : i - 4], u[n] = i <= 4 || n < 4 ? s : d[0][l[s >>> 24]] ^ d[1][l[s >> 16 & 255]] ^ d[2][l[s >> 8 & 255]] ^ d[3][l[255 & s]]
                }

                return n(e, [{
                    key: "decrypt", value: function (e, t, i, n, r, a) {
                        var s = this._key[1], o = e ^ s[0], u = n ^ s[1], l = i ^ s[2], d = t ^ s[3], c = void 0,
                            h = void 0, f = void 0, p = s.length / 4 - 2, m = void 0, g = 4, y = this._tables[1],
                            _ = y[0], v = y[1], b = y[2], T = y[3], S = y[4];
                        for (m = 0; m < p; m++) c = _[o >>> 24] ^ v[u >> 16 & 255] ^ b[l >> 8 & 255] ^ T[255 & d] ^ s[g], h = _[u >>> 24] ^ v[l >> 16 & 255] ^ b[d >> 8 & 255] ^ T[255 & o] ^ s[g + 1], f = _[l >>> 24] ^ v[d >> 16 & 255] ^ b[o >> 8 & 255] ^ T[255 & u] ^ s[g + 2], d = _[d >>> 24] ^ v[o >> 16 & 255] ^ b[u >> 8 & 255] ^ T[255 & l] ^ s[g + 3], g += 4, o = c, u = h, l = f;
                        for (m = 0; m < 4; m++) r[(3 & -m) + a] = S[o >>> 24] << 24 ^ S[u >> 16 & 255] << 16 ^ S[l >> 8 & 255] << 8 ^ S[255 & d] ^ s[g++], c = o, o = u, u = l, l = d, d = c
                    }
                }]), e
            }();
            i.default = s, t.exports = i.default
        }, {}],
        23: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }(), r = function (e, t, i) {
                for (var n = !0; n;) {
                    var r = e, a = t, s = i;
                    n = !1, null === r && (r = Function.prototype);
                    var o = Object.getOwnPropertyDescriptor(r, a);
                    if (void 0 !== o) {
                        if ("value" in o) return o.value;
                        var u = o.get;
                        if (void 0 === u) return;
                        return u.call(s)
                    }
                    var l = Object.getPrototypeOf(r);
                    if (null === l) return;
                    e = l, t = a, i = s, n = !0, o = l = void 0
                }
            };
            var a, s = e("./stream"), o = (a = s, a && a.__esModule ? a : {default: a}), u = function (e) {
                !function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, o["default"]);

                function t() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t), r(Object.getPrototypeOf(t.prototype), "constructor", this).call(this, o.default), this.jobs = [], this.delay = 1, this.timeout_ = null
                }

                return n(t, [{
                    key: "processJob_", value: function () {
                        this.jobs.shift()(), this.jobs.length ? this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay) : this.timeout_ = null
                    }
                }, {
                    key: "push", value: function (e) {
                        this.jobs.push(e), this.timeout_ || (this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay))
                    }
                }]), t
            }();
            i.default = u, t.exports = i.default
        }, {"./stream": 26}],
        24: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }();

            function r(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var a = r(e("./aes")), s = r(e("./async-stream")), o = e("pkcs7"), u = function (e) {
                return e << 24 | (65280 & e) << 8 | (16711680 & e) >> 8 | e >>> 24
            }, l = function (e, t, i) {
                var n = new Int32Array(e.buffer, e.byteOffset, e.byteLength >> 2),
                    r = new a.default(Array.prototype.slice.call(t)), s = new Uint8Array(e.byteLength),
                    o = new Int32Array(s.buffer), l = void 0, d = void 0, c = void 0, h = void 0, f = void 0,
                    p = void 0, m = void 0, g = void 0, y = void 0;
                for (l = i[0], d = i[1], c = i[2], h = i[3], y = 0; y < n.length; y += 4) f = u(n[y]), p = u(n[y + 1]), m = u(n[y + 2]), g = u(n[y + 3]), r.decrypt(f, p, m, g, o, y), o[y] = u(o[y] ^ l), o[y + 1] = u(o[y + 1] ^ d), o[y + 2] = u(o[y + 2] ^ c), o[y + 3] = u(o[y + 3] ^ h), l = f, d = p, c = m, h = g;
                return s
            };
            i.decrypt = l;
            var d = function () {
                function e(t, i, n, r) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e);
                    var a = e.STEP, l = new Int32Array(t.buffer), d = new Uint8Array(t.byteLength), c = 0;
                    for (this.asyncStream_ = new s.default, this.asyncStream_.push(this.decryptChunk_(l.subarray(c, c + a), i, n, d)), c = a; c < l.length; c += a) n = new Uint32Array([u(l[c - 4]), u(l[c - 3]), u(l[c - 2]), u(l[c - 1])]), this.asyncStream_.push(this.decryptChunk_(l.subarray(c, c + a), i, n, d));
                    this.asyncStream_.push(function () {
                        r(null, (0, o.unpad)(d))
                    })
                }

                return n(e, [{
                    key: "decryptChunk_", value: function (e, t, i, n) {
                        return function () {
                            var r = l(e, t, i);
                            n.set(r, e.byteOffset)
                        }
                    }
                }], [{
                    key: "STEP", get: function () {
                        return 32e3
                    }
                }]), e
            }();
            i.Decrypter = d, i.default = {Decrypter: d, decrypt: l}
        }, {"./aes": 22, "./async-stream": 23, pkcs7: 28}],
        25: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n, r = e("./decrypter"), a = e("./async-stream"), s = (n = a, n && n.__esModule ? n : {default: n});
            i.default = {decrypt: r.decrypt, Decrypter: r.Decrypter, AsyncStream: s.default}, t.exports = i.default
        }, {"./async-stream": 23, "./decrypter": 24}],
        26: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }();
            var r = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.listeners = {}
                }

                return n(e, [{
                    key: "on", value: function (e, t) {
                        this.listeners[e] || (this.listeners[e] = []), this.listeners[e].push(t)
                    }
                }, {
                    key: "off", value: function (e, t) {
                        var i = void 0;
                        return !!this.listeners[e] && (i = this.listeners[e].indexOf(t), this.listeners[e].splice(i, 1), i > -1)
                    }
                }, {
                    key: "trigger", value: function (e) {
                        var t = void 0, i = void 0, n = void 0, r = void 0;
                        if (t = this.listeners[e]) if (2 === arguments.length) for (n = t.length, i = 0; i < n; ++i) t[i].call(this, arguments[1]); else for (r = Array.prototype.slice.call(arguments, 1), n = t.length, i = 0; i < n; ++i) t[i].apply(this, r)
                    }
                }, {
                    key: "dispose", value: function () {
                        this.listeners = {}
                    }
                }, {
                    key: "pipe", value: function (e) {
                        this.on("data", function (t) {
                            e.push(t)
                        })
                    }
                }]), e
            }();
            i.default = r, t.exports = i.default
        }, {}],
        27: [function (e, t, i) {
            "use strict";
            var n;
            t.exports = function (e) {
                var t = n[e.byteLength % 16 || 0], i = new Uint8Array(e.byteLength + t.length);
                return i.set(e), i.set(t, e.byteLength), i
            }, n = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]]
        }, {}],
        28: [function (e, t, i) {
            "use strict";
            i.pad = e("./pad.js"), i.unpad = e("./unpad.js")
        }, {"./pad.js": 27, "./unpad.js": 29}],
        29: [function (e, t, i) {
            "use strict";
            t.exports = function (e) {
                return e.subarray(0, e.byteLength - e[e.byteLength - 1])
            }
        }, {}],
        30: [function (e, t, i) {
        }, {}],
        31: [function (e, t, i) {
            (function (i) {
                var n, r = void 0 !== i ? i : "undefined" != typeof window ? window : {}, a = e("min-document");
                "undefined" != typeof document ? n = document : (n = r["__GLOBAL_DOCUMENT_CACHE@4"]) || (n = r["__GLOBAL_DOCUMENT_CACHE@4"] = a), t.exports = n
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {"min-document": 30}],
        32: [function (e, t, i) {
            (function (e) {
                var i;
                i = "undefined" != typeof window ? window : void 0 !== e ? e : "undefined" != typeof self ? self : {}, t.exports = i
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {}],
        33: [function (e, t, i) {
            "use strict";
            var n = s(e("./line-stream")), r = s(e("./parse-stream")), a = s(e("./parser"));

            function s(e) {
                return e && e.__esModule ? e : {default: e}
            }

            t.exports = {LineStream: n.default, ParseStream: r.default, Parser: a.default}
        }, {"./line-stream": 34, "./parse-stream": 35, "./parser": 36}],
        34: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n, r = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }(), a = e("./stream"), s = (n = a, n && n.__esModule ? n : {default: n});
            var o = function (e) {
                !function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, s["default"]);

                function t() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    var e = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                    return e.buffer = "", e
                }

                return r(t, [{
                    key: "push", value: function (e) {
                        var t = void 0;
                        for (this.buffer += e, t = this.buffer.indexOf("\n"); t > -1; t = this.buffer.indexOf("\n")) this.trigger("data", this.buffer.substring(0, t)), this.buffer = this.buffer.substring(t + 1)
                    }
                }]), t
            }();
            i.default = o
        }, {"./stream": 37}],
        35: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n, r = function () {
                return function (e, t) {
                    if (Array.isArray(e)) return e;
                    if (Symbol.iterator in Object(e)) return function (e, t) {
                        var i = [], n = !0, r = !1, a = void 0;
                        try {
                            for (var s, o = e[Symbol.iterator](); !(n = (s = o.next()).done) && (i.push(s.value), !t || i.length !== t); n = !0) ;
                        } catch (e) {
                            r = !0, a = e
                        } finally {
                            try {
                                !n && o.return && o.return()
                            } finally {
                                if (r) throw a
                            }
                        }
                        return i
                    }(e, t);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                }
            }(), a = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }(), s = e("./stream"), o = (n = s, n && n.__esModule ? n : {default: n});
            var u = function (e) {
                for (var t = e.split(new RegExp('(?:^|,)((?:[^=]*)=(?:"[^"]*"|[^,]*))')), i = {}, n = t.length, r = void 0; n--;) "" !== t[n] && ((r = /([^=]*)=(.*)/.exec(t[n]).slice(1))[0] = r[0].replace(/^\s+|\s+$/g, ""), r[1] = r[1].replace(/^\s+|\s+$/g, ""), r[1] = r[1].replace(/^['"](.*)['"]$/g, "$1"), i[r[0]] = r[1]);
                return i
            }, l = function (e) {
                !function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, o["default"]);

                function t() {
                    return function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t), function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this))
                }

                return a(t, [{
                    key: "push", value: function (e) {
                        var t = void 0, i = void 0;
                        if (0 !== (e = e.replace(/^[\u0000\s]+|[\u0000\s]+$/g, "")).length) if ("#" === e[0]) if (0 === e.indexOf("#EXT")) if (e = e.replace("\r", ""), t = /^#EXTM3U/.exec(e)) this.trigger("data", {
                            type: "tag",
                            tagType: "m3u"
                        }); else {
                            if (t = /^#EXTINF:?([0-9\.]*)?,?(.*)?$/.exec(e)) return i = {
                                type: "tag",
                                tagType: "inf"
                            }, t[1] && (i.duration = parseFloat(t[1])), t[2] && (i.title = t[2]), void this.trigger("data", i);
                            if (t = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(e)) return i = {
                                type: "tag",
                                tagType: "targetduration"
                            }, t[1] && (i.duration = parseInt(t[1], 10)), void this.trigger("data", i);
                            if (t = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(e)) return i = {
                                type: "tag",
                                tagType: "totalduration"
                            }, t[1] && (i.duration = parseInt(t[1], 10)), void this.trigger("data", i);
                            if (t = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(e)) return i = {
                                type: "tag",
                                tagType: "version"
                            }, t[1] && (i.version = parseInt(t[1], 10)), void this.trigger("data", i);
                            if (t = /^#EXT-X-MEDIA-SEQUENCE:?(\-?[0-9.]*)?/.exec(e)) return i = {
                                type: "tag",
                                tagType: "media-sequence"
                            }, t[1] && (i.number = parseInt(t[1], 10)), void this.trigger("data", i);
                            if (t = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\-?[0-9.]*)?/.exec(e)) return i = {
                                type: "tag",
                                tagType: "discontinuity-sequence"
                            }, t[1] && (i.number = parseInt(t[1], 10)), void this.trigger("data", i);
                            if (t = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(e)) return i = {
                                type: "tag",
                                tagType: "playlist-type"
                            }, t[1] && (i.playlistType = t[1]), void this.trigger("data", i);
                            if (t = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(e)) return i = {
                                type: "tag",
                                tagType: "byterange"
                            }, t[1] && (i.length = parseInt(t[1], 10)), t[2] && (i.offset = parseInt(t[2], 10)), void this.trigger("data", i);
                            if (t = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(e)) return i = {
                                type: "tag",
                                tagType: "allow-cache"
                            }, t[1] && (i.allowed = !/NO/.test(t[1])), void this.trigger("data", i);
                            if (t = /^#EXT-X-MAP:?(.*)$/.exec(e)) {
                                if (i = {type: "tag", tagType: "map"}, t[1]) {
                                    var n = u(t[1]);
                                    if (n.URI && (i.uri = n.URI), n.BYTERANGE) {
                                        var a = n.BYTERANGE.split("@"), s = r(a, 2), o = s[0], l = s[1];
                                        i.byterange = {}, o && (i.byterange.length = parseInt(o, 10)), l && (i.byterange.offset = parseInt(l, 10))
                                    }
                                }
                                this.trigger("data", i)
                            } else if (t = /^#EXT-X-STREAM-INF:?(.*)$/.exec(e)) {
                                if (i = {type: "tag", tagType: "stream-inf"}, t[1]) {
                                    if (i.attributes = u(t[1]), i.attributes.RESOLUTION) {
                                        var d = i.attributes.RESOLUTION.split("x"), c = {};
                                        d[0] && (c.width = parseInt(d[0], 10)), d[1] && (c.height = parseInt(d[1], 10)), i.attributes.RESOLUTION = c
                                    }
                                    i.attributes.BANDWIDTH && (i.attributes.BANDWIDTH = parseInt(i.attributes.BANDWIDTH, 10)), i.attributes["PROGRAM-ID"] && (i.attributes["PROGRAM-ID"] = parseInt(i.attributes["PROGRAM-ID"], 10))
                                }
                                this.trigger("data", i)
                            } else {
                                if (t = /^#EXT-X-MEDIA:?(.*)$/.exec(e)) return i = {
                                    type: "tag",
                                    tagType: "media"
                                }, t[1] && (i.attributes = u(t[1])), void this.trigger("data", i);
                                if (t = /^#EXT-X-ENDLIST/.exec(e)) this.trigger("data", {
                                    type: "tag",
                                    tagType: "endlist"
                                }); else if (t = /^#EXT-X-DISCONTINUITY/.exec(e)) this.trigger("data", {
                                    type: "tag",
                                    tagType: "discontinuity"
                                }); else {
                                    if (t = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(e)) return i = {
                                        type: "tag",
                                        tagType: "program-date-time"
                                    }, t[1] && (i.dateTimeString = t[1], i.dateTimeObject = new Date(t[1])), void this.trigger("data", i);
                                    if (t = /^#EXT-X-KEY:?(.*)$/.exec(e)) return i = {
                                        type: "tag",
                                        tagType: "key"
                                    }, t[1] && (i.attributes = u(t[1]), i.attributes.IV && ("0x" === i.attributes.IV.substring(0, 2).toLowerCase() && (i.attributes.IV = i.attributes.IV.substring(2)), i.attributes.IV = i.attributes.IV.match(/.{8}/g), i.attributes.IV[0] = parseInt(i.attributes.IV[0], 16), i.attributes.IV[1] = parseInt(i.attributes.IV[1], 16), i.attributes.IV[2] = parseInt(i.attributes.IV[2], 16), i.attributes.IV[3] = parseInt(i.attributes.IV[3], 16), i.attributes.IV = new Uint32Array(i.attributes.IV))), void this.trigger("data", i);
                                    if (t = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(e)) return i = {
                                        type: "tag",
                                        tagType: "cue-out-cont"
                                    }, t[1] ? i.data = t[1] : i.data = "", void this.trigger("data", i);
                                    if (t = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(e)) return i = {
                                        type: "tag",
                                        tagType: "cue-out"
                                    }, t[1] ? i.data = t[1] : i.data = "", void this.trigger("data", i);
                                    if (t = /^#EXT-X-CUE-IN:?(.*)?$/.exec(e)) return i = {
                                        type: "tag",
                                        tagType: "cue-in"
                                    }, t[1] ? i.data = t[1] : i.data = "", void this.trigger("data", i);
                                    this.trigger("data", {type: "tag", data: e.slice(4)})
                                }
                            }
                        } else this.trigger("data", {
                            type: "comment",
                            text: e.slice(1)
                        }); else this.trigger("data", {type: "uri", uri: e})
                    }
                }]), t
            }();
            i.default = l
        }, {"./stream": 37}],
        36: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = Object.assign || function (e) {
                for (var t = 1; t < arguments.length; t++) {
                    var i = arguments[t];
                    for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n])
                }
                return e
            }, r = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }(), a = u(e("./stream")), s = u(e("./line-stream")), o = u(e("./parse-stream"));

            function u(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var l = function (e) {
                !function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, a["default"]);

                function t() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    var e = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                    e.lineStream = new s.default, e.parseStream = new o.default, e.lineStream.pipe(e.parseStream);
                    var i = e, r = [], a = {}, u = void 0, l = void 0,
                        d = {AUDIO: {}, VIDEO: {}, "CLOSED-CAPTIONS": {}, SUBTITLES: {}}, c = 0;
                    return e.manifest = {
                        allowCache: !0,
                        discontinuityStarts: [],
                        segments: []
                    }, e.parseStream.on("data", function (e) {
                        var t = void 0, s = void 0;
                        ({
                            tag: function () {
                                (({
                                    "allow-cache": function () {
                                        this.manifest.allowCache = e.allowed, "allowed" in e || (this.trigger("info", {message: "defaulting allowCache to YES"}), this.manifest.allowCache = !0)
                                    }, byterange: function () {
                                        var t = {};
                                        "length" in e && (a.byterange = t, t.length = e.length, "offset" in e || (this.trigger("info", {message: "defaulting offset to zero"}), e.offset = 0)), "offset" in e && (a.byterange = t, t.offset = e.offset)
                                    }, endlist: function () {
                                        this.manifest.endList = !0
                                    }, inf: function () {
                                        "mediaSequence" in this.manifest || (this.manifest.mediaSequence = 0, this.trigger("info", {message: "defaulting media sequence to zero"})), "discontinuitySequence" in this.manifest || (this.manifest.discontinuitySequence = 0, this.trigger("info", {message: "defaulting discontinuity sequence to zero"})), e.duration > 0 && (a.duration = e.duration), 0 === e.duration && (a.duration = .01, this.trigger("info", {message: "updating zero segment duration to a small value"})), this.manifest.segments = r
                                    }, key: function () {
                                        e.attributes ? "NONE" !== e.attributes.METHOD ? e.attributes.URI ? (e.attributes.METHOD || this.trigger("warn", {message: "defaulting key method to AES-128"}), l = {
                                            method: e.attributes.METHOD || "AES-128",
                                            uri: e.attributes.URI
                                        }, void 0 !== e.attributes.IV && (l.iv = e.attributes.IV)) : this.trigger("warn", {message: "ignoring key declaration without URI"}) : l = null : this.trigger("warn", {message: "ignoring key declaration without attribute list"})
                                    }, "media-sequence": function () {
                                        isFinite(e.number) ? this.manifest.mediaSequence = e.number : this.trigger("warn", {message: "ignoring invalid media sequence: " + e.number})
                                    }, "discontinuity-sequence": function () {
                                        isFinite(e.number) ? (this.manifest.discontinuitySequence = e.number, c = e.number) : this.trigger("warn", {message: "ignoring invalid discontinuity sequence: " + e.number})
                                    }, "playlist-type": function () {
                                        /VOD|EVENT/.test(e.playlistType) ? this.manifest.playlistType = e.playlistType : this.trigger("warn", {message: "ignoring unknown playlist type: " + e.playlist})
                                    }, map: function () {
                                        u = {}, e.uri && (u.uri = e.uri), e.byterange && (u.byterange = e.byterange)
                                    }, "stream-inf": function () {
                                        this.manifest.playlists = r, this.manifest.mediaGroups = this.manifest.mediaGroups || d, e.attributes ? (a.attributes || (a.attributes = {}), n(a.attributes, e.attributes)) : this.trigger("warn", {message: "ignoring empty stream-inf attributes"})
                                    }, media: function () {
                                        if (this.manifest.mediaGroups = this.manifest.mediaGroups || d, e.attributes && e.attributes.TYPE && e.attributes["GROUP-ID"] && e.attributes.NAME) {
                                            var i = this.manifest.mediaGroups[e.attributes.TYPE];
                                            i[e.attributes["GROUP-ID"]] = i[e.attributes["GROUP-ID"]] || {}, t = i[e.attributes["GROUP-ID"]], (s = {default: /yes/i.test(e.attributes.DEFAULT)}).default ? s.autoselect = !0 : s.autoselect = /yes/i.test(e.attributes.AUTOSELECT), e.attributes.LANGUAGE && (s.language = e.attributes.LANGUAGE), e.attributes.URI && (s.uri = e.attributes.URI), e.attributes["INSTREAM-ID"] && (s.instreamId = e.attributes["INSTREAM-ID"]), e.attributes.CHARACTERISTICS && (s.characteristics = e.attributes.CHARACTERISTICS), e.attributes.FORCED && (s.forced = /yes/i.test(e.attributes.FORCED)), t[e.attributes.NAME] = s
                                        } else this.trigger("warn", {message: "ignoring incomplete or missing media group"})
                                    }, discontinuity: function () {
                                        c += 1, a.discontinuity = !0, this.manifest.discontinuityStarts.push(r.length)
                                    }, "program-date-time": function () {
                                        this.manifest.dateTimeString = e.dateTimeString, this.manifest.dateTimeObject = e.dateTimeObject
                                    }, targetduration: function () {
                                        !isFinite(e.duration) || e.duration < 0 ? this.trigger("warn", {message: "ignoring invalid target duration: " + e.duration}) : this.manifest.targetDuration = e.duration
                                    }, totalduration: function () {
                                        !isFinite(e.duration) || e.duration < 0 ? this.trigger("warn", {message: "ignoring invalid total duration: " + e.duration}) : this.manifest.totalDuration = e.duration
                                    }, "cue-out": function () {
                                        a.cueOut = e.data
                                    }, "cue-out-cont": function () {
                                        a.cueOutCont = e.data
                                    }, "cue-in": function () {
                                        a.cueIn = e.data
                                    }
                                })[e.tagType] || function () {
                                }).call(i)
                            }, uri: function () {
                                a.uri = e.uri, r.push(a), !this.manifest.targetDuration || "duration" in a || (this.trigger("warn", {message: "defaulting segment duration to the target duration"}), a.duration = this.manifest.targetDuration), l && (a.key = l), a.timeline = c, u && (a.map = u), a = {}
                            }, comment: function () {
                            }
                        })[e.type].call(i)
                    }), e
                }

                return r(t, [{
                    key: "push", value: function (e) {
                        this.lineStream.push(e)
                    }
                }, {
                    key: "end", value: function () {
                        this.lineStream.push("\n")
                    }
                }]), t
            }();
            i.default = l
        }, {"./line-stream": 34, "./parse-stream": 35, "./stream": 37}],
        37: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }();
            var r = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.listeners = {}
                }

                return n(e, [{
                    key: "on", value: function (e, t) {
                        this.listeners[e] || (this.listeners[e] = []), this.listeners[e].push(t)
                    }
                }, {
                    key: "off", value: function (e, t) {
                        if (!this.listeners[e]) return !1;
                        var i = this.listeners[e].indexOf(t);
                        return this.listeners[e].splice(i, 1), i > -1
                    }
                }, {
                    key: "trigger", value: function (e) {
                        var t = this.listeners[e], i = void 0, n = void 0, r = void 0;
                        if (t) if (2 === arguments.length) for (n = t.length, i = 0; i < n; ++i) t[i].call(this, arguments[1]); else for (r = Array.prototype.slice.call(arguments, 1), n = t.length, i = 0; i < n; ++i) t[i].apply(this, r)
                    }
                }, {
                    key: "dispose", value: function () {
                        this.listeners = {}
                    }
                }, {
                    key: "pipe", value: function (e) {
                        this.on("data", function (t) {
                            e.push(t)
                        })
                    }
                }]), e
            }();
            i.default = r
        }, {}],
        38: [function (e, t, i) {
            "use strict";
            var n, r = e("../utils/stream.js");
            (n = function () {
                var e = new Uint8Array, t = 0;
                n.prototype.init.call(this), this.setTimestamp = function (e) {
                    t = e
                }, this.parseId3TagSize = function (e, t) {
                    var i = e[t + 6] << 21 | e[t + 7] << 14 | e[t + 8] << 7 | e[t + 9];
                    return (16 & e[t + 5]) >> 4 ? i + 20 : i + 10
                }, this.parseAdtsSize = function (e, t) {
                    var i = (224 & e[t + 5]) >> 5, n = e[t + 4] << 3;
                    return 6144 & e[t + 3] | n | i
                }, this.push = function (i) {
                    var n, r, a, s, o = 0, u = 0;
                    for (e.length ? (s = e.length, (e = new Uint8Array(i.byteLength + s)).set(e.subarray(0, s)), e.set(i, s)) : e = i; e.length - u >= 3;) if (e[u] !== "I".charCodeAt(0) || e[u + 1] !== "D".charCodeAt(0) || e[u + 2] !== "3".charCodeAt(0)) if (!0 & e[u] && 240 == (240 & e[u + 1])) {
                        if (e.length - u < 7) break;
                        if ((o = this.parseAdtsSize(e, u)) > e.length) break;
                        a = {type: "audio", data: e.subarray(u, u + o), pts: t, dts: t}, this.trigger("data", a), u += o
                    } else u++; else {
                        if (e.length - u < 10) break;
                        if ((o = this.parseId3TagSize(e, u)) > e.length) break;
                        r = {type: "timed-metadata", data: e.subarray(u, u + o)}, this.trigger("data", r), u += o
                    }
                    n = e.length - u, e = n > 0 ? e.subarray(u) : new Uint8Array
                }
            }).prototype = new r, t.exports = n
        }, {"../utils/stream.js": 62}],
        39: [function (e, t, i) {
            "use strict";
            var n = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350],
                r = function (e) {
                    return e[0] << 21 | e[1] << 14 | e[2] << 7 | e[3]
                };
            t.exports = {
                parseId3TagSize: function (e, t) {
                    var i = e[t + 6] << 21 | e[t + 7] << 14 | e[t + 8] << 7 | e[t + 9];
                    return (16 & e[t + 5]) >> 4 ? i + 20 : i + 10
                }, parseAdtsSize: function (e, t) {
                    var i = (224 & e[t + 5]) >> 5, n = e[t + 4] << 3;
                    return 6144 & e[t + 3] | n | i
                }, parseType: function (e, t) {
                    return e[t] === "I".charCodeAt(0) && e[t + 1] === "D".charCodeAt(0) && e[t + 2] === "3".charCodeAt(0) ? "timed-metadata" : !0 & e[t] && 240 == (240 & e[t + 1]) ? "audio" : null
                }, parseSampleRate: function (e) {
                    for (var t = 0; t + 5 < e.length;) {
                        if (255 === e[t] && 240 == (246 & e[t + 1])) return n[(60 & e[t + 2]) >>> 2];
                        t++
                    }
                    return null
                }, parseAacTimestamp: function (e) {
                    var t, i, n;
                    t = 10, 64 & e[5] && (t += 4, t += r(e.subarray(10, 14)));
                    do {
                        if ((i = r(e.subarray(t + 4, t + 8))) < 1) return null;
                        if ("PRIV" === String.fromCharCode(e[t], e[t + 1], e[t + 2], e[t + 3])) {
                            n = e.subarray(t + 10, t + i + 10);
                            for (var a = 0; a < n.byteLength; a++) if (0 === n[a]) {
                                if ("com.apple.streaming.transportStreamTimestamp" === (u = n, l = 0, d = a, unescape(function (e, t, i) {
                                    var n, r = "";
                                    for (n = t; n < i; n++) r += "%" + ("00" + e[n].toString(16)).slice(-2);
                                    return r
                                }(u, l, d)))) {
                                    var s = n.subarray(a + 1),
                                        o = (1 & s[3]) << 30 | s[4] << 22 | s[5] << 14 | s[6] << 6 | s[7] >>> 2;
                                    return o *= 4, o += 3 & s[7]
                                }
                                break
                            }
                        }
                        t += 10, t += i
                    } while (t < e.byteLength);
                    var u, l, d;
                    return null
                }
            }
        }, {}],
        40: [function (e, t, i) {
            "use strict";
            var n, r = e("../utils/stream.js"),
                a = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
            (n = function () {
                var e;
                n.prototype.init.call(this), this.push = function (t) {
                    var i, n, r, s, o, u, l = 0, d = 0;
                    if ("audio" === t.type) for (e ? (s = e, (e = new Uint8Array(s.byteLength + t.data.byteLength)).set(s), e.set(t.data, s.byteLength)) : e = t.data; l + 5 < e.length;) if (255 === e[l] && 240 == (246 & e[l + 1])) {
                        if (n = 2 * (1 & ~e[l + 1]), i = (3 & e[l + 3]) << 11 | e[l + 4] << 3 | (224 & e[l + 5]) >> 5, u = 9e4 * (o = 1024 * (1 + (3 & e[l + 6]))) / a[(60 & e[l + 2]) >>> 2], r = l + i, e.byteLength < r) return;
                        if (this.trigger("data", {
                            pts: t.pts + d * u,
                            dts: t.dts + d * u,
                            sampleCount: o,
                            audioobjecttype: 1 + (e[l + 2] >>> 6 & 3),
                            channelcount: (1 & e[l + 2]) << 2 | (192 & e[l + 3]) >>> 6,
                            samplerate: a[(60 & e[l + 2]) >>> 2],
                            samplingfrequencyindex: (60 & e[l + 2]) >>> 2,
                            samplesize: 16,
                            data: e.subarray(l + 7 + n, r)
                        }), e.byteLength === r) return void(e = void 0);
                        d++, e = e.subarray(r)
                    } else l++
                }, this.flush = function () {
                    this.trigger("done")
                }
            }).prototype = new r, t.exports = n
        }, {"../utils/stream.js": 62}],
        41: [function (e, t, i) {
            "use strict";
            var n, r, a, s = e("../utils/stream.js"), o = e("../utils/exp-golomb.js");
            (r = function () {
                var e, t, i = 0;
                r.prototype.init.call(this), this.push = function (n) {
                    var r;
                    for (t ? ((r = new Uint8Array(t.byteLength + n.data.byteLength)).set(t), r.set(n.data, t.byteLength), t = r) : t = n.data; i < t.byteLength - 3; i++) if (1 === t[i + 2]) {
                        e = i + 5;
                        break
                    }
                    for (; e < t.byteLength;) switch (t[e]) {
                        case 0:
                            if (0 !== t[e - 1]) {
                                e += 2;
                                break
                            }
                            if (0 !== t[e - 2]) {
                                e++;
                                break
                            }
                            i + 3 !== e - 2 && this.trigger("data", t.subarray(i + 3, e - 2));
                            do {
                                e++
                            } while (1 !== t[e] && e < t.length);
                            i = e - 2, e += 3;
                            break;
                        case 1:
                            if (0 !== t[e - 1] || 0 !== t[e - 2]) {
                                e += 3;
                                break
                            }
                            this.trigger("data", t.subarray(i + 3, e - 2)), i = e - 2, e += 3;
                            break;
                        default:
                            e += 3
                    }
                    t = t.subarray(i), e -= i, i = 0
                }, this.flush = function () {
                    t && t.byteLength > 3 && this.trigger("data", t.subarray(i + 3)), t = null, i = 0, this.trigger("done")
                }
            }).prototype = new s, a = {
                100: !0,
                110: !0,
                122: !0,
                244: !0,
                44: !0,
                83: !0,
                86: !0,
                118: !0,
                128: !0,
                138: !0,
                139: !0,
                134: !0
            }, (n = function () {
                var e, t, i, s, u, l, d, c = new r;
                n.prototype.init.call(this), e = this, this.push = function (e) {
                    "video" === e.type && (t = e.trackId, i = e.pts, s = e.dts, c.push(e))
                }, c.on("data", function (n) {
                    var r = {trackId: t, pts: i, dts: s, data: n};
                    switch (31 & n[0]) {
                        case 5:
                            r.nalUnitType = "slice_layer_without_partitioning_rbsp_idr";
                            break;
                        case 6:
                            r.nalUnitType = "sei_rbsp", r.escapedRBSP = u(n.subarray(1));
                            break;
                        case 7:
                            r.nalUnitType = "seq_parameter_set_rbsp", r.escapedRBSP = u(n.subarray(1)), r.config = l(r.escapedRBSP);
                            break;
                        case 8:
                            r.nalUnitType = "pic_parameter_set_rbsp";
                            break;
                        case 9:
                            r.nalUnitType = "access_unit_delimiter_rbsp"
                    }
                    e.trigger("data", r)
                }), c.on("done", function () {
                    e.trigger("done")
                }), this.flush = function () {
                    c.flush()
                }, d = function (e, t) {
                    var i, n = 8, r = 8;
                    for (i = 0; i < e; i++) 0 !== r && (r = (n + t.readExpGolomb() + 256) % 256), n = 0 === r ? n : r
                }, u = function (e) {
                    for (var t, i, n = e.byteLength, r = [], a = 1; a < n - 2;) 0 === e[a] && 0 === e[a + 1] && 3 === e[a + 2] ? (r.push(a + 2), a += 2) : a++;
                    if (0 === r.length) return e;
                    t = n - r.length, i = new Uint8Array(t);
                    var s = 0;
                    for (a = 0; a < t; s++, a++) s === r[0] && (s++, r.shift()), i[a] = e[s];
                    return i
                }, l = function (e) {
                    var t, i, n, r, s, u, l, c, h, f, p, m, g, y = 0, _ = 0, v = 0, b = 0, T = 1;
                    if (i = (t = new o(e)).readUnsignedByte(), r = t.readUnsignedByte(), n = t.readUnsignedByte(), t.skipUnsignedExpGolomb(), a[i] && (3 === (s = t.readUnsignedExpGolomb()) && t.skipBits(1), t.skipUnsignedExpGolomb(), t.skipUnsignedExpGolomb(), t.skipBits(1), t.readBoolean())) for (p = 3 !== s ? 8 : 12, g = 0; g < p; g++) t.readBoolean() && d(g < 6 ? 16 : 64, t);
                    if (t.skipUnsignedExpGolomb(), 0 === (u = t.readUnsignedExpGolomb())) t.readUnsignedExpGolomb(); else if (1 === u) for (t.skipBits(1), t.skipExpGolomb(), t.skipExpGolomb(), l = t.readUnsignedExpGolomb(), g = 0; g < l; g++) t.skipExpGolomb();
                    if (t.skipUnsignedExpGolomb(), t.skipBits(1), c = t.readUnsignedExpGolomb(), h = t.readUnsignedExpGolomb(), 0 === (f = t.readBits(1)) && t.skipBits(1), t.skipBits(1), t.readBoolean() && (y = t.readUnsignedExpGolomb(), _ = t.readUnsignedExpGolomb(), v = t.readUnsignedExpGolomb(), b = t.readUnsignedExpGolomb()), t.readBoolean() && t.readBoolean()) {
                        switch (t.readUnsignedByte()) {
                            case 1:
                                m = [1, 1];
                                break;
                            case 2:
                                m = [12, 11];
                                break;
                            case 3:
                                m = [10, 11];
                                break;
                            case 4:
                                m = [16, 11];
                                break;
                            case 5:
                                m = [40, 33];
                                break;
                            case 6:
                                m = [24, 11];
                                break;
                            case 7:
                                m = [20, 11];
                                break;
                            case 8:
                                m = [32, 11];
                                break;
                            case 9:
                                m = [80, 33];
                                break;
                            case 10:
                                m = [18, 11];
                                break;
                            case 11:
                                m = [15, 11];
                                break;
                            case 12:
                                m = [64, 33];
                                break;
                            case 13:
                                m = [160, 99];
                                break;
                            case 14:
                                m = [4, 3];
                                break;
                            case 15:
                                m = [3, 2];
                                break;
                            case 16:
                                m = [2, 1];
                                break;
                            case 255:
                                m = [t.readUnsignedByte() << 8 | t.readUnsignedByte(), t.readUnsignedByte() << 8 | t.readUnsignedByte()]
                        }
                        m && (T = m[0] / m[1])
                    }
                    return {
                        profileIdc: i,
                        levelIdc: n,
                        profileCompatibility: r,
                        width: Math.ceil((16 * (c + 1) - 2 * y - 2 * _) * T),
                        height: (2 - f) * (h + 1) * 16 - 2 * v - 2 * b
                    }
                }
            }).prototype = new s, t.exports = {H264Stream: n, NalByteStream: r}
        }, {"../utils/exp-golomb.js": 61, "../utils/stream.js": 62}],
        42: [function (e, t, i) {
            var n = [33, 16, 5, 32, 164, 27], r = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252],
                a = function (e) {
                    for (var t = []; e--;) t.push(0);
                    return t
                }, s = {
                    96e3: [n, [227, 64], a(154), [56]],
                    88200: [n, [231], a(170), [56]],
                    64e3: [n, [248, 192], a(240), [56]],
                    48e3: [n, [255, 192], a(268), [55, 148, 128], a(54), [112]],
                    44100: [n, [255, 192], a(268), [55, 163, 128], a(84), [112]],
                    32e3: [n, [255, 192], a(268), [55, 234], a(226), [112]],
                    24e3: [n, [255, 192], a(268), [55, 255, 128], a(268), [111, 112], a(126), [224]],
                    16e3: [n, [255, 192], a(268), [55, 255, 128], a(268), [111, 255], a(269), [223, 108], a(195), [1, 192]],
                    12e3: [r, a(268), [3, 127, 248], a(268), [6, 255, 240], a(268), [13, 255, 224], a(268), [27, 253, 128], a(259), [56]],
                    11025: [r, a(268), [3, 127, 248], a(268), [6, 255, 240], a(268), [13, 255, 224], a(268), [27, 255, 192], a(268), [55, 175, 128], a(108), [112]],
                    8e3: [r, a(268), [3, 121, 16], a(47), [7]]
                };
            t.exports = (o = s, Object.keys(o).reduce(function (e, t) {
                return e[t] = new Uint8Array(o[t].reduce(function (e, t) {
                    return e.concat(t)
                }, [])), e
            }, {}));
            var o
        }, {}],
        43: [function (e, t, i) {
            "use strict";
            var n = e("../utils/stream.js"), r = function (e) {
                this.numberOfTracks = 0, this.metadataStream = e.metadataStream, this.videoTags = [], this.audioTags = [], this.videoTrack = null, this.audioTrack = null, this.pendingCaptions = [], this.pendingMetadata = [], this.pendingTracks = 0, this.processedTracks = 0, r.prototype.init.call(this), this.push = function (e) {
                    return e.text ? this.pendingCaptions.push(e) : e.frames ? this.pendingMetadata.push(e) : ("video" === e.track.type && (this.videoTrack = e.track, this.videoTags = e.tags, this.pendingTracks++), void("audio" === e.track.type && (this.audioTrack = e.track, this.audioTags = e.tags, this.pendingTracks++)))
                }
            };
            r.prototype = new n, r.prototype.flush = function (e) {
                var t, i, n, r, a = {tags: {}, captions: [], captionStreams: {}, metadata: []};
                if (this.pendingTracks < this.numberOfTracks) {
                    if ("VideoSegmentStream" !== e && "AudioSegmentStream" !== e) return;
                    if (0 === this.pendingTracks && (this.processedTracks++, this.processedTracks < this.numberOfTracks)) return
                }
                if (this.processedTracks += this.pendingTracks, this.pendingTracks = 0, !(this.processedTracks < this.numberOfTracks)) {
                    for (this.videoTrack ? r = this.videoTrack.timelineStartInfo.pts : this.audioTrack && (r = this.audioTrack.timelineStartInfo.pts), a.tags.videoTags = this.videoTags, a.tags.audioTags = this.audioTags, n = 0; n < this.pendingCaptions.length; n++) (i = this.pendingCaptions[n]).startTime = i.startPts - r, i.startTime /= 9e4, i.endTime = i.endPts - r, i.endTime /= 9e4, a.captionStreams[i.stream] = !0, a.captions.push(i);
                    for (n = 0; n < this.pendingMetadata.length; n++) (t = this.pendingMetadata[n]).cueTime = t.pts - r, t.cueTime /= 9e4, a.metadata.push(t);
                    a.metadata.dispatchType = this.metadataStream.dispatchType, this.videoTrack = null, this.audioTrack = null, this.videoTags = [], this.audioTags = [], this.pendingCaptions.length = 0, this.pendingMetadata.length = 0, this.pendingTracks = 0, this.processedTracks = 0, this.trigger("data", a), this.trigger("done")
                }
            }, t.exports = r
        }, {"../utils/stream.js": 62}],
        44: [function (e, t, i) {
            "use strict";
            var n = e("./flv-tag.js");
            t.exports = function (e, t, i) {
                var r, a, s, o = new Uint8Array(9), u = new DataView(o.buffer);
                return e = e || 0, t = void 0 === t || t, i = void 0 === i || i, u.setUint8(0, 70), u.setUint8(1, 76), u.setUint8(2, 86), u.setUint8(3, 1), u.setUint8(4, (t ? 4 : 0) | (i ? 1 : 0)), u.setUint32(5, o.byteLength), e <= 0 ? ((a = new Uint8Array(o.byteLength + 4)).set(o), a.set([0, 0, 0, 0], o.byteLength), a) : ((r = new n(n.METADATA_TAG)).pts = r.dts = 0, r.writeMetaDataDouble("duration", e), s = r.finalize().length, (a = new Uint8Array(o.byteLength + s)).set(o), a.set(u.byteLength, s), a)
            }
        }, {"./flv-tag.js": 45}],
        45: [function (e, t, i) {
            "use strict";
            var n;
            (n = function (e, t) {
                var i, r = 0, a = 16384, s = function (e, t) {
                        var i, n = e.position + t;
                        n < e.bytes.byteLength || ((i = new Uint8Array(2 * n)).set(e.bytes.subarray(0, e.position), 0), e.bytes = i, e.view = new DataView(e.bytes.buffer))
                    }, o = n.widthBytes || new Uint8Array("width".length),
                    u = n.heightBytes || new Uint8Array("height".length),
                    l = n.videocodecidBytes || new Uint8Array("videocodecid".length);
                if (!n.widthBytes) {
                    for (i = 0; i < "width".length; i++) o[i] = "width".charCodeAt(i);
                    for (i = 0; i < "height".length; i++) u[i] = "height".charCodeAt(i);
                    for (i = 0; i < "videocodecid".length; i++) l[i] = "videocodecid".charCodeAt(i);
                    n.widthBytes = o, n.heightBytes = u, n.videocodecidBytes = l
                }
                switch (this.keyFrame = !1, e) {
                    case n.VIDEO_TAG:
                        this.length = 16, a *= 6;
                        break;
                    case n.AUDIO_TAG:
                        this.length = 13, this.keyFrame = !0;
                        break;
                    case n.METADATA_TAG:
                        this.length = 29, this.keyFrame = !0;
                        break;
                    default:
                        throw new Error("Unknown FLV tag type")
                }
                this.bytes = new Uint8Array(a), this.view = new DataView(this.bytes.buffer), this.bytes[0] = e, this.position = this.length, this.keyFrame = t, this.pts = 0, this.dts = 0, this.writeBytes = function (e, t, i) {
                    var n, r = t || 0;
                    n = r + (i = i || e.byteLength), s(this, i), this.bytes.set(e.subarray(r, n), this.position), this.position += i, this.length = Math.max(this.length, this.position)
                }, this.writeByte = function (e) {
                    s(this, 1), this.bytes[this.position] = e, this.position++, this.length = Math.max(this.length, this.position)
                }, this.writeShort = function (e) {
                    s(this, 2), this.view.setUint16(this.position, e), this.position += 2, this.length = Math.max(this.length, this.position)
                }, this.negIndex = function (e) {
                    return this.bytes[this.length - e]
                }, this.nalUnitSize = function () {
                    return 0 === r ? 0 : this.length - (r + 4)
                }, this.startNalUnit = function () {
                    if (r > 0) throw new Error("Attempted to create new NAL wihout closing the old one");
                    r = this.length, this.length += 4, this.position = this.length
                }, this.endNalUnit = function (e) {
                    var t, i;
                    this.length === r + 4 ? this.length -= 4 : r > 0 && (t = r + 4, i = this.length - t, this.position = r, this.view.setUint32(this.position, i), this.position = this.length, e && e.push(this.bytes.subarray(t, t + i))), r = 0
                }, this.writeMetaDataDouble = function (e, t) {
                    var i;
                    if (s(this, 2 + e.length + 9), this.view.setUint16(this.position, e.length), this.position += 2, "width" === e) this.bytes.set(o, this.position), this.position += 5; else if ("height" === e) this.bytes.set(u, this.position), this.position += 6; else if ("videocodecid" === e) this.bytes.set(l, this.position), this.position += 12; else for (i = 0; i < e.length; i++) this.bytes[this.position] = e.charCodeAt(i), this.position++;
                    this.position++, this.view.setFloat64(this.position, t), this.position += 8, this.length = Math.max(this.length, this.position), ++r
                }, this.writeMetaDataBoolean = function (e, t) {
                    var i;
                    for (s(this, 2), this.view.setUint16(this.position, e.length), this.position += 2, i = 0; i < e.length; i++) s(this, 1), this.bytes[this.position] = e.charCodeAt(i), this.position++;
                    s(this, 2), this.view.setUint8(this.position, 1), this.position++, this.view.setUint8(this.position, t ? 1 : 0), this.position++, this.length = Math.max(this.length, this.position), ++r
                }, this.finalize = function () {
                    var e, i;
                    switch (this.bytes[0]) {
                        case n.VIDEO_TAG:
                            this.bytes[11] = 7 | (this.keyFrame || t ? 16 : 32), this.bytes[12] = t ? 0 : 1, e = this.pts - this.dts, this.bytes[13] = (16711680 & e) >>> 16, this.bytes[14] = (65280 & e) >>> 8, this.bytes[15] = (255 & e) >>> 0;
                            break;
                        case n.AUDIO_TAG:
                            this.bytes[11] = 175, this.bytes[12] = t ? 0 : 1;
                            break;
                        case n.METADATA_TAG:
                            this.position = 11, this.view.setUint8(this.position, 2), this.position++, this.view.setUint16(this.position, 10), this.position += 2, this.bytes.set([111, 110, 77, 101, 116, 97, 68, 97, 116, 97], this.position), this.position += 10, this.bytes[this.position] = 8, this.position++, this.view.setUint32(this.position, r), this.position = this.length, this.bytes.set([0, 0, 9], this.position), this.position += 3, this.length = this.position
                    }
                    return i = this.length - 11, this.bytes[1] = (16711680 & i) >>> 16, this.bytes[2] = (65280 & i) >>> 8, this.bytes[3] = (255 & i) >>> 0, this.bytes[4] = (16711680 & this.dts) >>> 16, this.bytes[5] = (65280 & this.dts) >>> 8, this.bytes[6] = (255 & this.dts) >>> 0, this.bytes[7] = (4278190080 & this.dts) >>> 24, this.bytes[8] = 0, this.bytes[9] = 0, this.bytes[10] = 0, s(this, 4), this.view.setUint32(this.length, this.length), this.length += 4, this.position += 4, this.bytes = this.bytes.subarray(0, this.length), this.frameTime = n.frameTime(this.bytes), this
                }
            }).AUDIO_TAG = 8, n.VIDEO_TAG = 9, n.METADATA_TAG = 18, n.isAudioFrame = function (e) {
                return n.AUDIO_TAG === e[0]
            }, n.isVideoFrame = function (e) {
                return n.VIDEO_TAG === e[0]
            }, n.isMetaData = function (e) {
                return n.METADATA_TAG === e[0]
            }, n.isKeyFrame = function (e) {
                return n.isVideoFrame(e) ? 23 === e[11] : !!n.isAudioFrame(e) || !!n.isMetaData(e)
            }, n.frameTime = function (e) {
                var t = e[4] << 16;
                return t |= e[5] << 8, t |= e[6] << 0, t |= e[7] << 24
            }, t.exports = n
        }, {}],
        46: [function (e, t, i) {
            t.exports = {tag: e("./flv-tag"), Transmuxer: e("./transmuxer"), getFlvHeader: e("./flv-header")}
        }, {"./flv-header": 44, "./flv-tag": 45, "./transmuxer": 48}],
        47: [function (e, t, i) {
            "use strict";
            t.exports = function () {
                var e = this;
                this.list = [], this.push = function (e) {
                    this.list.push({
                        bytes: e.bytes,
                        dts: e.dts,
                        pts: e.pts,
                        keyFrame: e.keyFrame,
                        metaDataTag: e.metaDataTag
                    })
                }, Object.defineProperty(this, "length", {
                    get: function () {
                        return e.list.length
                    }
                })
            }
        }, {}],
        48: [function (e, t, i) {
            "use strict";
            var n, r, a, s, o, u, l = e("../utils/stream.js"), d = e("./flv-tag.js"), c = e("../m2ts/m2ts.js"),
                h = e("../codecs/adts.js"), f = e("../codecs/h264").H264Stream, p = e("./coalesce-stream.js"),
                m = e("./tag-list.js");
            s = function (e, t) {
                "number" == typeof t.pts && (void 0 === e.timelineStartInfo.pts ? e.timelineStartInfo.pts = t.pts : e.timelineStartInfo.pts = Math.min(e.timelineStartInfo.pts, t.pts)), "number" == typeof t.dts && (void 0 === e.timelineStartInfo.dts ? e.timelineStartInfo.dts = t.dts : e.timelineStartInfo.dts = Math.min(e.timelineStartInfo.dts, t.dts))
            }, o = function (e, t) {
                var i = new d(d.METADATA_TAG);
                return i.dts = t, i.pts = t, i.writeMetaDataDouble("videocodecid", 7), i.writeMetaDataDouble("width", e.width), i.writeMetaDataDouble("height", e.height), i
            }, u = function (e, t) {
                var i, n = new d(d.VIDEO_TAG, !0);
                for (n.dts = t, n.pts = t, n.writeByte(1), n.writeByte(e.profileIdc), n.writeByte(e.profileCompatibility), n.writeByte(e.levelIdc), n.writeByte(255), n.writeByte(225), n.writeShort(e.sps[0].length), n.writeBytes(e.sps[0]), n.writeByte(e.pps.length), i = 0; i < e.pps.length; ++i) n.writeShort(e.pps[i].length), n.writeBytes(e.pps[i]);
                return n
            }, (a = function (e) {
                var t, i = [], n = [];
                a.prototype.init.call(this), this.push = function (t) {
                    s(e, t), e && (e.audioobjecttype = t.audioobjecttype, e.channelcount = t.channelcount, e.samplerate = t.samplerate, e.samplingfrequencyindex = t.samplingfrequencyindex, e.samplesize = t.samplesize, e.extraData = e.audioobjecttype << 11 | e.samplingfrequencyindex << 7 | e.channelcount << 3), t.pts = Math.round(t.pts / 90), t.dts = Math.round(t.dts / 90), i.push(t)
                }, this.flush = function () {
                    var r, a, s, o = new m;
                    if (0 !== i.length) {
                        for (s = -1 / 0; i.length;) r = i.shift(), n.length && r.pts >= n[0] && (s = n.shift(), this.writeMetaDataTags(o, s)), (e.extraData !== t || r.pts - s >= 1e3) && (this.writeMetaDataTags(o, r.pts), t = e.extraData, s = r.pts), (a = new d(d.AUDIO_TAG)).pts = r.pts, a.dts = r.dts, a.writeBytes(r.data), o.push(a.finalize());
                        n.length = 0, t = null, this.trigger("data", {
                            track: e,
                            tags: o.list
                        }), this.trigger("done", "AudioSegmentStream")
                    } else this.trigger("done", "AudioSegmentStream")
                }, this.writeMetaDataTags = function (t, i) {
                    var n;
                    (n = new d(d.METADATA_TAG)).pts = i, n.dts = i, n.writeMetaDataDouble("audiocodecid", 10), n.writeMetaDataBoolean("stereo", 2 === e.channelcount), n.writeMetaDataDouble("audiosamplerate", e.samplerate), n.writeMetaDataDouble("audiosamplesize", 16), t.push(n.finalize()), (n = new d(d.AUDIO_TAG, !0)).pts = i, n.dts = i, n.view.setUint16(n.position, e.extraData), n.position += 2, n.length = Math.max(n.length, n.position), t.push(n.finalize())
                }, this.onVideoKeyFrame = function (e) {
                    n.push(e)
                }
            }).prototype = new l, (r = function (e) {
                var t, i, n = [];
                r.prototype.init.call(this), this.finishFrame = function (n, r) {
                    if (r) {
                        if (t && e && e.newMetadata && (r.keyFrame || 0 === n.length)) {
                            var a = o(t, r.dts).finalize(), s = u(e, r.dts).finalize();
                            a.metaDataTag = s.metaDataTag = !0, n.push(a), n.push(s), e.newMetadata = !1, this.trigger("keyframe", r.dts)
                        }
                        r.endNalUnit(), n.push(r.finalize()), i = null
                    }
                }, this.push = function (t) {
                    s(e, t), t.pts = Math.round(t.pts / 90), t.dts = Math.round(t.dts / 90), n.push(t)
                }, this.flush = function () {
                    for (var r, a = new m; n.length && "access_unit_delimiter_rbsp" !== n[0].nalUnitType;) n.shift();
                    if (0 !== n.length) {
                        for (; n.length;) "seq_parameter_set_rbsp" === (r = n.shift()).nalUnitType ? (e.newMetadata = !0, t = r.config, e.width = t.width, e.height = t.height, e.sps = [r.data], e.profileIdc = t.profileIdc, e.levelIdc = t.levelIdc, e.profileCompatibility = t.profileCompatibility, i.endNalUnit()) : "pic_parameter_set_rbsp" === r.nalUnitType ? (e.newMetadata = !0, e.pps = [r.data], i.endNalUnit()) : "access_unit_delimiter_rbsp" === r.nalUnitType ? (i && this.finishFrame(a, i), (i = new d(d.VIDEO_TAG)).pts = r.pts, i.dts = r.dts) : ("slice_layer_without_partitioning_rbsp_idr" === r.nalUnitType && (i.keyFrame = !0), i.endNalUnit()), i.startNalUnit(), i.writeBytes(r.data);
                        i && this.finishFrame(a, i), this.trigger("data", {
                            track: e,
                            tags: a.list
                        }), this.trigger("done", "VideoSegmentStream")
                    } else this.trigger("done", "VideoSegmentStream")
                }
            }).prototype = new l, (n = function (e) {
                var t, i, s, o, u, l, d, m, g, y, _, v, b = this;
                n.prototype.init.call(this), e = e || {}, this.metadataStream = new c.MetadataStream, e.metadataStream = this.metadataStream, t = new c.TransportPacketStream, i = new c.TransportParseStream, s = new c.ElementaryStream, o = new c.TimestampRolloverStream("video"), u = new c.TimestampRolloverStream("audio"), l = new c.TimestampRolloverStream("timed-metadata"), d = new h, m = new f, v = new p(e), t.pipe(i).pipe(s), s.pipe(o).pipe(m), s.pipe(u).pipe(d), s.pipe(l).pipe(this.metadataStream).pipe(v), _ = new c.CaptionStream, m.pipe(_).pipe(v), s.on("data", function (e) {
                    var t, i, n;
                    if ("metadata" === e.type) {
                        for (t = e.tracks.length; t--;) "video" === e.tracks[t].type ? i = e.tracks[t] : "audio" === e.tracks[t].type && (n = e.tracks[t]);
                        i && !g && (v.numberOfTracks++, g = new r(i), m.pipe(g).pipe(v)), n && !y && (v.numberOfTracks++, y = new a(n), d.pipe(y).pipe(v), g && g.on("keyframe", y.onVideoKeyFrame))
                    }
                }), this.push = function (e) {
                    t.push(e)
                }, this.flush = function () {
                    t.flush()
                }, this.resetCaptions = function () {
                    _.reset()
                }, v.on("data", function (e) {
                    b.trigger("data", e)
                }), v.on("done", function () {
                    b.trigger("done")
                })
            }).prototype = new l, t.exports = n
        }, {
            "../codecs/adts.js": 40,
            "../codecs/h264": 41,
            "../m2ts/m2ts.js": 50,
            "../utils/stream.js": 62,
            "./coalesce-stream.js": 43,
            "./flv-tag.js": 45,
            "./tag-list.js": 47
        }],
        49: [function (e, t, i) {
            "use strict";
            var n = e("../utils/stream"), r = function () {
                r.prototype.init.call(this), this.captionPackets_ = [], this.ccStreams_ = [new l(0, 0), new l(0, 1), new l(1, 0), new l(1, 1)], this.reset(), this.ccStreams_.forEach(function (e) {
                    e.on("data", this.trigger.bind(this, "data")), e.on("done", this.trigger.bind(this, "done"))
                }, this)
            };
            r.prototype = new n, r.prototype.push = function (e) {
                var t, i;
                if ("sei_rbsp" === e.nalUnitType && 4 === (t = function (e) {
                    for (var t = 0, i = {
                        payloadType: -1,
                        payloadSize: 0
                    }, n = 0, r = 0; t < e.byteLength && 128 !== e[t];) {
                        for (; 255 === e[t];) n += 255, t++;
                        for (n += e[t++]; 255 === e[t];) r += 255, t++;
                        if (r += e[t++], !i.payload && 4 === n) {
                            i.payloadType = n, i.payloadSize = r, i.payload = e.subarray(t, t + r);
                            break
                        }
                        t += r, n = 0, r = 0
                    }
                    return i
                }(e.escapedRBSP)).payloadType) {
                    var n;
                    (i = 181 !== (n = t).payload[0] ? null : 49 != (n.payload[1] << 8 | n.payload[2]) ? null : "GA94" !== String.fromCharCode(n.payload[3], n.payload[4], n.payload[5], n.payload[6]) ? null : 3 !== n.payload[7] ? null : n.payload.subarray(8, n.payload.length - 1)) && (e.dts < this.latestDts_ ? this.ignoreNextEqualDts_ = !0 : e.dts === this.latestDts_ && this.ignoreNextEqualDts_ ? this.ignoreNextEqualDts_ = !1 : (this.captionPackets_ = this.captionPackets_.concat(function (e, t) {
                        var i, n, r, a, s = [];
                        if (!(64 & t[0])) return s;
                        for (n = 31 & t[0], i = 0; i < n; i++) a = {
                            type: 3 & t[2 + (r = 3 * i)],
                            pts: e
                        }, 4 & t[r + 2] && (a.ccData = t[r + 3] << 8 | t[r + 4], s.push(a));
                        return s
                    }(e.pts, i)), this.latestDts_ = e.dts))
                }
            }, r.prototype.flush = function () {
                this.captionPackets_.length ? (this.captionPackets_.forEach(function (e, t) {
                    e.presortIndex = t
                }), this.captionPackets_.sort(function (e, t) {
                    return e.pts === t.pts ? e.presortIndex - t.presortIndex : e.pts - t.pts
                }), this.captionPackets_.forEach(function (e) {
                    e.type < 2 && this.dispatchCea608Packet(e)
                }, this), this.captionPackets_.length = 0, this.ccStreams_.forEach(function (e) {
                    e.flush()
                }, this)) : this.ccStreams_.forEach(function (e) {
                    e.flush()
                }, this)
            }, r.prototype.reset = function () {
                this.latestDts_ = null, this.ignoreNextEqualDts_ = !1, this.activeCea608Channel_ = [null, null], this.ccStreams_.forEach(function (e) {
                    e.reset()
                })
            }, r.prototype.dispatchCea608Packet = function (e) {
                this.setsChannel1Active(e) ? this.activeCea608Channel_[e.type] = 0 : this.setsChannel2Active(e) && (this.activeCea608Channel_[e.type] = 1), null !== this.activeCea608Channel_[e.type] && this.ccStreams_[(e.type << 1) + this.activeCea608Channel_[e.type]].push(e)
            }, r.prototype.setsChannel1Active = function (e) {
                return 4096 == (30720 & e.ccData)
            }, r.prototype.setsChannel2Active = function (e) {
                return 6144 == (30720 & e.ccData)
            };
            var a = {
                    42: 225,
                    92: 233,
                    94: 237,
                    95: 243,
                    96: 250,
                    123: 231,
                    124: 247,
                    125: 209,
                    126: 241,
                    127: 9608,
                    304: 174,
                    305: 176,
                    306: 189,
                    307: 191,
                    308: 8482,
                    309: 162,
                    310: 163,
                    311: 9834,
                    312: 224,
                    313: 160,
                    314: 232,
                    315: 226,
                    316: 234,
                    317: 238,
                    318: 244,
                    319: 251,
                    544: 193,
                    545: 201,
                    546: 211,
                    547: 218,
                    548: 220,
                    549: 252,
                    550: 8216,
                    551: 161,
                    552: 42,
                    553: 39,
                    554: 8212,
                    555: 169,
                    556: 8480,
                    557: 8226,
                    558: 8220,
                    559: 8221,
                    560: 192,
                    561: 194,
                    562: 199,
                    563: 200,
                    564: 202,
                    565: 203,
                    566: 235,
                    567: 206,
                    568: 207,
                    569: 239,
                    570: 212,
                    571: 217,
                    572: 249,
                    573: 219,
                    574: 171,
                    575: 187,
                    800: 195,
                    801: 227,
                    802: 205,
                    803: 204,
                    804: 236,
                    805: 210,
                    806: 242,
                    807: 213,
                    808: 245,
                    809: 123,
                    810: 125,
                    811: 92,
                    812: 94,
                    813: 95,
                    814: 124,
                    815: 126,
                    816: 196,
                    817: 228,
                    818: 214,
                    819: 246,
                    820: 223,
                    821: 165,
                    822: 164,
                    823: 9474,
                    824: 197,
                    825: 229,
                    826: 216,
                    827: 248,
                    828: 9484,
                    829: 9488,
                    830: 9492,
                    831: 9496
                }, s = function (e) {
                    return null === e ? "" : (e = a[e] || e, String.fromCharCode(e))
                }, o = [4352, 4384, 4608, 4640, 5376, 5408, 5632, 5664, 5888, 5920, 4096, 4864, 4896, 5120, 5152],
                u = function () {
                    for (var e = [], t = 15; t--;) e.push("");
                    return e
                }, l = function (e, t) {
                    l.prototype.init.call(this), this.field_ = e || 0, this.dataChannel_ = t || 0, this.name_ = "CC" + (1 + (this.field_ << 1 | this.dataChannel_)), this.setConstants(), this.reset(), this.push = function (e) {
                        var t, i, n, r, a;
                        if ((t = 32639 & e.ccData) !== this.lastControlCode_) {
                            if (4096 == (61440 & t) ? this.lastControlCode_ = t : t !== this.PADDING_ && (this.lastControlCode_ = null), n = t >>> 8, r = 255 & t, t !== this.PADDING_) if (t === this.RESUME_CAPTION_LOADING_) this.mode_ = "popOn"; else if (t === this.END_OF_CAPTION_) this.clearFormatting(e.pts), this.flushDisplayed(e.pts), i = this.displayed_, this.displayed_ = this.nonDisplayed_, this.nonDisplayed_ = i, this.startPts_ = e.pts; else if (t === this.ROLL_UP_2_ROWS_) this.topRow_ = 13, this.mode_ = "rollUp"; else if (t === this.ROLL_UP_3_ROWS_) this.topRow_ = 12, this.mode_ = "rollUp"; else if (t === this.ROLL_UP_4_ROWS_) this.topRow_ = 11, this.mode_ = "rollUp"; else if (t === this.CARRIAGE_RETURN_) this.clearFormatting(e.pts), this.flushDisplayed(e.pts), this.shiftRowsUp_(), this.startPts_ = e.pts; else if (t === this.BACKSPACE_) "popOn" === this.mode_ ? this.nonDisplayed_[14] = this.nonDisplayed_[14].slice(0, -1) : this.displayed_[14] = this.displayed_[14].slice(0, -1); else if (t === this.ERASE_DISPLAYED_MEMORY_) this.flushDisplayed(e.pts), this.displayed_ = u(); else if (t === this.ERASE_NON_DISPLAYED_MEMORY_) this.nonDisplayed_ = u(); else if (t === this.RESUME_DIRECT_CAPTIONING_) this.mode_ = "paintOn"; else if (this.isSpecialCharacter(n, r)) a = s((n = (3 & n) << 8) | r), this[this.mode_](e.pts, a), this.column_++; else if (this.isExtCharacter(n, r)) "popOn" === this.mode_ ? this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1) : this.displayed_[14] = this.displayed_[14].slice(0, -1), a = s((n = (3 & n) << 8) | r), this[this.mode_](e.pts, a), this.column_++; else if (this.isMidRowCode(n, r)) this.clearFormatting(e.pts), this[this.mode_](e.pts, " "), this.column_++, 14 == (14 & r) && this.addFormatting(e.pts, ["i"]), 1 == (1 & r) && this.addFormatting(e.pts, ["u"]); else if (this.isOffsetControlCode(n, r)) this.column_ += 3 & r; else if (this.isPAC(n, r)) {
                                var l = o.indexOf(7968 & t);
                                l !== this.row_ && (this.clearFormatting(e.pts), this.row_ = l), 1 & r && -1 === this.formatting_.indexOf("u") && this.addFormatting(e.pts, ["u"]), 16 == (16 & t) && (this.column_ = 4 * ((14 & t) >> 1)), this.isColorPAC(r) && 14 == (14 & r) && this.addFormatting(e.pts, ["i"])
                            } else this.isNormalChar(n) && (0 === r && (r = null), a = s(n), a += s(r), this[this.mode_](e.pts, a), this.column_ += a.length)
                        } else this.lastControlCode_ = null
                    }
                };
            l.prototype = new n, l.prototype.flushDisplayed = function (e) {
                var t = this.displayed_.map(function (e) {
                    return e.trim()
                }).join("\n").replace(/^\n+|\n+$/g, "");
                t.length && this.trigger("data", {startPts: this.startPts_, endPts: e, text: t, stream: this.name_})
            }, l.prototype.reset = function () {
                this.mode_ = "popOn", this.topRow_ = 0, this.startPts_ = 0, this.displayed_ = u(), this.nonDisplayed_ = u(), this.lastControlCode_ = null, this.column_ = 0, this.row_ = 14, this.formatting_ = []
            }, l.prototype.setConstants = function () {
                0 === this.dataChannel_ ? (this.BASE_ = 16, this.EXT_ = 17, this.CONTROL_ = (20 | this.field_) << 8, this.OFFSET_ = 23) : 1 === this.dataChannel_ && (this.BASE_ = 24, this.EXT_ = 25, this.CONTROL_ = (28 | this.field_) << 8, this.OFFSET_ = 31), this.PADDING_ = 0, this.RESUME_CAPTION_LOADING_ = 32 | this.CONTROL_, this.END_OF_CAPTION_ = 47 | this.CONTROL_, this.ROLL_UP_2_ROWS_ = 37 | this.CONTROL_, this.ROLL_UP_3_ROWS_ = 38 | this.CONTROL_, this.ROLL_UP_4_ROWS_ = 39 | this.CONTROL_, this.CARRIAGE_RETURN_ = 45 | this.CONTROL_, this.RESUME_DIRECT_CAPTIONING_ = 41 | this.CONTROL_, this.BACKSPACE_ = 33 | this.CONTROL_, this.ERASE_DISPLAYED_MEMORY_ = 44 | this.CONTROL_, this.ERASE_NON_DISPLAYED_MEMORY_ = 46 | this.CONTROL_
            }, l.prototype.isSpecialCharacter = function (e, t) {
                return e === this.EXT_ && t >= 48 && t <= 63
            }, l.prototype.isExtCharacter = function (e, t) {
                return (e === this.EXT_ + 1 || e === this.EXT_ + 2) && t >= 32 && t <= 63
            }, l.prototype.isMidRowCode = function (e, t) {
                return e === this.EXT_ && t >= 32 && t <= 47
            }, l.prototype.isOffsetControlCode = function (e, t) {
                return e === this.OFFSET_ && t >= 33 && t <= 35
            }, l.prototype.isPAC = function (e, t) {
                return e >= this.BASE_ && e < this.BASE_ + 8 && t >= 64 && t <= 127
            }, l.prototype.isColorPAC = function (e) {
                return e >= 64 && e <= 79 || e >= 96 && e <= 127
            }, l.prototype.isNormalChar = function (e) {
                return e >= 32 && e <= 127
            }, l.prototype.addFormatting = function (e, t) {
                this.formatting_ = this.formatting_.concat(t);
                var i = t.reduce(function (e, t) {
                    return e + "<" + t + ">"
                }, "");
                this[this.mode_](e, i)
            }, l.prototype.clearFormatting = function (e) {
                if (this.formatting_.length) {
                    var t = this.formatting_.reverse().reduce(function (e, t) {
                        return e + "</" + t + ">"
                    }, "");
                    this.formatting_ = [], this[this.mode_](e, t)
                }
            }, l.prototype.popOn = function (e, t) {
                var i = this.nonDisplayed_[this.row_];
                i += t, this.nonDisplayed_[this.row_] = i
            }, l.prototype.rollUp = function (e, t) {
                var i = this.displayed_[14];
                i += t, this.displayed_[14] = i
            }, l.prototype.shiftRowsUp_ = function () {
                var e;
                for (e = 0; e < this.topRow_; e++) this.displayed_[e] = "";
                for (e = this.topRow_; e < 14; e++) this.displayed_[e] = this.displayed_[e + 1];
                this.displayed_[14] = ""
            }, l.prototype.paintOn = function () {
            }, t.exports = {CaptionStream: r, Cea608Stream: l}
        }, {"../utils/stream": 62}],
        50: [function (e, t, i) {
            "use strict";
            var n, r, a, s = e("../utils/stream.js"), o = e("./caption-stream"), u = e("./stream-types"),
                l = e("./timestamp-rollover-stream").TimestampRolloverStream, d = e("./stream-types.js");
            (n = function () {
                var e = new Uint8Array(188), t = 0;
                n.prototype.init.call(this), this.push = function (i) {
                    var n, r = 0, a = 188;
                    for (t ? ((n = new Uint8Array(i.byteLength + t)).set(e.subarray(0, t)), n.set(i, t), t = 0) : n = i; a < n.byteLength;) 71 !== n[r] || 71 !== n[a] ? (r++, a++) : (this.trigger("data", n.subarray(r, a)), r += 188, a += 188);
                    r < n.byteLength && (e.set(n.subarray(r), 0), t = n.byteLength - r)
                }, this.flush = function () {
                    188 === t && 71 === e[0] && (this.trigger("data", e), t = 0), this.trigger("done")
                }
            }).prototype = new s, (r = function () {
                var e, t, i, n;
                r.prototype.init.call(this), n = this, this.packetsWaitingForPmt = [], this.programMapTable = void 0, e = function (e, n) {
                    var r = 0;
                    n.payloadUnitStartIndicator && (r += e[r] + 1), "pat" === n.type ? t(e.subarray(r), n) : i(e.subarray(r), n)
                }, t = function (e, t) {
                    t.section_number = e[7], t.last_section_number = e[8], n.pmtPid = (31 & e[10]) << 8 | e[11], t.pmtPid = n.pmtPid
                }, i = function (e, t) {
                    var i, r;
                    if (1 & e[5]) {
                        for (n.programMapTable = {
                            video: null,
                            audio: null,
                            "timed-metadata": {}
                        }, i = 3 + ((15 & e[1]) << 8 | e[2]) - 4, r = 12 + ((15 & e[10]) << 8 | e[11]); r < i;) {
                            var a = e[r], s = (31 & e[r + 1]) << 8 | e[r + 2];
                            a === u.H264_STREAM_TYPE && null === n.programMapTable.video ? n.programMapTable.video = s : a === u.ADTS_STREAM_TYPE && null === n.programMapTable.audio ? n.programMapTable.audio = s : a === u.METADATA_STREAM_TYPE && (n.programMapTable["timed-metadata"][s] = a), r += 5 + ((15 & e[r + 3]) << 8 | e[r + 4])
                        }
                        t.programMapTable = n.programMapTable
                    }
                }, this.push = function (t) {
                    var i = {}, n = 4;
                    if (i.payloadUnitStartIndicator = !!(64 & t[1]), i.pid = 31 & t[1], i.pid <<= 8, i.pid |= t[2], (48 & t[3]) >>> 4 > 1 && (n += t[n] + 1), 0 === i.pid) i.type = "pat", e(t.subarray(n), i), this.trigger("data", i); else if (i.pid === this.pmtPid) for (i.type = "pmt", e(t.subarray(n), i), this.trigger("data", i); this.packetsWaitingForPmt.length;) this.processPes_.apply(this, this.packetsWaitingForPmt.shift()); else void 0 === this.programMapTable ? this.packetsWaitingForPmt.push([t, n, i]) : this.processPes_(t, n, i)
                }, this.processPes_ = function (e, t, i) {
                    i.pid === this.programMapTable.video ? i.streamType = u.H264_STREAM_TYPE : i.pid === this.programMapTable.audio ? i.streamType = u.ADTS_STREAM_TYPE : i.streamType = this.programMapTable["timed-metadata"][i.pid], i.type = "pes", i.data = e.subarray(t), this.trigger("data", i)
                }
            }).prototype = new s, r.STREAM_TYPES = {h264: 27, adts: 15}, (a = function () {
                var e = this, t = {data: [], size: 0}, i = {data: [], size: 0}, n = {data: [], size: 0},
                    r = function (t, i, n) {
                        var r, a = new Uint8Array(t.size), s = {type: i}, o = 0, u = 0, l = !1;
                        if (t.data.length && !(t.size < 9)) {
                            for (s.trackId = t.data[0].pid, o = 0; o < t.data.length; o++) r = t.data[o], a.set(r.data, u), u += r.data.byteLength;
                            !function (e, t) {
                                var i;
                                t.packetLength = 6 + (e[4] << 8 | e[5]), t.dataAlignmentIndicator = 0 != (4 & e[6]), 192 & (i = e[7]) && (t.pts = (14 & e[9]) << 27 | (255 & e[10]) << 20 | (254 & e[11]) << 12 | (255 & e[12]) << 5 | (254 & e[13]) >>> 3, t.pts *= 4, t.pts += (6 & e[13]) >>> 1, t.dts = t.pts, 64 & i && (t.dts = (14 & e[14]) << 27 | (255 & e[15]) << 20 | (254 & e[16]) << 12 | (255 & e[17]) << 5 | (254 & e[18]) >>> 3, t.dts *= 4, t.dts += (6 & e[18]) >>> 1)), t.data = e.subarray(9 + e[8])
                            }(a, s), l = "video" === i || s.packetLength <= t.size, (n || l) && (t.size = 0, t.data.length = 0), l && e.trigger("data", s)
                        }
                    };
                a.prototype.init.call(this), this.push = function (a) {
                    ({
                        pat: function () {
                        }, pes: function () {
                            var e, s;
                            switch (a.streamType) {
                                case u.H264_STREAM_TYPE:
                                case d.H264_STREAM_TYPE:
                                    e = t, s = "video";
                                    break;
                                case u.ADTS_STREAM_TYPE:
                                    e = i, s = "audio";
                                    break;
                                case u.METADATA_STREAM_TYPE:
                                    e = n, s = "timed-metadata";
                                    break;
                                default:
                                    return
                            }
                            a.payloadUnitStartIndicator && r(e, s, !0), e.data.push(a), e.size += a.data.byteLength
                        }, pmt: function () {
                            var t = {type: "metadata", tracks: []}, i = a.programMapTable;
                            null !== i.video && t.tracks.push({
                                timelineStartInfo: {baseMediaDecodeTime: 0},
                                id: +i.video,
                                codec: "avc",
                                type: "video"
                            }), null !== i.audio && t.tracks.push({
                                timelineStartInfo: {baseMediaDecodeTime: 0},
                                id: +i.audio,
                                codec: "adts",
                                type: "audio"
                            }), e.trigger("data", t)
                        }
                    })[a.type]()
                }, this.flush = function () {
                    r(t, "video"), r(i, "audio"), r(n, "timed-metadata"), this.trigger("done")
                }
            }).prototype = new s;
            var c = {
                PAT_PID: 0,
                MP2T_PACKET_LENGTH: 188,
                TransportPacketStream: n,
                TransportParseStream: r,
                ElementaryStream: a,
                TimestampRolloverStream: l,
                CaptionStream: o.CaptionStream,
                Cea608Stream: o.Cea608Stream,
                MetadataStream: e("./metadata-stream")
            };
            for (var h in u) u.hasOwnProperty(h) && (c[h] = u[h]);
            t.exports = c
        }, {
            "../utils/stream.js": 62,
            "./caption-stream": 49,
            "./metadata-stream": 51,
            "./stream-types": 53,
            "./stream-types.js": 53,
            "./timestamp-rollover-stream": 54
        }],
        51: [function (e, t, i) {
            "use strict";
            var n, r = e("../utils/stream"), a = e("./stream-types"), s = function (e, t, i) {
                var n, r = "";
                for (n = t; n < i; n++) r += "%" + ("00" + e[n].toString(16)).slice(-2);
                return r
            }, o = function (e, t, i) {
                return decodeURIComponent(s(e, t, i))
            }, u = function (e) {
                return e[0] << 21 | e[1] << 14 | e[2] << 7 | e[3]
            }, l = {
                TXXX: function (e) {
                    var t;
                    if (3 === e.data[0]) {
                        for (t = 1; t < e.data.length; t++) if (0 === e.data[t]) {
                            e.description = o(e.data, 1, t), e.value = o(e.data, t + 1, e.data.length).replace(/\0*$/, "");
                            break
                        }
                        e.data = e.value
                    }
                }, WXXX: function (e) {
                    var t;
                    if (3 === e.data[0]) for (t = 1; t < e.data.length; t++) if (0 === e.data[t]) {
                        e.description = o(e.data, 1, t), e.url = o(e.data, t + 1, e.data.length);
                        break
                    }
                }, PRIV: function (e) {
                    var t;
                    for (t = 0; t < e.data.length; t++) if (0 === e.data[t]) {
                        e.owner = (i = e.data, n = 0, r = t, unescape(s(i, n, r)));
                        break
                    }
                    var i, n, r;
                    e.privateData = e.data.subarray(t + 1), e.data = e.privateData
                }
            };
            (n = function (e) {
                var t, i = {debug: !(!e || !e.debug), descriptor: e && e.descriptor}, r = 0, s = [], o = 0;
                if (n.prototype.init.call(this), this.dispatchType = a.METADATA_STREAM_TYPE.toString(16), i.descriptor) for (t = 0; t < i.descriptor.length; t++) this.dispatchType += ("00" + i.descriptor[t].toString(16)).slice(-2);
                this.push = function (e) {
                    var t, n, a, d, c;
                    if ("timed-metadata" === e.type) if (e.dataAlignmentIndicator && (o = 0, s.length = 0), 0 === s.length && (e.data.length < 10 || e.data[0] !== "I".charCodeAt(0) || e.data[1] !== "D".charCodeAt(0) || e.data[2] !== "3".charCodeAt(0))) i.debug && console.log("Skipping unrecognized metadata packet"); else if (s.push(e), o += e.data.byteLength, 1 === s.length && (r = u(e.data.subarray(6, 10)), r += 10), !(o < r)) {
                        for (t = {
                            data: new Uint8Array(r),
                            frames: [],
                            pts: s[0].pts,
                            dts: s[0].dts
                        }, c = 0; c < r;) t.data.set(s[0].data.subarray(0, r - c), c), c += s[0].data.byteLength, o -= s[0].data.byteLength, s.shift();
                        n = 10, 64 & t.data[5] && (n += 4, n += u(t.data.subarray(10, 14)), r -= u(t.data.subarray(16, 20)));
                        do {
                            if ((a = u(t.data.subarray(n + 4, n + 8))) < 1) return console.log("Malformed ID3 frame encountered. Skipping metadata parsing.");
                            if ((d = {
                                id: String.fromCharCode(t.data[n], t.data[n + 1], t.data[n + 2], t.data[n + 3]),
                                data: t.data.subarray(n + 10, n + a + 10)
                            }).key = d.id, l[d.id] && (l[d.id](d), "com.apple.streaming.transportStreamTimestamp" === d.owner)) {
                                var h = d.data, f = (1 & h[3]) << 30 | h[4] << 22 | h[5] << 14 | h[6] << 6 | h[7] >>> 2;
                                f *= 4, f += 3 & h[7], d.timeStamp = f, void 0 === t.pts && void 0 === t.dts && (t.pts = d.timeStamp, t.dts = d.timeStamp), this.trigger("timestamp", d)
                            }
                            t.frames.push(d), n += 10, n += a
                        } while (n < r);
                        this.trigger("data", t)
                    }
                }
            }).prototype = new r, t.exports = n
        }, {"../utils/stream": 62, "./stream-types": 53}],
        52: [function (e, t, i) {
            "use strict";
            var n = e("./stream-types.js"), r = function (e) {
                var t = 31 & e[1];
                return t <<= 8, t |= e[2]
            }, a = function (e) {
                return !!(64 & e[1])
            }, s = function (e) {
                var t = 0;
                return (48 & e[3]) >>> 4 > 1 && (t += e[4] + 1), t
            }, o = function (e) {
                switch (e) {
                    case 5:
                        return "slice_layer_without_partitioning_rbsp_idr";
                    case 6:
                        return "sei_rbsp";
                    case 7:
                        return "seq_parameter_set_rbsp";
                    case 8:
                        return "pic_parameter_set_rbsp";
                    case 9:
                        return "access_unit_delimiter_rbsp";
                    default:
                        return null
                }
            };
            t.exports = {
                parseType: function (e, t) {
                    var i = r(e);
                    return 0 === i ? "pat" : i === t ? "pmt" : t ? "pes" : null
                }, parsePat: function (e) {
                    var t = a(e), i = 4 + s(e);
                    return t && (i += e[i] + 1), (31 & e[i + 10]) << 8 | e[i + 11]
                }, parsePmt: function (e) {
                    var t = {}, i = a(e), n = 4 + s(e);
                    if (i && (n += e[n] + 1), 1 & e[n + 5]) {
                        var r;
                        r = 3 + ((15 & e[n + 1]) << 8 | e[n + 2]) - 4;
                        for (var o = 12 + ((15 & e[n + 10]) << 8 | e[n + 11]); o < r;) {
                            var u = n + o;
                            t[(31 & e[u + 1]) << 8 | e[u + 2]] = e[u], o += 5 + ((15 & e[u + 3]) << 8 | e[u + 4])
                        }
                        return t
                    }
                }, parsePayloadUnitStartIndicator: a, parsePesType: function (e, t) {
                    switch (t[r(e)]) {
                        case n.H264_STREAM_TYPE:
                            return "video";
                        case n.ADTS_STREAM_TYPE:
                            return "audio";
                        case n.METADATA_STREAM_TYPE:
                            return "timed-metadata";
                        default:
                            return null
                    }
                }, parsePesTime: function (e) {
                    if (!a(e)) return null;
                    var t = 4 + s(e);
                    if (t >= e.byteLength) return null;
                    var i, n = null;
                    return 192 & (i = e[t + 7]) && ((n = {}).pts = (14 & e[t + 9]) << 27 | (255 & e[t + 10]) << 20 | (254 & e[t + 11]) << 12 | (255 & e[t + 12]) << 5 | (254 & e[t + 13]) >>> 3, n.pts *= 4, n.pts += (6 & e[t + 13]) >>> 1, n.dts = n.pts, 64 & i && (n.dts = (14 & e[t + 14]) << 27 | (255 & e[t + 15]) << 20 | (254 & e[t + 16]) << 12 | (255 & e[t + 17]) << 5 | (254 & e[t + 18]) >>> 3, n.dts *= 4, n.dts += (6 & e[t + 18]) >>> 1)), n
                }, videoPacketContainsKeyFrame: function (e) {
                    for (var t = 4 + s(e), i = e.subarray(t), n = 0, r = 0, a = !1; r < i.byteLength - 3; r++) if (1 === i[r + 2]) {
                        n = r + 5;
                        break
                    }
                    for (; n < i.byteLength;) switch (i[n]) {
                        case 0:
                            if (0 !== i[n - 1]) {
                                n += 2;
                                break
                            }
                            if (0 !== i[n - 2]) {
                                n++;
                                break
                            }
                            r + 3 !== n - 2 && "slice_layer_without_partitioning_rbsp_idr" === o(31 & i[r + 3]) && (a = !0);
                            do {
                                n++
                            } while (1 !== i[n] && n < i.length);
                            r = n - 2, n += 3;
                            break;
                        case 1:
                            if (0 !== i[n - 1] || 0 !== i[n - 2]) {
                                n += 3;
                                break
                            }
                            "slice_layer_without_partitioning_rbsp_idr" === o(31 & i[r + 3]) && (a = !0), r = n - 2, n += 3;
                            break;
                        default:
                            n += 3
                    }
                    return i = i.subarray(r), n -= r, r = 0, i && i.byteLength > 3 && "slice_layer_without_partitioning_rbsp_idr" === o(31 & i[r + 3]) && (a = !0), a
                }
            }
        }, {"./stream-types.js": 53}],
        53: [function (e, t, i) {
            "use strict";
            t.exports = {H264_STREAM_TYPE: 27, ADTS_STREAM_TYPE: 15, METADATA_STREAM_TYPE: 21}
        }, {}],
        54: [function (e, t, i) {
            "use strict";
            var n = e("../utils/stream"), r = function (e, t) {
                var i = 1;
                for (e > t && (i = -1); Math.abs(t - e) > 4294967296;) e += 8589934592 * i;
                return e
            }, a = function (e) {
                var t, i;
                a.prototype.init.call(this), this.type_ = e, this.push = function (e) {
                    e.type === this.type_ && (void 0 === i && (i = e.dts), e.dts = r(e.dts, i), e.pts = r(e.pts, i), t = e.dts, this.trigger("data", e))
                }, this.flush = function () {
                    i = t, this.trigger("done")
                }, this.discontinuity = function () {
                    i = void 0, t = void 0
                }
            };
            a.prototype = new n, t.exports = {TimestampRolloverStream: a, handleRollover: r}
        }, {"../utils/stream": 62}],
        55: [function (e, t, i) {
            t.exports = {
                generator: e("./mp4-generator"),
                Transmuxer: e("./transmuxer").Transmuxer,
                AudioSegmentStream: e("./transmuxer").AudioSegmentStream,
                VideoSegmentStream: e("./transmuxer").VideoSegmentStream
            }
        }, {"./mp4-generator": 56, "./transmuxer": 58}],
        56: [function (e, t, i) {
            "use strict";
            var n, r, a, s, o, u, l, d, c, h, f, p, m, g, y, _, v, b, T, S, k, w, E, C, A, L, O, I, P, R, x, D, U, M, B,
                j, N = Math.pow(2, 32) - 1;
            !function () {
                var e;
                if (E = {
                    avc1: [],
                    avcC: [],
                    btrt: [],
                    dinf: [],
                    dref: [],
                    esds: [],
                    ftyp: [],
                    hdlr: [],
                    mdat: [],
                    mdhd: [],
                    mdia: [],
                    mfhd: [],
                    minf: [],
                    moof: [],
                    moov: [],
                    mp4a: [],
                    mvex: [],
                    mvhd: [],
                    sdtp: [],
                    smhd: [],
                    stbl: [],
                    stco: [],
                    stsc: [],
                    stsd: [],
                    stsz: [],
                    stts: [],
                    styp: [],
                    tfdt: [],
                    tfhd: [],
                    traf: [],
                    trak: [],
                    trun: [],
                    trex: [],
                    tkhd: [],
                    vmhd: []
                }, "undefined" != typeof Uint8Array) {
                    for (e in E) E.hasOwnProperty(e) && (E[e] = [e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)]);
                    C = new Uint8Array(["i".charCodeAt(0), "s".charCodeAt(0), "o".charCodeAt(0), "m".charCodeAt(0)]), L = new Uint8Array(["a".charCodeAt(0), "v".charCodeAt(0), "c".charCodeAt(0), "1".charCodeAt(0)]), A = new Uint8Array([0, 0, 0, 1]), O = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]), I = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]), P = {
                        video: O,
                        audio: I
                    }, D = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]), x = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), U = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), M = U, B = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), j = U, R = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])
                }
            }(), n = function (e) {
                var t, i, n = [], r = 0;
                for (t = 1; t < arguments.length; t++) n.push(arguments[t]);
                for (t = n.length; t--;) r += n[t].byteLength;
                for (i = new Uint8Array(r + 8), new DataView(i.buffer, i.byteOffset, i.byteLength).setUint32(0, i.byteLength), i.set(e, 4), t = 0, r = 8; t < n.length; t++) i.set(n[t], r), r += n[t].byteLength;
                return i
            }, r = function () {
                return n(E.dinf, n(E.dref, D))
            }, a = function (e) {
                return n(E.esds, new Uint8Array([0, 0, 0, 0, 3, 25, 0, 0, 0, 4, 17, 64, 21, 0, 6, 0, 0, 0, 218, 192, 0, 0, 218, 192, 5, 2, e.audioobjecttype << 3 | e.samplingfrequencyindex >>> 1, e.samplingfrequencyindex << 7 | e.channelcount << 3, 6, 1, 2]))
            }, s = function () {
                return n(E.ftyp, C, A, C, L)
            }, _ = function (e) {
                return n(E.hdlr, P[e])
            }, o = function (e) {
                return n(E.mdat, e)
            }, y = function (e) {
                var t = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 1, 95, 144, e.duration >>> 24 & 255, e.duration >>> 16 & 255, e.duration >>> 8 & 255, 255 & e.duration, 85, 196, 0, 0]);
                return e.samplerate && (t[12] = e.samplerate >>> 24 & 255, t[13] = e.samplerate >>> 16 & 255, t[14] = e.samplerate >>> 8 & 255, t[15] = 255 & e.samplerate), n(E.mdhd, t)
            }, g = function (e) {
                return n(E.mdia, y(e), _(e.type), l(e))
            }, u = function (e) {
                return n(E.mfhd, new Uint8Array([0, 0, 0, 0, (4278190080 & e) >> 24, (16711680 & e) >> 16, (65280 & e) >> 8, 255 & e]))
            }, l = function (e) {
                return n(E.minf, "video" === e.type ? n(E.vmhd, R) : n(E.smhd, x), r(), b(e))
            }, d = function (e, t) {
                for (var i = [], r = t.length; r--;) i[r] = S(t[r]);
                return n.apply(null, [E.moof, u(e)].concat(i))
            }, c = function (e) {
                for (var t = e.length, i = []; t--;) i[t] = p(e[t]);
                return n.apply(null, [E.moov, f(4294967295)].concat(i).concat(h(e)))
            }, h = function (e) {
                for (var t = e.length, i = []; t--;) i[t] = k(e[t]);
                return n.apply(null, [E.mvex].concat(i))
            }, f = function (e) {
                var t = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 95, 144, (4278190080 & e) >> 24, (16711680 & e) >> 16, (65280 & e) >> 8, 255 & e, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
                return n(E.mvhd, t)
            }, v = function (e) {
                var t, i, r = e.samples || [], a = new Uint8Array(4 + r.length);
                for (i = 0; i < r.length; i++) t = r[i].flags, a[i + 4] = t.dependsOn << 4 | t.isDependedOn << 2 | t.hasRedundancy;
                return n(E.sdtp, a)
            }, b = function (e) {
                return n(E.stbl, T(e), n(E.stts, j), n(E.stsc, M), n(E.stsz, B), n(E.stco, U))
            }, function () {
                var e, t;
                T = function (i) {
                    return n(E.stsd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]), "video" === i.type ? e(i) : t(i))
                }, e = function (e) {
                    var t, i = e.sps || [], r = e.pps || [], a = [], s = [];
                    for (t = 0; t < i.length; t++) a.push((65280 & i[t].byteLength) >>> 8), a.push(255 & i[t].byteLength), a = a.concat(Array.prototype.slice.call(i[t]));
                    for (t = 0; t < r.length; t++) s.push((65280 & r[t].byteLength) >>> 8), s.push(255 & r[t].byteLength), s = s.concat(Array.prototype.slice.call(r[t]));
                    return n(E.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (65280 & e.width) >> 8, 255 & e.width, (65280 & e.height) >> 8, 255 & e.height, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 19, 118, 105, 100, 101, 111, 106, 115, 45, 99, 111, 110, 116, 114, 105, 98, 45, 104, 108, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), n(E.avcC, new Uint8Array([1, e.profileIdc, e.profileCompatibility, e.levelIdc, 255].concat([i.length]).concat(a).concat([r.length]).concat(s))), n(E.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])))
                }, t = function (e) {
                    return n(E.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, (65280 & e.channelcount) >> 8, 255 & e.channelcount, (65280 & e.samplesize) >> 8, 255 & e.samplesize, 0, 0, 0, 0, (65280 & e.samplerate) >> 8, 255 & e.samplerate, 0, 0]), a(e))
                }
            }(), m = function (e) {
                var t = new Uint8Array([0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, (4278190080 & e.id) >> 24, (16711680 & e.id) >> 16, (65280 & e.id) >> 8, 255 & e.id, 0, 0, 0, 0, (4278190080 & e.duration) >> 24, (16711680 & e.duration) >> 16, (65280 & e.duration) >> 8, 255 & e.duration, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, (65280 & e.width) >> 8, 255 & e.width, 0, 0, (65280 & e.height) >> 8, 255 & e.height, 0, 0]);
                return n(E.tkhd, t)
            }, S = function (e) {
                var t, i, r, a, s, o;
                return t = n(E.tfhd, new Uint8Array([0, 0, 0, 58, (4278190080 & e.id) >> 24, (16711680 & e.id) >> 16, (65280 & e.id) >> 8, 255 & e.id, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])), s = Math.floor(e.baseMediaDecodeTime / (N + 1)), o = Math.floor(e.baseMediaDecodeTime % (N + 1)), i = n(E.tfdt, new Uint8Array([1, 0, 0, 0, s >>> 24 & 255, s >>> 16 & 255, s >>> 8 & 255, 255 & s, o >>> 24 & 255, o >>> 16 & 255, o >>> 8 & 255, 255 & o])), 92, "audio" === e.type ? (r = w(e, 92), n(E.traf, t, i, r)) : (a = v(e), r = w(e, a.length + 92), n(E.traf, t, i, r, a))
            }, p = function (e) {
                return e.duration = e.duration || 4294967295, n(E.trak, m(e), g(e))
            }, k = function (e) {
                var t = new Uint8Array([0, 0, 0, 0, (4278190080 & e.id) >> 24, (16711680 & e.id) >> 16, (65280 & e.id) >> 8, 255 & e.id, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]);
                return "video" !== e.type && (t[t.length - 1] = 0), n(E.trex, t)
            }, function () {
                var e, t, i;
                i = function (e, t) {
                    var i = 0, n = 0, r = 0, a = 0;
                    return e.length && (void 0 !== e[0].duration && (i = 1), void 0 !== e[0].size && (n = 2), void 0 !== e[0].flags && (r = 4), void 0 !== e[0].compositionTimeOffset && (a = 8)), [0, 0, i | n | r | a, 1, (4278190080 & e.length) >>> 24, (16711680 & e.length) >>> 16, (65280 & e.length) >>> 8, 255 & e.length, (4278190080 & t) >>> 24, (16711680 & t) >>> 16, (65280 & t) >>> 8, 255 & t]
                }, t = function (e, t) {
                    var r, a, s, o;
                    for (t += 20 + 16 * (a = e.samples || []).length, r = i(a, t), o = 0; o < a.length; o++) s = a[o], r = r.concat([(4278190080 & s.duration) >>> 24, (16711680 & s.duration) >>> 16, (65280 & s.duration) >>> 8, 255 & s.duration, (4278190080 & s.size) >>> 24, (16711680 & s.size) >>> 16, (65280 & s.size) >>> 8, 255 & s.size, s.flags.isLeading << 2 | s.flags.dependsOn, s.flags.isDependedOn << 6 | s.flags.hasRedundancy << 4 | s.flags.paddingValue << 1 | s.flags.isNonSyncSample, 61440 & s.flags.degradationPriority, 15 & s.flags.degradationPriority, (4278190080 & s.compositionTimeOffset) >>> 24, (16711680 & s.compositionTimeOffset) >>> 16, (65280 & s.compositionTimeOffset) >>> 8, 255 & s.compositionTimeOffset]);
                    return n(E.trun, new Uint8Array(r))
                }, e = function (e, t) {
                    var r, a, s, o;
                    for (t += 20 + 8 * (a = e.samples || []).length, r = i(a, t), o = 0; o < a.length; o++) s = a[o], r = r.concat([(4278190080 & s.duration) >>> 24, (16711680 & s.duration) >>> 16, (65280 & s.duration) >>> 8, 255 & s.duration, (4278190080 & s.size) >>> 24, (16711680 & s.size) >>> 16, (65280 & s.size) >>> 8, 255 & s.size]);
                    return n(E.trun, new Uint8Array(r))
                }, w = function (i, n) {
                    return "audio" === i.type ? e(i, n) : t(i, n)
                }
            }(), t.exports = {
                ftyp: s, mdat: o, moof: d, moov: c, initSegment: function (e) {
                    var t, i = s(), n = c(e);
                    return (t = new Uint8Array(i.byteLength + n.byteLength)).set(i), t.set(n, i.byteLength), t
                }
            }
        }, {}],
        57: [function (e, t, i) {
            "use strict";
            var n, r, a, s;
            n = function (e, t) {
                var i, a, s, o, u, l = [];
                if (!t.length) return null;
                for (i = 0; i < e.byteLength;) a = e[i] << 24, a |= e[i + 1] << 16, a |= e[i + 2] << 8, a |= e[i + 3], s = r(e.subarray(i + 4, i + 8)), o = a > 1 ? i + a : e.byteLength, s === t[0] && (1 === t.length ? l.push(e.subarray(i + 8, o)) : (u = n(e.subarray(i + 8, o), t.slice(1))).length && (l = l.concat(u))), i = o;
                return l
            }, r = function (e) {
                var t = "";
                return t += String.fromCharCode(e[0]), t += String.fromCharCode(e[1]), t += String.fromCharCode(e[2]), t += String.fromCharCode(e[3])
            }, a = function (e) {
                return n(e, ["moov", "trak"]).reduce(function (e, t) {
                    var i, r, a, s;
                    return (i = n(t, ["tkhd"])[0]) ? (a = i[r = 0 === i[0] ? 12 : 20] << 24 | i[r + 1] << 16 | i[r + 2] << 8 | i[r + 3], (s = n(t, ["mdia", "mdhd"])[0]) ? (r = 0 === s[0] ? 12 : 20, e[a] = s[r] << 24 | s[r + 1] << 16 | s[r + 2] << 8 | s[r + 3], e) : null) : null
                }, {})
            }, s = function (e, t) {
                var i, r, a;
                return i = n(t, ["moof", "traf"]), r = [].concat.apply([], i.map(function (t) {
                    return n(t, ["tfhd"]).map(function (i) {
                        var r, a;
                        return r = i[4] << 24 | i[5] << 16 | i[6] << 8 | i[7], a = e[r] || 9e4, (n(t, ["tfdt"]).map(function (e) {
                            var t, i;
                            return t = e[0], i = e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7], 1 === t && (i *= Math.pow(2, 32), i += e[8] << 24 | e[9] << 16 | e[10] << 8 | e[11]), i
                        })[0] || 1 / 0) / a
                    })
                })), a = Math.min.apply(null, r), isFinite(a) ? a : 0
            }, t.exports = {parseType: r, timescale: a, startTime: s}
        }, {}],
        58: [function (e, t, i) {
            "use strict";
            var n, r, a, s, o, u, l, d, c, h, f = e("../utils/stream.js"), p = e("./mp4-generator.js"),
                m = e("../m2ts/m2ts.js"), g = e("../codecs/adts.js"), y = e("../codecs/h264").H264Stream,
                _ = e("../aac"), v = e("../data/silence"), b = e("../utils/clock"),
                T = ["audioobjecttype", "channelcount", "samplerate", "samplingfrequencyindex", "samplesize"],
                S = ["width", "height", "profileIdc", "levelIdc", "profileCompatibility"];
            o = function (e) {
                return e[0] === "I".charCodeAt(0) && e[1] === "D".charCodeAt(0) && e[2] === "3".charCodeAt(0)
            }, c = function (e, t) {
                var i;
                if (e.length !== t.length) return !1;
                for (i = 0; i < e.length; i++) if (e[i] !== t[i]) return !1;
                return !0
            }, h = function (e) {
                var t, i = 0;
                for (t = 0; t < e.length; t++) i += e[t].data.byteLength;
                return i
            }, (r = function (e) {
                var t = [], i = 0, n = 0, a = 0, s = 1 / 0;
                r.prototype.init.call(this), this.push = function (i) {
                    u(e, i), e && T.forEach(function (t) {
                        e[t] = i[t]
                    }), t.push(i)
                }, this.setEarliestDts = function (t) {
                    n = t - e.timelineStartInfo.baseMediaDecodeTime
                }, this.setVideoBaseMediaDecodeTime = function (e) {
                    s = e
                }, this.setAudioAppendStart = function (e) {
                    a = e
                }, this.flush = function () {
                    var n, r, a, s;
                    0 !== t.length ? (n = this.trimAdtsFramesByEarliestDts_(t), e.baseMediaDecodeTime = d(e), this.prefixWithSilence_(e, n), e.samples = this.generateSampleTable_(n), a = p.mdat(this.concatenateFrameData_(n)), t = [], r = p.moof(i, [e]), s = new Uint8Array(r.byteLength + a.byteLength), i++, s.set(r), s.set(a, r.byteLength), l(e), this.trigger("data", {
                        track: e,
                        boxes: s
                    }), this.trigger("done", "AudioSegmentStream")) : this.trigger("done", "AudioSegmentStream")
                }, this.prefixWithSilence_ = function (e, t) {
                    var i, n, r, o = 0, u = 0, l = 0, d = 0;
                    if (t.length && (i = b.audioTsToVideoTs(e.baseMediaDecodeTime, e.samplerate), o = Math.ceil(9e4 / (e.samplerate / 1024)), a && s && (u = i - Math.max(a, s), d = (l = Math.floor(u / o)) * o), !(l < 1 || d > 45e3))) {
                        for ((n = v[e.samplerate]) || (n = t[0].data), r = 0; r < l; r++) t.splice(r, 0, {data: n});
                        e.baseMediaDecodeTime -= Math.floor(b.videoTsToAudioTs(d, e.samplerate))
                    }
                }, this.trimAdtsFramesByEarliestDts_ = function (t) {
                    return e.minSegmentDts >= n ? t : (e.minSegmentDts = 1 / 0, t.filter(function (t) {
                        return t.dts >= n && (e.minSegmentDts = Math.min(e.minSegmentDts, t.dts), e.minSegmentPts = e.minSegmentDts, !0)
                    }))
                }, this.generateSampleTable_ = function (e) {
                    var t, i, n = [];
                    for (t = 0; t < e.length; t++) i = e[t], n.push({size: i.data.byteLength, duration: 1024});
                    return n
                }, this.concatenateFrameData_ = function (e) {
                    var t, i, n = 0, r = new Uint8Array(h(e));
                    for (t = 0; t < e.length; t++) i = e[t], r.set(i.data, n), n += i.data.byteLength;
                    return r
                }
            }).prototype = new f, (n = function (e, t) {
                var i, r, a = 0, s = [], o = [];
                t = t || {}, n.prototype.init.call(this), delete e.minPTS, this.gopCache_ = [], this.push = function (t) {
                    u(e, t), "seq_parameter_set_rbsp" !== t.nalUnitType || i || (i = t.config, e.sps = [t.data], S.forEach(function (t) {
                        e[t] = i[t]
                    }, this)), "pic_parameter_set_rbsp" !== t.nalUnitType || r || (r = t.data, e.pps = [t.data]), s.push(t)
                }, this.flush = function () {
                    for (var i, n, r, c, h, f; s.length && "access_unit_delimiter_rbsp" !== s[0].nalUnitType;) s.shift();
                    if (0 === s.length) return this.resetStream_(), void this.trigger("done", "VideoSegmentStream");
                    if (i = this.groupNalsIntoFrames_(s), (r = this.groupFramesIntoGops_(i))[0][0].keyFrame || ((n = this.getGopForFusion_(s[0], e)) ? (r.unshift(n), r.byteLength += n.byteLength, r.nalCount += n.nalCount, r.pts = n.pts, r.dts = n.dts, r.duration += n.duration) : r = this.extendFirstKeyFrame_(r)), o.length) {
                        var m;
                        if (!(m = t.alignGopsAtEnd ? this.alignGopsAtEnd_(r) : this.alignGopsAtStart_(r))) return this.gopCache_.unshift({
                            gop: r.pop(),
                            pps: e.pps,
                            sps: e.sps
                        }), this.gopCache_.length = Math.min(6, this.gopCache_.length), s = [], this.resetStream_(), void this.trigger("done", "VideoSegmentStream");
                        l(e), r = m
                    }
                    u(e, r), e.samples = this.generateSampleTable_(r), h = p.mdat(this.concatenateNalData_(r)), e.baseMediaDecodeTime = d(e), this.trigger("processedGopsInfo", r.map(function (e) {
                        return {pts: e.pts, dts: e.dts, byteLength: e.byteLength}
                    })), this.gopCache_.unshift({
                        gop: r.pop(),
                        pps: e.pps,
                        sps: e.sps
                    }), this.gopCache_.length = Math.min(6, this.gopCache_.length), s = [], this.trigger("baseMediaDecodeTime", e.baseMediaDecodeTime), this.trigger("timelineStartInfo", e.timelineStartInfo), c = p.moof(a, [e]), f = new Uint8Array(c.byteLength + h.byteLength), a++, f.set(c), f.set(h, c.byteLength), this.trigger("data", {
                        track: e,
                        boxes: f
                    }), this.resetStream_(), this.trigger("done", "VideoSegmentStream")
                }, this.resetStream_ = function () {
                    l(e), i = void 0, r = void 0
                }, this.getGopForFusion_ = function (t) {
                    var i, n, r, a, s, o = 1 / 0;
                    for (s = 0; s < this.gopCache_.length; s++) r = (a = this.gopCache_[s]).gop, e.pps && c(e.pps[0], a.pps[0]) && e.sps && c(e.sps[0], a.sps[0]) && (r.dts < e.timelineStartInfo.dts || (i = t.dts - r.dts - r.duration) >= -1e4 && i <= 45e3 && (!n || o > i) && (n = a, o = i));
                    return n ? n.gop : null
                }, this.extendFirstKeyFrame_ = function (e) {
                    var t;
                    return !e[0][0].keyFrame && e.length > 1 && (t = e.shift(), e.byteLength -= t.byteLength, e.nalCount -= t.nalCount, e[0][0].dts = t.dts, e[0][0].pts = t.pts, e[0][0].duration += t.duration), e
                }, this.groupNalsIntoFrames_ = function (e) {
                    var t, i, n = [], r = [];
                    for (n.byteLength = 0, t = 0; t < e.length; t++) "access_unit_delimiter_rbsp" === (i = e[t]).nalUnitType ? (n.length && (n.duration = i.dts - n.dts, r.push(n)), (n = [i]).byteLength = i.data.byteLength, n.pts = i.pts, n.dts = i.dts) : ("slice_layer_without_partitioning_rbsp_idr" === i.nalUnitType && (n.keyFrame = !0), n.duration = i.dts - n.dts, n.byteLength += i.data.byteLength, n.push(i));
                    return r.length && (!n.duration || n.duration <= 0) && (n.duration = r[r.length - 1].duration), r.push(n), r
                }, this.groupFramesIntoGops_ = function (e) {
                    var t, i, n = [], r = [];
                    for (n.byteLength = 0, n.nalCount = 0, n.duration = 0, n.pts = e[0].pts, n.dts = e[0].dts, r.byteLength = 0, r.nalCount = 0, r.duration = 0, r.pts = e[0].pts, r.dts = e[0].dts, t = 0; t < e.length; t++) (i = e[t]).keyFrame ? (n.length && (r.push(n), r.byteLength += n.byteLength, r.nalCount += n.nalCount, r.duration += n.duration), (n = [i]).nalCount = i.length, n.byteLength = i.byteLength, n.pts = i.pts, n.dts = i.dts, n.duration = i.duration) : (n.duration += i.duration, n.nalCount += i.length, n.byteLength += i.byteLength, n.push(i));
                    return r.length && n.duration <= 0 && (n.duration = r[r.length - 1].duration), r.byteLength += n.byteLength, r.nalCount += n.nalCount, r.duration += n.duration, r.push(n), r
                }, this.generateSampleTable_ = function (e, t) {
                    var i, n, r, a, s, o = t || 0, u = [];
                    for (i = 0; i < e.length; i++) for (a = e[i], n = 0; n < a.length; n++) s = a[n], (r = {
                        size: 0,
                        flags: {isLeading: 0, dependsOn: 1, isDependedOn: 0, hasRedundancy: 0, degradationPriority: 0}
                    }).dataOffset = o, r.compositionTimeOffset = s.pts - s.dts, r.duration = s.duration, r.size = 4 * s.length, r.size += s.byteLength, s.keyFrame && (r.flags.dependsOn = 2), o += r.size, u.push(r);
                    return u
                }, this.concatenateNalData_ = function (e) {
                    var t, i, n, r, a, s, o = 0, u = e.byteLength, l = e.nalCount, d = new Uint8Array(u + 4 * l),
                        c = new DataView(d.buffer);
                    for (t = 0; t < e.length; t++) for (r = e[t], i = 0; i < r.length; i++) for (a = r[i], n = 0; n < a.length; n++) s = a[n], c.setUint32(o, s.data.byteLength), o += 4, d.set(s.data, o), o += s.data.byteLength;
                    return d
                }, this.alignGopsAtStart_ = function (e) {
                    var t, i, n, r, a, s, u, l;
                    for (a = e.byteLength, s = e.nalCount, u = e.duration, t = i = 0; t < o.length && i < e.length && (n = o[t], r = e[i], n.pts !== r.pts);) r.pts > n.pts ? t++ : (i++, a -= r.byteLength, s -= r.nalCount, u -= r.duration);
                    return 0 === i ? e : i === e.length ? null : ((l = e.slice(i)).byteLength = a, l.duration = u, l.nalCount = s, l.pts = l[0].pts, l.dts = l[0].dts, l)
                }, this.alignGopsAtEnd_ = function (e) {
                    var t, i, n, r, a, s;
                    for (t = o.length - 1, i = e.length - 1, a = null, s = !1; t >= 0 && i >= 0;) {
                        if (n = o[t], r = e[i], n.pts === r.pts) {
                            s = !0;
                            break
                        }
                        n.pts > r.pts ? t-- : (t === o.length - 1 && (a = i), i--)
                    }
                    if (!s && null === a) return null;
                    var u;
                    if (0 === (u = s ? i : a)) return e;
                    var l = e.slice(u), d = l.reduce(function (e, t) {
                        return e.byteLength += t.byteLength, e.duration += t.duration, e.nalCount += t.nalCount, e
                    }, {byteLength: 0, duration: 0, nalCount: 0});
                    return l.byteLength = d.byteLength, l.duration = d.duration, l.nalCount = d.nalCount, l.pts = l[0].pts, l.dts = l[0].dts, l
                }, this.alignGopsWith = function (e) {
                    o = e
                }
            }).prototype = new f, u = function (e, t) {
                "number" == typeof t.pts && (void 0 === e.timelineStartInfo.pts && (e.timelineStartInfo.pts = t.pts), void 0 === e.minSegmentPts ? e.minSegmentPts = t.pts : e.minSegmentPts = Math.min(e.minSegmentPts, t.pts), void 0 === e.maxSegmentPts ? e.maxSegmentPts = t.pts : e.maxSegmentPts = Math.max(e.maxSegmentPts, t.pts)), "number" == typeof t.dts && (void 0 === e.timelineStartInfo.dts && (e.timelineStartInfo.dts = t.dts), void 0 === e.minSegmentDts ? e.minSegmentDts = t.dts : e.minSegmentDts = Math.min(e.minSegmentDts, t.dts), void 0 === e.maxSegmentDts ? e.maxSegmentDts = t.dts : e.maxSegmentDts = Math.max(e.maxSegmentDts, t.dts))
            }, l = function (e) {
                delete e.minSegmentDts, delete e.maxSegmentDts, delete e.minSegmentPts, delete e.maxSegmentPts
            }, d = function (e) {
                var t, i = e.minSegmentDts - e.timelineStartInfo.dts;
                return t = e.timelineStartInfo.baseMediaDecodeTime, t += i, t = Math.max(0, t), "audio" === e.type && (t *= e.samplerate / 9e4, t = Math.floor(t)), t
            }, (s = function (e, t) {
                this.numberOfTracks = 0, this.metadataStream = t, void 0 !== e.remux ? this.remuxTracks = !!e.remux : this.remuxTracks = !0, this.pendingTracks = [], this.videoTrack = null, this.pendingBoxes = [], this.pendingCaptions = [], this.pendingMetadata = [], this.pendingBytes = 0, this.emittedTracks = 0, s.prototype.init.call(this), this.push = function (e) {
                    return e.text ? this.pendingCaptions.push(e) : e.frames ? this.pendingMetadata.push(e) : (this.pendingTracks.push(e.track), this.pendingBoxes.push(e.boxes), this.pendingBytes += e.boxes.byteLength, "video" === e.track.type && (this.videoTrack = e.track), void("audio" === e.track.type && (this.audioTrack = e.track)))
                }
            }).prototype = new f, s.prototype.flush = function (e) {
                var t, i, n, r, a = 0, s = {captions: [], captionStreams: {}, metadata: [], info: {}}, o = 0;
                if (this.pendingTracks.length < this.numberOfTracks) {
                    if ("VideoSegmentStream" !== e && "AudioSegmentStream" !== e) return;
                    if (this.remuxTracks) return;
                    if (0 === this.pendingTracks.length) return this.emittedTracks++, void(this.emittedTracks >= this.numberOfTracks && (this.trigger("done"), this.emittedTracks = 0))
                }
                for (this.videoTrack ? (o = this.videoTrack.timelineStartInfo.pts, S.forEach(function (e) {
                    s.info[e] = this.videoTrack[e]
                }, this)) : this.audioTrack && (o = this.audioTrack.timelineStartInfo.pts, T.forEach(function (e) {
                    s.info[e] = this.audioTrack[e]
                }, this)), 1 === this.pendingTracks.length ? s.type = this.pendingTracks[0].type : s.type = "combined", this.emittedTracks += this.pendingTracks.length, n = p.initSegment(this.pendingTracks), s.initSegment = new Uint8Array(n.byteLength), s.initSegment.set(n), s.data = new Uint8Array(this.pendingBytes), r = 0; r < this.pendingBoxes.length; r++) s.data.set(this.pendingBoxes[r], a), a += this.pendingBoxes[r].byteLength;
                for (r = 0; r < this.pendingCaptions.length; r++) (t = this.pendingCaptions[r]).startTime = t.startPts - o, t.startTime /= 9e4, t.endTime = t.endPts - o, t.endTime /= 9e4, s.captionStreams[t.stream] = !0, s.captions.push(t);
                for (r = 0; r < this.pendingMetadata.length; r++) (i = this.pendingMetadata[r]).cueTime = i.pts - o, i.cueTime /= 9e4, s.metadata.push(i);
                s.metadata.dispatchType = this.metadataStream.dispatchType, this.pendingTracks.length = 0, this.videoTrack = null, this.pendingBoxes.length = 0, this.pendingCaptions.length = 0, this.pendingBytes = 0, this.pendingMetadata.length = 0, this.trigger("data", s), this.emittedTracks >= this.numberOfTracks && (this.trigger("done"), this.emittedTracks = 0)
            }, (a = function (e) {
                var t, i, u = this, d = !0;
                a.prototype.init.call(this), e = e || {}, this.baseMediaDecodeTime = e.baseMediaDecodeTime || 0, this.transmuxPipeline_ = {}, this.setupAacPipeline = function () {
                    var t = {};
                    this.transmuxPipeline_ = t, t.type = "aac", t.metadataStream = new m.MetadataStream, t.aacStream = new _, t.audioTimestampRolloverStream = new m.TimestampRolloverStream("audio"), t.timedMetadataTimestampRolloverStream = new m.TimestampRolloverStream("timed-metadata"), t.adtsStream = new g, t.coalesceStream = new s(e, t.metadataStream), t.headOfPipeline = t.aacStream, t.aacStream.pipe(t.audioTimestampRolloverStream).pipe(t.adtsStream), t.aacStream.pipe(t.timedMetadataTimestampRolloverStream).pipe(t.metadataStream).pipe(t.coalesceStream), t.metadataStream.on("timestamp", function (e) {
                        t.aacStream.setTimestamp(e.timeStamp)
                    }), t.aacStream.on("data", function (e) {
                        "timed-metadata" !== e.type || t.audioSegmentStream || (i = i || {
                            timelineStartInfo: {baseMediaDecodeTime: u.baseMediaDecodeTime},
                            codec: "adts",
                            type: "audio"
                        }, t.coalesceStream.numberOfTracks++, t.audioSegmentStream = new r(i), t.adtsStream.pipe(t.audioSegmentStream).pipe(t.coalesceStream))
                    }), t.coalesceStream.on("data", this.trigger.bind(this, "data")), t.coalesceStream.on("done", this.trigger.bind(this, "done"))
                }, this.setupTsPipeline = function () {
                    var a = {};
                    this.transmuxPipeline_ = a, a.type = "ts", a.metadataStream = new m.MetadataStream, a.packetStream = new m.TransportPacketStream, a.parseStream = new m.TransportParseStream, a.elementaryStream = new m.ElementaryStream, a.videoTimestampRolloverStream = new m.TimestampRolloverStream("video"), a.audioTimestampRolloverStream = new m.TimestampRolloverStream("audio"), a.timedMetadataTimestampRolloverStream = new m.TimestampRolloverStream("timed-metadata"), a.adtsStream = new g, a.h264Stream = new y, a.captionStream = new m.CaptionStream, a.coalesceStream = new s(e, a.metadataStream), a.headOfPipeline = a.packetStream, a.packetStream.pipe(a.parseStream).pipe(a.elementaryStream), a.elementaryStream.pipe(a.videoTimestampRolloverStream).pipe(a.h264Stream), a.elementaryStream.pipe(a.audioTimestampRolloverStream).pipe(a.adtsStream), a.elementaryStream.pipe(a.timedMetadataTimestampRolloverStream).pipe(a.metadataStream).pipe(a.coalesceStream), a.h264Stream.pipe(a.captionStream).pipe(a.coalesceStream), a.elementaryStream.on("data", function (s) {
                        var o;
                        if ("metadata" === s.type) {
                            for (o = s.tracks.length; o--;) t || "video" !== s.tracks[o].type ? i || "audio" !== s.tracks[o].type || ((i = s.tracks[o]).timelineStartInfo.baseMediaDecodeTime = u.baseMediaDecodeTime) : (t = s.tracks[o]).timelineStartInfo.baseMediaDecodeTime = u.baseMediaDecodeTime;
                            t && !a.videoSegmentStream && (a.coalesceStream.numberOfTracks++, a.videoSegmentStream = new n(t, e), a.videoSegmentStream.on("timelineStartInfo", function (e) {
                                i && (i.timelineStartInfo = e, a.audioSegmentStream.setEarliestDts(e.dts))
                            }), a.videoSegmentStream.on("processedGopsInfo", u.trigger.bind(u, "gopInfo")), a.videoSegmentStream.on("baseMediaDecodeTime", function (e) {
                                i && a.audioSegmentStream.setVideoBaseMediaDecodeTime(e)
                            }), a.h264Stream.pipe(a.videoSegmentStream).pipe(a.coalesceStream)), i && !a.audioSegmentStream && (a.coalesceStream.numberOfTracks++, a.audioSegmentStream = new r(i), a.adtsStream.pipe(a.audioSegmentStream).pipe(a.coalesceStream))
                        }
                    }), a.coalesceStream.on("data", this.trigger.bind(this, "data")), a.coalesceStream.on("done", this.trigger.bind(this, "done"))
                }, this.setBaseMediaDecodeTime = function (e) {
                    var n = this.transmuxPipeline_;
                    this.baseMediaDecodeTime = e, i && (i.timelineStartInfo.dts = void 0, i.timelineStartInfo.pts = void 0, l(i), i.timelineStartInfo.baseMediaDecodeTime = e, n.audioTimestampRolloverStream && n.audioTimestampRolloverStream.discontinuity()), t && (n.videoSegmentStream && (n.videoSegmentStream.gopCache_ = [], n.videoTimestampRolloverStream.discontinuity()), t.timelineStartInfo.dts = void 0, t.timelineStartInfo.pts = void 0, l(t), n.captionStream.reset(), t.timelineStartInfo.baseMediaDecodeTime = e), n.timedMetadataTimestampRolloverStream && n.timedMetadataTimestampRolloverStream.discontinuity()
                }, this.setAudioAppendStart = function (e) {
                    i && this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(e)
                }, this.alignGopsWith = function (e) {
                    t && this.transmuxPipeline_.videoSegmentStream && this.transmuxPipeline_.videoSegmentStream.alignGopsWith(e)
                }, this.push = function (e) {
                    if (d) {
                        var t = o(e);
                        t && "aac" !== this.transmuxPipeline_.type ? this.setupAacPipeline() : t || "ts" === this.transmuxPipeline_.type || this.setupTsPipeline(), d = !1
                    }
                    this.transmuxPipeline_.headOfPipeline.push(e)
                }, this.flush = function () {
                    d = !0, this.transmuxPipeline_.headOfPipeline.flush()
                }, this.resetCaptions = function () {
                    this.transmuxPipeline_.captionStream && this.transmuxPipeline_.captionStream.reset()
                }
            }).prototype = new f, t.exports = {
                Transmuxer: a,
                VideoSegmentStream: n,
                AudioSegmentStream: r,
                AUDIO_PROPERTIES: T,
                VIDEO_PROPERTIES: S
            }
        }, {
            "../aac": 38,
            "../codecs/adts.js": 40,
            "../codecs/h264": 41,
            "../data/silence": 42,
            "../m2ts/m2ts.js": 50,
            "../utils/clock": 60,
            "../utils/stream.js": 62,
            "./mp4-generator.js": 56
        }],
        59: [function (e, t, i) {
            "use strict";
            var n = e("../m2ts/stream-types.js"), r = e("../m2ts/timestamp-rollover-stream.js").handleRollover, a = {};
            a.ts = e("../m2ts/probe.js"), a.aac = e("../aac/probe.js");
            var s = function (e, t, i) {
                for (var n, r, s, o, u = 0, l = 188, d = !1; l < e.byteLength;) if (71 !== e[u] || 71 !== e[l]) u++, l++; else {
                    switch (n = e.subarray(u, l), a.ts.parseType(n, t.pid)) {
                        case"pes":
                            r = a.ts.parsePesType(n, t.table), s = a.ts.parsePayloadUnitStartIndicator(n), "audio" === r && s && (o = a.ts.parsePesTime(n)) && (o.type = "audio", i.audio.push(o), d = !0)
                    }
                    if (d) break;
                    u += 188, l += 188
                }
                for (u = (l = e.byteLength) - 188, d = !1; u >= 0;) if (71 !== e[u] || 71 !== e[l]) u--, l--; else {
                    switch (n = e.subarray(u, l), a.ts.parseType(n, t.pid)) {
                        case"pes":
                            r = a.ts.parsePesType(n, t.table), s = a.ts.parsePayloadUnitStartIndicator(n), "audio" === r && s && (o = a.ts.parsePesTime(n)) && (o.type = "audio", i.audio.push(o), d = !0)
                    }
                    if (d) break;
                    u -= 188, l -= 188
                }
            }, o = function (e, t, i) {
                for (var n, r, s, o, u, l, d, c = 0, h = 188, f = !1, p = {
                    data: [],
                    size: 0
                }; h < e.byteLength;) if (71 !== e[c] || 71 !== e[h]) c++, h++; else {
                    switch (n = e.subarray(c, h), a.ts.parseType(n, t.pid)) {
                        case"pes":
                            if (r = a.ts.parsePesType(n, t.table), s = a.ts.parsePayloadUnitStartIndicator(n), "video" === r && (s && !f && (o = a.ts.parsePesTime(n)) && (o.type = "video", i.video.push(o), f = !0), !i.firstKeyFrame)) {
                                if (s && 0 !== p.size) {
                                    for (u = new Uint8Array(p.size), l = 0; p.data.length;) d = p.data.shift(), u.set(d, l), l += d.byteLength;
                                    a.ts.videoPacketContainsKeyFrame(u) && (i.firstKeyFrame = a.ts.parsePesTime(u), i.firstKeyFrame.type = "video"), p.size = 0
                                }
                                p.data.push(n), p.size += n.byteLength
                            }
                    }
                    if (f && i.firstKeyFrame) break;
                    c += 188, h += 188
                }
                for (c = (h = e.byteLength) - 188, f = !1; c >= 0;) if (71 !== e[c] || 71 !== e[h]) c--, h--; else {
                    switch (n = e.subarray(c, h), a.ts.parseType(n, t.pid)) {
                        case"pes":
                            r = a.ts.parsePesType(n, t.table), s = a.ts.parsePayloadUnitStartIndicator(n), "video" === r && s && (o = a.ts.parsePesTime(n)) && (o.type = "video", i.video.push(o), f = !0)
                    }
                    if (f) break;
                    c -= 188, h -= 188
                }
            }, u = function (e) {
                var t = {pid: null, table: null}, i = {};
                !function (e, t) {
                    for (var i, n = 0, r = 188; r < e.byteLength;) if (71 !== e[n] || 71 !== e[r]) n++, r++; else {
                        switch (i = e.subarray(n, r), a.ts.parseType(i, t.pid)) {
                            case"pat":
                                t.pid || (t.pid = a.ts.parsePat(i));
                                break;
                            case"pmt":
                                t.table || (t.table = a.ts.parsePmt(i))
                        }
                        if (t.pid && t.table) return;
                        n += 188, r += 188
                    }
                }(e, t);
                for (var r in t.table) if (t.table.hasOwnProperty(r)) {
                    switch (t.table[r]) {
                        case n.H264_STREAM_TYPE:
                            i.video = [], o(e, t, i), 0 === i.video.length && delete i.video;
                            break;
                        case n.ADTS_STREAM_TYPE:
                            i.audio = [], s(e, t, i), 0 === i.audio.length && delete i.audio
                    }
                }
                return i
            };
            t.exports = {
                inspect: function (e, t) {
                    var i, n;
                    return i = e, (n = i[0] === "I".charCodeAt(0) && i[1] === "D".charCodeAt(0) && i[2] === "3".charCodeAt(0) ? function (e) {
                        for (var t, i = !1, n = 0, r = null, s = null, o = 0, u = 0; e.length - u >= 3;) {
                            switch (a.aac.parseType(e, u)) {
                                case"timed-metadata":
                                    if (e.length - u < 10) {
                                        i = !0;
                                        break
                                    }
                                    if ((o = a.aac.parseId3TagSize(e, u)) > e.length) {
                                        i = !0;
                                        break
                                    }
                                    null === s && (t = e.subarray(u, u + o), s = a.aac.parseAacTimestamp(t)), u += o;
                                    break;
                                case"audio":
                                    if (e.length - u < 7) {
                                        i = !0;
                                        break
                                    }
                                    if ((o = a.aac.parseAdtsSize(e, u)) > e.length) {
                                        i = !0;
                                        break
                                    }
                                    null === r && (t = e.subarray(u, u + o), r = a.aac.parseSampleRate(t)), n++, u += o;
                                    break;
                                default:
                                    u++
                            }
                            if (i) return null
                        }
                        if (null === r || null === s) return null;
                        var l = 9e4 / r;
                        return {
                            audio: [{type: "audio", dts: s, pts: s}, {
                                type: "audio",
                                dts: s + 1024 * n * l,
                                pts: s + 1024 * n * l
                            }]
                        }
                    }(e) : u(e)) && (n.audio || n.video) ? (function (e, t) {
                        if (e.audio && e.audio.length) {
                            var i = t;
                            void 0 === i && (i = e.audio[0].dts), e.audio.forEach(function (e) {
                                e.dts = r(e.dts, i), e.pts = r(e.pts, i), e.dtsTime = e.dts / 9e4, e.ptsTime = e.pts / 9e4
                            })
                        }
                        if (e.video && e.video.length) {
                            var n = t;
                            if (void 0 === n && (n = e.video[0].dts), e.video.forEach(function (e) {
                                e.dts = r(e.dts, n), e.pts = r(e.pts, n), e.dtsTime = e.dts / 9e4, e.ptsTime = e.pts / 9e4
                            }), e.firstKeyFrame) {
                                var a = e.firstKeyFrame;
                                a.dts = r(a.dts, n), a.pts = r(a.pts, n), a.dtsTime = a.dts / 9e4, a.ptsTime = a.dts / 9e4
                            }
                        }
                    }(n, t), n) : null
                }
            }
        }, {
            "../aac/probe.js": 39,
            "../m2ts/probe.js": 52,
            "../m2ts/stream-types.js": 53,
            "../m2ts/timestamp-rollover-stream.js": 54
        }],
        60: [function (e, t, i) {
            var n, r, a, s, o, u;
            n = function (e) {
                return 9e4 * e
            }, r = function (e, t) {
                return e * t
            }, a = function (e) {
                return e / 9e4
            }, s = function (e, t) {
                return e / t
            }, o = function (e, t) {
                return n(s(e, t))
            }, u = function (e, t) {
                return r(a(e), t)
            }, t.exports = {
                secondsToVideoTs: n,
                secondsToAudioTs: r,
                videoTsToSeconds: a,
                audioTsToSeconds: s,
                audioTsToVideoTs: o,
                videoTsToAudioTs: u
            }
        }, {}],
        61: [function (e, t, i) {
            "use strict";
            var n;
            n = function (e) {
                var t = e.byteLength, i = 0, n = 0;
                this.length = function () {
                    return 8 * t
                }, this.bitsAvailable = function () {
                    return 8 * t + n
                }, this.loadWord = function () {
                    var r = e.byteLength - t, a = new Uint8Array(4), s = Math.min(4, t);
                    if (0 === s) throw new Error("no bytes available");
                    a.set(e.subarray(r, r + s)), i = new DataView(a.buffer).getUint32(0), n = 8 * s, t -= s
                }, this.skipBits = function (e) {
                    var r;
                    n > e ? (i <<= e, n -= e) : (e -= n, e -= 8 * (r = Math.floor(e / 8)), t -= r, this.loadWord(), i <<= e, n -= e)
                }, this.readBits = function (e) {
                    var r = Math.min(n, e), a = i >>> 32 - r;
                    return (n -= r) > 0 ? i <<= r : t > 0 && this.loadWord(), (r = e - r) > 0 ? a << r | this.readBits(r) : a
                }, this.skipLeadingZeros = function () {
                    var e;
                    for (e = 0; e < n; ++e) if (0 != (i & 2147483648 >>> e)) return i <<= e, n -= e, e;
                    return this.loadWord(), e + this.skipLeadingZeros()
                }, this.skipUnsignedExpGolomb = function () {
                    this.skipBits(1 + this.skipLeadingZeros())
                }, this.skipExpGolomb = function () {
                    this.skipBits(1 + this.skipLeadingZeros())
                }, this.readUnsignedExpGolomb = function () {
                    var e = this.skipLeadingZeros();
                    return this.readBits(e + 1) - 1
                }, this.readExpGolomb = function () {
                    var e = this.readUnsignedExpGolomb();
                    return 1 & e ? 1 + e >>> 1 : -1 * (e >>> 1)
                }, this.readBoolean = function () {
                    return 1 === this.readBits(1)
                }, this.readUnsignedByte = function () {
                    return this.readBits(8)
                }, this.loadWord()
            }, t.exports = n
        }, {}],
        62: [function (e, t, i) {
            "use strict";
            var n = function () {
                this.init = function () {
                    var e = {};
                    this.on = function (t, i) {
                        e[t] || (e[t] = []), e[t] = e[t].concat(i)
                    }, this.off = function (t, i) {
                        var n;
                        return !!e[t] && (n = e[t].indexOf(i), e[t] = e[t].slice(), e[t].splice(n, 1), n > -1)
                    }, this.trigger = function (t) {
                        var i, n, r, a;
                        if (i = e[t]) if (2 === arguments.length) for (r = i.length, n = 0; n < r; ++n) i[n].call(this, arguments[1]); else {
                            for (a = [], n = arguments.length, n = 1; n < arguments.length; ++n) a.push(arguments[n]);
                            for (r = i.length, n = 0; n < r; ++n) i[n].apply(this, a)
                        }
                    }, this.dispose = function () {
                        e = {}
                    }
                }
            };
            n.prototype.pipe = function (e) {
                return this.on("data", function (t) {
                    e.push(t)
                }), this.on("done", function (t) {
                    e.flush(t)
                }), e
            }, n.prototype.push = function (e) {
                this.trigger("data", e)
            }, n.prototype.flush = function (e) {
                this.trigger("done", e)
            }, t.exports = n
        }, {}],
        63: [function (e, t, i) {
            !function (e) {
                var n = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/\;?#]*)?(.*?)??(;.*?)?(\?.*?)?(#.*?)?$/,
                    r = /^([^\/;?#]*)(.*)$/, a = /(?:\/|^)\.(?=\/)/g, s = /(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g, o = {
                        buildAbsoluteURL: function (e, t, i) {
                            if (i = i || {}, e = e.trim(), !(t = t.trim())) {
                                if (!i.alwaysNormalize) return e;
                                var n = this.parseURL(e);
                                if (!n) throw new Error("Error trying to parse base URL.");
                                return n.path = o.normalizePath(n.path), o.buildURLFromParts(n)
                            }
                            var a = this.parseURL(t);
                            if (!a) throw new Error("Error trying to parse relative URL.");
                            if (a.scheme) return i.alwaysNormalize ? (a.path = o.normalizePath(a.path), o.buildURLFromParts(a)) : t;
                            var s = this.parseURL(e);
                            if (!s) throw new Error("Error trying to parse base URL.");
                            if (!s.netLoc && s.path && "/" !== s.path[0]) {
                                var u = r.exec(s.path);
                                s.netLoc = u[1], s.path = u[2]
                            }
                            s.netLoc && !s.path && (s.path = "/");
                            var l = {
                                scheme: s.scheme,
                                netLoc: a.netLoc,
                                path: null,
                                params: a.params,
                                query: a.query,
                                fragment: a.fragment
                            };
                            if (!a.netLoc && (l.netLoc = s.netLoc, "/" !== a.path[0])) if (a.path) {
                                var d = s.path, c = d.substring(0, d.lastIndexOf("/") + 1) + a.path;
                                l.path = o.normalizePath(c)
                            } else l.path = s.path, a.params || (l.params = s.params, a.query || (l.query = s.query));
                            return null === l.path && (l.path = i.alwaysNormalize ? o.normalizePath(a.path) : a.path), o.buildURLFromParts(l)
                        }, parseURL: function (e) {
                            var t = n.exec(e);
                            return t ? {
                                scheme: t[1] || "",
                                netLoc: t[2] || "",
                                path: t[3] || "",
                                params: t[4] || "",
                                query: t[5] || "",
                                fragment: t[6] || ""
                            } : null
                        }, normalizePath: function (e) {
                            for (e = e.split("").reverse().join("").replace(a, ""); e.length !== (e = e.replace(s, "")).length;) ;
                            return e.split("").reverse().join("")
                        }, buildURLFromParts: function (e) {
                            return e.scheme + e.netLoc + e.path + e.params + e.query + e.fragment
                        }
                    };
                "object" == typeof i && "object" == typeof t ? t.exports = o : "object" == typeof i ? i.URLToolkit = o : e.URLToolkit = o
            }(this)
        }, {}],
        64: [function (e, t, i) {
            (function (n) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});

                function r(e) {
                    return e && e.__esModule ? e : {default: e}
                }

                var a = r(e("global/window")),
                    s = r("undefined" != typeof window ? window.videojs : void 0 !== n ? n.videojs : null),
                    o = function (e) {
                        return isNaN(e) || Math.abs(e) === 1 / 0 ? Number.MAX_VALUE : e
                    };
                i.default = {
                    addTextTrackData: function (e, t, i) {
                        var n = a.default.WebKitDataCue || a.default.VTTCue;
                        t && t.forEach(function (e) {
                            var t = e.stream;
                            this.inbandTextTracks_[t].addCue(new n(e.startTime + this.timestampOffset, e.endTime + this.timestampOffset, e.text))
                        }, e), i && function () {
                            var t = o(e.mediaSource_.duration);
                            i.forEach(function (e) {
                                var t = e.cueTime + this.timestampOffset;
                                e.frames.forEach(function (e) {
                                    var i = new n(t, t, e.value || e.url || e.data || "");
                                    i.frame = e, i.value = e, r = i, Object.defineProperties(r.frame, {
                                        id: {
                                            get: function () {
                                                return s.default.log.warn("cue.frame.id is deprecated. Use cue.value.key instead."), r.value.key
                                            }
                                        }, value: {
                                            get: function () {
                                                return s.default.log.warn("cue.frame.value is deprecated. Use cue.value.data instead."), r.value.data
                                            }
                                        }, privateData: {
                                            get: function () {
                                                return s.default.log.warn("cue.frame.privateData is deprecated. Use cue.value.data instead."), r.value.data
                                            }
                                        }
                                    });
                                    var r;
                                    this.metadataTrack_.addCue(i)
                                }, this)
                            }, e), e.metadataTrack_ && e.metadataTrack_.cues && e.metadataTrack_.cues.length && function () {
                                for (var i = e.metadataTrack_.cues, n = [], r = 0; r < i.length; r++) i[r] && n.push(i[r]);
                                var a = n.reduce(function (e, t) {
                                    var i = e[t.startTime] || [];
                                    return i.push(t), e[t.startTime] = i, e
                                }, {}), s = Object.keys(a).sort(function (e, t) {
                                    return Number(e) - Number(t)
                                });
                                s.forEach(function (e, i) {
                                    var n = a[e], r = Number(s[i + 1]) || t;
                                    n.forEach(function (e) {
                                        e.endTime = r
                                    })
                                })
                            }()
                        }()
                    }, durationOfVideo: o
                }, t.exports = i.default
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {"global/window": 32}],
        65: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            i.default = {
                isAudioCodec: function (e) {
                    return /mp4a\.\d+.\d+/i.test(e)
                }, parseContentType: function (e) {
                    var t = {type: "", parameters: {}}, i = e.trim().split(";");
                    return t.type = i.shift().trim(), i.forEach(function (e) {
                        var i = e.trim().split("=");
                        if (i.length > 1) {
                            var n = i[0].replace(/"/g, "").trim(), r = i[1].replace(/"/g, "").trim();
                            t.parameters[n] = r
                        }
                    }), t
                }, isVideoCodec: function (e) {
                    return /avc1\.[\da-f]+/i.test(e)
                }, translateLegacyCodecs: function (e) {
                    return e.map(function (e) {
                        return e.replace(/avc1\.(\d+)\.(\d+)/i, function (e, t, i) {
                            return "avc1." + ("00" + Number(t).toString(16)).slice(-2) + "00" + ("00" + Number(i).toString(16)).slice(-2)
                        })
                    })
                }
            }, t.exports = i.default
        }, {}],
        66: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            i.default = function (e, t, i) {
                var n = t.player_;
                if (i.captions && i.captions.length) {
                    e.inbandTextTracks_ || (e.inbandTextTracks_ = {});
                    for (var r in i.captionStreams) if (!e.inbandTextTracks_[r]) {
                        n.tech_.trigger({type: "usage", name: "hls-608"});
                        var a = n.textTracks().getTrackById(r);
                        e.inbandTextTracks_[r] = a || n.addRemoteTextTrack({
                            kind: "captions",
                            id: r,
                            label: r
                        }, !1).track
                    }
                }
                i.metadata && i.metadata.length && !e.metadataTrack_ && (e.metadataTrack_ = n.addRemoteTextTrack({
                    kind: "metadata",
                    label: "Timed Metadata"
                }, !1).track, e.metadataTrack_.inBandMetadataTrackDispatchType = i.metadata.dispatchType)
            }, t.exports = i.default
        }, {}],
        67: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            i.default = {TIME_BETWEEN_CHUNKS: 1, BYTES_PER_CHUNK: 32768}, t.exports = i.default
        }, {}],
        68: [function (e, t, i) {
            (function (n) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var r = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), a = function (e, t, i) {
                    for (var n = !0; n;) {
                        var r = e, a = t, s = i;
                        n = !1, null === r && (r = Function.prototype);
                        var o = Object.getOwnPropertyDescriptor(r, a);
                        if (void 0 !== o) {
                            if ("value" in o) return o.value;
                            var u = o.get;
                            if (void 0 === u) return;
                            return u.call(s)
                        }
                        var l = Object.getPrototypeOf(r);
                        if (null === l) return;
                        e = l, t = a, i = s, n = !0, o = l = void 0
                    }
                };

                function s(e) {
                    return e && e.__esModule ? e : {default: e}
                }

                var o = s(e("global/document")),
                    u = s("undefined" != typeof window ? window.videojs : void 0 !== n ? n.videojs : null),
                    l = s(e("./flash-source-buffer")), d = s(e("./flash-constants")), c = e("./codec-utils"),
                    h = function (e) {
                        !function (e, t) {
                            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                            e.prototype = Object.create(t && t.prototype, {
                                constructor: {
                                    value: e,
                                    enumerable: !1,
                                    writable: !0,
                                    configurable: !0
                                }
                            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                        }(t, u["default"].EventTarget);

                        function t() {
                            var e = this;
                            !function (e, t) {
                                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                            }(this, t), a(Object.getPrototypeOf(t.prototype), "constructor", this).call(this), this.sourceBuffers = [], this.readyState = "closed", this.on(["sourceopen", "webkitsourceopen"], function (t) {
                                e.swfObj = o.default.getElementById(t.swfId), e.player_ = (0, u.default)(e.swfObj.parentNode), e.tech_ = e.swfObj.tech, e.readyState = "open", e.tech_.on("seeking", function () {
                                    for (var t = e.sourceBuffers.length; t--;) e.sourceBuffers[t].abort()
                                }), e.swfObj && e.swfObj.vjs_load()
                            })
                        }

                        return r(t, [{
                            key: "addSeekableRange_", value: function () {
                            }
                        }, {
                            key: "addSourceBuffer", value: function (e) {
                                var t = (0, c.parseContentType)(e), i = void 0;
                                if ("video/mp2t" !== t.type && "audio/mp2t" !== t.type) throw new Error("NotSupportedError (Video.js)");
                                return i = new l.default(this), this.sourceBuffers.push(i), i
                            }
                        }, {
                            key: "endOfStream", value: function (e) {
                                "network" === e ? this.tech_.error(2) : "decode" === e && this.tech_.error(3), "ended" !== this.readyState && (this.readyState = "ended", this.swfObj.vjs_endOfStream())
                            }
                        }]), t
                    }();
                i.default = h;
                try {
                    Object.defineProperty(h.prototype, "duration", {
                        get: function () {
                            return this.swfObj ? this.swfObj.vjs_getProperty("duration") : NaN
                        }, set: function (e) {
                            var t = void 0, i = this.swfObj.vjs_getProperty("duration");
                            if (this.swfObj.vjs_setProperty("duration", e), e < i) for (t = 0; t < this.sourceBuffers.length; t++) this.sourceBuffers[t].remove(e, i);
                            return e
                        }
                    })
                } catch (e) {
                    h.prototype.duration = NaN
                }
                for (var f in d.default) h[f] = d.default[f];
                t.exports = i.default
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {"./codec-utils": 65, "./flash-constants": 67, "./flash-source-buffer": 69, "global/document": 31}],
        69: [function (e, t, i) {
            (function (n) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var r = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), a = function (e, t, i) {
                    for (var n = !0; n;) {
                        var r = e, a = t, s = i;
                        n = !1, null === r && (r = Function.prototype);
                        var o = Object.getOwnPropertyDescriptor(r, a);
                        if (void 0 !== o) {
                            if ("value" in o) return o.value;
                            var u = o.get;
                            if (void 0 === u) return;
                            return u.call(s)
                        }
                        var l = Object.getPrototypeOf(r);
                        if (null === l) return;
                        e = l, t = a, i = s, n = !0, o = l = void 0
                    }
                };

                function s(e) {
                    return e && e.__esModule ? e : {default: e}
                }

                var o = s(e("global/window")),
                    u = s("undefined" != typeof window ? window.videojs : void 0 !== n ? n.videojs : null),
                    l = s(e("mux.js/lib/flv")), d = s(e("./remove-cues-from-track")),
                    c = s(e("./create-text-tracks-if-necessary")), h = e("./add-text-track-data"),
                    f = s(e("./flash-transmuxer-worker")), p = s(e("webwackify")), m = s(e("./flash-constants")),
                    g = function () {
                        var t = void 0;
                        try {
                            t = e.resolve("./flash-transmuxer-worker")
                        } catch (e) {
                        }
                        return t
                    }, y = function (e) {
                        o.default.setTimeout(e, m.default.TIME_BETWEEN_CHUNKS)
                    }, _ = function () {
                        return Math.random().toString(36).slice(2, 8)
                    }, v = function (e, t) {
                        ("number" != typeof t || t < 0) && (t = 0);
                        var i = Math.pow(10, t);
                        return Math.round(e * i) / i
                    }, b = function (e) {
                        !function (e, t) {
                            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                            e.prototype = Object.create(t && t.prototype, {
                                constructor: {
                                    value: e,
                                    enumerable: !1,
                                    writable: !0,
                                    configurable: !0
                                }
                            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                        }(t, u["default"].EventTarget);

                        function t(e) {
                            var i = this;
                            !function (e, t) {
                                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                            }(this, t), a(Object.getPrototypeOf(t.prototype), "constructor", this).call(this);
                            var n = void 0;
                            this.chunkSize_ = m.default.BYTES_PER_CHUNK, this.buffer_ = [], this.bufferSize_ = 0, this.basePtsOffset_ = NaN, this.mediaSource_ = e, this.audioBufferEnd_ = NaN, this.videoBufferEnd_ = NaN, this.updating = !1, this.timestampOffset_ = 0, n = o.default.btoa(String.fromCharCode.apply(null, Array.prototype.slice.call(l.default.getFlvHeader())));
                            var r = this.mediaSource_.player_.id().replace(/[^a-zA-Z0-9]/g, "_");
                            this.flashEncodedHeaderName_ = "vjs_flashEncodedHeader_" + r + _(), this.flashEncodedDataName_ = "vjs_flashEncodedData_" + r + _(), o.default[this.flashEncodedHeaderName_] = function () {
                                return delete o.default[i.flashEncodedHeaderName_], n
                            }, this.mediaSource_.swfObj.vjs_appendChunkReady(this.flashEncodedHeaderName_), this.transmuxer_ = (0, p.default)(f.default, g()), this.transmuxer_.postMessage({
                                action: "init",
                                options: {}
                            }), this.transmuxer_.onmessage = function (e) {
                                "data" === e.data.action && i.receiveBuffer_(e.data.segment)
                            }, this.one("updateend", function () {
                                i.mediaSource_.tech_.trigger("loadedmetadata")
                            }), Object.defineProperty(this, "timestampOffset", {
                                get: function () {
                                    return this.timestampOffset_
                                }, set: function (e) {
                                    "number" == typeof e && e >= 0 && (this.timestampOffset_ = e, this.mediaSource_.swfObj.vjs_discontinuity(), this.basePtsOffset_ = NaN, this.audioBufferEnd_ = NaN, this.videoBufferEnd_ = NaN, this.transmuxer_.postMessage({action: "reset"}))
                                }
                            }), Object.defineProperty(this, "buffered", {
                                get: function () {
                                    if (!(this.mediaSource_ && this.mediaSource_.swfObj && "vjs_getProperty" in this.mediaSource_.swfObj)) return u.default.createTimeRange();
                                    var e = this.mediaSource_.swfObj.vjs_getProperty("buffered");
                                    return e && e.length && (e[0][0] = v(e[0][0], 3), e[0][1] = v(e[0][1], 3)), u.default.createTimeRanges(e)
                                }
                            }), this.mediaSource_.player_.on("seeked", function () {
                                if ((0, d.default)(0, 1 / 0, i.metadataTrack_), i.inbandTextTracks_) for (var e in i.inbandTextTracks_) (0, d.default)(0, 1 / 0, i.inbandTextTracks_[e])
                            });
                            var s = this.onHlsReset_.bind(this);
                            this.mediaSource_.player_.tech_.on("hls-reset", s), this.mediaSource_.player_.tech_.hls.on("dispose", function () {
                                i.transmuxer_.terminate(), i.mediaSource_.player_.tech_.off("hls-reset", s)
                            })
                        }

                        return r(t, [{
                            key: "appendBuffer", value: function (e) {
                                var t = void 0;
                                if (this.updating) throw(t = new Error("SourceBuffer.append() cannot be called while an update is in progress")).name = "InvalidStateError", t.code = 11, t;
                                this.updating = !0, this.mediaSource_.readyState = "open", this.trigger({type: "update"}), this.transmuxer_.postMessage({
                                    action: "push",
                                    data: e.buffer,
                                    byteOffset: e.byteOffset,
                                    byteLength: e.byteLength
                                }, [e.buffer]), this.transmuxer_.postMessage({action: "flush"})
                            }
                        }, {
                            key: "abort", value: function () {
                                this.buffer_ = [], this.bufferSize_ = 0, this.mediaSource_.swfObj.vjs_abort(), this.updating && (this.updating = !1, this.trigger({type: "updateend"}))
                            }
                        }, {
                            key: "remove", value: function (e, t) {
                                if ((0, d.default)(e, t, this.metadataTrack_), this.inbandTextTracks_) for (var i in this.inbandTextTracks_) (0, d.default)(e, t, this.inbandTextTracks_[i]);
                                this.trigger({type: "update"}), this.trigger({type: "updateend"})
                            }
                        }, {
                            key: "receiveBuffer_", value: function (e) {
                                var t = this;
                                (0, c.default)(this, this.mediaSource_, e), (0, h.addTextTrackData)(this, e.captions, e.metadata), y(function () {
                                    var i = t.convertTagsToData_(e);
                                    0 === t.buffer_.length && y(t.processBuffer_.bind(t)), i && (t.buffer_.push(i), t.bufferSize_ += i.byteLength)
                                })
                            }
                        }, {
                            key: "processBuffer_", value: function () {
                                var e = this, t = m.default.BYTES_PER_CHUNK;
                                if (this.buffer_.length) {
                                    var i = this.buffer_[0].subarray(0, t);
                                    i.byteLength < t || this.buffer_[0].byteLength === t ? this.buffer_.shift() : this.buffer_[0] = this.buffer_[0].subarray(t), this.bufferSize_ -= i.byteLength;
                                    for (var n = [], r = i.byteLength, a = 0; a < r; a++) n.push(String.fromCharCode(i[a]));
                                    var s = o.default.btoa(n.join(""));
                                    o.default[this.flashEncodedDataName_] = function () {
                                        return y(e.processBuffer_.bind(e)), delete o.default[e.flashEncodedDataName_], s
                                    }, this.mediaSource_.swfObj.vjs_appendChunkReady(this.flashEncodedDataName_)
                                } else !1 !== this.updating && (this.updating = !1, this.trigger({type: "updateend"}))
                            }
                        }, {
                            key: "convertTagsToData_", value: function (e) {
                                var t = 0, i = this.mediaSource_.tech_, n = 0, r = void 0, a = e.tags.videoTags,
                                    s = e.tags.audioTags;
                                if (isNaN(this.basePtsOffset_) && (a.length || s.length)) {
                                    var o = a[0] || {pts: 1 / 0}, u = s[0] || {pts: 1 / 0};
                                    this.basePtsOffset_ = Math.min(u.pts, o.pts)
                                }
                                i.seeking() && (this.videoBufferEnd_ = NaN, this.audioBufferEnd_ = NaN), isNaN(this.videoBufferEnd_) ? (i.buffered().length && (n = i.buffered().end(0) - this.timestampOffset), i.seeking() && (n = Math.max(n, i.currentTime() - this.timestampOffset)), n *= 1e3, n += this.basePtsOffset_) : n = this.videoBufferEnd_ + .1;
                                var l = a.length;
                                if (l && a[l - 1].pts >= n) {
                                    for (; --l;) {
                                        var d = a[l];
                                        if (!(d.pts > n) && (d.keyFrame || d.metaDataTag)) break
                                    }
                                    for (; l;) {
                                        if (!a[l - 1].metaDataTag) break;
                                        l--
                                    }
                                }
                                var c = a.slice(l), h = void 0;
                                for (h = isNaN(this.audioBufferEnd_) ? n : this.audioBufferEnd_ + .1, c.length && (h = Math.min(h, c[0].pts)), l = 0; l < s.length && !(s[l].pts >= h);) l++;
                                var f = s.slice(l);
                                f.length && (this.audioBufferEnd_ = f[f.length - 1].pts), c.length && (this.videoBufferEnd_ = c[c.length - 1].pts);
                                var p = this.getOrderedTags_(c, f);
                                if (0 !== p.length) {
                                    if (p[0].pts < n && i.seeking()) {
                                        var m = i.currentTime() - (n - p[0].pts) / 1e3;
                                        m < 1 / 30 && (m = 0);
                                        try {
                                            this.mediaSource_.swfObj.vjs_adjustCurrentTime(m)
                                        } catch (e) {
                                        }
                                    }
                                    for (var g = 0; g < p.length; g++) t += p[g].bytes.byteLength;
                                    r = new Uint8Array(t);
                                    g = 0;
                                    for (var y = 0; g < p.length; g++) r.set(p[g].bytes, y), y += p[g].bytes.byteLength;
                                    return r
                                }
                            }
                        }, {
                            key: "getOrderedTags_", value: function (e, t) {
                                for (var i = void 0, n = []; e.length || t.length;) i = e.length ? t.length && t[0].dts < e[0].dts ? t.shift() : e.shift() : t.shift(), n.push(i);
                                return n
                            }
                        }, {
                            key: "onHlsReset_", value: function () {
                                this.transmuxer_.postMessage({action: "resetCaptions"})
                            }
                        }]), t
                    }();
                i.default = b, t.exports = i.default
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "./add-text-track-data": 64,
            "./create-text-tracks-if-necessary": 66,
            "./flash-constants": 67,
            "./flash-transmuxer-worker": 70,
            "./remove-cues-from-track": 72,
            "global/window": 32,
            "mux.js/lib/flv": 46,
            webwackify: 76
        }],
        70: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }();

            function r(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var a = r(e("global/window")), s = r(e("mux.js/lib/flv")), o = function () {
                function e(t) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.options = t || {}, this.init()
                }

                return n(e, [{
                    key: "init", value: function () {
                        this.transmuxer && this.transmuxer.dispose(), this.transmuxer = new s.default.Transmuxer(this.options), (e = this.transmuxer).on("data", function (e) {
                            a.default.postMessage({action: "data", segment: e})
                        }), e.on("done", function (e) {
                            a.default.postMessage({action: "done"})
                        });
                        var e
                    }
                }, {
                    key: "push", value: function (e) {
                        var t = new Uint8Array(e.data, e.byteOffset, e.byteLength);
                        this.transmuxer.push(t)
                    }
                }, {
                    key: "reset", value: function () {
                        this.init()
                    }
                }, {
                    key: "flush", value: function () {
                        this.transmuxer.flush()
                    }
                }, {
                    key: "resetCaptions", value: function () {
                        this.transmuxer.resetCaptions()
                    }
                }]), e
            }();
            i.default = function (e) {
                return new function (e) {
                    e.onmessage = function (e) {
                        "init" === e.data.action && e.data.options ? this.messageHandlers = new o(e.data.options) : (this.messageHandlers || (this.messageHandlers = new o), e.data && e.data.action && "init" !== e.data.action && this.messageHandlers[e.data.action] && this.messageHandlers[e.data.action](e.data))
                    }
                }(e)
            }, t.exports = i.default
        }, {"global/window": 32, "mux.js/lib/flv": 46}],
        71: [function (e, t, i) {
            (function (n) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var r = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), a = function (e, t, i) {
                    for (var n = !0; n;) {
                        var r = e, a = t, s = i;
                        n = !1, null === r && (r = Function.prototype);
                        var o = Object.getOwnPropertyDescriptor(r, a);
                        if (void 0 !== o) {
                            if ("value" in o) return o.value;
                            var u = o.get;
                            if (void 0 === u) return;
                            return u.call(s)
                        }
                        var l = Object.getPrototypeOf(r);
                        if (null === l) return;
                        e = l, t = a, i = s, n = !0, o = l = void 0
                    }
                };

                function s(e) {
                    return e && e.__esModule ? e : {default: e}
                }

                var o = s(e("global/window")), u = s(e("global/document")),
                    l = s("undefined" != typeof window ? window.videojs : void 0 !== n ? n.videojs : null),
                    d = s(e("./virtual-source-buffer")), c = e("./add-text-track-data"), h = e("./codec-utils"),
                    f = function (e) {
                        !function (e, t) {
                            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                            e.prototype = Object.create(t && t.prototype, {
                                constructor: {
                                    value: e,
                                    enumerable: !1,
                                    writable: !0,
                                    configurable: !0
                                }
                            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                        }(t, l["default"].EventTarget);

                        function t() {
                            var e = this;
                            !function (e, t) {
                                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                            }(this, t), a(Object.getPrototypeOf(t.prototype), "constructor", this).call(this);
                            var i = void 0;
                            this.nativeMediaSource_ = new o.default.MediaSource;
                            for (i in this.nativeMediaSource_) i in t.prototype || "function" != typeof this.nativeMediaSource_[i] || (this[i] = this.nativeMediaSource_[i].bind(this.nativeMediaSource_));
                            this.duration_ = NaN, Object.defineProperty(this, "duration", {
                                get: function () {
                                    return this.duration_ === 1 / 0 ? this.duration_ : this.nativeMediaSource_.duration
                                }, set: function (e) {
                                    this.duration_ = e, e === 1 / 0 || (this.nativeMediaSource_.duration = e)
                                }
                            }), Object.defineProperty(this, "seekable", {
                                get: function () {
                                    return this.duration_ === 1 / 0 ? l.default.createTimeRanges([[0, this.nativeMediaSource_.duration]]) : this.nativeMediaSource_.seekable
                                }
                            }), Object.defineProperty(this, "readyState", {
                                get: function () {
                                    return this.nativeMediaSource_.readyState
                                }
                            }), Object.defineProperty(this, "activeSourceBuffers", {
                                get: function () {
                                    return this.activeSourceBuffers_
                                }
                            }), this.sourceBuffers = [], this.activeSourceBuffers_ = [], this.updateActiveSourceBuffers_ = function () {
                                if (e.activeSourceBuffers_.length = 0, 1 === e.sourceBuffers.length) {
                                    var t = e.sourceBuffers[0];
                                    return t.appendAudioInitSegment_ = !0, t.audioDisabled_ = !t.audioCodec_, void e.activeSourceBuffers_.push(t)
                                }
                                for (var i = !1, n = !0, r = 0; r < e.player_.audioTracks().length; r++) {
                                    var a = e.player_.audioTracks()[r];
                                    if (a.enabled && "main" !== a.kind) {
                                        i = !0, n = !1;
                                        break
                                    }
                                }
                                e.sourceBuffers.forEach(function (t) {
                                    if (t.appendAudioInitSegment_ = !0, t.videoCodec_ && t.audioCodec_) t.audioDisabled_ = i; else if (t.videoCodec_ && !t.audioCodec_) t.audioDisabled_ = !0, n = !1; else if (!t.videoCodec_ && t.audioCodec_ && (t.audioDisabled_ = n, n)) return;
                                    e.activeSourceBuffers_.push(t)
                                })
                            }, this.onPlayerMediachange_ = function () {
                                e.sourceBuffers.forEach(function (e) {
                                    e.appendAudioInitSegment_ = !0
                                })
                            }, this.onHlsReset_ = function () {
                                e.sourceBuffers.forEach(function (e) {
                                    e.transmuxer_ && e.transmuxer_.postMessage({action: "resetCaptions"})
                                })
                            }, this.onHlsSegmentTimeMapping_ = function (t) {
                                e.sourceBuffers.forEach(function (e) {
                                    return e.timeMapping_ = t.mapping
                                })
                            }, ["sourceopen", "sourceclose", "sourceended"].forEach(function (e) {
                                this.nativeMediaSource_.addEventListener(e, this.trigger.bind(this))
                            }, this), this.on("sourceopen", function (t) {
                                var i = u.default.querySelector('[src="' + e.url_ + '"]');
                                i && (e.player_ = (0, l.default)(i.parentNode), e.player_.tech_.on("hls-reset", e.onHlsReset_), e.player_.tech_.on("hls-segment-time-mapping", e.onHlsSegmentTimeMapping_), e.player_.audioTracks && e.player_.audioTracks() && (e.player_.audioTracks().on("change", e.updateActiveSourceBuffers_), e.player_.audioTracks().on("addtrack", e.updateActiveSourceBuffers_), e.player_.audioTracks().on("removetrack", e.updateActiveSourceBuffers_)), e.player_.on("mediachange", e.onPlayerMediachange_))
                            }), this.on("sourceended", function (t) {
                                for (var i = (0, c.durationOfVideo)(e.duration), n = 0; n < e.sourceBuffers.length; n++) {
                                    var r = e.sourceBuffers[n], a = r.metadataTrack_ && r.metadataTrack_.cues;
                                    a && a.length && (a[a.length - 1].endTime = i)
                                }
                            }), this.on("sourceclose", function (e) {
                                this.sourceBuffers.forEach(function (e) {
                                    e.transmuxer_ && e.transmuxer_.terminate()
                                }), this.sourceBuffers.length = 0, this.player_ && (this.player_.audioTracks && this.player_.audioTracks() && (this.player_.audioTracks().off("change", this.updateActiveSourceBuffers_), this.player_.audioTracks().off("addtrack", this.updateActiveSourceBuffers_), this.player_.audioTracks().off("removetrack", this.updateActiveSourceBuffers_)), this.player_.el_ && (this.player_.off("mediachange", this.onPlayerMediachange_), this.player_.tech_.off("hls-reset", this.onHlsReset_), this.player_.tech_.off("hls-segment-time-mapping", this.onHlsSegmentTimeMapping_)))
                            })
                        }

                        return r(t, [{
                            key: "addSeekableRange_", value: function (e, t) {
                                var i = void 0;
                                if (this.duration !== 1 / 0) throw(i = new Error("MediaSource.addSeekableRange() can only be invoked when the duration is Infinity")).name = "InvalidStateError", i.code = 11, i;
                                (t > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) && (this.nativeMediaSource_.duration = t)
                            }
                        }, {
                            key: "addSourceBuffer", value: function (e) {
                                var t = void 0, i = (0, h.parseContentType)(e);
                                if (/^(video|audio)\/mp2t$/i.test(i.type)) {
                                    var n = [];
                                    i.parameters && i.parameters.codecs && (n = i.parameters.codecs.split(","), n = (n = (0, h.translateLegacyCodecs)(n)).filter(function (e) {
                                        return (0, h.isAudioCodec)(e) || (0, h.isVideoCodec)(e)
                                    })), 0 === n.length && (n = ["avc1.4d400d", "mp4a.40.2"]), t = new d.default(this, n), 0 !== this.sourceBuffers.length && (this.sourceBuffers[0].createRealSourceBuffers_(), t.createRealSourceBuffers_(), this.sourceBuffers[0].audioDisabled_ = !0)
                                } else t = this.nativeMediaSource_.addSourceBuffer(e);
                                return this.sourceBuffers.push(t), t
                            }
                        }]), t
                    }();
                i.default = f, t.exports = i.default
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "./add-text-track-data": 64,
            "./codec-utils": 65,
            "./virtual-source-buffer": 75,
            "global/document": 31,
            "global/window": 32
        }],
        72: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            i.default = function (e, t, i) {
                var n = void 0, r = void 0;
                if (i && i.cues) for (n = i.cues.length; n--;) (r = i.cues[n]).startTime <= t && r.endTime >= e && i.removeCue(r)
            }, t.exports = i.default
        }, {}],
        73: [function (e, t, i) {
            "use strict";
            Object.defineProperty(i, "__esModule", {value: !0});
            var n = function () {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }

                return function (t, i, n) {
                    return i && e(t.prototype, i), n && e(t, n), t
                }
            }();

            function r(e) {
                return e && e.__esModule ? e : {default: e}
            }

            var a = r(e("global/window")), s = r(e("mux.js/lib/mp4")), o = function () {
                function e(t) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.options = t || {}, this.init()
                }

                return n(e, [{
                    key: "init", value: function () {
                        this.transmuxer && this.transmuxer.dispose(), this.transmuxer = new s.default.Transmuxer(this.options), (e = this.transmuxer).on("data", function (e) {
                            var t = e.initSegment;
                            e.initSegment = {data: t.buffer, byteOffset: t.byteOffset, byteLength: t.byteLength};
                            var i = e.data;
                            e.data = i.buffer, a.default.postMessage({
                                action: "data",
                                segment: e,
                                byteOffset: i.byteOffset,
                                byteLength: i.byteLength
                            }, [e.data])
                        }), e.captionStream && e.captionStream.on("data", function (e) {
                            a.default.postMessage({action: "caption", data: e})
                        }), e.on("done", function (e) {
                            a.default.postMessage({action: "done"})
                        }), e.on("gopInfo", function (e) {
                            a.default.postMessage({action: "gopInfo", gopInfo: e})
                        });
                        var e
                    }
                }, {
                    key: "push", value: function (e) {
                        var t = new Uint8Array(e.data, e.byteOffset, e.byteLength);
                        this.transmuxer.push(t)
                    }
                }, {
                    key: "reset", value: function () {
                        this.init()
                    }
                }, {
                    key: "setTimestampOffset", value: function (e) {
                        var t = e.timestampOffset || 0;
                        this.transmuxer.setBaseMediaDecodeTime(Math.round(9e4 * t))
                    }
                }, {
                    key: "setAudioAppendStart", value: function (e) {
                        this.transmuxer.setAudioAppendStart(Math.ceil(9e4 * e.appendStart))
                    }
                }, {
                    key: "flush", value: function (e) {
                        this.transmuxer.flush()
                    }
                }, {
                    key: "resetCaptions", value: function () {
                        this.transmuxer.resetCaptions()
                    }
                }, {
                    key: "alignGopsWith", value: function (e) {
                        this.transmuxer.alignGopsWith(e.gopsToAlignWith.slice())
                    }
                }]), e
            }();
            i.default = function (e) {
                return new function (e) {
                    e.onmessage = function (e) {
                        "init" === e.data.action && e.data.options ? this.messageHandlers = new o(e.data.options) : (this.messageHandlers || (this.messageHandlers = new o), e.data && e.data.action && "init" !== e.data.action && this.messageHandlers[e.data.action] && this.messageHandlers[e.data.action](e.data))
                    }
                }(e)
            }, t.exports = i.default
        }, {"global/window": 32, "mux.js/lib/mp4": 55}],
        74: [function (e, t, i) {
            (function (t) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});

                function n(e) {
                    return e && e.__esModule ? e : {default: e}
                }

                var r = n(e("global/window")), a = n(e("./flash-media-source")), s = n(e("./html-media-source")),
                    o = n("undefined" != typeof window ? window.videojs : void 0 !== t ? t.videojs : null), u = 0,
                    l = {mode: "auto"};
                o.default.mediaSources = {};
                var d = function (e, t) {
                    var i = o.default.mediaSources[e];
                    if (!i) throw new Error("Media Source not found (Video.js)");
                    i.trigger({type: "sourceopen", swfId: t})
                }, c = function () {
                    return !!r.default.MediaSource && !!r.default.MediaSource.isTypeSupported && r.default.MediaSource.isTypeSupported('video/mp4;codecs="avc1.4d400d,mp4a.40.2"')
                }, h = function (e) {
                    var t = o.default.mergeOptions(l, e);
                    if (this.MediaSource = {
                        open: d,
                        supportsNativeMediaSources: c
                    }, "html5" === t.mode || "auto" === t.mode && c()) return new s.default;
                    if (o.default.getTech("Flash")) return new a.default;
                    throw new Error("Cannot use Flash or Html5 to create a MediaSource for this video")
                };
                i.MediaSource = h, h.open = d, h.supportsNativeMediaSources = c;
                var f = {
                    createObjectURL: function (e) {
                        var t = void 0;
                        return e instanceof s.default ? (t = r.default.URL.createObjectURL(e.nativeMediaSource_), e.url_ = t, t) : e instanceof a.default ? (t = "blob:vjs-media-source/" + u, u++, o.default.mediaSources[t] = e, t) : (t = r.default.URL.createObjectURL(e), e.url_ = t, t)
                    }
                };
                i.URL = f, o.default.MediaSource = h, o.default.URL = f
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {"./flash-media-source": 68, "./html-media-source": 71, "global/window": 32}],
        75: [function (e, t, i) {
            (function (t) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var n = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), r = function (e, t, i) {
                    for (var n = !0; n;) {
                        var r = e, a = t, s = i;
                        n = !1, null === r && (r = Function.prototype);
                        var o = Object.getOwnPropertyDescriptor(r, a);
                        if (void 0 !== o) {
                            if ("value" in o) return o.value;
                            var u = o.get;
                            if (void 0 === u) return;
                            return u.call(s)
                        }
                        var l = Object.getPrototypeOf(r);
                        if (null === l) return;
                        e = l, t = a, i = s, n = !0, o = l = void 0
                    }
                };

                function a(e) {
                    return e && e.__esModule ? e : {default: e}
                }

                var s = a("undefined" != typeof window ? window.videojs : void 0 !== t ? t.videojs : null),
                    o = a(e("./create-text-tracks-if-necessary")), u = a(e("./remove-cues-from-track")),
                    l = e("./add-text-track-data"), d = a(e("webwackify")), c = a(e("./transmuxer-worker")),
                    h = e("./codec-utils"), f = function () {
                        var t = void 0;
                        try {
                            t = e.resolve("./transmuxer-worker")
                        } catch (e) {
                        }
                        return t
                    }, p = function (e, t, i) {
                        if (!t || !e.length) return [];
                        var n = Math.ceil(9e4 * (t.currentTime() - i + 3)), r = void 0;
                        for (r = 0; r < e.length && !(e[r].pts > n); r++) ;
                        return e.slice(r)
                    };
                i.gopsSafeToAlignWith = p;
                var m = function (e, t, i) {
                    if (!t.length) return e;
                    if (i) return t.slice();
                    for (var n = t[0].pts, r = 0; r < e.length && !(e[r].pts >= n); r++) ;
                    return e.slice(0, r).concat(t)
                };
                i.updateGopBuffer = m;
                var g = function (e, t, i, n) {
                    for (var r = Math.ceil(9e4 * (t - n)), a = Math.ceil(9e4 * (i - n)), s = e.slice(), o = e.length; o-- && !(e[o].pts <= a);) ;
                    if (-1 === o) return s;
                    for (var u = o + 1; u-- && !(e[u].pts <= r);) ;
                    return u = Math.max(u, 0), s.splice(u, o - u + 1), s
                };
                i.removeGopBuffer = g;
                var y = function (e) {
                    !function (e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                        e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                    }(t, s["default"].EventTarget);

                    function t(e, i) {
                        var n = this;
                        !function (e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), r(Object.getPrototypeOf(t.prototype), "constructor", this).call(this, s.default.EventTarget), this.timestampOffset_ = 0, this.pendingBuffers_ = [], this.bufferUpdating_ = !1, this.mediaSource_ = e, this.codecs_ = i, this.audioCodec_ = null, this.videoCodec_ = null, this.audioDisabled_ = !1, this.appendAudioInitSegment_ = !0, this.gopBuffer_ = [], this.timeMapping_ = 0, this.safeAppend_ = s.default.browser.IE_VERSION >= 11;
                        var a = {remux: !1, alignGopsAtEnd: this.safeAppend_};
                        this.codecs_.forEach(function (e) {
                            (0, h.isAudioCodec)(e) ? n.audioCodec_ = e : (0, h.isVideoCodec)(e) && (n.videoCodec_ = e)
                        }), this.transmuxer_ = (0, d.default)(c.default, f()), this.transmuxer_.postMessage({
                            action: "init",
                            options: a
                        }), this.transmuxer_.onmessage = function (e) {
                            return "data" === e.data.action ? n.data_(e) : "done" === e.data.action ? n.done_(e) : "gopInfo" === e.data.action ? n.appendGopInfo_(e) : void 0
                        }, Object.defineProperty(this, "timestampOffset", {
                            get: function () {
                                return this.timestampOffset_
                            }, set: function (e) {
                                "number" == typeof e && e >= 0 && (this.timestampOffset_ = e, this.appendAudioInitSegment_ = !0, this.gopBuffer_.length = 0, this.timeMapping_ = 0, this.transmuxer_.postMessage({
                                    action: "setTimestampOffset",
                                    timestampOffset: e
                                }))
                            }
                        }), Object.defineProperty(this, "appendWindowStart", {
                            get: function () {
                                return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart
                            }, set: function (e) {
                                this.videoBuffer_ && (this.videoBuffer_.appendWindowStart = e), this.audioBuffer_ && (this.audioBuffer_.appendWindowStart = e)
                            }
                        }), Object.defineProperty(this, "updating", {
                            get: function () {
                                return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating)
                            }
                        }), Object.defineProperty(this, "buffered", {
                            get: function () {
                                var e = null, t = null, i = 0, n = [], r = [];
                                if (!this.videoBuffer_ && !this.audioBuffer_) return s.default.createTimeRange();
                                if (!this.videoBuffer_) return this.audioBuffer_.buffered;
                                if (!this.audioBuffer_) return this.videoBuffer_.buffered;
                                if (this.audioDisabled_) return this.videoBuffer_.buffered;
                                if (0 === this.videoBuffer_.buffered.length && 0 === this.audioBuffer_.buffered.length) return s.default.createTimeRange();
                                for (var a = this.videoBuffer_.buffered, o = this.audioBuffer_.buffered, u = a.length; u--;) n.push({
                                    time: a.start(u),
                                    type: "start"
                                }), n.push({time: a.end(u), type: "end"});
                                for (u = o.length; u--;) n.push({
                                    time: o.start(u),
                                    type: "start"
                                }), n.push({time: o.end(u), type: "end"});
                                for (n.sort(function (e, t) {
                                    return e.time - t.time
                                }), u = 0; u < n.length; u++) "start" === n[u].type ? 2 === ++i && (e = n[u].time) : "end" === n[u].type && 1 === --i && (t = n[u].time), null !== e && null !== t && (r.push([e, t]), e = null, t = null);
                                return s.default.createTimeRanges(r)
                            }
                        })
                    }

                    return n(t, [{
                        key: "data_", value: function (e) {
                            var t = e.data.segment;
                            t.data = new Uint8Array(t.data, e.data.byteOffset, e.data.byteLength), t.initSegment = new Uint8Array(t.initSegment.data, t.initSegment.byteOffset, t.initSegment.byteLength), (0, o.default)(this, this.mediaSource_, t), this.pendingBuffers_.push(t)
                        }
                    }, {
                        key: "done_", value: function (e) {
                            "closed" !== this.mediaSource_.readyState ? this.processPendingSegments_() : this.pendingBuffers_.length = 0
                        }
                    }, {
                        key: "createRealSourceBuffers_", value: function () {
                            var e = this, t = ["audio", "video"];
                            t.forEach(function (i) {
                                if (e[i + "Codec_"] && !e[i + "Buffer_"]) {
                                    var n = null;
                                    if (e.mediaSource_[i + "Buffer_"]) (n = e.mediaSource_[i + "Buffer_"]).updating = !1; else {
                                        var r = i + '/mp4;codecs="' + e[i + "Codec_"] + '"';
                                        n = function (e, t) {
                                            var i = e.addSourceBuffer(t), n = Object.create(null);
                                            n.updating = !1, n.realBuffer_ = i;
                                            var r = function (e) {
                                                "function" == typeof i[e] ? n[e] = function () {
                                                    return i[e].apply(i, arguments)
                                                } : void 0 === n[e] && Object.defineProperty(n, e, {
                                                    get: function () {
                                                        return i[e]
                                                    }, set: function (t) {
                                                        return i[e] = t
                                                    }
                                                })
                                            };
                                            for (var a in i) r(a);
                                            return n
                                        }(e.mediaSource_.nativeMediaSource_, r), e.mediaSource_[i + "Buffer_"] = n
                                    }
                                    e[i + "Buffer_"] = n, ["update", "updatestart", "updateend"].forEach(function (r) {
                                        n.addEventListener(r, function () {
                                            if ("audio" !== i || !e.audioDisabled_) {
                                                "updateend" === r && (e[i + "Buffer_"].updating = !1);
                                                return t.every(function (t) {
                                                    return !("audio" !== t || !e.audioDisabled_) || (i === t || !e[t + "Buffer_"] || !e[t + "Buffer_"].updating)
                                                }) ? e.trigger(r) : void 0
                                            }
                                        })
                                    })
                                }
                            })
                        }
                    }, {
                        key: "appendBuffer", value: function (e) {
                            if (this.bufferUpdating_ = !0, this.audioBuffer_ && this.audioBuffer_.buffered.length) {
                                var t = this.audioBuffer_.buffered;
                                this.transmuxer_.postMessage({
                                    action: "setAudioAppendStart",
                                    appendStart: t.end(t.length - 1)
                                })
                            }
                            this.videoBuffer_ && this.transmuxer_.postMessage({
                                action: "alignGopsWith",
                                gopsToAlignWith: p(this.gopBuffer_, this.mediaSource_.player_, this.timeMapping_)
                            }), this.transmuxer_.postMessage({
                                action: "push",
                                data: e.buffer,
                                byteOffset: e.byteOffset,
                                byteLength: e.byteLength
                            }, [e.buffer]), this.transmuxer_.postMessage({action: "flush"})
                        }
                    }, {
                        key: "appendGopInfo_", value: function (e) {
                            this.gopBuffer_ = m(this.gopBuffer_, e.data.gopInfo, this.safeAppend_)
                        }
                    }, {
                        key: "remove", value: function (e, t) {
                            if (this.videoBuffer_ && (this.videoBuffer_.updating = !0, this.videoBuffer_.remove(e, t), this.gopBuffer_ = g(this.gopBuffer_, e, t, this.timeMapping_)), !this.audioDisabled_ && this.audioBuffer_ && (this.audioBuffer_.updating = !0, this.audioBuffer_.remove(e, t)), (0, u.default)(e, t, this.metadataTrack_), this.inbandTextTracks_) for (var i in this.inbandTextTracks_) (0, u.default)(e, t, this.inbandTextTracks_[i])
                        }
                    }, {
                        key: "processPendingSegments_", value: function () {
                            var e = {
                                video: {segments: [], bytes: 0},
                                audio: {segments: [], bytes: 0},
                                captions: [],
                                metadata: []
                            };
                            e = this.pendingBuffers_.reduce(function (e, t) {
                                var i = t.type, n = t.data, r = t.initSegment;
                                return e[i].segments.push(n), e[i].bytes += n.byteLength, e[i].initSegment = r, t.captions && (e.captions = e.captions.concat(t.captions)), t.info && (e[i].info = t.info), t.metadata && (e.metadata = e.metadata.concat(t.metadata)), e
                            }, e), this.videoBuffer_ || this.audioBuffer_ || (0 === e.video.bytes && (this.videoCodec_ = null), 0 === e.audio.bytes && (this.audioCodec_ = null), this.createRealSourceBuffers_()), e.audio.info && this.mediaSource_.trigger({
                                type: "audioinfo",
                                info: e.audio.info
                            }), e.video.info && this.mediaSource_.trigger({
                                type: "videoinfo",
                                info: e.video.info
                            }), this.appendAudioInitSegment_ && (!this.audioDisabled_ && this.audioBuffer_ && (e.audio.segments.unshift(e.audio.initSegment), e.audio.bytes += e.audio.initSegment.byteLength), this.appendAudioInitSegment_ = !1);
                            var t = !1;
                            this.videoBuffer_ && e.video.bytes ? (e.video.segments.unshift(e.video.initSegment), e.video.bytes += e.video.initSegment.byteLength, this.concatAndAppendSegments_(e.video, this.videoBuffer_), (0, l.addTextTrackData)(this, e.captions, e.metadata)) : !this.videoBuffer_ || !this.audioDisabled_ && this.audioBuffer_ || (t = !0), !this.audioDisabled_ && this.audioBuffer_ && this.concatAndAppendSegments_(e.audio, this.audioBuffer_), this.pendingBuffers_.length = 0, t && this.trigger("updateend"), this.bufferUpdating_ = !1
                        }
                    }, {
                        key: "concatAndAppendSegments_", value: function (e, t) {
                            var i = 0, n = void 0;
                            if (e.bytes) {
                                n = new Uint8Array(e.bytes), e.segments.forEach(function (e) {
                                    n.set(e, i), i += e.byteLength
                                });
                                try {
                                    t.updating = !0, t.appendBuffer(n)
                                } catch (e) {
                                    this.mediaSource_.player_ && this.mediaSource_.player_.error({
                                        code: -3,
                                        type: "APPEND_BUFFER_ERR",
                                        message: e.message,
                                        originalError: e
                                    })
                                }
                            }
                        }
                    }, {
                        key: "abort", value: function () {
                            this.videoBuffer_ && this.videoBuffer_.abort(), !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.abort(), this.transmuxer_ && this.transmuxer_.postMessage({action: "reset"}), this.pendingBuffers_.length = 0, this.bufferUpdating_ = !1
                        }
                    }]), t
                }();
                i.default = y
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "./add-text-track-data": 64,
            "./codec-utils": 65,
            "./create-text-tracks-if-necessary": 66,
            "./remove-cues-from-track": 72,
            "./transmuxer-worker": 73,
            webwackify: 76
        }],
        76: [function (e, t, i) {
            var n = arguments[3], r = arguments[4], a = arguments[5], s = JSON.stringify, o = !1;
            void 0 === n && (o = !0, n = function (e) {
                var t = {};

                function i(n) {
                    if (t[n]) return t[n].exports;
                    var r = t[n] = {i: n, l: !1, exports: {}};
                    return e[n].call(r.exports, r, r.exports, i), r.l = !0, r.exports
                }

                return i.m = e, i.c = t, i.d = function (e, t, n) {
                    i.o(e, t) || Object.defineProperty(e, t, {configurable: !1, enumerable: !0, get: n})
                }, i.n = function (e) {
                    var t = e && e.__esModule ? function () {
                        return e.default
                    } : function () {
                        return e
                    };
                    return i.d(t, "a", t), t
                }, i.o = function (e, t) {
                    return Object.prototype.hasOwnProperty.call(e, t)
                }, i.p = "", i(i.s = entryModule)
            }, r = __webpack_modules__);
            t.exports = function (e, t) {
                var i;
                i = o ? function (e, t) {
                    var i, a = "string" == typeof t;
                    i = a ? {} : [], Object.keys(r).forEach(function (e) {
                        r[e] && (i[e] = r[e].toString())
                    });
                    var o = __webpack_require__(t);
                    if (!o || o !== e && o.default !== e) {
                        var u = i[t];
                        i[t] = u.substring(0, u.length - 1) + "\n" + e.name + "();\n}"
                    }
                    var l;
                    a ? (t = s(t), l = "{" + Object.keys(i).map(function (e) {
                        return s(e) + ":" + i[e]
                    }).join(",") + "}") : l = "[" + i.join(",") + "]";
                    return "var fn = (" + n.toString().replace("entryModule", t) + ")(" + l + ');\n(typeof fn === "function") && fn(self);'
                }(e, t) : function (e) {
                    for (var t, i = Object.keys(a), o = 0; o < i.length; o++) {
                        var u = i[o], l = a[u].exports;
                        if (l === e || l && l.default === e) {
                            t = u;
                            break
                        }
                    }
                    if (!t) {
                        t = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);
                        var d = {};
                        for (o = 0; o < i.length; o++) d[u = i[o]] = u;
                        r[t] = ["function(require,module,exports){" + e + "(self); }", d]
                    }
                    var c = Math.floor(Math.pow(16, 8) * Math.random()).toString(16), h = {};
                    return h[t] = t, r[c] = ["function(require,module,exports){var f = require(" + s(t) + ");(f.default ? f.default : f)(self);}", h], "(" + n + ")({" + Object.keys(r).map(function (e) {
                        return s(e) + ":[" + r[e][0] + "," + s(r[e][1]) + "]"
                    }).join(",") + "},{},[" + s(c) + "])"
                }(e);
                var u = new Blob([i], {type: "text/javascript"}),
                    l = (window.URL || window.webkitURL || window.mozURL || window.msURL).createObjectURL(u),
                    d = new Worker(l);
                return d.objectURL = l, d
            }
        }, {}],
        77: [function (e, t, i) {
            (function (i) {
                "use strict";
                var n = function () {
                    function e(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            var n = t[i];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }

                    return function (t, i, n) {
                        return i && e(t.prototype, i), n && e(t, n), t
                    }
                }(), r = function (e, t, i) {
                    for (var n = !0; n;) {
                        var r = e, a = t, s = i;
                        n = !1, null === r && (r = Function.prototype);
                        var o = Object.getOwnPropertyDescriptor(r, a);
                        if (void 0 !== o) {
                            if ("value" in o) return o.value;
                            var u = o.get;
                            if (void 0 === u) return;
                            return u.call(s)
                        }
                        var l = Object.getPrototypeOf(r);
                        if (null === l) return;
                        e = l, t = a, i = s, n = !0, o = l = void 0
                    }
                };

                function a(e) {
                    return e && e.__esModule ? e : {default: e}
                }

                var s = a(e("global/document")), o = a(e("./playlist-loader")), u = a(e("./playlist")),
                    l = a(e("./xhr")), d = e("aes-decrypter"), c = a(e("./bin-utils")),
                    h = e("videojs-contrib-media-sources"), f = a(e("m3u8-parser")),
                    p = a("undefined" != typeof window ? window.videojs : void 0 !== i ? i.videojs : null),
                    m = e("./master-playlist-controller"), g = a(e("./config")), y = a(e("./rendition-mixin")),
                    _ = a(e("global/window")), v = a(e("./playback-watcher")),
                    b = (a(e("./reload-source-on-error")), e("./playlist-selectors.js")), T = {
                        PlaylistLoader: o.default,
                        Playlist: u.default,
                        Decrypter: d.Decrypter,
                        AsyncStream: d.AsyncStream,
                        decrypt: d.decrypt,
                        utils: c.default,
                        STANDARD_PLAYLIST_SELECTOR: b.lastBandwidthSelector,
                        INITIAL_PLAYLIST_SELECTOR: b.lowestBitrateCompatibleVariantSelector,
                        comparePlaylistBandwidth: b.comparePlaylistBandwidth,
                        comparePlaylistResolution: b.comparePlaylistResolution,
                        xhr: (0, l.default)()
                    };
                ["GOAL_BUFFER_LENGTH", "MAX_GOAL_BUFFER_LENGTH", "GOAL_BUFFER_LENGTH_RATE", "BUFFER_LOW_WATER_LINE", "MAX_BUFFER_LOW_WATER_LINE", "BUFFER_LOW_WATER_LINE_RATE", "BANDWIDTH_VARIANCE"].forEach(function (e) {
                    Object.defineProperty(T, e, {
                        get: function () {
                            return p.default.log.warn("using Hls." + e + " is UNSAFE be sure you know what you are doing"), g.default[e]
                        }, set: function (t) {
                            p.default.log.warn("using Hls." + e + " is UNSAFE be sure you know what you are doing"), "number" != typeof t || t < 0 ? p.default.log.warn("value of Hls." + e + " must be greater than or equal to 0") : g.default[e] = t
                        }
                    })
                });
                var S = function (e, t) {
                    for (var i = t.media(), n = -1, r = 0; r < e.length; r++) if (e[r].id === i.uri) {
                        n = r;
                        break
                    }
                    e.selectedIndex_ = n, e.trigger({selectedIndex: n, type: "change"})
                };
                T.canPlaySource = function () {
                    return p.default.log.warn("HLS is no longer a tech. Please remove it from your player's techOrder.")
                }, T.supportsNativeHls = function () {
                    var e = s.default.createElement("video");
                    if (!p.default.getTech("Html5").isSupported()) return !1;
                    return ["application/vnd.apple.mpegurl", "audio/mpegurl", "audio/x-mpegurl", "application/x-mpegurl", "video/x-mpegurl", "video/mpegurl", "application/mpegurl"].some(function (t) {
                        return /maybe|probably/i.test(e.canPlayType(t))
                    })
                }(), T.isSupported = function () {
                    return p.default.log.warn("HLS is no longer a tech. Please remove it from your player's techOrder.")
                };
                var k = p.default.getComponent("Component"), w = function (e) {
                    !function (e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                        e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                    }(t, k);

                    function t(e, i, n) {
                        var a = this;
                        if (function (e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), r(Object.getPrototypeOf(t.prototype), "constructor", this).call(this, i, n.hls), i.options_ && i.options_.playerId) {
                            var o = (0, p.default)(i.options_.playerId);
                            o.hasOwnProperty("hls") || Object.defineProperty(o, "hls", {
                                get: function () {
                                    return p.default.log.warn("player.hls is deprecated. Use player.tech_.hls instead."), i.trigger({
                                        type: "usage",
                                        name: "hls-player-access"
                                    }), a
                                }
                            })
                        }
                        if (this.tech_ = i, this.source_ = e, this.stats = {}, this.ignoreNextSeekingEvent_ = !1, this.setOptions_(), this.options_.overrideNative && (i.featuresNativeVideoTracks || i.featuresNativeAudioTracks)) throw new Error("Overriding native HLS requires emulated tracks. See https://git.io/vMpjB");
                        this.on(s.default, ["fullscreenchange", "webkitfullscreenchange", "mozfullscreenchange", "MSFullscreenChange"], function (e) {
                            var t = s.default.fullscreenElement || s.default.webkitFullscreenElement || s.default.mozFullScreenElement || s.default.msFullscreenElement;
                            t && t.contains(a.tech_.el()) && a.masterPlaylistController_.fastQualityChange_()
                        }), this.on(this.tech_, "seeking", function () {
                            this.ignoreNextSeekingEvent_ ? this.ignoreNextSeekingEvent_ = !1 : this.setCurrentTime(this.tech_.currentTime())
                        }), this.on(this.tech_, "error", function () {
                            this.masterPlaylistController_ && this.masterPlaylistController_.pauseLoading()
                        }), this.on(this.tech_, "play", this.play)
                    }

                    return n(t, [{
                        key: "setOptions_", value: function () {
                            var e = this;
                            this.options_.withCredentials = this.options_.withCredentials || !1, "number" != typeof this.options_.blacklistDuration && (this.options_.blacklistDuration = 300), "number" != typeof this.options_.bandwidth && (this.options_.bandwidth = 4194304), this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && 4194304 === this.options_.bandwidth, ["withCredentials", "bandwidth"].forEach(function (t) {
                                void 0 !== e.source_[t] && (e.options_[t] = e.source_[t])
                            }), this.bandwidth = this.options_.bandwidth
                        }
                    }, {
                        key: "src", value: function (e) {
                            var t = this;
                            e && (this.setOptions_(), this.options_.url = this.source_.src, this.options_.tech = this.tech_, this.options_.externHls = T, this.masterPlaylistController_ = new m.MasterPlaylistController(this.options_), this.playbackWatcher_ = new v.default(p.default.mergeOptions(this.options_, {
                                seekable: function () {
                                    return t.seekable()
                                }
                            })), this.masterPlaylistController_.on("error", function () {
                                p.default.players[t.tech_.options_.playerId].error(t.masterPlaylistController_.error)
                            }), this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : T.STANDARD_PLAYLIST_SELECTOR.bind(this), this.masterPlaylistController_.selectInitialPlaylist = T.INITIAL_PLAYLIST_SELECTOR.bind(this), this.playlists = this.masterPlaylistController_.masterPlaylistLoader_, this.mediaSource = this.masterPlaylistController_.mediaSource, Object.defineProperties(this, {
                                selectPlaylist: {
                                    get: function () {
                                        return this.masterPlaylistController_.selectPlaylist
                                    }, set: function (e) {
                                        this.masterPlaylistController_.selectPlaylist = e.bind(this)
                                    }
                                }, throughput: {
                                    get: function () {
                                        return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate
                                    }, set: function (e) {
                                        this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = e, this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1
                                    }
                                }, bandwidth: {
                                    get: function () {
                                        return this.masterPlaylistController_.mainSegmentLoader_.bandwidth
                                    }, set: function (e) {
                                        this.masterPlaylistController_.mainSegmentLoader_.bandwidth = e, this.masterPlaylistController_.mainSegmentLoader_.throughput = {
                                            rate: 0,
                                            count: 0
                                        }
                                    }
                                }, systemBandwidth: {
                                    get: function () {
                                        var e = 1 / (this.bandwidth || 1), t = void 0;
                                        t = this.throughput > 0 ? 1 / this.throughput : 0;
                                        return Math.floor(1 / (e + t))
                                    }, set: function () {
                                        p.default.log.error('The "systemBandwidth" property is read-only')
                                    }
                                }
                            }), Object.defineProperties(this.stats, {
                                bandwidth: {
                                    get: function () {
                                        return t.bandwidth || 0
                                    }, enumerable: !0
                                }, mediaRequests: {
                                    get: function () {
                                        return t.masterPlaylistController_.mediaRequests_() || 0
                                    }, enumerable: !0
                                }, mediaRequestsAborted: {
                                    get: function () {
                                        return t.masterPlaylistController_.mediaRequestsAborted_() || 0
                                    }, enumerable: !0
                                }, mediaRequestsTimedout: {
                                    get: function () {
                                        return t.masterPlaylistController_.mediaRequestsTimedout_() || 0
                                    }, enumerable: !0
                                }, mediaRequestsErrored: {
                                    get: function () {
                                        return t.masterPlaylistController_.mediaRequestsErrored_() || 0
                                    }, enumerable: !0
                                }, mediaTransferDuration: {
                                    get: function () {
                                        return t.masterPlaylistController_.mediaTransferDuration_() || 0
                                    }, enumerable: !0
                                }, mediaBytesTransferred: {
                                    get: function () {
                                        return t.masterPlaylistController_.mediaBytesTransferred_() || 0
                                    }, enumerable: !0
                                }, mediaSecondsLoaded: {
                                    get: function () {
                                        return t.masterPlaylistController_.mediaSecondsLoaded_() || 0
                                    }, enumerable: !0
                                }
                            }), this.tech_.one("canplay", this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_)), this.masterPlaylistController_.on("selectedinitialmedia", function () {
                                (0, y.default)(t)
                            }), this.on(this.masterPlaylistController_, "progress", function () {
                                this.tech_.trigger("progress")
                            }), this.on(this.masterPlaylistController_, "firstplay", function () {
                                this.ignoreNextSeekingEvent_ = !0
                            }), this.tech_.ready(function () {
                                return t.setupQualityLevels_()
                            }), this.tech_.el() && this.tech_.src(p.default.URL.createObjectURL(this.masterPlaylistController_.mediaSource)))
                        }
                    }, {
                        key: "setupQualityLevels_", value: function () {
                            var e = this, t = p.default.players[this.tech_.options_.playerId];
                            t && t.qualityLevels && (this.qualityLevels_ = t.qualityLevels(), this.masterPlaylistController_.on("selectedinitialmedia", function () {
                                t = e.qualityLevels_, (i = e).representations().forEach(function (e) {
                                    t.addQualityLevel(e)
                                }), S(t, i.playlists);
                                var t, i
                            }), this.playlists.on("mediachange", function () {
                                S(e.qualityLevels_, e.playlists)
                            }))
                        }
                    }, {
                        key: "play", value: function () {
                            this.masterPlaylistController_.play()
                        }
                    }, {
                        key: "setCurrentTime", value: function (e) {
                            this.masterPlaylistController_.setCurrentTime(e)
                        }
                    }, {
                        key: "duration", value: function () {
                            return this.masterPlaylistController_.duration()
                        }
                    }, {
                        key: "seekable", value: function () {
                            return this.masterPlaylistController_.seekable()
                        }
                    }, {
                        key: "dispose", value: function () {
                            this.playbackWatcher_ && this.playbackWatcher_.dispose(), this.masterPlaylistController_ && this.masterPlaylistController_.dispose(), this.qualityLevels_ && this.qualityLevels_.dispose(), r(Object.getPrototypeOf(t.prototype), "dispose", this).call(this)
                        }
                    }]), t
                }(), E = function e(t) {
                    return {
                        canHandleSource: function (i) {
                            var n = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1],
                                r = p.default.mergeOptions(p.default.options, n);
                            return (!r.hls || !r.hls.mode || r.hls.mode === t) && e.canPlayType(i.type, r)
                        }, handleSource: function (e, i) {
                            var n = arguments.length <= 2 || void 0 === arguments[2] ? {} : arguments[2],
                                r = p.default.mergeOptions(p.default.options, n, {hls: {mode: t}});
                            return "flash" === t && i.setTimeout(function () {
                                i.trigger("loadstart")
                            }, 1), i.hls = new w(e, i, r), i.hls.xhr = (0, l.default)(), i.hls.src(e.src), i.hls
                        }, canPlayType: function (t) {
                            var i = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1],
                                n = p.default.mergeOptions(p.default.options, i);
                            return e.canPlayType(t, n) ? "maybe" : ""
                        }
                    }
                };
                E.canPlayType = function (e, t) {
                    if (p.default.browser.IE_VERSION && p.default.browser.IE_VERSION <= 10) return !1;
                    return !(!t.hls.overrideNative && T.supportsNativeHls) && /^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i.test(e)
                }, void 0 !== p.default.MediaSource && void 0 !== p.default.URL || (p.default.MediaSource = h.MediaSource, p.default.URL = h.URL);
                var C = p.default.getTech("Flash");
                h.MediaSource.supportsNativeMediaSources() && p.default.getTech("Html5").registerSourceHandler(E("html5"), 0), _.default.Uint8Array && C && C.registerSourceHandler(E("flash")), p.default.HlsHandler = w, p.default.HlsSourceHandler = E, p.default.Hls = T, p.default.use || p.default.registerComponent("Hls", T), p.default.m3u8 = f.default, p.default.options.hls = p.default.options.hls || {}, t.exports = {
                    Hls: T,
                    HlsHandler: w,
                    HlsSourceHandler: E
                }
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "./bin-utils": 2,
            "./config": 3,
            "./master-playlist-controller": 5,
            "./playback-watcher": 8,
            "./playlist": 11,
            "./playlist-loader": 9,
            "./playlist-selectors.js": 10,
            "./reload-source-on-error": 13,
            "./rendition-mixin": 14,
            "./xhr": 21,
            "aes-decrypter": 25,
            "global/document": 31,
            "global/window": 32,
            "m3u8-parser": 33,
            "videojs-contrib-media-sources": 74
        }]
    }, {}, [77])(77)
}), function (e) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define([], e); else {
        ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).videojsFlvjs = e()
    }
}(function () {
    return function e(t, i, n) {
        function r(s, o) {
            if (!i[s]) {
                if (!t[s]) {
                    var u = "function" == typeof require && require;
                    if (!o && u) return u(s, !0);
                    if (a) return a(s, !0);
                    var l = new Error("Cannot find module '" + s + "'");
                    throw l.code = "MODULE_NOT_FOUND", l
                }
                var d = i[s] = {exports: {}};
                t[s][0].call(d.exports, function (e) {
                    var i = t[s][1][e];
                    return r(i || e)
                }, d, d.exports, e, t, i, n)
            }
            return i[s].exports
        }

        for (var a = "function" == typeof require && require, s = 0; s < n.length; s++) r(n[s]);
        return r
    }({
        1: [function (e, t, i) {
            (function (e) {
                "use strict";
                Object.defineProperty(i, "__esModule", {value: !0});
                var t, n = function () {
                        function e(e, t) {
                            for (var i = 0; i < t.length; i++) {
                                var n = t[i];
                                n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                            }
                        }

                        return function (t, i, n) {
                            return i && e(t.prototype, i), n && e(t, n), t
                        }
                    }(), r = "undefined" != typeof window ? window.videojs : void 0 !== e ? e.videojs : null,
                    a = (t = r, t && t.__esModule ? t : {default: t});
                var s = a.default.getTech("Html5"), o = a.default.mergeOptions || a.default.util.mergeOptions,
                    u = {mediaDataSource: {}, config: {}}, l = function (e) {
                        !function (e, t) {
                            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                            e.prototype = Object.create(t && t.prototype, {
                                constructor: {
                                    value: e,
                                    enumerable: !1,
                                    writable: !0,
                                    configurable: !0
                                }
                            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                        }(t, s);

                        function t(e, i) {
                            return function (e, t) {
                                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                            }(this, t), e = o(u, e), function (e, t) {
                                if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                return !t || "object" != typeof t && "function" != typeof t ? e : t
                            }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e, i))
                        }

                        return n(t, [{
                            key: "setSrc", value: function (e) {
                                this.flvPlayer && (this.flvPlayer.detachMediaElement(), this.flvPlayer.destroy());
                                var t = this.options_.mediaDataSource, i = this.options_.config;
                                t.type = void 0 === t.type ? "flv" : t.type, t.url = e, this.flvPlayer = window.flvjs.createPlayer(t, i), this.flvPlayer.attachMediaElement(this.el_), this.flvPlayer.load()
                            }
                        }, {
                            key: "dispose", value: function () {
                                this.flvPlayer && (this.flvPlayer.detachMediaElement(), this.flvPlayer.destroy()), function e(t, i, n) {
                                    null === t && (t = Function.prototype);
                                    var r = Object.getOwnPropertyDescriptor(t, i);
                                    if (void 0 === r) {
                                        var a = Object.getPrototypeOf(t);
                                        return null === a ? void 0 : e(a, i, n)
                                    }
                                    if ("value" in r) return r.value;
                                    var s = r.get;
                                    if (void 0 !== s) return s.call(n)
                                }(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "dispose", this).call(this)
                            }
                        }]), t
                    }();
                l.isSupported = function () {
                    return window.flvjs && window.flvjs.isSupported()
                }, l.formats = {"video/flv": "FLV", "video/x-flv": "FLV"}, l.canPlayType = function (e) {
                    return l.isSupported() && e in l.formats ? "maybe" : ""
                }, l.canPlaySource = function (e, t) {
                    return l.canPlayType(e.type)
                }, l.VERSION = "0.2.0", a.default.registerTech("Flvjs", l), i.default = l
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {}]
    }, {}, [1])(1)
}), function () {
    "use strict";
    var e = null;
    e = void 0 === window.videojs && "function" == typeof require ? require("video.js") : window.videojs, function (e, t) {
        var i, n = {}, r = {}, a = {};

        function s(e, t, i, n) {
            return r = {label: i, sources: t}, "function" == typeof n ? n(e, t, i) : e.src(t.map(function (e) {
                return {src: e.src, type: e.type, res: e.res}
            }))
        }

        var o = t.getComponent("MenuItem"), u = t.extend(o, {
            constructor: function (e, t, i, n) {
                this.onClickListener = i, this.label = n, o.call(this, e, t), this.src = t.src, this.on("click", this.onClick), this.on("touchstart", this.onClick), t.initialySelected && (this.showAsLabel(), this.selected(!0), this.addClass("vjs-selected"))
            }, showAsLabel: function () {
                this.label && (this.label.innerHTML = this.options_.label)
            }, onClick: function (e) {
                this.onClickListener(this);
                var t = this.player_.currentTime(), i = this.player_.paused();
                this.showAsLabel(), this.addClass("vjs-selected"), i || this.player_.bigPlayButton.hide(), "function" != typeof e && "function" == typeof this.options_.customSourcePicker && (e = this.options_.customSourcePicker);
                var n = "loadeddata";
                "Youtube" !== this.player_.techName_ && "none" === this.player_.preload() && "Flash" !== this.player_.techName_ && (n = "timeupdate"), s(this.player_, this.src, this.options_.label, e), this.player_.one(n, function () {
                    this.player_.currentTime(t), this.player_.handleTechSeeked_(), this.player_.trigger("resolutionchange")
                })
            }
        }), l = t.getComponent("MenuButton"), d = t.extend(l, {
            constructor: function (e, i, n, r) {
                if (this.sources = i.sources, this.label = r, this.label.innerHTML = i.initialySelectedLabel, l.call(this, e, i, n), this.controlText("Quality"), n.dynamicLabel) this.el().appendChild(r); else {
                    var a = document.createElement("span");
                    t.dom.addClass(a, "vjs-resolution-button-staticlabel"), this.el().appendChild(a)
                }
            }, createItems: function () {
                var e = [], t = this.sources && this.sources.label || {}, i = function (t) {
                    e.map(function (e) {
                        e.selected(e === t), e.removeClass("vjs-selected")
                    })
                };
                for (var n in t) t.hasOwnProperty(n) && (e.push(new u(this.player_, {
                    label: n,
                    src: t[n],
                    initialySelected: n === this.options_.initialySelectedLabel,
                    customSourcePicker: this.options_.customSourcePicker
                }, i, this.label)), a[n] = e[e.length - 1]);
                return e
            }
        });
        i = function (e) {
            var i = t.mergeOptions(n, e), o = this, u = document.createElement("span"), l = {};
            t.dom.addClass(u, "vjs-resolution-button-label"), o.updateSrc = function (e) {
                if (!e) return o.src();
                o.controlBar.resolutionSwitcher && (o.controlBar.resolutionSwitcher.dispose(), delete o.controlBar.resolutionSwitcher), e = e.sort(c);
                var n = function (e, t) {
                    var n = i.default, r = "";
                    "high" === n ? (n = t[0].res, r = t[0].label) : "low" !== n && null != n && e.res[n] ? e.res[n] && (r = e.res[n][0].label) : (n = t[t.length - 1].res, r = t[t.length - 1].label);
                    return {res: n, label: r, sources: e.res[n]}
                }(l = h(e), e), r = new d(o, {
                    sources: l,
                    initialySelectedLabel: n.label,
                    initialySelectedRes: n.res,
                    customSourcePicker: i.customSourcePicker
                }, i, u);
                return t.dom.addClass(r.el(), "vjs-resolution-button"), o.controlBar.resolutionSwitcher = o.controlBar.el_.insertBefore(r.el_, o.controlBar.getChild("fullscreenToggle").el_), o.controlBar.resolutionSwitcher.dispose = function () {
                    this.parentNode.removeChild(this)
                }, s(o, n.sources, n.label)
            }, o.currentResolution = function (e, t) {
                return null == e ? r : (null != a[e] && a[e].onClick(t), o)
            }, o.getGroupedSrc = function () {
                return l
            };

            function c(e, t) {
                return e.res && t.res ? +t.res - +e.res : 0
            }

            function h(e) {
                var t = {label: {}, res: {}, type: {}};
                return e.map(function (e) {
                    f(t, "label", e), f(t, "res", e), f(t, "type", e), p(t, "label", e), p(t, "res", e), p(t, "type", e)
                }), t
            }

            function f(e, t, i) {
                null == e[t][i[t]] && (e[t][i[t]] = [])
            }

            function p(e, t, i) {
                e[t][i[t]].push(i)
            }

            o.ready(function () {
                o.options_.sources.length > 1 && o.updateSrc(o.options_.sources), "Youtube" === o.techName_ && ((e = o).tech_.ytPlayer.setPlaybackQuality("default"), e.tech_.ytPlayer.addEventListener("onPlaybackQualityChange", function () {
                    e.trigger("resolutionchange")
                }), e.one("play", function () {
                    var t = {
                        highres: {res: 1080, label: "1080", yt: "highres"},
                        hd1080: {res: 1080, label: "1080", yt: "hd1080"},
                        hd720: {res: 720, label: "720", yt: "hd720"},
                        large: {res: 480, label: "480", yt: "large"},
                        medium: {res: 360, label: "360", yt: "medium"},
                        small: {res: 240, label: "240", yt: "small"},
                        tiny: {res: 144, label: "144", yt: "tiny"},
                        auto: {res: 0, label: "auto", yt: "default"}
                    }, n = [];
                    e.tech_.ytPlayer.getAvailableQualityLevels().map(function (i) {
                        n.push({src: e.src().src, type: e.src().type, label: t[i].label, res: t[i].res, _yt: t[i].yt})
                    });
                    var r = "auto", a = 0, s = ((l = h(n)).label.auto, new d(e, {
                        sources: l,
                        initialySelectedLabel: r,
                        initialySelectedRes: a,
                        customSourcePicker: function (t, i, n) {
                            return e.tech_.ytPlayer.setPlaybackQuality(i[0]._yt), e
                        }
                    }, i, u));
                    s.el().classList.add("vjs-resolution-button"), e.controlBar.resolutionSwitcher = e.controlBar.addChild(s)
                }));
                var e
            })
        }, t.registerPlugin("videoJsResolutionSwitcher", i)
    }(window, e)
}(), function (e, t) {
    "undefined" != typeof window && window.videojs ? t(window.videojs) : "function" == typeof define && define.amd ? define("videojs-hotkeys", ["video.js"], function (e) {
        return t(e.default || e)
    }) : "undefined" != typeof module && module.exports && (module.exports = t(require("video.js")))
}(0, function (e) {
    "use strict";
    "undefined" != typeof window && (window.videojs_hotkeys = {version: "0.2.22"});
    (e.registerPlugin || e.plugin)("hotkeys", function (t) {
        var i = this, n = i.el(), r = document, a = {
                volumeStep: .1,
                seekStep: 5,
                enableMute: !0,
                enableVolumeScroll: !0,
                enableFullscreen: !0,
                enableNumbers: !0,
                enableJogStyle: !1,
                alwaysCaptureHotkeys: !1,
                enableModifiersForNumbers: !0,
                enableInactiveFocus: !0,
                skipInitialFocus: !1,
                playPauseKey: function (e) {
                    return 32 === e.which || 179 === e.which
                },
                rewindKey: function (e) {
                    return 37 === e.which || 177 === e.which
                },
                forwardKey: function (e) {
                    return 39 === e.which || 176 === e.which
                },
                volumeUpKey: function (e) {
                    return 38 === e.which
                },
                volumeDownKey: function (e) {
                    return 40 === e.which
                },
                muteKey: function (e) {
                    return 77 === e.which
                },
                fullscreenKey: function (e) {
                    return 70 === e.which
                },
                customKeys: {}
            }, s = e.mergeOptions || e.util.mergeOptions, o = (t = s(a, t || {})).volumeStep, u = t.seekStep,
            l = t.enableMute, d = t.enableVolumeScroll, c = t.enableFullscreen, h = t.enableNumbers,
            f = t.enableJogStyle, p = t.alwaysCaptureHotkeys, m = t.enableModifiersForNumbers,
            g = t.enableInactiveFocus, y = t.skipInitialFocus;
        n.hasAttribute("tabIndex") || n.setAttribute("tabIndex", "-1"), n.style.outline = "none", !p && i.autoplay() || y || i.one("play", function () {
            n.focus()
        }), g && i.on("userinactive", function () {
            var e = function () {
                clearTimeout(t)
            }, t = setTimeout(function () {
                i.off("useractive", e);
                var t = r.activeElement, a = n.querySelector(".vjs-control-bar");
                t && t.parentElement == a && n.focus()
            }, 10);
            i.one("useractive", e)
        }), i.on("play", function () {
            var e = n.querySelector(".iframeblocker");
            e && "" === e.style.display && (e.style.display = "block", e.style.bottom = "39px")
        });
        var _ = function (e) {
            if (i.controls()) {
                var t = r.activeElement;
                if ((p || t == n || t == n.querySelector(".vjs-tech") || t == n.querySelector(".iframeblocker") || t == n.querySelector(".vjs-control-bar")) && d) {
                    e = window.event || e;
                    var a = Math.max(-1, Math.min(1, e.wheelDelta || -e.detail));
                    e.preventDefault(), 1 == a ? i.volume(i.volume() + o) : -1 == a && i.volume(i.volume() - o)
                }
            }
        }, v = function (e, i) {
            return t.playPauseKey(e, i) ? 1 : t.rewindKey(e, i) ? 2 : t.forwardKey(e, i) ? 3 : t.volumeUpKey(e, i) ? 4 : t.volumeDownKey(e, i) ? 5 : t.muteKey(e, i) ? 6 : t.fullscreenKey(e, i) ? 7 : void 0
        };

        function b(e) {
            return "function" == typeof u ? u(e) : u
        }

        return i.on("keydown", function (e) {
            var a, s, u = e.which, d = e.preventDefault, g = i.duration();
            if (i.controls()) {
                var y = r.activeElement;
                if (p || y == n || y == n.querySelector(".vjs-tech") || y == n.querySelector(".vjs-control-bar") || y == n.querySelector(".iframeblocker")) switch (v(e, i)) {
                    case 1:
                        d(), p && e.stopPropagation(), i.paused() ? i.play() : i.pause();
                        break;
                    case 2:
                        a = !i.paused(), d(), a && i.pause(), (s = i.currentTime() - b(e)) <= 0 && (s = 0), i.currentTime(s), a && i.play();
                        break;
                    case 3:
                        a = !i.paused(), d(), a && i.pause(), (s = i.currentTime() + b(e)) >= g && (s = a ? g - .001 : g), i.currentTime(s), a && i.play();
                        break;
                    case 5:
                        d(), f ? (s = i.currentTime() - 1, i.currentTime() <= 1 && (s = 0), i.currentTime(s)) : i.volume(i.volume() - o);
                        break;
                    case 4:
                        d(), f ? ((s = i.currentTime() + 1) >= g && (s = g), i.currentTime(s)) : i.volume(i.volume() + o);
                        break;
                    case 6:
                        l && i.muted(!i.muted());
                        break;
                    case 7:
                        c && (i.isFullscreen() ? i.exitFullscreen() : i.requestFullscreen());
                        break;
                    default:
                        if ((u > 47 && u < 59 || u > 95 && u < 106) && (m || !(e.metaKey || e.ctrlKey || e.altKey)) && h) {
                            var _ = 48;
                            u > 95 && (_ = 96);
                            var T = u - _;
                            d(), i.currentTime(i.duration() * T * .1)
                        }
                        for (var S in t.customKeys) {
                            var k = t.customKeys[S];
                            k && k.key && k.handler && k.key(e) && (d(), k.handler(i, t, e))
                        }
                }
            }
        }), i.on("dblclick", function (e) {
            if (i.controls()) {
                var t = e.relatedTarget || e.toElement || r.activeElement;
                t != n && t != n.querySelector(".vjs-tech") && t != n.querySelector(".iframeblocker") || c && (i.isFullscreen() ? i.exitFullscreen() : i.requestFullscreen())
            }
        }), i.on("mousewheel", _), i.on("DOMMouseScroll", _), this
    })
});
